{"result":[{"scriptId":"3","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9489,"endOffset":9562,"count":455}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9568,"endOffset":9619,"count":928}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9625,"endOffset":9672,"count":437}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11353,"count":444}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12035,"endOffset":12063,"count":840}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12377,"endOffset":12405,"count":417}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12843,"endOffset":12899,"count":4}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13059,"endOffset":13097,"count":76}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13253,"endOffset":13295,"count":102}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13813,"endOffset":14094,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13961,"endOffset":14088,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13992,"endOffset":14041,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15452,"endOffset":16024,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15488,"endOffset":16023,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15889,"endOffset":16001,"count":39}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16376,"endOffset":16842,"count":39}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16412,"endOffset":16841,"count":39}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16547,"endOffset":16628,"count":42}],"isBlockCoverage":false}]},{"scriptId":"6","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4823,"endOffset":5688,"count":1}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":6187,"endOffset":6456,"count":115}],"isBlockCoverage":false},{"functionName":"allowRequireByUsers","ranges":[{"startOffset":8714,"endOffset":9085,"count":1}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":9722,"endOffset":9778,"count":36}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9791,"endOffset":9868,"count":500}],"isBlockCoverage":false},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9881,"endOffset":9977,"count":2890}],"isBlockCoverage":false},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9990,"endOffset":10346,"count":2082}],"isBlockCoverage":false},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10619,"endOffset":10730,"count":1}],"isBlockCoverage":false},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10895,"endOffset":11572,"count":242}],"isBlockCoverage":false},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12892,"endOffset":13740,"count":1318}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13946,"endOffset":14321,"count":1080}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/errors","functions":[{"functionName":"defaultPrepareStackTrace","ranges":[{"startOffset":2416,"endOffset":2899,"count":17}],"isBlockCoverage":false},{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2903,"endOffset":2996,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTraceCallback","ranges":[{"startOffset":3838,"endOffset":4995,"count":41}],"isBlockCoverage":false},{"functionName":"ErrorPrepareStackTrace","ranges":[{"startOffset":5065,"endOffset":5166,"count":17}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":15211,"endOffset":15519,"count":18}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15245,"endOffset":15458,"count":8954}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":135,"endOffset":290,"count":1701}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1702}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8774,"endOffset":8940,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9045,"endOffset":9249,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14756,"endOffset":14794,"count":1494}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15700,"endOffset":15737,"count":684}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":6053,"endOffset":6401,"count":488}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":6511,"endOffset":7587,"count":119}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":8003,"endOffset":8149,"count":57}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":8375,"endOffset":8688,"count":63}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9286,"endOffset":9475,"count":369}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":10122,"endOffset":10293,"count":116}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":10297,"endOffset":10469,"count":116}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":11662,"endOffset":12422,"count":119}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":12426,"endOffset":12692,"count":3}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":13309,"endOffset":13523,"count":62}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":13527,"endOffset":13600,"count":69}],"isBlockCoverage":false},{"functionName":"processImmediate","ranges":[{"startOffset":13922,"endOffset":16073,"count":369}],"isBlockCoverage":false},{"functionName":"processTimers","ranges":[{"startOffset":16081,"endOffset":16589,"count":2}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":16595,"endOffset":19578,"count":2}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":19669,"endOffset":20005,"count":369}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":20011,"endOffset":20287,"count":369}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":2219}],"isBlockCoverage":false},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":15041,"endOffset":15237,"count":57}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":2219}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":288}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":3524}],"isBlockCoverage":false},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":2102}],"isBlockCoverage":false},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":2219}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":2218}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":2102}],"isBlockCoverage":false},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":2102}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":29}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":2102}],"isBlockCoverage":false},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":2102}],"isBlockCoverage":false}]},{"scriptId":"12","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1130,"endOffset":1191,"count":577}],"isBlockCoverage":false},{"functionName":"parseFileMode","ranges":[{"startOffset":1950,"endOffset":2272,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2531,"endOffset":2919,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3177,"endOffset":3651,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3894,"endOffset":4339,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4541,"endOffset":4656,"count":3011}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4910,"endOffset":5367,"count":460}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5566,"endOffset":5908,"count":60}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6114,"endOffset":6231,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6834,"endOffset":7882,"count":116}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11606,"endOffset":11842,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11953,"endOffset":12273,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12584,"endOffset":12954,"count":115}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13567,"endOffset":13686,"count":3034}],"isBlockCoverage":false}]},{"scriptId":"13","url":"node:internal/util","functions":[{"functionName":"isError","ranges":[{"startOffset":2100,"endOffset":2355,"count":12}],"isBlockCoverage":false},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2520,"endOffset":3295,"count":29}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2621,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4068,"endOffset":5155,"count":29}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4444,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5439,"endOffset":5516,"count":5}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5859,"endOffset":5993,"count":1183}],"isBlockCoverage":false},{"functionName":"slowCases","ranges":[{"startOffset":5997,"endOffset":7849,"count":175}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":8856,"endOffset":9019,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8909,"endOffset":9015,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":12053,"endOffset":14167,"count":22}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":12815,"endOffset":13548,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":14267,"endOffset":14601,"count":3}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":14746,"endOffset":14877,"count":229}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":16033,"endOffset":16382,"count":57}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16160,"endOffset":16378,"count":114}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16958,"endOffset":17186,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17708,"endOffset":18679,"count":2}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17933,"endOffset":18082,"count":5}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18190,"endOffset":18393,"count":5}],"isBlockCoverage":false},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18683,"endOffset":19624,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18902,"endOffset":19148,"count":4}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":19260,"endOffset":19334,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":19628,"endOffset":19730,"count":2}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20972,"endOffset":21170,"count":1113}],"isBlockCoverage":false},{"functionName":"getInternalGlobal","ranges":[{"startOffset":21195,"endOffset":21477,"count":396}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":21481,"endOffset":21697,"count":395}],"isBlockCoverage":false},{"functionName":"getCrossRealmRegex","ranges":[{"startOffset":21747,"endOffset":22561,"count":90}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":22565,"endOffset":22722,"count":90}],"isBlockCoverage":false},{"functionName":"getLazy","ranges":[{"startOffset":23088,"endOffset":23310,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23172,"endOffset":23306,"count":3017}],"isBlockCoverage":false},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":23439,"endOffset":24133,"count":1}],"isBlockCoverage":false},{"functionName":"guessHandleType","ranges":[{"startOffset":24210,"endOffset":24310,"count":2}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24334,"endOffset":24951,"count":26}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":24456,"endOffset":24525,"count":26}],"isBlockCoverage":false},{"functionName":"incRef","ranges":[{"startOffset":24531,"endOffset":24758,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24764,"endOffset":24898,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24904,"endOffset":24948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":513,"endOffset":602,"count":3013}],"isBlockCoverage":false},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":606,"endOffset":693,"count":1}],"isBlockCoverage":false},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":697,"endOffset":794,"count":6}],"isBlockCoverage":false},{"functionName":"refreshOptions","ranges":[{"startOffset":798,"endOffset":856,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":860,"endOffset":950,"count":3014}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1252}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":11}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":4}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":237}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":119}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":59}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":63}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":4}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1022,"endOffset":1708,"count":2}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1714,"endOffset":2220,"count":63}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2226,"endOffset":2568,"count":61}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2574,"endOffset":2737,"count":2}],"isBlockCoverage":false}]},{"scriptId":"18","url":"node:internal/util/inspect","functions":[{"functionName":"pathToFileUrlHref","ranges":[{"startOffset":3667,"endOffset":3804,"count":12}],"isBlockCoverage":false},{"functionName":"isUndetectableObject","ranges":[{"startOffset":4232,"endOffset":4282,"count":16}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":9769,"endOffset":11851,"count":13}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14037,"endOffset":14079,"count":611}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":15239,"endOffset":15405,"count":12}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":15703,"endOffset":17920,"count":12}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":17924,"endOffset":18198,"count":934}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":18202,"endOffset":18250,"count":26}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":18332,"endOffset":18381,"count":3}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":18385,"endOffset":18509,"count":12}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":19260,"endOffset":21070,"count":12}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":23152,"endOffset":23551,"count":12}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":23591,"endOffset":24608,"count":12}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":24443,"endOffset":24499,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":25538,"endOffset":28414,"count":28}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":28418,"endOffset":39775,"count":12}],"isBlockCoverage":false},{"functionName":"getStackString","ranges":[{"startOffset":43742,"endOffset":43854,"count":12}],"isBlockCoverage":false},{"functionName":"getStackFrames","ranges":[{"startOffset":43858,"endOffset":44774,"count":12}],"isBlockCoverage":false},{"functionName":"improveStack","ranges":[{"startOffset":44778,"endOffset":45997,"count":12}],"isBlockCoverage":false},{"functionName":"removeDuplicateErrorKeys","ranges":[{"startOffset":46001,"endOffset":46434,"count":12}],"isBlockCoverage":false},{"functionName":"markNodeModules","ranges":[{"startOffset":46438,"endOffset":46922,"count":314}],"isBlockCoverage":false},{"functionName":"markCwd","ranges":[{"startOffset":46926,"endOffset":47927,"count":335}],"isBlockCoverage":false},{"functionName":"safeGetCWD","ranges":[{"startOffset":47931,"endOffset":48089,"count":12}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":48093,"endOffset":50554,"count":12}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":56132,"endOffset":56946,"count":29}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":57176,"endOffset":58615,"count":16}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57982,"endOffset":58021,"count":2}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":68195,"endOffset":70832,"count":15}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":70836,"endOffset":71816,"count":3}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":71820,"endOffset":74782,"count":3}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":76693,"endOffset":76776,"count":79}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":76780,"endOffset":76975,"count":109}],"isBlockCoverage":false},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":76979,"endOffset":77167,"count":26}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":77363,"endOffset":81511,"count":188}],"isBlockCoverage":false}]},{"scriptId":"19","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":863,"endOffset":1348,"count":1}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1238,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1328,"endOffset":1339,"count":15}],"isBlockCoverage":false},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":1426,"endOffset":1772,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1789,"endOffset":1797,"count":3019}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1926,"endOffset":2506,"count":13}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2120,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2732,"endOffset":3798,"count":16}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2764,"endOffset":2863,"count":14}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2879,"endOffset":3285,"count":13}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3317,"endOffset":3390,"count":1}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3350,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3410,"endOffset":3611,"count":13}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3685,"endOffset":3721,"count":1}],"isBlockCoverage":false},{"functionName":"ensureTimerFlagsAreUpdated","ranges":[{"startOffset":10044,"endOffset":10203,"count":2723}],"isBlockCoverage":false},{"functionName":"internalStartTimer","ranges":[{"startOffset":10248,"endOffset":10572,"count":1361}],"isBlockCoverage":false},{"functionName":"internalEndTimer","ranges":[{"startOffset":10615,"endOffset":10959,"count":1362}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":11371,"endOffset":11888,"count":1}],"isBlockCoverage":false},{"functionName":"startTimer","ranges":[{"startOffset":11952,"endOffset":12107,"count":1}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/async_context_frame","functions":[{"functionName":"current","ranges":[{"startOffset":1282,"endOffset":1294,"count":2228}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1305,"endOffset":1318,"count":2102}],"isBlockCoverage":false},{"functionName":"exchange","ranges":[{"startOffset":1329,"endOffset":1347,"count":2102}],"isBlockCoverage":false}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6807,"endOffset":6878,"count":628}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8382,"endOffset":8462,"count":3024}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8575,"endOffset":8625,"count":706}],"isBlockCoverage":false},{"functionName":"hasEventListener","ranges":[{"startOffset":8749,"endOffset":8932,"count":1205}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10513,"endOffset":11183,"count":628}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":11188,"endOffset":11767,"count":228}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11487,"endOffset":11701,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12606,"endOffset":12725,"count":1}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12730,"endOffset":12883,"count":705}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":14082,"endOffset":16453,"count":2682}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16458,"endOffset":18429,"count":3025}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18615,"endOffset":18709,"count":3025}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":19118,"endOffset":19390,"count":518}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19394,"endOffset":19641,"count":799}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":19840,"endOffset":19971,"count":799}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":20605,"endOffset":21917,"count":1116}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":22249,"endOffset":23694,"count":28}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":23699,"endOffset":24043,"count":61}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":24241,"endOffset":24310,"count":61}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":25285,"endOffset":26020,"count":691}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":26283,"endOffset":26767,"count":396}],"isBlockCoverage":false}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4116,"endOffset":4310,"count":5}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4329,"endOffset":4457,"count":159}],"isBlockCoverage":false},{"functionName":"copyImpl","ranges":[{"startOffset":5854,"endOffset":7180,"count":35}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":7184,"endOffset":7636,"count":34}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8685,"endOffset":8713,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8982,"endOffset":9979,"count":151}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11862,"endOffset":12141,"count":88}],"isBlockCoverage":false},{"functionName":"allocUnsafe","ranges":[{"startOffset":12326,"endOffset":12431,"count":30}],"isBlockCoverage":false},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12679,"endOffset":12798,"count":33}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":13131,"endOffset":13476,"count":30}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":13480,"endOffset":14157,"count":144}],"isBlockCoverage":false},{"functionName":"createFromString","ranges":[{"startOffset":14161,"endOffset":14410,"count":16}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":14414,"endOffset":14785,"count":144}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14789,"endOffset":15478,"count":6}],"isBlockCoverage":false},{"functionName":"fromArrayLike","ranges":[{"startOffset":15482,"endOffset":15889,"count":1}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":15893,"endOffset":16210,"count":1}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":16253,"endOffset":16309,"count":340}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16695,"endOffset":16849,"count":1096}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":18109,"endOffset":18386,"count":30}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18528,"endOffset":18592,"count":104}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18606,"endOffset":18652,"count":314}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19676,"endOffset":19742,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20057,"endOffset":20122,"count":4}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":20136,"endOffset":20183,"count":1}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20518,"endOffset":20569,"count":30}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20583,"endOffset":20649,"count":33}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":21642,"endOffset":21705,"count":1}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":22006,"endOffset":23878,"count":355}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":23882,"endOffset":24639,"count":58}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24806,"endOffset":24904,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25007,"endOffset":25109,"count":1}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":25146,"endOffset":25284,"count":35}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":25571,"endOffset":26216,"count":341}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":35544,"endOffset":35993,"count":16}],"isBlockCoverage":false},{"functionName":"subarray","ranges":[{"startOffset":36025,"endOffset":36334,"count":8}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":36364,"endOffset":36432,"count":8}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41034,"endOffset":41069,"count":1}],"isBlockCoverage":false}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"checkBounds","ranges":[{"startOffset":1247,"endOffset":1467,"count":30}],"isBlockCoverage":false},{"functionName":"checkInt","ranges":[{"startOffset":1471,"endOffset":2110,"count":30}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5974,"endOffset":6311,"count":49}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6615,"endOffset":6883,"count":122}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":11447,"endOffset":11762,"count":11}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":19514,"endOffset":19833,"count":2}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19837,"endOffset":19945,"count":2}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":20222,"endOffset":20425,"count":28}],"isBlockCoverage":false},{"functionName":"writeUInt16LE","ranges":[{"startOffset":20429,"endOffset":20533,"count":28}],"isBlockCoverage":false},{"functionName":"writeU_Int8","ranges":[{"startOffset":20537,"endOffset":20961,"count":92}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20965,"endOffset":21061,"count":92}],"isBlockCoverage":false},{"functionName":"FastBuffer","ranges":[{"startOffset":27342,"endOffset":27444,"count":386}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30449,"endOffset":30764,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30867,"endOffset":31183,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31268,"endOffset":31582,"count":104}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":31746,"endOffset":31999,"count":5}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":32601,"endOffset":32744,"count":38}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":33005,"endOffset":33079,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"markTransferMode","ranges":[{"startOffset":2840,"endOffset":3245,"count":805}],"isBlockCoverage":false}]},{"scriptId":"28","url":"node:internal/process/per_thread","functions":[{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8194,"endOffset":12467,"count":1}],"isBlockCoverage":false},{"functionName":"isAccepted","ranges":[{"startOffset":8849,"endOffset":9262,"count":32}],"isBlockCoverage":false},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9783,"endOffset":9845,"count":257}],"isBlockCoverage":false},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":10163,"endOffset":10242,"count":1}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":10250,"endOffset":10322,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10330,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10414,"endOffset":10468,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10476,"endOffset":11308,"count":1}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11316,"endOffset":11485,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11493,"endOffset":11675,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11683,"endOffset":11746,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11754,"endOffset":11921,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12663,"endOffset":12953,"count":1}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1251,"endOffset":1339,"count":1319}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1653,"endOffset":2814,"count":426}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":2962,"endOffset":3924,"count":1702}],"isBlockCoverage":false}]},{"scriptId":"30","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1388,"endOffset":1504,"count":6}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4321,"endOffset":4413,"count":435}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":4846,"endOffset":5551,"count":18}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":7034,"endOffset":7304,"count":9}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":7347,"endOffset":7943,"count":9}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":11845,"endOffset":12412,"count":1}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12590,"endOffset":14148,"count":426}],"isBlockCoverage":false}]},{"scriptId":"31","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3197,"endOffset":3251,"count":3515}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":3257,"endOffset":3326,"count":1702}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3332,"endOffset":3422,"count":1702}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3428,"endOffset":3650,"count":2272}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3778,"endOffset":3827,"count":2272}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3833,"endOffset":4104,"count":1702}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":4110,"endOffset":4374,"count":2272}],"isBlockCoverage":false}]},{"scriptId":"32","url":"node:async_hooks","functions":[{"functionName":"AsyncResource","ranges":[{"startOffset":4836,"endOffset":6131,"count":29}],"isBlockCoverage":false},{"functionName":"runInAsyncScope","ranges":[{"startOffset":6137,"endOffset":6581,"count":29}],"isBlockCoverage":false}]},{"scriptId":"33","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1974,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2283,"endOffset":3502,"count":116}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4231,"endOffset":4928,"count":59}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5239,"endOffset":5610,"count":650}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":5859,"endOffset":6558,"count":57}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":6662,"endOffset":6965,"count":57}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7639,"endOffset":8228,"count":369}],"isBlockCoverage":false}]},{"scriptId":"34","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":983,"endOffset":1322,"count":1}],"isBlockCoverage":false}]},{"scriptId":"35","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":2027,"endOffset":2133,"count":3811}],"isBlockCoverage":false},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":2220,"endOffset":2393,"count":3028}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":2459,"endOffset":4469,"count":117}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5667,"endOffset":10592,"count":2970}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":10664,"endOffset":14693,"count":469}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":14766,"endOffset":15195,"count":1042}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":15270,"endOffset":17480,"count":11}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":17787,"endOffset":22842,"count":2}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":22914,"endOffset":24053,"count":3584}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":24125,"endOffset":26760,"count":1761}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":26863,"endOffset":29721,"count":562}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":29793,"endOffset":31928,"count":9}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":32164,"endOffset":37070,"count":2}],"isBlockCoverage":false}]},{"scriptId":"36","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3730,"endOffset":4543,"count":788}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4311,"endOffset":4378,"count":57}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4384,"endOffset":4461,"count":540}],"isBlockCoverage":false},{"functionName":"get hasHash","ranges":[{"startOffset":4467,"endOffset":4540,"count":483}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":22601,"endOffset":22728,"count":1517}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23227,"endOffset":35062,"count":788}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":23353,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23862,"endOffset":24795,"count":788}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":24808,"endOffset":25056,"count":140}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25062,"endOffset":25807,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":25813,"endOffset":26153,"count":102}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":26159,"endOffset":26273,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":26279,"endOffset":26725,"count":1129}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":26980,"endOffset":28668,"count":809}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":28674,"endOffset":28863,"count":429}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":28869,"endOffset":29058,"count":598}],"isBlockCoverage":false},{"functionName":"set href","ranges":[{"startOffset":29064,"endOffset":29288,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":29309,"endOffset":30207,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":30213,"endOffset":30319,"count":783}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":30325,"endOffset":30503,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":30509,"endOffset":30741,"count":57}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":30747,"endOffset":30925,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":30931,"endOffset":31159,"count":57}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":31165,"endOffset":31343,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":31349,"endOffset":31791,"count":57}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":31797,"endOffset":31967,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":31973,"endOffset":32262,"count":147}],"isBlockCoverage":false},{"functionName":"set hostname","ranges":[{"startOffset":32268,"endOffset":32446,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":32452,"endOffset":32565,"count":57}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":32571,"endOffset":32741,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":32747,"endOffset":33047,"count":438}],"isBlockCoverage":false},{"functionName":"set pathname","ranges":[{"startOffset":33053,"endOffset":33231,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":33237,"endOffset":33438,"count":102}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":33444,"endOffset":33653,"count":45}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":33674,"endOffset":34040,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":34046,"endOffset":34266,"count":45}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":34272,"endOffset":34442,"count":45}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":34448,"endOffset":34635,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":34648,"endOffset":35059,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":43139,"endOffset":44669,"count":90}],"isBlockCoverage":false},{"functionName":"fileURLToPath","ranges":[{"startOffset":45214,"endOffset":45635,"count":242}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":45639,"endOffset":47415,"count":213}],"isBlockCoverage":false},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":47419,"endOffset":47560,"count":1195}],"isBlockCoverage":false}]},{"scriptId":"39","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":false},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2}],"isBlockCoverage":false},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":2}],"isBlockCoverage":false}]},{"scriptId":"41","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":731,"endOffset":862,"count":1}],"isBlockCoverage":false},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1655,"endOffset":1720,"count":50}],"isBlockCoverage":false},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1813,"endOffset":2332,"count":1}],"isBlockCoverage":false},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2660,"endOffset":3276,"count":50}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":4738,"endOffset":6330,"count":50}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":7415,"endOffset":7851,"count":50}],"isBlockCoverage":false},{"functionName":"lineLengths","ranges":[{"startOffset":8046,"endOffset":8860,"count":40}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":9019,"endOffset":9309,"count":17}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":9407,"endOffset":10097,"count":33}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":10375,"endOffset":10791,"count":50}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10454,"endOffset":10643,"count":50}],"isBlockCoverage":false}]},{"scriptId":"42","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1381,"endOffset":1408,"count":1}],"isBlockCoverage":false},{"functionName":"toRealPath","ranges":[{"startOffset":1892,"endOffset":2028,"count":776}],"isBlockCoverage":false},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":2151,"endOffset":2656,"count":1}],"isBlockCoverage":false},{"functionName":"getCjsConditions","ranges":[{"startOffset":2728,"endOffset":2860,"count":69}],"isBlockCoverage":false},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":3094,"endOffset":3484,"count":242}],"isBlockCoverage":false},{"functionName":"lazyModule","ranges":[{"startOffset":3584,"endOffset":3679,"count":546}],"isBlockCoverage":false},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3909,"endOffset":5029,"count":546}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":4111,"endOffset":4171,"count":1357}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4359,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4661,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":5249,"endOffset":5409,"count":9}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":7964,"endOffset":8486,"count":56}],"isBlockCoverage":false},{"functionName":"urlToFilename","ranges":[{"startOffset":8563,"endOffset":8706,"count":4}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":11432,"endOffset":11551,"count":28}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":12043,"endOffset":12478,"count":28}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":12732,"endOffset":13005,"count":18}],"isBlockCoverage":false},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":13346,"endOffset":13422,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":13427,"endOffset":13506,"count":546}],"isBlockCoverage":false},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":13511,"endOffset":13587,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":13592,"endOffset":13671,"count":6}],"isBlockCoverage":false}]},{"scriptId":"43","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5354,"endOffset":5621,"count":3514}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":7633,"endOffset":7783,"count":2}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10421,"endOffset":10629,"count":1}],"isBlockCoverage":false},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10633,"endOffset":10957,"count":1}],"isBlockCoverage":false},{"functionName":"tryReadSync","ranges":[{"startOffset":10961,"endOffset":11226,"count":1}],"isBlockCoverage":false},{"functionName":"readFileSync","ranges":[{"startOffset":11461,"endOffset":13128,"count":577}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":13672,"endOffset":13721,"count":1}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":14680,"endOffset":14848,"count":1}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":18547,"endOffset":19644,"count":1}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":41215,"endOffset":41712,"count":5}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":45788,"endOffset":46095,"count":59}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":72046,"endOffset":72144,"count":395}],"isBlockCoverage":false},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":72395,"endOffset":72690,"count":395}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":72818,"endOffset":73086,"count":450}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":73372,"endOffset":77191,"count":535}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":85379,"endOffset":85576,"count":1}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":88867,"endOffset":88938,"count":1}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/encoding","functions":[{"functionName":"validateDecoder","ranges":[{"startOffset":1550,"endOffset":1678,"count":14}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9738,"endOffset":9921,"count":1}],"isBlockCoverage":false},{"functionName":"TextDecoder","ranges":[{"startOffset":11543,"endOffset":12533,"count":1}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12820,"endOffset":13538,"count":14}],"isBlockCoverage":false}]},{"scriptId":"48","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":8427,"endOffset":9084,"count":73}],"isBlockCoverage":false}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3714,"endOffset":3919,"count":1111}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7714,"endOffset":8361,"count":1134}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":9734,"endOffset":10053,"count":11}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10091,"endOffset":10150,"count":8}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10184,"endOffset":10243,"count":9}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10868,"endOffset":10952,"count":44}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":13831,"endOffset":14230,"count":11}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14433,"endOffset":14669,"count":17}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14794,"endOffset":15896,"count":11}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":16318,"endOffset":17614,"count":594}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18632,"endOffset":19106,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19714,"endOffset":20446,"count":1195}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20493,"endOffset":20632,"count":660}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20677,"endOffset":20806,"count":1}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1735,"endOffset":1838,"count":109}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5761,"endOffset":6363,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5978,"endOffset":6044,"count":291}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6057,"endOffset":6087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6223,"endOffset":6289,"count":36}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6302,"endOffset":6332,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7918,"endOffset":9428,"count":109}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9528,"endOffset":9953,"count":109}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10051,"endOffset":10235,"count":97}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10333,"endOffset":10517,"count":12}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10681,"endOffset":11515,"count":109}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11792,"endOffset":11881,"count":97}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11890,"endOffset":11980,"count":12}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":19558,"endOffset":20577,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20467,"endOffset":20572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13898,"endOffset":14122,"count":1}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":30913,"endOffset":32424,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31076,"endOffset":31215,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31320,"endOffset":32178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1477,"endOffset":3141,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2943,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3787,"endOffset":3882,"count":2}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3886,"endOffset":4598,"count":15}],"isBlockCoverage":false},{"functionName":"cleanupStdout","ranges":[{"startOffset":4255,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4602,"endOffset":5312,"count":139}],"isBlockCoverage":false},{"functionName":"cleanupStderr","ranges":[{"startOffset":4969,"endOffset":5152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":8}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":6}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":6}],"isBlockCoverage":false}]},{"scriptId":"62","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":2245,"endOffset":2534,"count":70}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3583,"endOffset":4205,"count":6}],"isBlockCoverage":false},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4209,"endOffset":4438,"count":4}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5277,"endOffset":15684,"count":6}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":15718,"endOffset":16686,"count":4}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":17766,"endOffset":18494,"count":6}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":20480,"endOffset":22943,"count":10}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":22948,"endOffset":23049,"count":2}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23077,"endOffset":23180,"count":2}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":23365,"endOffset":32454,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24109,"endOffset":24227,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":32485,"endOffset":32769,"count":4}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":32995,"endOffset":33113,"count":6}],"isBlockCoverage":false}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4884,"endOffset":4927,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5626,"endOffset":5688,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5780,"endOffset":5818,"count":1}],"isBlockCoverage":false},{"functionName":"wrapModuleLoad","ranges":[{"startOffset":6066,"endOffset":6508,"count":1362}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":6652,"endOffset":7134,"count":3583}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":7645,"endOffset":7852,"count":1123}],"isBlockCoverage":false},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7975,"endOffset":8135,"count":1908}],"isBlockCoverage":false},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":8326,"endOffset":8569,"count":73}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8514,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8667,"endOffset":8939,"count":556}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10975,"endOffset":11002,"count":1}],"isBlockCoverage":false},{"functionName":"initializeCJS","ranges":[{"startOffset":11746,"endOffset":12680,"count":1}],"isBlockCoverage":false},{"functionName":"tryPackage","ranges":[{"startOffset":13596,"endOffset":14828,"count":250}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":15197,"endOffset":15467,"count":1610}],"isBlockCoverage":false},{"functionName":"tryExtensions","ranges":[{"startOffset":15740,"endOffset":15969,"count":779}],"isBlockCoverage":false},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":16159,"endOffset":16647,"count":556}],"isBlockCoverage":false},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16776,"endOffset":17081,"count":928}],"isBlockCoverage":false},{"functionName":"trySelf","ranges":[{"startOffset":17296,"endOffset":18270,"count":928}],"isBlockCoverage":false},{"functionName":"resolveExports","ranges":[{"startOffset":18632,"endOffset":19470,"count":842}],"isBlockCoverage":false},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":19535,"endOffset":20725,"count":576}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19984,"endOffset":20124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20302,"endOffset":20381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20648,"endOffset":20720,"count":2304}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21027,"endOffset":25105,"count":929}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25449,"endOffset":27060,"count":73}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28613,"endOffset":29941,"count":928}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":31439,"endOffset":32464,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33143,"endOffset":37133,"count":1362}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37606,"endOffset":40835,"count":1154}],"isBlockCoverage":false},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":41272,"endOffset":41867,"count":69}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42538,"endOffset":43429,"count":556}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43640,"endOffset":43953,"count":1357}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":49656,"endOffset":51713,"count":546}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52123,"endOffset":53467,"count":546}],"isBlockCoverage":false},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":53729,"endOffset":54146,"count":546}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56673,"endOffset":58306,"count":546}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58495,"endOffset":58751,"count":9}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58940,"endOffset":59080,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60840,"endOffset":61833,"count":1}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"deserializePackageJSON","ranges":[{"startOffset":499,"endOffset":2028,"count":2222}],"isBlockCoverage":false},{"functionName":"requiresJSONParse","ranges":[{"startOffset":1310,"endOffset":1384,"count":1286}],"isBlockCoverage":false},{"functionName":"get imports","ranges":[{"startOffset":1573,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":1799,"endOffset":2018,"count":1286}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2316,"endOffset":2752,"count":660}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2973,"endOffset":3109,"count":634}],"isBlockCoverage":false},{"functionName":"getNearestParentPackageJSON","ranges":[{"startOffset":3442,"endOffset":3953,"count":1463}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":4188,"endOffset":4603,"count":99}],"isBlockCoverage":false}]},{"scriptId":"66","url":"node:diagnostics_channel","functions":[{"functionName":"set","ranges":[{"startOffset":972,"endOffset":1092,"count":26}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1098,"endOffset":1148,"count":26}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":4249,"endOffset":4396,"count":26}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4890,"endOffset":4936,"count":3015}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":5094,"endOffset":5369,"count":26}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5958,"endOffset":6497,"count":15}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":6527,"endOffset":6808,"count":3}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6814,"endOffset":7035,"count":1482}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7554,"endOffset":8085,"count":1362}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7771,"endOffset":8078,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":8091,"endOffset":9317,"count":6}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":8301,"endOffset":8567,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8575,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8846,"endOffset":9310,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":10463,"endOffset":10553,"count":3}],"isBlockCoverage":false}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1338,"endOffset":1447,"count":46}],"isBlockCoverage":false},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1584,"endOffset":1702,"count":45}],"isBlockCoverage":false},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1858,"endOffset":2376,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":2452,"endOffset":2820,"count":45}],"isBlockCoverage":false},{"functionName":"defaultImportModuleDynamicallyForScript","ranges":[{"startOffset":8096,"endOffset":8408,"count":6}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":9052,"endOffset":10556,"count":6}],"isBlockCoverage":false},{"functionName":"initializeESM","ranges":[{"startOffset":10877,"endOffset":11270,"count":1}],"isBlockCoverage":false},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":11405,"endOffset":11470,"count":1}],"isBlockCoverage":false},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":13059,"endOffset":13532,"count":14}],"isBlockCoverage":false}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1108,"endOffset":1298,"count":1}],"isBlockCoverage":false},{"functionName":"prepareExecution","ranges":[{"startOffset":2516,"endOffset":4682,"count":1}],"isBlockCoverage":false},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4686,"endOffset":5444,"count":1}],"isBlockCoverage":false},{"functionName":"setupUserModules","ranges":[{"startOffset":5448,"endOffset":6216,"count":1}],"isBlockCoverage":false},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6220,"endOffset":6278,"count":1}],"isBlockCoverage":false},{"functionName":"patchProcessObject","ranges":[{"startOffset":6714,"endOffset":9106,"count":1}],"isBlockCoverage":false},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9110,"endOffset":9402,"count":13}],"isBlockCoverage":false},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9406,"endOffset":9944,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9822,"endOffset":9927,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10023,"endOffset":10364,"count":1}],"isBlockCoverage":false},{"functionName":"setupEventsource","ranges":[{"startOffset":10435,"endOffset":10564,"count":1}],"isBlockCoverage":false},{"functionName":"setupNavigator","ranges":[{"startOffset":10672,"endOffset":11082,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":11190,"endOffset":12173,"count":1}],"isBlockCoverage":false},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11528,"endOffset":11708,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":12018,"endOffset":12119,"count":0}],"isBlockCoverage":false},{"functionName":"setupSQLite","ranges":[{"startOffset":12177,"endOffset":12391,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebStorage","ranges":[{"startOffset":12395,"endOffset":12811,"count":1}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":12815,"endOffset":13347,"count":1}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":13457,"endOffset":13741,"count":1}],"isBlockCoverage":false},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":13745,"endOffset":13978,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReport","ranges":[{"startOffset":13982,"endOffset":14241,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14132,"endOffset":14230,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":14245,"endOffset":14481,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":14546,"endOffset":14739,"count":1}],"isBlockCoverage":false},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":14743,"endOffset":15500,"count":1}],"isBlockCoverage":false},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":15061,"endOffset":15218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15416,"endOffset":15490,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":15504,"endOffset":15767,"count":1}],"isBlockCoverage":false},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":15771,"endOffset":16366,"count":1}],"isBlockCoverage":false},{"functionName":"setupNetworkInspection","ranges":[{"startOffset":16370,"endOffset":16691,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDeprecations","ranges":[{"startOffset":16891,"endOffset":18851,"count":1}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":18855,"endOffset":19387,"count":1}],"isBlockCoverage":false},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":19391,"endOffset":19668,"count":1}],"isBlockCoverage":false},{"functionName":"initializePermission","ranges":[{"startOffset":19672,"endOffset":21639,"count":1}],"isBlockCoverage":false},{"functionName":"binding","ranges":[{"startOffset":19804,"endOffset":19893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21477,"endOffset":21629,"count":6}],"isBlockCoverage":false},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21643,"endOffset":21767,"count":1}],"isBlockCoverage":false},{"functionName":"initializeESMLoader","ranges":[{"startOffset":21771,"endOffset":22369,"count":1}],"isBlockCoverage":false},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22373,"endOffset":22576,"count":1}],"isBlockCoverage":false},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22580,"endOffset":22772,"count":1}],"isBlockCoverage":false},{"functionName":"loadPreloadModules","ranges":[{"startOffset":22885,"endOffset":23244,"count":1}],"isBlockCoverage":false},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23248,"endOffset":23344,"count":1}],"isBlockCoverage":false}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":745,"endOffset":1878,"count":1}],"isBlockCoverage":false},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":2045,"endOffset":3601,"count":1}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":6029,"endOffset":7169,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6916,"endOffset":7159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":613,"endOffset":705,"count":2}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":973,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"validateTries","ranges":[{"startOffset":1128,"endOffset":1267,"count":1}],"isBlockCoverage":false},{"functionName":"ResolverBase","ranges":[{"startOffset":1673,"endOffset":2031,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2037,"endOffset":2176,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDns","ranges":[{"startOffset":5669,"endOffset":6167,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6104,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6448,"endOffset":6736,"count":1}],"isBlockCoverage":false},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6817,"endOffset":7044,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6952,"endOffset":7039,"count":15}],"isBlockCoverage":false},{"functionName":"validateHints","ranges":[{"startOffset":7048,"endOffset":7272,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultResultOrder","ranges":[{"startOffset":7832,"endOffset":7889,"count":1}],"isBlockCoverage":false},{"functionName":"createResolverClass","ranges":[{"startOffset":7893,"endOffset":9024,"count":1}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1067,"endOffset":1345,"count":118}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1349,"endOffset":1627,"count":2}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1631,"endOffset":1721,"count":118}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3870,"endOffset":3977,"count":43}],"isBlockCoverage":false}]},{"scriptId":"74","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1404,"count":1}],"isBlockCoverage":false}]},{"scriptId":"75","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13389,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2488,"endOffset":2615,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2662,"endOffset":4161,"count":1},{"startOffset":2767,"endOffset":2815,"count":0},{"startOffset":3326,"endOffset":3391,"count":0},{"startOffset":4014,"endOffset":4085,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4167,"endOffset":4468,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4474,"endOffset":4869,"count":1},{"startOffset":4692,"endOffset":4730,"count":0},{"startOffset":4732,"endOffset":4806,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4875,"endOffset":5049,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5056,"endOffset":5280,"count":1},{"startOffset":5142,"endOffset":5277,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5284,"endOffset":5992,"count":1},{"startOffset":5489,"endOffset":5556,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5996,"endOffset":7090,"count":2},{"startOffset":6056,"endOffset":6066,"count":0},{"startOffset":6400,"endOffset":6463,"count":0},{"startOffset":6516,"endOffset":6948,"count":0},{"startOffset":6998,"endOffset":7061,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7128,"endOffset":8568,"count":2},{"startOffset":7276,"endOffset":7596,"count":1},{"startOffset":7596,"endOffset":7637,"count":0},{"startOffset":7637,"endOffset":7680,"count":1},{"startOffset":7680,"endOffset":7737,"count":0},{"startOffset":7737,"endOffset":7820,"count":1},{"startOffset":7820,"endOffset":8007,"count":0},{"startOffset":8007,"endOffset":8567,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8572,"endOffset":8650,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8808,"endOffset":9283,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9287,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9701,"endOffset":10060,"count":1},{"startOffset":9794,"endOffset":9838,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":10064,"endOffset":10255,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10259,"endOffset":11935,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12224,"endOffset":12808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"77","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/bin/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4151,"count":1},{"startOffset":1653,"endOffset":1720,"count":0},{"startOffset":2170,"endOffset":2264,"count":0},{"startOffset":2347,"endOffset":4051,"count":0}],"isBlockCoverage":true},{"functionName":"disableTimeouts","ranges":[{"startOffset":865,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"trimV8Option","ranges":[{"startOffset":1230,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":1524,"count":10},{"startOffset":1424,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1597,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1692,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2128,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2538,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3035,"endOffset":3219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3274,"endOffset":4046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10026,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2160,"endOffset":2293,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2218,"endOffset":2283,"count":2},{"startOffset":2268,"endOffset":2271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2388,"endOffset":2477,"count":33}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2438,"endOffset":2475,"count":7},{"startOffset":2461,"endOffset":2470,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":2917,"count":20}],"isBlockCoverage":true},{"functionName":"createErrorForNumericPositionalArg","ranges":[{"startOffset":3323,"endOffset":4192,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4502,"endOffset":6101,"count":3},{"startOffset":4958,"endOffset":4964,"count":2},{"startOffset":4965,"endOffset":4982,"count":1},{"startOffset":5635,"endOffset":5727,"count":0},{"startOffset":5834,"endOffset":5953,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5019,"endOffset":5270,"count":1},{"startOffset":5128,"endOffset":5248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5589,"endOffset":5604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5781,"endOffset":5802,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6016,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":6495,"endOffset":6646,"count":1},{"startOffset":6612,"endOffset":6632,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":7094,"endOffset":8249,"count":1},{"startOffset":7157,"endOffset":7183,"count":0},{"startOffset":7379,"endOffset":7775,"count":0},{"startOffset":7852,"endOffset":7961,"count":0},{"startOffset":8036,"endOffset":8223,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":8986,"endOffset":9919,"count":1},{"startOffset":9220,"endOffset":9244,"count":0},{"startOffset":9666,"endOffset":9671,"count":0},{"startOffset":9688,"endOffset":9693,"count":0},{"startOffset":9768,"endOffset":9837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9161,"endOffset":9193,"count":6}],"isBlockCoverage":true}]},{"scriptId":"79","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6089,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":34,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"hasColor","ranges":[{"startOffset":390,"endOffset":508,"count":1},{"startOffset":488,"endOffset":507,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":528,"endOffset":6023,"count":1}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":657,"endOffset":1336,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":884,"endOffset":1311,"count":4},{"startOffset":940,"endOffset":983,"count":0},{"startOffset":1247,"endOffset":1294,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1356,"endOffset":1474,"count":4},{"startOffset":1425,"endOffset":1439,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1495,"endOffset":1953,"count":4},{"startOffset":1555,"endOffset":1565,"count":0},{"startOffset":1601,"endOffset":1614,"count":0},{"startOffset":1650,"endOffset":1660,"count":0},{"startOffset":1794,"endOffset":1864,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1975,"endOffset":2534,"count":42},{"startOffset":2084,"endOffset":2111,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2240,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2306,"endOffset":2520,"count":4},{"startOffset":2453,"endOffset":2478,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2335,"endOffset":2369,"count":4}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4424,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4577,"endOffset":5367,"count":2},{"startOffset":4636,"endOffset":4651,"count":0},{"startOffset":4698,"endOffset":4811,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5067,"endOffset":5124,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5353,"count":2},{"startOffset":5280,"endOffset":5309,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":5162,"endOffset":5196,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5389,"endOffset":5601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5632,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5835,"endOffset":5845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1687,"count":1},{"startOffset":1249,"endOffset":1254,"count":0},{"startOffset":1287,"endOffset":1292,"count":0},{"startOffset":1410,"endOffset":1417,"count":0}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42622,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2558,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3733,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5018,"endOffset":6126,"count":25},{"startOffset":5118,"endOffset":5137,"count":0},{"startOffset":5220,"endOffset":5231,"count":19},{"startOffset":5231,"endOffset":5287,"count":6},{"startOffset":5287,"endOffset":5658,"count":0},{"startOffset":5658,"endOffset":6123,"count":6},{"startOffset":5701,"endOffset":6123,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7304,"endOffset":8038,"count":25},{"startOffset":7509,"endOffset":7520,"count":0},{"startOffset":7725,"endOffset":7758,"count":13},{"startOffset":7751,"endOffset":7758,"count":0},{"startOffset":7759,"endOffset":7763,"count":12}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":8836,"endOffset":10645,"count":45},{"startOffset":8973,"endOffset":9234,"count":0},{"startOffset":9301,"endOffset":9432,"count":0},{"startOffset":9573,"endOffset":9605,"count":0},{"startOffset":9678,"endOffset":9876,"count":0},{"startOffset":9899,"endOffset":10290,"count":0},{"startOffset":10544,"endOffset":10549,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":11068,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11688,"endOffset":11887,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12536,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13392,"endOffset":13780,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15158,"endOffset":17976,"count":70},{"startOffset":15339,"endOffset":15350,"count":0},{"startOffset":15351,"endOffset":15387,"count":0},{"startOffset":15389,"endOffset":15475,"count":0},{"startOffset":15527,"endOffset":16084,"count":0},{"startOffset":16178,"endOffset":16802,"count":0},{"startOffset":17027,"endOffset":17113,"count":0},{"startOffset":17159,"endOffset":17975,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15852,"endOffset":15865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16391,"endOffset":16404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16540,"endOffset":16553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17297,"endOffset":17310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17541,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17905,"endOffset":17918,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":18175,"endOffset":18323,"count":67},{"startOffset":18273,"endOffset":18319,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":19133,"endOffset":21417,"count":111},{"startOffset":19328,"endOffset":19486,"count":70},{"startOffset":19486,"endOffset":21297,"count":41},{"startOffset":19518,"endOffset":20365,"count":8},{"startOffset":19550,"endOffset":19578,"count":0},{"startOffset":19908,"endOffset":20062,"count":0},{"startOffset":20103,"endOffset":20132,"count":0},{"startOffset":20168,"endOffset":20228,"count":0},{"startOffset":20264,"endOffset":20365,"count":0},{"startOffset":20365,"endOffset":21297,"count":33},{"startOffset":20520,"endOffset":20755,"count":67},{"startOffset":20580,"endOffset":20748,"count":0},{"startOffset":20799,"endOffset":21218,"count":64},{"startOffset":20858,"endOffset":20880,"count":52},{"startOffset":20882,"endOffset":21211,"count":33},{"startOffset":21158,"endOffset":21171,"count":0},{"startOffset":21218,"endOffset":21297,"count":0},{"startOffset":21297,"endOffset":21416,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21709,"endOffset":22673,"count":70},{"startOffset":21842,"endOffset":21858,"count":0},{"startOffset":21915,"endOffset":21932,"count":0},{"startOffset":22077,"endOffset":22640,"count":355},{"startOffset":22190,"endOffset":22249,"count":70},{"startOffset":22249,"endOffset":22635,"count":285},{"startOffset":22305,"endOffset":22635,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23181,"endOffset":25827,"count":70},{"startOffset":23388,"endOffset":23427,"count":2},{"startOffset":23840,"endOffset":23916,"count":0},{"startOffset":23950,"endOffset":25826,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26210,"endOffset":26777,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27275,"endOffset":29808,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":29980,"endOffset":31070,"count":26},{"startOffset":30175,"endOffset":30411,"count":0},{"startOffset":30459,"endOffset":30475,"count":25},{"startOffset":30476,"endOffset":30528,"count":1},{"startOffset":30705,"endOffset":30742,"count":0},{"startOffset":30771,"endOffset":30893,"count":0},{"startOffset":30951,"endOffset":30955,"count":25},{"startOffset":30956,"endOffset":31010,"count":1}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31403,"endOffset":33480,"count":26},{"startOffset":31569,"endOffset":31617,"count":0},{"startOffset":31875,"endOffset":31912,"count":0},{"startOffset":31914,"endOffset":32104,"count":0},{"startOffset":32286,"endOffset":33348,"count":52},{"startOffset":32515,"endOffset":32799,"count":26},{"startOffset":32594,"endOffset":32632,"count":0},{"startOffset":32799,"endOffset":32984,"count":26},{"startOffset":32984,"endOffset":33104,"count":1},{"startOffset":33104,"endOffset":33253,"count":25},{"startOffset":33253,"endOffset":33348,"count":0},{"startOffset":33348,"endOffset":33479,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33597,"endOffset":33709,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33834,"endOffset":34121,"count":90},{"startOffset":33905,"endOffset":34101,"count":26},{"startOffset":33964,"endOffset":33980,"count":0},{"startOffset":34101,"endOffset":34120,"count":64}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34276,"endOffset":34471,"count":90},{"startOffset":34363,"endOffset":34380,"count":0},{"startOffset":34410,"endOffset":34426,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34843,"endOffset":36159,"count":45},{"startOffset":35036,"endOffset":35056,"count":0},{"startOffset":35276,"endOffset":35508,"count":13},{"startOffset":35340,"endOffset":35503,"count":0},{"startOffset":35508,"endOffset":36025,"count":32},{"startOffset":35564,"endOffset":35638,"count":0},{"startOffset":35702,"endOffset":36020,"count":26},{"startOffset":35736,"endOffset":35791,"count":0},{"startOffset":35793,"endOffset":35950,"count":0},{"startOffset":36064,"endOffset":36092,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36367,"endOffset":38240,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":38386,"endOffset":38666,"count":45},{"startOffset":38464,"endOffset":38517,"count":0},{"startOffset":38555,"endOffset":38575,"count":0},{"startOffset":38577,"endOffset":38663,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":39182,"endOffset":41418,"count":45},{"startOffset":39497,"endOffset":39555,"count":13},{"startOffset":39555,"endOffset":39602,"count":32},{"startOffset":39628,"endOffset":39835,"count":19},{"startOffset":39769,"endOffset":39830,"count":0},{"startOffset":39860,"endOffset":39870,"count":0},{"startOffset":39901,"endOffset":39948,"count":0},{"startOffset":40011,"endOffset":40528,"count":0},{"startOffset":40693,"endOffset":40715,"count":0},{"startOffset":40749,"endOffset":41183,"count":0}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":41689,"endOffset":42314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9752,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":881,"endOffset":912,"count":0}],"isBlockCoverage":false},{"functionName":"detectModuleFormat","ranges":[{"startOffset":1088,"endOffset":1333,"count":41},{"startOffset":1147,"endOffset":1191,"count":38},{"startOffset":1176,"endOffset":1188,"count":0},{"startOffset":1191,"endOffset":1214,"count":3},{"startOffset":1214,"endOffset":1236,"count":0},{"startOffset":1236,"endOffset":1306,"count":3},{"startOffset":1306,"endOffset":1316,"count":0},{"startOffset":1317,"endOffset":1329,"count":3}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1400,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1910,"endOffset":2281,"count":73},{"startOffset":2012,"endOffset":2264,"count":219},{"startOffset":2076,"endOffset":2112,"count":0},{"startOffset":2122,"endOffset":2252,"count":73},{"startOffset":2211,"endOffset":2215,"count":0},{"startOffset":2264,"endOffset":2280,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2519,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"warnTypelessPackageJsonFile","ranges":[{"startOffset":2790,"endOffset":3428,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":3577,"endOffset":8860,"count":73},{"startOffset":3885,"endOffset":3920,"count":32},{"startOffset":3920,"endOffset":4057,"count":41},{"startOffset":4057,"endOffset":4420,"count":0},{"startOffset":4428,"endOffset":4553,"count":0},{"startOffset":4561,"endOffset":5351,"count":41},{"startOffset":5014,"endOffset":5033,"count":0},{"startOffset":5035,"endOffset":5318,"count":0},{"startOffset":5363,"endOffset":5432,"count":0},{"startOffset":5434,"endOffset":8859,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":9012,"endOffset":9253,"count":70},{"startOffset":9168,"endOffset":9192,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":9405,"endOffset":9634,"count":3},{"startOffset":9548,"endOffset":9572,"count":0}],"isBlockCoverage":true}]},{"scriptId":"83","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2016,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":875,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1601,"endOffset":1915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43941,"count":1},{"startOffset":42296,"endOffset":42340,"count":0},{"startOffset":42424,"endOffset":42432,"count":0},{"startOffset":42479,"endOffset":42487,"count":0},{"startOffset":42530,"endOffset":42653,"count":0},{"startOffset":42769,"endOffset":42969,"count":0},{"startOffset":43008,"endOffset":43012,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":102,"endOffset":1013,"count":21},{"startOffset":179,"endOffset":207,"count":0},{"startOffset":308,"endOffset":334,"count":0},{"startOffset":336,"endOffset":365,"count":0},{"startOffset":529,"endOffset":555,"count":0},{"startOffset":582,"endOffset":976,"count":267},{"startOffset":653,"endOffset":750,"count":24},{"startOffset":776,"endOffset":807,"count":246},{"startOffset":792,"endOffset":806,"count":222},{"startOffset":809,"endOffset":863,"count":24},{"startOffset":863,"endOffset":965,"count":243}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":1015,"endOffset":1523,"count":18},{"startOffset":1125,"endOffset":1131,"count":0},{"startOffset":1203,"endOffset":1494,"count":206},{"startOffset":1330,"endOffset":1338,"count":21},{"startOffset":1340,"endOffset":1420,"count":21},{"startOffset":1420,"endOffset":1487,"count":185}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1525,"endOffset":1846,"count":17},{"startOffset":1604,"endOffset":1617,"count":0},{"startOffset":1659,"endOffset":1671,"count":2},{"startOffset":1671,"endOffset":1716,"count":15},{"startOffset":1716,"endOffset":1728,"count":0},{"startOffset":1728,"endOffset":1765,"count":15},{"startOffset":1765,"endOffset":1778,"count":0},{"startOffset":1778,"endOffset":1845,"count":15}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1850,"endOffset":2665,"count":5},{"startOffset":1925,"endOffset":2005,"count":4},{"startOffset":2005,"endOffset":2197,"count":1},{"startOffset":2197,"endOffset":2644,"count":0},{"startOffset":2644,"endOffset":2664,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2700,"endOffset":2943,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":3045,"endOffset":3098,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3104,"endOffset":40536,"count":5},{"startOffset":4852,"endOffset":4857,"count":0},{"startOffset":5008,"endOffset":5014,"count":2},{"startOffset":5015,"endOffset":5020,"count":3},{"startOffset":5147,"endOffset":5162,"count":3},{"startOffset":5837,"endOffset":5842,"count":0},{"startOffset":6496,"endOffset":6501,"count":0},{"startOffset":6661,"endOffset":6666,"count":0},{"startOffset":6828,"endOffset":6833,"count":0},{"startOffset":6994,"endOffset":6999,"count":3},{"startOffset":7163,"endOffset":7168,"count":3},{"startOffset":7647,"endOffset":7910,"count":3},{"startOffset":7960,"endOffset":8547,"count":2},{"startOffset":8042,"endOffset":8208,"count":0},{"startOffset":9056,"endOffset":16497,"count":0},{"startOffset":16790,"endOffset":16815,"count":0},{"startOffset":16998,"endOffset":17016,"count":2},{"startOffset":17031,"endOffset":17055,"count":0},{"startOffset":17206,"endOffset":17238,"count":2},{"startOffset":17240,"endOffset":17401,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5868,"endOffset":6461,"count":40},{"startOffset":5934,"endOffset":5943,"count":0},{"startOffset":6312,"endOffset":6376,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6004,"endOffset":6258,"count":340}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6527,"endOffset":6627,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6692,"endOffset":6794,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6859,"endOffset":6961,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7025,"endOffset":7126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7194,"endOffset":7298,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7394,"endOffset":7587,"count":74}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7698,"endOffset":7897,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8108,"endOffset":8191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8319,"endOffset":8519,"count":1},{"startOffset":8391,"endOffset":8421,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8658,"endOffset":8819,"count":17},{"startOffset":8708,"endOffset":8713,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8723,"endOffset":8806,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16859,"endOffset":16967,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17082,"endOffset":17152,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17280,"endOffset":17320,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17330,"endOffset":17388,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17500,"endOffset":17515,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17526,"endOffset":17783,"count":96},{"startOffset":17596,"endOffset":17618,"count":27},{"startOffset":17620,"endOffset":17731,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17676,"endOffset":17699,"count":1}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":17806,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"eatNargs","ranges":[{"startOffset":18092,"endOffset":19750,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19760,"endOffset":21600,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":21610,"endOffset":23568,"count":20},{"startOffset":21704,"endOffset":21744,"count":2},{"startOffset":21746,"endOffset":21948,"count":2},{"startOffset":22146,"endOffset":22356,"count":11},{"startOffset":22394,"endOffset":22426,"count":0},{"startOffset":22428,"endOffset":22915,"count":0},{"startOffset":22971,"endOffset":23009,"count":1},{"startOffset":23011,"endOffset":23557,"count":1},{"startOffset":23075,"endOffset":23080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21798,"endOffset":21879,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22192,"endOffset":22339,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22490,"endOffset":22898,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23113,"endOffset":23540,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":23260,"endOffset":23335,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":23362,"endOffset":23496,"count":8},{"startOffset":23436,"endOffset":23460,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":23578,"endOffset":23931,"count":3},{"startOffset":23651,"endOffset":23679,"count":1},{"startOffset":23682,"endOffset":23788,"count":2},{"startOffset":23829,"endOffset":23859,"count":2},{"startOffset":23862,"endOffset":23920,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":23941,"endOffset":24960,"count":20},{"startOffset":24030,"endOffset":24087,"count":0},{"startOffset":24139,"endOffset":24176,"count":19},{"startOffset":24178,"endOffset":24283,"count":1},{"startOffset":24247,"endOffset":24268,"count":0},{"startOffset":24345,"endOffset":24406,"count":4},{"startOffset":24424,"endOffset":24453,"count":16},{"startOffset":24507,"endOffset":24560,"count":0},{"startOffset":24562,"endOffset":24616,"count":0},{"startOffset":24672,"endOffset":24709,"count":1},{"startOffset":24711,"endOffset":24922,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24355,"endOffset":24405,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24791,"endOffset":24832,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24970,"endOffset":25624,"count":35},{"startOffset":25071,"endOffset":25085,"count":24},{"startOffset":25104,"endOffset":25117,"count":0},{"startOffset":25172,"endOffset":25209,"count":21},{"startOffset":25210,"endOffset":25234,"count":19},{"startOffset":25236,"endOffset":25586,"count":17},{"startOffset":25305,"endOffset":25338,"count":2},{"startOffset":25339,"endOffset":25400,"count":2},{"startOffset":25442,"endOffset":25505,"count":15},{"startOffset":25507,"endOffset":25571,"count":2}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":25634,"endOffset":27304,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25841,"endOffset":27291,"count":1},{"startOffset":25977,"endOffset":27276,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":27314,"endOffset":28003,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27396,"endOffset":27990,"count":24},{"startOffset":27495,"endOffset":27513,"count":0},{"startOffset":27568,"endOffset":27585,"count":8},{"startOffset":27586,"endOffset":27610,"count":8},{"startOffset":27611,"endOffset":27643,"count":0},{"startOffset":27645,"endOffset":27719,"count":0},{"startOffset":27803,"endOffset":27881,"count":4},{"startOffset":27846,"endOffset":27880,"count":0},{"startOffset":27883,"endOffset":27956,"count":20}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":28013,"endOffset":28263,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28139,"endOffset":28235,"count":6}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":28273,"endOffset":29167,"count":10},{"startOffset":28390,"endOffset":28460,"count":0},{"startOffset":28461,"endOffset":28465,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28543,"endOffset":29154,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":29177,"endOffset":30044,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29313,"endOffset":30031,"count":47},{"startOffset":29370,"endOffset":30016,"count":42},{"startOffset":29496,"endOffset":29997,"count":9},{"startOffset":29674,"endOffset":29679,"count":1},{"startOffset":29892,"endOffset":29974,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29695,"endOffset":29837,"count":14}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":30054,"endOffset":30354,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":30364,"endOffset":30994,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30482,"endOffset":30981,"count":58},{"startOffset":30550,"endOffset":30966,"count":26},{"startOffset":30675,"endOffset":30697,"count":9},{"startOffset":30733,"endOffset":30738,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30748,"endOffset":30945,"count":18},{"startOffset":30848,"endOffset":30855,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":31004,"endOffset":31441,"count":100},{"startOffset":31365,"endOffset":31378,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31189,"endOffset":31257,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":31451,"endOffset":33957,"count":71},{"startOffset":32576,"endOffset":32612,"count":0},{"startOffset":32614,"endOffset":32863,"count":0},{"startOffset":32904,"endOffset":32965,"count":0},{"startOffset":33011,"endOffset":33515,"count":0},{"startOffset":33575,"endOffset":33649,"count":12},{"startOffset":33624,"endOffset":33633,"count":0},{"startOffset":33649,"endOffset":33946,"count":59},{"startOffset":33708,"endOffset":33762,"count":0},{"startOffset":33763,"endOffset":33816,"count":0},{"startOffset":33819,"endOffset":33878,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31643,"endOffset":32275,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33967,"endOffset":35591,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34027,"endOffset":35578,"count":20},{"startOffset":34077,"endOffset":34082,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34092,"endOffset":35561,"count":188},{"startOffset":34179,"endOffset":34186,"count":64},{"startOffset":34186,"endOffset":34252,"count":124},{"startOffset":34252,"endOffset":34257,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34320,"endOffset":34755,"count":220},{"startOffset":34376,"endOffset":34416,"count":39},{"startOffset":34418,"endOffset":34732,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34818,"endOffset":35279,"count":238},{"startOffset":34875,"endOffset":34893,"count":162},{"startOffset":34894,"endOffset":34934,"count":18},{"startOffset":34936,"endOffset":35256,"count":18},{"startOffset":35040,"endOffset":35079,"count":1},{"startOffset":35081,"endOffset":35229,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35330,"endOffset":35540,"count":114}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35428,"endOffset":35514,"count":154}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":35601,"endOffset":35891,"count":289},{"startOffset":35697,"endOffset":35702,"count":102},{"startOffset":35855,"endOffset":35871,"count":40},{"startOffset":35872,"endOffset":35879,"count":249}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35798,"endOffset":35823,"count":425}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35901,"endOffset":36205,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":36215,"endOffset":36501,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":36511,"endOffset":37378,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":37388,"endOffset":37521,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOption","ranges":[{"startOffset":37531,"endOffset":38250,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":38260,"endOffset":38596,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":38606,"endOffset":38950,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":38960,"endOffset":39531,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":39541,"endOffset":39618,"count":15}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":39628,"endOffset":40212,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39704,"endOffset":40199,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":40541,"endOffset":41776,"count":5},{"startOffset":40890,"endOffset":41390,"count":84},{"startOffset":40957,"endOffset":41379,"count":802},{"startOffset":41154,"endOffset":41364,"count":0},{"startOffset":41379,"endOffset":41390,"count":802},{"startOffset":41390,"endOffset":41397,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40706,"endOffset":40786,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41016,"endOffset":41112,"count":1704}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41423,"endOffset":41749,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41487,"endOffset":41564,"count":180}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":41778,"endOffset":41854,"count":71},{"startOffset":41836,"endOffset":41846,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":41856,"endOffset":41964,"count":71},{"startOffset":41923,"endOffset":41944,"count":0}],"isBlockCoverage":true},{"functionName":"stripQuotes","ranges":[{"startOffset":41966,"endOffset":42184,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":43081,"endOffset":43116,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":43218,"endOffset":43547,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":43574,"endOffset":43685,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":43711,"endOffset":43783,"count":5}],"isBlockCoverage":true}]},{"scriptId":"85","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3107,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1741,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1894,"endOffset":2042,"count":43},{"startOffset":1967,"endOffset":1972,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1995,"endOffset":2035,"count":23}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2281,"endOffset":2350,"count":10}],"isBlockCoverage":true},{"functionName":"exports.expectedTypeForFlag","ranges":[{"startOffset":2714,"endOffset":3104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1618,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":529,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1230,"endOffset":1275,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1365,"endOffset":1409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39992,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2253,"endOffset":2374,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2393,"endOffset":2515,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2539,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2663,"endOffset":2768,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2790,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2919,"endOffset":3041,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":3068,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3206,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3322,"endOffset":3422,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3443,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3853,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6336,"endOffset":8868,"count":1},{"startOffset":7119,"endOffset":7122,"count":0},{"startOffset":7179,"endOffset":7221,"count":0},{"startOffset":7621,"endOffset":7667,"count":0},{"startOffset":8708,"endOffset":8773,"count":0},{"startOffset":8779,"endOffset":8865,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7511,"endOffset":7584,"count":15},{"startOffset":7551,"endOffset":7579,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":9118,"endOffset":9190,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9550,"endOffset":9612,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":10207,"endOffset":11393,"count":1},{"startOffset":10293,"endOffset":10335,"count":0},{"startOffset":10376,"endOffset":10385,"count":0},{"startOffset":10633,"endOffset":11163,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11740,"endOffset":12269,"count":1},{"startOffset":11811,"endOffset":11842,"count":0},{"startOffset":11863,"endOffset":11871,"count":0},{"startOffset":11943,"endOffset":12111,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12190,"endOffset":12246,"count":6}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12821,"endOffset":13167,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":14045,"endOffset":14502,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14213,"endOffset":14300,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14307,"endOffset":14474,"count":6}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":14726,"endOffset":14949,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":15408,"endOffset":15786,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":16156,"endOffset":16261,"count":1},{"startOffset":16210,"endOffset":16260,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":17438,"endOffset":17735,"count":1},{"startOffset":17481,"endOffset":17675,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":18020,"endOffset":18083,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":18390,"endOffset":18483,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":18893,"endOffset":19018,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":19320,"endOffset":19665,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19939,"endOffset":20029,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":20466,"endOffset":20689,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20595,"endOffset":20668,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":21084,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":21474,"endOffset":21570,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":21838,"endOffset":21913,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":22511,"endOffset":22578,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":22963,"endOffset":23030,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":23426,"endOffset":23490,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":23792,"endOffset":23882,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":24033,"endOffset":24104,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":24386,"endOffset":24488,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":24769,"endOffset":24836,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":25094,"endOffset":25175,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":25437,"endOffset":25524,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.passOnFailingTestSuite","ranges":[{"startOffset":25811,"endOffset":25938,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":26214,"endOffset":26307,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":26604,"endOffset":26706,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":26879,"endOffset":27580,"count":1},{"startOffset":26937,"endOffset":27119,"count":0},{"startOffset":27230,"endOffset":27577,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":28644,"endOffset":31046,"count":1},{"startOffset":28767,"endOffset":28835,"count":0},{"startOffset":28886,"endOffset":28915,"count":0},{"startOffset":29599,"endOffset":29653,"count":0},{"startOffset":29757,"endOffset":29818,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":29950,"endOffset":30274,"count":1},{"startOffset":30096,"endOffset":30114,"count":0},{"startOffset":30129,"endOffset":30142,"count":0},{"startOffset":30190,"endOffset":30234,"count":0}],"isBlockCoverage":true},{"functionName":"runAsync","ranges":[{"startOffset":30298,"endOffset":30743,"count":1},{"startOffset":30417,"endOffset":30462,"count":0},{"startOffset":30648,"endOffset":30712,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":31213,"endOffset":31794,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":32492,"endOffset":33326,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":33767,"endOffset":33901,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":34204,"endOffset":34408,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":34723,"endOffset":34951,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":35436,"endOffset":35737,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":36226,"endOffset":36552,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":36835,"endOffset":37020,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":37258,"endOffset":37375,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":37622,"endOffset":37751,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":37918,"endOffset":38008,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":38184,"endOffset":38284,"count":1}],"isBlockCoverage":true}]},{"scriptId":"88","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":965,"count":1}],"isBlockCoverage":true}]},{"scriptId":"90","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13508,"count":1},{"startOffset":1128,"endOffset":1169,"count":0},{"startOffset":2551,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":455,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2230,"endOffset":2384,"count":193},{"startOffset":2280,"endOffset":2311,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2810,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2893,"endOffset":2963,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2982,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":3074,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":3153,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3366,"endOffset":3521,"count":10}],"isBlockCoverage":true},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3527,"endOffset":3737,"count":10},{"startOffset":3596,"endOffset":3628,"count":5},{"startOffset":3630,"endOffset":3734,"count":5}],"isBlockCoverage":true},{"functionName":"exports.generateDiff","ranges":[{"startOffset":4062,"endOffset":4866,"count":5},{"startOffset":4400,"endOffset":4430,"count":0},{"startOffset":4493,"endOffset":4623,"count":0},{"startOffset":4649,"endOffset":4863,"count":0}],"isBlockCoverage":true},{"functionName":"getFullErrorStack","ranges":[{"startOffset":5059,"endOffset":6028,"count":5},{"startOffset":5094,"endOffset":5110,"count":0},{"startOffset":5112,"endOffset":5177,"count":0},{"startOffset":5240,"endOffset":5281,"count":0},{"startOffset":5389,"endOffset":5420,"count":0},{"startOffset":5460,"endOffset":5470,"count":0},{"startOffset":5520,"endOffset":5524,"count":0},{"startOffset":5549,"endOffset":5575,"count":0},{"startOffset":5736,"endOffset":5965,"count":0}],"isBlockCoverage":true},{"functionName":"exports.list","ranges":[{"startOffset":6267,"endOffset":7792,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6365,"endOffset":7787,"count":5},{"startOffset":6611,"endOffset":6789,"count":0},{"startOffset":6930,"endOffset":6970,"count":0},{"startOffset":7283,"endOffset":7293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7520,"endOffset":7721,"count":15},{"startOffset":7568,"endOffset":7611,"count":10}],"isBlockCoverage":true},{"functionName":"Base","ranges":[{"startOffset":8106,"endOffset":9227,"count":1},{"startOffset":8197,"endOffset":8256,"count":0},{"startOffset":8283,"endOffset":8288,"count":0},{"startOffset":8453,"endOffset":8495,"count":0},{"startOffset":8533,"endOffset":8566,"count":0},{"startOffset":8568,"endOffset":8625,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8658,"endOffset":8878,"count":49},{"startOffset":8714,"endOffset":8750,"count":8},{"startOffset":8750,"endOffset":8873,"count":41},{"startOffset":8793,"endOffset":8831,"count":6},{"startOffset":8831,"endOffset":8873,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8913,"endOffset":9222,"count":5},{"startOffset":9055,"endOffset":9078,"count":0},{"startOffset":9080,"endOffset":9154,"count":0}],"isBlockCoverage":true},{"functionName":"Base.epilogue","ranges":[{"startOffset":9380,"endOffset":10031,"count":1},{"startOffset":9620,"endOffset":9624,"count":0},{"startOffset":9695,"endOffset":9813,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":10167,"endOffset":10271,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":10453,"endOffset":11038,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":11228,"endOffset":12060,"count":5}],"isBlockCoverage":true},{"functionName":"cleanUp","ranges":[{"startOffset":11298,"endOffset":11659,"count":25},{"startOffset":11349,"endOffset":11412,"count":5},{"startOffset":11412,"endOffset":11439,"count":20},{"startOffset":11439,"endOffset":11504,"count":5},{"startOffset":11504,"endOffset":11532,"count":15},{"startOffset":11532,"endOffset":11560,"count":0},{"startOffset":11560,"endOffset":11599,"count":15},{"startOffset":11599,"endOffset":11627,"count":10},{"startOffset":11627,"endOffset":11658,"count":5}],"isBlockCoverage":true},{"functionName":"notBlank","ranges":[{"startOffset":11663,"endOffset":11751,"count":25}],"isBlockCoverage":true},{"functionName":"errorDiff","ranges":[{"startOffset":12215,"endOffset":12580,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":12733,"endOffset":12885,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12808,"endOffset":12863,"count":20}],"isBlockCoverage":true},{"functionName":"sameType","ranges":[{"startOffset":13113,"endOffset":13196,"count":10}],"isBlockCoverage":true}]},{"scriptId":"91","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7996,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":182,"endOffset":233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":315,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":452,"endOffset":502,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":593,"endOffset":652,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":734,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":873,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1016,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1154,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1282,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1416,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1552,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1687,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1824,"endOffset":1878,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1961,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2091,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2223,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2367,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2517,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2663,"endOffset":2717,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2801,"endOffset":2855,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2947,"endOffset":3006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3098,"endOffset":3157,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4692,"endOffset":4789,"count":1},{"startOffset":4766,"endOffset":4786,"count":0}],"isBlockCoverage":true}]},{"scriptId":"92","url":"node:internal/source_map/source_map_cache_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3768,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":969,"endOffset":3672,"count":1}],"isBlockCoverage":false},{"functionName":"#cleanup","ranges":[{"startOffset":1407,"endOffset":1791,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2243,"endOffset":2563,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2373,"endOffset":2419,"count":50}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2671,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":3065,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3126,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38836,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":167,"endOffset":185,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":275,"endOffset":6828,"count":5},{"startOffset":492,"endOffset":496,"count":0},{"startOffset":578,"endOffset":634,"count":0},{"startOffset":1352,"endOffset":1431,"count":0},{"startOffset":1609,"endOffset":1627,"count":0},{"startOffset":1976,"endOffset":1999,"count":0},{"startOffset":2001,"endOffset":2164,"count":0},{"startOffset":6330,"endOffset":6625,"count":0},{"startOffset":6675,"endOffset":6711,"count":10},{"startOffset":6713,"endOffset":6816,"count":10},{"startOffset":6772,"endOffset":6807,"count":5}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":695,"endOffset":906,"count":5},{"startOffset":739,"endOffset":860,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":761,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"execEditLength","ranges":[{"startOffset":3558,"endOffset":5998,"count":10},{"startOffset":3743,"endOffset":5968,"count":15},{"startOffset":3996,"endOffset":4133,"count":10},{"startOffset":4189,"endOffset":4400,"count":10},{"startOffset":4439,"endOffset":4472,"count":10},{"startOffset":4497,"endOffset":4510,"count":5},{"startOffset":4512,"endOffset":4644,"count":0},{"startOffset":5031,"endOffset":5082,"count":10},{"startOffset":5041,"endOffset":5082,"count":5},{"startOffset":5084,"endOffset":5163,"count":5},{"startOffset":5163,"endOffset":5251,"count":10},{"startOffset":5383,"endOffset":5406,"count":10},{"startOffset":5408,"endOffset":5602,"count":5},{"startOffset":5602,"endOffset":5959,"count":10},{"startOffset":5704,"endOffset":5806,"count":5},{"startOffset":5846,"endOffset":5948,"count":5},{"startOffset":5968,"endOffset":5997,"count":5}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":6340,"endOffset":6614,"count":0}],"isBlockCoverage":true},{"functionName":"addToPath","ranges":[{"startOffset":6904,"endOffset":7551,"count":15},{"startOffset":7010,"endOffset":7033,"count":5},{"startOffset":7034,"endOffset":7061,"count":0},{"startOffset":7063,"endOffset":7317,"count":0}],"isBlockCoverage":true},{"functionName":"extractCommon","ranges":[{"startOffset":7631,"endOffset":8274,"count":20},{"startOffset":7910,"endOffset":7932,"count":10},{"startOffset":7933,"endOffset":7993,"count":5},{"startOffset":7995,"endOffset":8059,"count":0},{"startOffset":8084,"endOffset":8216,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":8347,"endOffset":8594,"count":10},{"startOffset":8412,"endOffset":8472,"count":0},{"startOffset":8536,"endOffset":8581,"count":0}],"isBlockCoverage":true},{"functionName":"removeEmpty","ranges":[{"startOffset":8672,"endOffset":8860,"count":10}],"isBlockCoverage":true},{"functionName":"castInput","ranges":[{"startOffset":8936,"endOffset":8987,"count":10}],"isBlockCoverage":true},{"functionName":"tokenize","ranges":[{"startOffset":9062,"endOffset":9122,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":9193,"endOffset":9248,"count":10}],"isBlockCoverage":true},{"functionName":"buildValues","ranges":[{"startOffset":9256,"endOffset":11724,"count":5},{"startOffset":9520,"endOffset":9698,"count":10},{"startOffset":9887,"endOffset":11174,"count":10},{"startOffset":9967,"endOffset":10565,"count":5},{"startOffset":9997,"endOffset":10015,"count":0},{"startOffset":10017,"endOffset":10324,"count":0},{"startOffset":10512,"endOffset":10558,"count":0},{"startOffset":10565,"endOffset":11169,"count":5},{"startOffset":11534,"endOffset":11559,"count":0},{"startOffset":11603,"endOffset":11697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10118,"endOffset":10268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1708,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":343,"endOffset":440,"count":1},{"startOffset":417,"endOffset":437,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":721,"endOffset":824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8894,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":487,"endOffset":584,"count":1},{"startOffset":561,"endOffset":581,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1606,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1881,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2581,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2959,"endOffset":3066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1776,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":183,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6377,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":483,"endOffset":580,"count":1},{"startOffset":557,"endOffset":577,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":866,"endOffset":1717,"count":10},{"startOffset":922,"endOffset":1052,"count":0},{"startOffset":1265,"endOffset":1300,"count":0},{"startOffset":1474,"endOffset":1505,"count":0},{"startOffset":1507,"endOffset":1561,"count":0},{"startOffset":1611,"endOffset":1650,"count":0}],"isBlockCoverage":true},{"functionName":"diffLines","ranges":[{"startOffset":1722,"endOffset":1822,"count":5}],"isBlockCoverage":true},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1826,"endOffset":2213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2131,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":350,"endOffset":447,"count":1},{"startOffset":424,"endOffset":444,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":749,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":823,"endOffset":931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2007,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":333,"endOffset":430,"count":1},{"startOffset":407,"endOffset":427,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":712,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":778,"endOffset":875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13100,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":463,"endOffset":560,"count":1},{"startOffset":537,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":564,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1680,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2343,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2654,"endOffset":2751,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2951,"endOffset":4520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2345,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":438,"count":1},{"startOffset":415,"endOffset":435,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":728,"endOffset":774,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":820,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":863,"endOffset":965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20288,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":472,"endOffset":569,"count":1},{"startOffset":546,"endOffset":566,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":598,"endOffset":5029,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":5097,"endOffset":5996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18075,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":173,"endOffset":4895,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4698,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":352,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51520,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":510,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":667,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":861,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1281,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1415,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1510,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1722,"endOffset":2195,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2199,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5156,"endOffset":6052,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":6056,"endOffset":6164,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":6168,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6370,"endOffset":6499,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6503,"endOffset":6710,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6714,"endOffset":9550,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9554,"endOffset":12319,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":12323,"endOffset":13060,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":13064,"endOffset":13215,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":13219,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":13452,"endOffset":13621,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13625,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":14143,"endOffset":15463,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":15467,"endOffset":15603,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15607,"endOffset":15932,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15936,"endOffset":16928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24245,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":428,"endOffset":581,"count":15},{"startOffset":494,"endOffset":518,"count":0},{"startOffset":519,"endOffset":554,"count":0},{"startOffset":555,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":585,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":779,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1199,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1333,"endOffset":1424,"count":15}],"isBlockCoverage":true},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1428,"endOffset":1611,"count":15},{"startOffset":1483,"endOffset":1502,"count":0},{"startOffset":1575,"endOffset":1596,"count":10}],"isBlockCoverage":true},{"functionName":"structuredPatch","ranges":[{"startOffset":1640,"endOffset":7075,"count":5},{"startOffset":2132,"endOffset":2151,"count":0},{"startOffset":6831,"endOffset":6918,"count":15}],"isBlockCoverage":true},{"functionName":"contextLines","ranges":[{"startOffset":2260,"endOffset":2372,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2313,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"_loop","ranges":[{"startOffset":2554,"endOffset":6786,"count":15},{"startOffset":2664,"endOffset":2711,"count":10},{"startOffset":2766,"endOffset":2784,"count":10},{"startOffset":2786,"endOffset":3949,"count":10},{"startOffset":2958,"endOffset":3292,"count":5},{"startOffset":3082,"endOffset":3283,"count":0},{"startOffset":3848,"endOffset":3942,"count":5},{"startOffset":3949,"endOffset":6781,"count":5},{"startOffset":4190,"endOffset":4781,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3698,"endOffset":3778,"count":10},{"startOffset":3748,"endOffset":3753,"count":5},{"startOffset":3754,"endOffset":3759,"count":5}],"isBlockCoverage":true},{"functionName":"formatPatch","ranges":[{"startOffset":7079,"endOffset":8210,"count":5},{"startOffset":7136,"endOffset":7188,"count":0},{"startOffset":7477,"endOffset":7500,"count":0},{"startOffset":7588,"endOffset":7611,"count":0},{"startOffset":7910,"endOffset":7945,"count":0},{"startOffset":7978,"endOffset":8013,"count":0}],"isBlockCoverage":true},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":8214,"endOffset":8433,"count":5}],"isBlockCoverage":true},{"functionName":"createPatch","ranges":[{"startOffset":8437,"endOffset":8617,"count":5}],"isBlockCoverage":true}]},{"scriptId":"107","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2058,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":217,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":342,"endOffset":578,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/reverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5618,"count":1}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":152,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":497,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":1035,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"reversePatch","ranges":[{"startOffset":1273,"endOffset":2614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2287,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":258,"endOffset":639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3401,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":191,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":648,"endOffset":833,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3186,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":447,"endOffset":829,"count":1},{"startOffset":552,"endOffset":569,"count":0},{"startOffset":571,"endOffset":601,"count":0},{"startOffset":674,"endOffset":688,"count":0},{"startOffset":710,"endOffset":828,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":963,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2209,"endOffset":2541,"count":1},{"startOffset":2281,"endOffset":2325,"count":0},{"startOffset":2345,"endOffset":2389,"count":0},{"startOffset":2409,"endOffset":2453,"count":0},{"startOffset":2517,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"fmtLong","ranges":[{"startOffset":2648,"endOffset":2999,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":3041,"endOffset":3184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19521,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":831,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1057,"endOffset":1111,"count":92}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1244,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1543,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2693,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3836,"endOffset":4244,"count":25},{"startOffset":3896,"endOffset":3927,"count":0},{"startOffset":3953,"endOffset":3979,"count":0},{"startOffset":4013,"endOffset":4041,"count":0},{"startOffset":4090,"endOffset":4126,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4889,"endOffset":5384,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":6021,"endOffset":7102,"count":10},{"startOffset":6194,"endOffset":6422,"count":0},{"startOffset":6565,"endOffset":6593,"count":0},{"startOffset":6595,"endOffset":6759,"count":0},{"startOffset":6814,"endOffset":7101,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6635,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":7274,"endOffset":9395,"count":10},{"startOffset":7422,"endOffset":7446,"count":0},{"startOffset":7514,"endOffset":7519,"count":0},{"startOffset":7520,"endOffset":7525,"count":0},{"startOffset":7562,"endOffset":7567,"count":0},{"startOffset":7568,"endOffset":7573,"count":0},{"startOffset":7637,"endOffset":7652,"count":0},{"startOffset":7660,"endOffset":7688,"count":0},{"startOffset":8960,"endOffset":9379,"count":0},{"startOffset":9380,"endOffset":9385,"count":0}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":7720,"endOffset":7782,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7788,"endOffset":8932,"count":10},{"startOffset":7857,"endOffset":7869,"count":0},{"startOffset":7877,"endOffset":7942,"count":0},{"startOffset":7950,"endOffset":7963,"count":0},{"startOffset":7971,"endOffset":8055,"count":0},{"startOffset":8063,"endOffset":8078,"count":0},{"startOffset":8086,"endOffset":8100,"count":0},{"startOffset":8108,"endOffset":8122,"count":0},{"startOffset":8181,"endOffset":8205,"count":0},{"startOffset":8227,"endOffset":8233,"count":0},{"startOffset":8288,"endOffset":8355,"count":0},{"startOffset":8363,"endOffset":8511,"count":0},{"startOffset":8519,"endOffset":8751,"count":0},{"startOffset":8759,"endOffset":8893,"count":0}],"isBlockCoverage":true},{"functionName":"canonicalize","ranges":[{"startOffset":10318,"endOffset":12162,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":12544,"endOffset":13931,"count":1},{"startOffset":12660,"endOffset":12677,"count":0},{"startOffset":12772,"endOffset":12921,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12927,"endOffset":13141,"count":15}],"isBlockCoverage":true},{"functionName":"isNodeInternal","ranges":[{"startOffset":13147,"endOffset":13440,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13453,"endOffset":13927,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13532,"endOffset":13884,"count":15},{"startOffset":13590,"endOffset":13622,"count":0},{"startOffset":13669,"endOffset":13701,"count":0},{"startOffset":13775,"endOffset":13831,"count":10}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":14084,"endOffset":14227,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":14474,"endOffset":14564,"count":87}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":14623,"endOffset":14637,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":15559,"endOffset":15699,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":16203,"endOffset":16421,"count":5},{"startOffset":16288,"endOffset":16369,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":16554,"endOffset":16598,"count":4}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":16756,"endOffset":16817,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":17335,"endOffset":17652,"count":5},{"startOffset":17391,"endOffset":17413,"count":0},{"startOffset":17437,"endOffset":17463,"count":0},{"startOffset":17557,"endOffset":17586,"count":0},{"startOffset":17630,"endOffset":17651,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":18019,"endOffset":18149,"count":87},{"startOffset":18075,"endOffset":18132,"count":1827}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":18181,"endOffset":18338,"count":87}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18281,"endOffset":18313,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":18484,"endOffset":18562,"count":0}],"isBlockCoverage":false},{"functionName":"exports.breakCircularDeps","ranges":[{"startOffset":18749,"endOffset":19366,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isNumeric","ranges":[{"startOffset":19468,"endOffset":19518,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":101228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62,"endOffset":101218,"count":1},{"startOffset":513,"endOffset":548,"count":0},{"startOffset":100772,"endOffset":100807,"count":0},{"startOffset":100808,"endOffset":100824,"count":0},{"startOffset":100829,"endOffset":100879,"count":0},{"startOffset":101024,"endOffset":101152,"count":0},{"startOffset":101156,"endOffset":101213,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92412,"endOffset":92501,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92522,"endOffset":92708,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92726,"endOffset":93089,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93188,"endOffset":94167,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94189,"endOffset":94276,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94298,"endOffset":94357,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94380,"endOffset":94446,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94548,"endOffset":97652,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97898,"endOffset":100079,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":100239,"endOffset":100413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100841,"endOffset":100873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3217,"count":1},{"startOffset":265,"endOffset":291,"count":0},{"startOffset":398,"endOffset":424,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":428,"endOffset":704,"count":2},{"startOffset":483,"endOffset":701,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":708,"endOffset":877,"count":2},{"startOffset":760,"endOffset":782,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":881,"endOffset":2865,"count":2},{"startOffset":1039,"endOffset":1082,"count":0},{"startOffset":1134,"endOffset":1152,"count":0},{"startOffset":1180,"endOffset":1198,"count":0},{"startOffset":1313,"endOffset":1333,"count":0},{"startOffset":1365,"endOffset":1385,"count":0},{"startOffset":1425,"endOffset":1452,"count":0},{"startOffset":1454,"endOffset":1472,"count":0},{"startOffset":1535,"endOffset":1555,"count":0},{"startOffset":1933,"endOffset":1936,"count":0},{"startOffset":1942,"endOffset":2864,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2085,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2869,"endOffset":3054,"count":2}],"isBlockCoverage":true}]},{"scriptId":"115","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9872,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2060,"endOffset":2315,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2120,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2714,"endOffset":2727,"count":7}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2780,"endOffset":2790,"count":2}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2846,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2913,"endOffset":2926,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2976,"endOffset":3007,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3042,"endOffset":3060,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3096,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3152,"endOffset":3172,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3206,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3260,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3315,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3374,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3434,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3487,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3651,"endOffset":3754,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4051,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4535,"endOffset":4579,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4607,"endOffset":4625,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4662,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4746,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4805,"endOffset":5201,"count":1},{"startOffset":4880,"endOffset":4910,"count":0},{"startOffset":4911,"endOffset":4983,"count":0},{"startOffset":5046,"endOffset":5078,"count":0},{"startOffset":5080,"endOffset":5137,"count":0},{"startOffset":5162,"endOffset":5197,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5231,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5287,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5370,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5479,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5741,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6953,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7765,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8131,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8717,"endOffset":8954,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1585,"endOffset":1694,"count":30}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1698,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2342,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2570,"endOffset":3567,"count":2},{"startOffset":2641,"endOffset":2668,"count":0},{"startOffset":2707,"endOffset":2736,"count":0},{"startOffset":2822,"endOffset":2869,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3869,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4370,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4551,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4737,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4922,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5101,"endOffset":5153,"count":1}],"isBlockCoverage":true}]},{"scriptId":"117","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73397,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1688,"endOffset":1715,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4376,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4873,"endOffset":5111,"count":57},{"startOffset":4954,"endOffset":5004,"count":0},{"startOffset":5040,"endOffset":5091,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":5115,"endOffset":5514,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5520,"endOffset":5661,"count":233},{"startOffset":5616,"endOffset":5635,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5667,"endOffset":5752,"count":58},{"startOffset":5724,"endOffset":5748,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5965,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6309,"endOffset":6726,"count":58},{"startOffset":6543,"endOffset":6611,"count":0},{"startOffset":6636,"endOffset":6683,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6730,"endOffset":6807,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6811,"endOffset":6930,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6934,"endOffset":7039,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":7043,"endOffset":7238,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7744,"endOffset":8503,"count":115},{"startOffset":7815,"endOffset":7900,"count":0},{"startOffset":7981,"endOffset":7997,"count":57},{"startOffset":7999,"endOffset":8055,"count":57},{"startOffset":8055,"endOffset":8312,"count":58},{"startOffset":8083,"endOffset":8141,"count":0},{"startOffset":8236,"endOffset":8266,"count":1},{"startOffset":8268,"endOffset":8307,"count":1},{"startOffset":8390,"endOffset":8412,"count":58},{"startOffset":8412,"endOffset":8446,"count":57}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8579,"endOffset":9204,"count":175},{"startOffset":8751,"endOffset":9201,"count":117},{"startOffset":8946,"endOffset":9196,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":9208,"endOffset":9560,"count":115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9329,"endOffset":9550,"count":115},{"startOffset":9434,"endOffset":9543,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9820,"endOffset":14840,"count":117},{"startOffset":9881,"endOffset":9908,"count":0},{"startOffset":9937,"endOffset":10072,"count":0},{"startOffset":10142,"endOffset":10398,"count":0},{"startOffset":10461,"endOffset":10665,"count":0},{"startOffset":11246,"endOffset":11272,"count":0},{"startOffset":11691,"endOffset":11802,"count":59},{"startOffset":11802,"endOffset":13086,"count":58},{"startOffset":11838,"endOffset":13086,"count":0},{"startOffset":13176,"endOffset":13254,"count":0},{"startOffset":13255,"endOffset":13302,"count":0},{"startOffset":13304,"endOffset":13527,"count":0},{"startOffset":14047,"endOffset":14076,"count":59},{"startOffset":14078,"endOffset":14352,"count":59},{"startOffset":14112,"endOffset":14286,"count":0},{"startOffset":14318,"endOffset":14347,"count":57},{"startOffset":14378,"endOffset":14432,"count":0},{"startOffset":14618,"endOffset":14837,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":15018,"endOffset":15153,"count":511},{"startOffset":15123,"endOffset":15145,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":15278,"endOffset":15923,"count":115},{"startOffset":15397,"endOffset":15501,"count":0},{"startOffset":15531,"endOffset":15543,"count":0},{"startOffset":15832,"endOffset":15844,"count":0},{"startOffset":15873,"endOffset":15920,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15473,"endOffset":15494,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15928,"endOffset":16080,"count":115}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":16292,"endOffset":16820,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16907,"endOffset":17426,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":17463,"endOffset":17855,"count":58},{"startOffset":17591,"endOffset":17597,"count":0},{"startOffset":17633,"endOffset":17690,"count":0},{"startOffset":17757,"endOffset":17834,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17894,"endOffset":18526,"count":1},{"startOffset":18039,"endOffset":18151,"count":0},{"startOffset":18189,"endOffset":18213,"count":0},{"startOffset":18254,"endOffset":18351,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.address","ranges":[{"startOffset":18560,"endOffset":18606,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18697,"endOffset":18743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18828,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19004,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19425,"endOffset":19509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19602,"endOffset":19649,"count":86}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":19661,"endOffset":19918,"count":115},{"startOffset":19867,"endOffset":19915,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":20013,"endOffset":20345,"count":258},{"startOffset":20165,"endOffset":20181,"count":200},{"startOffset":20183,"endOffset":20278,"count":58},{"startOffset":20278,"endOffset":20342,"count":200},{"startOffset":20311,"endOffset":20342,"count":115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20252,"endOffset":20271,"count":58}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":20375,"endOffset":20535,"count":115}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":20575,"endOffset":20939,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20969,"endOffset":21296,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":21329,"endOffset":21519,"count":258},{"startOffset":21363,"endOffset":21382,"count":0},{"startOffset":21383,"endOffset":21398,"count":0},{"startOffset":21399,"endOffset":21430,"count":0},{"startOffset":21432,"endOffset":21463,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":21550,"endOffset":21742,"count":375},{"startOffset":21585,"endOffset":21604,"count":0},{"startOffset":21605,"endOffset":21620,"count":0},{"startOffset":21621,"endOffset":21652,"count":0},{"startOffset":21654,"endOffset":21685,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21793,"endOffset":21896,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21933,"endOffset":22088,"count":114},{"startOffset":22022,"endOffset":22037,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._destroy","ranges":[{"startOffset":22123,"endOffset":23689,"count":115},{"startOffset":22433,"endOffset":22439,"count":0},{"startOffset":22664,"endOffset":22917,"count":0},{"startOffset":22958,"endOffset":23198,"count":0},{"startOffset":23427,"endOffset":23501,"count":0},{"startOffset":23525,"endOffset":23686,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22741,"endOffset":22829,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23141,"endOffset":23189,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23720,"endOffset":23823,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23860,"endOffset":24167,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":24172,"endOffset":24361,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":24390,"endOffset":24483,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":24518,"endOffset":24586,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":24620,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24718,"endOffset":24780,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24820,"endOffset":25105,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":25140,"endOffset":25207,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":25240,"endOffset":25301,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":25334,"endOffset":25399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":25442,"endOffset":25491,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":25529,"endOffset":26475,"count":308},{"startOffset":25755,"endOffset":26111,"count":57},{"startOffset":26111,"endOffset":26196,"count":251},{"startOffset":26196,"endOffset":26255,"count":0},{"startOffset":26255,"endOffset":26315,"count":251},{"startOffset":26315,"endOffset":26351,"count":86},{"startOffset":26351,"endOffset":26410,"count":165},{"startOffset":26410,"endOffset":26434,"count":251},{"startOffset":26434,"endOffset":26472,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":25853,"endOffset":25970,"count":57}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":25978,"endOffset":26059,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":26509,"endOffset":26579,"count":86}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":26612,"endOffset":26695,"count":165}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26893,"endOffset":26999,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":27033,"endOffset":27996,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":28004,"endOffset":28821,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28827,"endOffset":31100,"count":58},{"startOffset":29091,"endOffset":29719,"count":0},{"startOffset":29958,"endOffset":29965,"count":0},{"startOffset":29997,"endOffset":30070,"count":0},{"startOffset":30386,"endOffset":30452,"count":0},{"startOffset":30457,"endOffset":30622,"count":0},{"startOffset":30637,"endOffset":30899,"count":0},{"startOffset":30973,"endOffset":31097,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":31106,"endOffset":34426,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":34457,"endOffset":36098,"count":58},{"startOffset":34874,"endOffset":34925,"count":0},{"startOffset":35011,"endOffset":35048,"count":57},{"startOffset":35145,"endOffset":35157,"count":0},{"startOffset":35159,"endOffset":35183,"count":0},{"startOffset":35271,"endOffset":35294,"count":0},{"startOffset":35301,"endOffset":35357,"count":0},{"startOffset":35411,"endOffset":35447,"count":0},{"startOffset":35473,"endOffset":35561,"count":0},{"startOffset":35698,"endOffset":35737,"count":0},{"startOffset":35880,"endOffset":36029,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":36143,"endOffset":36304,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":36309,"endOffset":36464,"count":1},{"startOffset":36372,"endOffset":36401,"count":0},{"startOffset":36407,"endOffset":36436,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":36468,"endOffset":40527,"count":58},{"startOffset":36588,"endOffset":36602,"count":0},{"startOffset":36703,"endOffset":36725,"count":0},{"startOffset":36727,"endOffset":36786,"count":0},{"startOffset":36807,"endOffset":36866,"count":0},{"startOffset":36941,"endOffset":36968,"count":57},{"startOffset":36970,"endOffset":37099,"count":0},{"startOffset":37181,"endOffset":37255,"count":0},{"startOffset":37366,"endOffset":37570,"count":0},{"startOffset":37766,"endOffset":38081,"count":57},{"startOffset":38081,"endOffset":38120,"count":1},{"startOffset":38120,"endOffset":38171,"count":0},{"startOffset":38171,"endOffset":38321,"count":1},{"startOffset":38349,"endOffset":38379,"count":0},{"startOffset":38380,"endOffset":38410,"count":0},{"startOffset":38411,"endOffset":38440,"count":0},{"startOffset":38442,"endOffset":38485,"count":0},{"startOffset":38485,"endOffset":38637,"count":1},{"startOffset":38669,"endOffset":38692,"count":1},{"startOffset":38693,"endOffset":38709,"count":1},{"startOffset":38710,"endOffset":38729,"count":1},{"startOffset":38731,"endOffset":39145,"count":1},{"startOffset":39145,"endOffset":40526,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37841,"endOffset":38061,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38853,"endOffset":39123,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39201,"endOffset":40522,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":40531,"endOffset":44700,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":40722,"endOffset":44695,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":40773,"endOffset":44688,"count":1},{"startOffset":41003,"endOffset":41030,"count":0},{"startOffset":41045,"endOffset":41427,"count":0},{"startOffset":42063,"endOffset":42094,"count":0},{"startOffset":42139,"endOffset":42159,"count":0},{"startOffset":42210,"endOffset":42226,"count":0},{"startOffset":42693,"endOffset":42721,"count":0},{"startOffset":42723,"endOffset":43303,"count":0},{"startOffset":43634,"endOffset":43710,"count":0},{"startOffset":44213,"endOffset":44687,"count":0}],"isBlockCoverage":true},{"functionName":"connectErrorNT","ranges":[{"startOffset":44704,"endOffset":44765,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":44794,"endOffset":44992,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":45024,"endOffset":45228,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":45235,"endOffset":46983,"count":58},{"startOffset":45409,"endOffset":45428,"count":0},{"startOffset":45603,"endOffset":45655,"count":0},{"startOffset":45693,"endOffset":45720,"count":0},{"startOffset":45881,"endOffset":45909,"count":0},{"startOffset":45911,"endOffset":45992,"count":0},{"startOffset":46271,"endOffset":46292,"count":0},{"startOffset":46294,"endOffset":46354,"count":0},{"startOffset":46359,"endOffset":46980,"count":0}],"isBlockCoverage":true},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46987,"endOffset":47414,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":47418,"endOffset":47957,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47961,"endOffset":49318,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":49322,"endOffset":49830,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":49834,"endOffset":50279,"count":57},{"startOffset":49944,"endOffset":50276,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":50055,"endOffset":50086,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":50283,"endOffset":52194,"count":57},{"startOffset":50369,"endOffset":50416,"count":0},{"startOffset":50487,"endOffset":50605,"count":0},{"startOffset":50749,"endOffset":50807,"count":0},{"startOffset":50812,"endOffset":50891,"count":0},{"startOffset":50953,"endOffset":51156,"count":0},{"startOffset":51210,"endOffset":51405,"count":0},{"startOffset":51643,"endOffset":51651,"count":0},{"startOffset":51972,"endOffset":52191,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":52310,"endOffset":52375,"count":114},{"startOffset":52365,"endOffset":52372,"count":0}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":52446,"endOffset":53990,"count":57},{"startOffset":52668,"endOffset":52678,"count":0},{"startOffset":52680,"endOffset":53005,"count":0},{"startOffset":53027,"endOffset":53048,"count":0},{"startOffset":53050,"endOffset":53308,"count":0},{"startOffset":53401,"endOffset":53408,"count":0},{"startOffset":53409,"endOffset":53417,"count":0},{"startOffset":53451,"endOffset":53459,"count":0},{"startOffset":53481,"endOffset":53755,"count":0},{"startOffset":53841,"endOffset":53903,"count":0},{"startOffset":53923,"endOffset":53967,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":53994,"endOffset":56771,"count":57},{"startOffset":54304,"endOffset":54366,"count":0},{"startOffset":54687,"endOffset":54783,"count":0},{"startOffset":54904,"endOffset":54969,"count":0},{"startOffset":55007,"endOffset":55285,"count":0},{"startOffset":55733,"endOffset":56226,"count":0},{"startOffset":56268,"endOffset":56331,"count":0},{"startOffset":56568,"endOffset":56581,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":56842,"endOffset":56906,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":56912,"endOffset":57031,"count":57}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":57037,"endOffset":58667,"count":57},{"startOffset":57226,"endOffset":57255,"count":1},{"startOffset":57283,"endOffset":57295,"count":0},{"startOffset":57547,"endOffset":58666,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":57878,"endOffset":58664,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":58699,"endOffset":63257,"count":57},{"startOffset":58846,"endOffset":58896,"count":0},{"startOffset":58938,"endOffset":59012,"count":0},{"startOffset":59035,"endOffset":59074,"count":0},{"startOffset":59196,"endOffset":59206,"count":0},{"startOffset":59241,"endOffset":59251,"count":0},{"startOffset":59560,"endOffset":59745,"count":0},{"startOffset":59898,"endOffset":59916,"count":0},{"startOffset":59918,"endOffset":60017,"count":0},{"startOffset":60382,"endOffset":60402,"count":0},{"startOffset":60437,"endOffset":60466,"count":0},{"startOffset":60695,"endOffset":60730,"count":0},{"startOffset":60871,"endOffset":60912,"count":0},{"startOffset":60984,"endOffset":61112,"count":0},{"startOffset":61399,"endOffset":61571,"count":0},{"startOffset":61573,"endOffset":63049,"count":0},{"startOffset":63052,"endOffset":63256,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6LinkLocal","ranges":[{"startOffset":63262,"endOffset":63915,"count":0}],"isBlockCoverage":false},{"functionName":"filterOnlyValidAddress","ranges":[{"startOffset":63919,"endOffset":64214,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":64218,"endOffset":64858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":64944,"endOffset":64989,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":65070,"endOffset":65360,"count":114},{"startOffset":65102,"endOffset":65115,"count":57},{"startOffset":65117,"endOffset":65281,"count":57},{"startOffset":65202,"endOffset":65259,"count":0},{"startOffset":65281,"endOffset":65341,"count":57},{"startOffset":65307,"endOffset":65341,"count":0},{"startOffset":65341,"endOffset":65359,"count":57}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":65365,"endOffset":67698,"count":57},{"startOffset":65512,"endOffset":65591,"count":0},{"startOffset":65629,"endOffset":65672,"count":0},{"startOffset":65674,"endOffset":66469,"count":0},{"startOffset":66492,"endOffset":66541,"count":0},{"startOffset":66543,"endOffset":66828,"count":0},{"startOffset":67261,"endOffset":67289,"count":0},{"startOffset":67291,"endOffset":67467,"count":0},{"startOffset":67627,"endOffset":67695,"count":0}],"isBlockCoverage":true},{"functionName":"Server.getConnections","ranges":[{"startOffset":67855,"endOffset":68643,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":68675,"endOffset":69603,"count":57},{"startOffset":68773,"endOffset":68880,"count":0},{"startOffset":69043,"endOffset":69537,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":68801,"endOffset":68871,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":69110,"endOffset":69224,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":69647,"endOffset":69772,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":69816,"endOffset":70215,"count":114},{"startOffset":69891,"endOffset":69911,"count":57},{"startOffset":69913,"endOffset":70214,"count":57}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":70222,"endOffset":70308,"count":57}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":70370,"endOffset":70542,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":70771,"endOffset":70807,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":70812,"endOffset":70853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":70938,"endOffset":70969,"count":3580}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":70974,"endOffset":71010,"count":232}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":71052,"endOffset":71300,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":71328,"endOffset":71433,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":71463,"endOffset":71569,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":71719,"endOffset":72408,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":72449,"endOffset":72697,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":72833,"endOffset":72938,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":72943,"endOffset":73068,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5247,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2619,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3301,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4521,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4659,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4801,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":5033,"endOffset":5244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10576,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1013,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1620,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4875,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5032,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5373,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5524,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5909,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6469,"endOffset":6586,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6593,"endOffset":8081,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8085,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8534,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8739,"endOffset":9072,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9076,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9650,"endOffset":10347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15785,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1828,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2111,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2488,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":3277,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":3549,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":4269,"endOffset":4683,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":4957,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":5529,"endOffset":5615,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":5653,"endOffset":5735,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":5741,"endOffset":5862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5868,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":6085,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":6332,"endOffset":6620,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":6713,"endOffset":8792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8798,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9586,"endOffset":9946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9952,"endOffset":10582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10588,"endOffset":10852,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10858,"endOffset":11321,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":11328,"endOffset":11430,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":11476,"endOffset":11484,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":11871,"endOffset":13180,"count":0}],"isBlockCoverage":false},{"functionName":"runAbort","ranges":[{"startOffset":13237,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13396,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":14260,"endOffset":14476,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":14553,"endOffset":14644,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":14745,"endOffset":15313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8811,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":930,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1043,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1056,"endOffset":7320,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7324,"endOffset":8264,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8268,"endOffset":8747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5768,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":619,"endOffset":5765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12932,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1104,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1555,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1893,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2192,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2349,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3453,"endOffset":4078,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4082,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4181,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10999,"endOffset":12882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7716,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":520,"endOffset":843,"count":458},{"startOffset":565,"endOffset":840,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":957,"endOffset":1873,"count":286},{"startOffset":1130,"endOffset":1134,"count":114},{"startOffset":1154,"endOffset":1187,"count":172},{"startOffset":1189,"endOffset":1234,"count":229},{"startOffset":1240,"endOffset":1323,"count":57},{"startOffset":1277,"endOffset":1298,"count":0},{"startOffset":1323,"endOffset":1515,"count":229},{"startOffset":1515,"endOffset":1551,"count":115},{"startOffset":1551,"endOffset":1699,"count":229},{"startOffset":1699,"endOffset":1810,"count":0},{"startOffset":1810,"endOffset":1872,"count":229}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1726,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1877,"endOffset":2537,"count":229},{"startOffset":2495,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1940,"endOffset":2436,"count":229},{"startOffset":1983,"endOffset":2006,"count":0},{"startOffset":2145,"endOffset":2182,"count":115},{"startOffset":2270,"endOffset":2294,"count":0},{"startOffset":2311,"endOffset":2373,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2541,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2635,"endOffset":2972,"count":229},{"startOffset":2744,"endOffset":2783,"count":115},{"startOffset":2852,"endOffset":2885,"count":115},{"startOffset":2938,"endOffset":2969,"count":114}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2976,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3346,"endOffset":4065,"count":175}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4069,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5250,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5693,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6473,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6575,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6641,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6802,"endOffset":7615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6732,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2378,"endOffset":4414,"count":117},{"startOffset":2444,"endOffset":2471,"count":0},{"startOffset":3184,"endOffset":3324,"count":0},{"startOffset":3364,"endOffset":3544,"count":0},{"startOffset":3599,"endOffset":3625,"count":0},{"startOffset":3681,"endOffset":3709,"count":0},{"startOffset":3766,"endOffset":3796,"count":0},{"startOffset":3854,"endOffset":3886,"count":0},{"startOffset":3942,"endOffset":3970,"count":0},{"startOffset":4030,"endOffset":4066,"count":0},{"startOffset":4101,"endOffset":4138,"count":0},{"startOffset":4143,"endOffset":4187,"count":0},{"startOffset":4255,"endOffset":4411,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4290,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5586,"endOffset":5804,"count":545},{"startOffset":5686,"endOffset":5719,"count":0},{"startOffset":5764,"endOffset":5796,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5811,"endOffset":6079,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6160,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6349,"endOffset":6471,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6491,"endOffset":6582,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6619,"endOffset":6729,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":459}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53046,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1934,"endOffset":1961,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2965,"endOffset":2973,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3899,"endOffset":4130,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3977,"endOffset":4021,"count":2096}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4028,"endOffset":4120,"count":1543},{"startOffset":4059,"endOffset":4079,"count":289},{"startOffset":4079,"endOffset":4113,"count":1254}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6349,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6446,"endOffset":6619,"count":175},{"startOffset":6477,"endOffset":6560,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6702,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6809,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7121,"endOffset":7211,"count":86},{"startOffset":7175,"endOffset":7196,"count":57},{"startOffset":7197,"endOffset":7203,"count":29}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7218,"endOffset":7391,"count":57},{"startOffset":7332,"endOffset":7384,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7467,"endOffset":7559,"count":29},{"startOffset":7522,"endOffset":7544,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7566,"endOffset":7742,"count":57},{"startOffset":7682,"endOffset":7735,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7817,"endOffset":7922,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7929,"endOffset":8205,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8223,"endOffset":10239,"count":231},{"startOffset":8621,"endOffset":8649,"count":0},{"startOffset":8668,"endOffset":8698,"count":117},{"startOffset":8705,"endOffset":8733,"count":0},{"startOffset":8986,"endOffset":9023,"count":0},{"startOffset":9222,"endOffset":9250,"count":117},{"startOffset":9376,"endOffset":9406,"count":0},{"startOffset":9691,"endOffset":9720,"count":0},{"startOffset":9721,"endOffset":9751,"count":0},{"startOffset":9802,"endOffset":9965,"count":0},{"startOffset":10134,"endOffset":10236,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10285,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10411,"endOffset":11487,"count":114},{"startOffset":10481,"endOffset":10510,"count":0},{"startOffset":11021,"endOffset":11047,"count":0},{"startOffset":11105,"endOffset":11137,"count":0},{"startOffset":11197,"endOffset":11233,"count":0},{"startOffset":11268,"endOffset":11305,"count":0},{"startOffset":11378,"endOffset":11484,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11413,"endOffset":11477,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11628,"endOffset":11662,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11715,"endOffset":11755,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11801,"endOffset":12064,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12299,"endOffset":12575,"count":286},{"startOffset":12504,"endOffset":12571,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12674,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12954,"endOffset":14043,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14047,"endOffset":14296,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14300,"endOffset":14642,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14646,"endOffset":16079,"count":286},{"startOffset":14741,"endOffset":14831,"count":115},{"startOffset":14831,"endOffset":14868,"count":171},{"startOffset":14868,"endOffset":15029,"count":0},{"startOffset":15029,"endOffset":15391,"count":171},{"startOffset":15090,"endOffset":15391,"count":0},{"startOffset":15391,"endOffset":15428,"count":171},{"startOffset":15430,"endOffset":15538,"count":0},{"startOffset":15538,"endOffset":15580,"count":171},{"startOffset":15580,"endOffset":15667,"count":0},{"startOffset":15667,"endOffset":15726,"count":171},{"startOffset":15726,"endOffset":15751,"count":0},{"startOffset":15751,"endOffset":15825,"count":171},{"startOffset":15825,"endOffset":15837,"count":57},{"startOffset":15839,"endOffset":16002,"count":57},{"startOffset":15918,"endOffset":15997,"count":0},{"startOffset":16002,"endOffset":16078,"count":171}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16083,"endOffset":16704,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16708,"endOffset":17044,"count":171},{"startOffset":17018,"endOffset":17039,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":17048,"endOffset":18021,"count":171},{"startOffset":17195,"endOffset":17216,"count":85},{"startOffset":17218,"endOffset":17544,"count":85},{"startOffset":17367,"endOffset":17415,"count":0},{"startOffset":17544,"endOffset":17985,"count":86},{"startOffset":17641,"endOffset":17644,"count":0},{"startOffset":17682,"endOffset":17854,"count":0},{"startOffset":17959,"endOffset":17980,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18055,"endOffset":18213,"count":58}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18280,"endOffset":18870,"count":57},{"startOffset":18662,"endOffset":18705,"count":0},{"startOffset":18790,"endOffset":18817,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18935,"endOffset":19301,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19418,"endOffset":19913,"count":875},{"startOffset":19467,"endOffset":19524,"count":417},{"startOffset":19490,"endOffset":19523,"count":331},{"startOffset":19531,"endOffset":19540,"count":645},{"startOffset":19540,"endOffset":19590,"count":230},{"startOffset":19590,"endOffset":19599,"count":0},{"startOffset":19599,"endOffset":19808,"count":230},{"startOffset":19731,"endOffset":19777,"count":86},{"startOffset":19777,"endOffset":19808,"count":144},{"startOffset":19808,"endOffset":19905,"count":0},{"startOffset":19906,"endOffset":19909,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":20013,"endOffset":24827,"count":875},{"startOffset":20201,"endOffset":20221,"count":417},{"startOffset":20221,"endOffset":20290,"count":458},{"startOffset":20252,"endOffset":20290,"count":0},{"startOffset":20461,"endOffset":20510,"count":0},{"startOffset":20534,"endOffset":20569,"count":417},{"startOffset":20760,"endOffset":20807,"count":458},{"startOffset":20808,"endOffset":20964,"count":143},{"startOffset":20893,"endOffset":20920,"count":0},{"startOffset":20966,"endOffset":21150,"count":0},{"startOffset":21264,"endOffset":21297,"count":789},{"startOffset":21299,"endOffset":21378,"count":358},{"startOffset":21337,"endOffset":21355,"count":301},{"startOffset":21378,"endOffset":22702,"count":517},{"startOffset":22702,"endOffset":22743,"count":115},{"startOffset":22745,"endOffset":23138,"count":517},{"startOffset":23138,"endOffset":23219,"count":288},{"startOffset":23219,"endOffset":23862,"count":229},{"startOffset":23412,"endOffset":23443,"count":200},{"startOffset":23538,"endOffset":23592,"count":0},{"startOffset":23825,"endOffset":23857,"count":0},{"startOffset":23862,"endOffset":23896,"count":517},{"startOffset":23896,"endOffset":23921,"count":86},{"startOffset":23921,"endOffset":23946,"count":431},{"startOffset":23946,"endOffset":23970,"count":517},{"startOffset":23970,"endOffset":24067,"count":431},{"startOffset":24046,"endOffset":24049,"count":0},{"startOffset":24067,"endOffset":24256,"count":86},{"startOffset":24150,"endOffset":24198,"count":0},{"startOffset":24256,"endOffset":24286,"count":517},{"startOffset":24286,"endOffset":24653,"count":488},{"startOffset":24457,"endOffset":24488,"count":431},{"startOffset":24588,"endOffset":24621,"count":230},{"startOffset":24630,"endOffset":24648,"count":57},{"startOffset":24653,"endOffset":24676,"count":517},{"startOffset":24676,"endOffset":24734,"count":86},{"startOffset":24736,"endOffset":24807,"count":86},{"startOffset":24807,"endOffset":24826,"count":517}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24832,"endOffset":25812,"count":115},{"startOffset":24932,"endOffset":24939,"count":0},{"startOffset":24992,"endOffset":25014,"count":57},{"startOffset":25015,"endOffset":25021,"count":58},{"startOffset":25039,"endOffset":25224,"count":57},{"startOffset":25099,"endOffset":25219,"count":0},{"startOffset":25293,"endOffset":25500,"count":85},{"startOffset":25500,"endOffset":25809,"count":30}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":26018,"endOffset":26358,"count":85}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":26362,"endOffset":27052,"count":115},{"startOffset":26968,"endOffset":27011,"count":0},{"startOffset":27012,"endOffset":27027,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":27411,"endOffset":27623,"count":171},{"startOffset":27524,"endOffset":27620,"count":85}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27627,"endOffset":29491,"count":85},{"startOffset":29195,"endOffset":29265,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":29768,"endOffset":29836,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29867,"endOffset":34535,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34540,"endOffset":35237,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35271,"endOffset":36003,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":36133,"endOffset":37171,"count":2343},{"startOffset":36269,"endOffset":36709,"count":315},{"startOffset":36503,"endOffset":36523,"count":0},{"startOffset":36709,"endOffset":37151,"count":2028},{"startOffset":36738,"endOffset":37151,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37269,"endOffset":37995,"count":882},{"startOffset":37475,"endOffset":37869,"count":0},{"startOffset":37893,"endOffset":37928,"count":86},{"startOffset":37930,"endOffset":37975,"count":86}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38101,"endOffset":38710,"count":28},{"startOffset":38296,"endOffset":38690,"count":0}],"isBlockCoverage":true},{"functionName":"updateReadableListening","ranges":[{"startOffset":38715,"endOffset":39437,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39441,"endOffset":39532,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39690,"endOffset":40213,"count":486},{"startOffset":39782,"endOffset":40132,"count":229},{"startOffset":40052,"endOffset":40101,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":40218,"endOffset":40396,"count":229}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":40400,"endOffset":40725,"count":229},{"startOffset":40529,"endOffset":40556,"count":172},{"startOffset":40707,"endOffset":40722,"count":85}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":40756,"endOffset":41079,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":41084,"endOffset":41239,"count":344},{"startOffset":41209,"endOffset":41234,"count":417},{"startOffset":41235,"endOffset":41236,"count":86}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":41428,"endOffset":42496,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42543,"endOffset":42597,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42632,"endOffset":42780,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42785,"endOffset":43042,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43046,"endOffset":44170,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44397,"endOffset":44794,"count":345},{"startOffset":44742,"endOffset":44760,"count":288},{"startOffset":44761,"endOffset":44786,"count":288}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":44801,"endOffset":44936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45024,"endOffset":45090,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45178,"endOffset":45392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45486,"endOffset":45554,"count":114}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45641,"endOffset":45703,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45791,"endOffset":45853,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45865,"endOffset":45978,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46060,"endOffset":46116,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46202,"endOffset":46292,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46376,"endOffset":46463,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46538,"endOffset":46624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46674,"endOffset":46760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46837,"endOffset":46926,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46933,"endOffset":47232,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47313,"endOffset":47403,"count":199},{"startOffset":47388,"endOffset":47395,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47553,"endOffset":47600,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47686,"endOffset":47746,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47753,"endOffset":47921,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48238,"endOffset":50788,"count":86},{"startOffset":48324,"endOffset":48336,"count":0},{"startOffset":48487,"endOffset":48538,"count":0},{"startOffset":48658,"endOffset":48773,"count":57},{"startOffset":48773,"endOffset":49149,"count":29},{"startOffset":48800,"endOffset":48838,"count":0},{"startOffset":48922,"endOffset":49149,"count":0},{"startOffset":49154,"endOffset":50549,"count":0},{"startOffset":50636,"endOffset":50768,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":50792,"endOffset":51026,"count":358}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":51030,"endOffset":51949,"count":358},{"startOffset":51220,"endOffset":51241,"count":115},{"startOffset":51243,"endOffset":51946,"count":115},{"startOffset":51332,"endOffset":51365,"count":1},{"startOffset":51367,"endOffset":51423,"count":1},{"startOffset":51423,"endOffset":51941,"count":114},{"startOffset":51659,"endOffset":51869,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":51953,"endOffset":52119,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":52139,"endOffset":52210,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52280,"endOffset":52448,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52471,"endOffset":52609,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52631,"endOffset":52769,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52790,"endOffset":53043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":588,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":789,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1153,"endOffset":1791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1491,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":409,"endOffset":579,"count":348},{"startOffset":508,"endOffset":531,"count":114},{"startOffset":532,"endOffset":575,"count":234},{"startOffset":569,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":583,"endOffset":715,"count":232},{"startOffset":651,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":719,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":941,"endOffset":1386,"count":348},{"startOffset":1090,"endOffset":1308,"count":230},{"startOffset":1135,"endOffset":1275,"count":0},{"startOffset":1308,"endOffset":1385,"count":118}],"isBlockCoverage":true}]},{"scriptId":"130","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":86},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":86}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":86},{"startOffset":3307,"endOffset":3318,"count":0},{"startOffset":3356,"endOffset":3509,"count":0},{"startOffset":3540,"endOffset":3596,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":86},{"startOffset":3998,"endOffset":4020,"count":0},{"startOffset":4075,"endOffset":4110,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4529,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34755,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2873,"endOffset":2890,"count":57}],"isBlockCoverage":true},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3979,"endOffset":4210,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4057,"endOffset":4101,"count":117}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4108,"endOffset":4200,"count":1750},{"startOffset":4139,"endOffset":4159,"count":175},{"startOffset":4159,"endOffset":4193,"count":1575}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7331,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7338,"endOffset":7511,"count":175},{"startOffset":7369,"endOffset":7452,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7587,"endOffset":7687,"count":1212},{"startOffset":7638,"endOffset":7672,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7694,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8059,"endOffset":8159,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8166,"endOffset":8403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8551,"endOffset":8628,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8635,"endOffset":8806,"count":502},{"startOffset":8702,"endOffset":8799,"count":251}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9001,"endOffset":9101,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9108,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9388,"endOffset":9466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9473,"endOffset":9647,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9665,"endOffset":12005,"count":117},{"startOffset":9939,"endOffset":9967,"count":0},{"startOffset":10023,"endOffset":10051,"count":0},{"startOffset":10348,"endOffset":10385,"count":0},{"startOffset":10441,"endOffset":10472,"count":0},{"startOffset":10736,"endOffset":10766,"count":0},{"startOffset":11028,"endOffset":11034,"count":0},{"startOffset":11067,"endOffset":11096,"count":0},{"startOffset":11097,"endOffset":11127,"count":0},{"startOffset":11178,"endOffset":11392,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":12009,"endOffset":12178,"count":231}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12218,"endOffset":12349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12449,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12614,"endOffset":12808,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12813,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":14049,"endOffset":14258,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14363,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14438,"endOffset":15885,"count":394},{"startOffset":14545,"endOffset":14572,"count":337},{"startOffset":14574,"endOffset":14595,"count":57},{"startOffset":14621,"endOffset":14668,"count":0},{"startOffset":14737,"endOffset":14842,"count":223},{"startOffset":14811,"endOffset":14834,"count":0},{"startOffset":14842,"endOffset":14964,"count":171},{"startOffset":14907,"endOffset":14964,"count":0},{"startOffset":15003,"endOffset":15150,"count":309},{"startOffset":15056,"endOffset":15143,"count":0},{"startOffset":15150,"endOffset":15478,"count":85},{"startOffset":15221,"endOffset":15478,"count":0},{"startOffset":15538,"endOffset":15589,"count":0},{"startOffset":15635,"endOffset":15687,"count":0},{"startOffset":15702,"endOffset":15797,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15916,"endOffset":16114,"count":394},{"startOffset":15972,"endOffset":16005,"count":308},{"startOffset":16007,"endOffset":16055,"count":137}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":16145,"endOffset":16248,"count":171}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":16281,"endOffset":16532,"count":228},{"startOffset":16355,"endOffset":16529,"count":171},{"startOffset":16404,"endOffset":16446,"count":114}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16577,"endOffset":16910,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":17105,"endOffset":18346,"count":394},{"startOffset":17223,"endOffset":17226,"count":0},{"startOffset":17361,"endOffset":17781,"count":257},{"startOffset":17407,"endOffset":17485,"count":114},{"startOffset":17597,"endOffset":17621,"count":114},{"startOffset":17623,"endOffset":17669,"count":114},{"startOffset":17712,"endOffset":17731,"count":171},{"startOffset":17733,"endOffset":17776,"count":114},{"startOffset":17781,"endOffset":18028,"count":137},{"startOffset":18081,"endOffset":18102,"count":0},{"startOffset":18119,"endOffset":18159,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18350,"endOffset":18800,"count":114},{"startOffset":18597,"endOffset":18646,"count":0},{"startOffset":18672,"endOffset":18709,"count":86},{"startOffset":18709,"endOffset":18769,"count":28}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":18804,"endOffset":19200,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19204,"endOffset":21886,"count":251},{"startOffset":19324,"endOffset":19401,"count":0},{"startOffset":19521,"endOffset":19526,"count":0},{"startOffset":19676,"endOffset":20310,"count":0},{"startOffset":20362,"endOffset":20405,"count":57},{"startOffset":20423,"endOffset":21823,"count":194},{"startOffset":20485,"endOffset":20506,"count":0},{"startOffset":20877,"endOffset":21238,"count":0},{"startOffset":21292,"endOffset":21354,"count":16},{"startOffset":21356,"endOffset":21416,"count":16},{"startOffset":21416,"endOffset":21816,"count":178},{"startOffset":21668,"endOffset":21816,"count":0},{"startOffset":21823,"endOffset":21878,"count":57}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21890,"endOffset":22081,"count":178}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":22085,"endOffset":22614,"count":235},{"startOffset":22266,"endOffset":22287,"count":0},{"startOffset":22307,"endOffset":22375,"count":0},{"startOffset":22401,"endOffset":22446,"count":251},{"startOffset":22492,"endOffset":22523,"count":0},{"startOffset":22566,"endOffset":22611,"count":57}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22689,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23327,"endOffset":25049,"count":228},{"startOffset":23499,"endOffset":23729,"count":114},{"startOffset":23729,"endOffset":23748,"count":0},{"startOffset":23748,"endOffset":23844,"count":114},{"startOffset":23844,"endOffset":23861,"count":86},{"startOffset":23863,"endOffset":24500,"count":86},{"startOffset":23966,"endOffset":23971,"count":0},{"startOffset":24269,"endOffset":24279,"count":0},{"startOffset":24280,"endOffset":24297,"count":0},{"startOffset":24500,"endOffset":25006,"count":28},{"startOffset":24635,"endOffset":24638,"count":0},{"startOffset":24759,"endOffset":24794,"count":0},{"startOffset":24866,"endOffset":25001,"count":0},{"startOffset":25006,"endOffset":25048,"count":114}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":23974,"endOffset":24087,"count":86},{"startOffset":24034,"endOffset":24080,"count":229}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":25081,"endOffset":25256,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25324,"endOffset":27024,"count":115},{"startOffset":25432,"endOffset":25496,"count":0},{"startOffset":25538,"endOffset":25586,"count":0},{"startOffset":25625,"endOffset":25737,"count":0},{"startOffset":25808,"endOffset":25857,"count":0},{"startOffset":25872,"endOffset":25900,"count":0},{"startOffset":26384,"endOffset":26582,"count":0},{"startOffset":26618,"endOffset":27003,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":27029,"endOffset":27472,"count":287}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":27476,"endOffset":28126,"count":115},{"startOffset":27561,"endOffset":27645,"count":0},{"startOffset":27680,"endOffset":27791,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":28130,"endOffset":28674,"count":172},{"startOffset":28228,"endOffset":28247,"count":57},{"startOffset":28247,"endOffset":28330,"count":115},{"startOffset":28332,"endOffset":28577,"count":115},{"startOffset":28483,"endOffset":28540,"count":0},{"startOffset":28577,"endOffset":28671,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28436,"endOffset":28473,"count":115}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":28678,"endOffset":29196,"count":172},{"startOffset":28813,"endOffset":29188,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28888,"endOffset":29056,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29200,"endOffset":29865,"count":115},{"startOffset":29764,"endOffset":29792,"count":114},{"startOffset":29824,"endOffset":29857,"count":1}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29869,"endOffset":30198,"count":115},{"startOffset":29977,"endOffset":30197,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30287,"endOffset":30392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30445,"endOffset":30553,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30560,"endOffset":30816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30868,"endOffset":31279,"count":687}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":31286,"endOffset":31425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31485,"endOffset":31606,"count":114},{"startOffset":31591,"endOffset":31598,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31668,"endOffset":31791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31849,"endOffset":31947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32004,"endOffset":32123,"count":1},{"startOffset":32108,"endOffset":32115,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32184,"endOffset":32340,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32405,"endOffset":32497,"count":228}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32555,"endOffset":32651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32709,"endOffset":32794,"count":57}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32869,"endOffset":32969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33033,"endOffset":33297,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33380,"endOffset":33670,"count":172},{"startOffset":33529,"endOffset":33566,"count":0},{"startOffset":33568,"endOffset":33617,"count":0}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":33761,"endOffset":33795,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33848,"endOffset":33888,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33958,"endOffset":34126,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":34149,"endOffset":34287,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34309,"endOffset":34418,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":34464,"endOffset":34752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7327,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7193,"endOffset":7324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":262,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1192,"endOffset":1403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7350,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1246,"endOffset":2134,"count":165},{"startOffset":1350,"endOffset":1523,"count":28},{"startOffset":1479,"endOffset":1497,"count":0},{"startOffset":1529,"endOffset":1543,"count":28},{"startOffset":1549,"endOffset":1614,"count":28},{"startOffset":1620,"endOffset":1632,"count":109},{"startOffset":1638,"endOffset":1700,"count":109},{"startOffset":1706,"endOffset":1769,"count":0},{"startOffset":1775,"endOffset":1787,"count":0},{"startOffset":1793,"endOffset":1806,"count":0},{"startOffset":1812,"endOffset":1827,"count":0},{"startOffset":1833,"endOffset":1898,"count":0},{"startOffset":1904,"endOffset":2126,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2138,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2756,"endOffset":3005,"count":251}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3009,"endOffset":3671,"count":86},{"startOffset":3174,"endOffset":3275,"count":0},{"startOffset":3369,"endOffset":3486,"count":229}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3675,"endOffset":3886,"count":165}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3890,"endOffset":4207,"count":251},{"startOffset":4062,"endOffset":4117,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4211,"endOffset":6218,"count":86},{"startOffset":4413,"endOffset":4433,"count":85},{"startOffset":4435,"endOffset":5202,"count":85},{"startOffset":4524,"endOffset":4791,"count":0},{"startOffset":4980,"endOffset":5178,"count":0},{"startOffset":5202,"endOffset":5225,"count":1},{"startOffset":5225,"endOffset":5244,"count":0},{"startOffset":5244,"endOffset":5583,"count":1},{"startOffset":5583,"endOffset":5781,"count":0},{"startOffset":5781,"endOffset":5869,"count":1},{"startOffset":5869,"endOffset":5939,"count":0},{"startOffset":5939,"endOffset":6215,"count":1},{"startOffset":5986,"endOffset":6026,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6222,"endOffset":7127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":173},{"startOffset":3053,"endOffset":3102,"count":0},{"startOffset":3108,"endOffset":3163,"count":0},{"startOffset":3169,"endOffset":3222,"count":114},{"startOffset":3228,"endOffset":3279,"count":58},{"startOffset":3285,"endOffset":3336,"count":1}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6204,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":173}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6715,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2622,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3258,"endOffset":6368,"count":110},{"startOffset":3465,"endOffset":3839,"count":0},{"startOffset":4188,"endOffset":4216,"count":0},{"startOffset":4335,"endOffset":4442,"count":1},{"startOffset":4740,"endOffset":4795,"count":0},{"startOffset":4802,"endOffset":5592,"count":0},{"startOffset":5598,"endOffset":5615,"count":0},{"startOffset":5621,"endOffset":5662,"count":0},{"startOffset":5668,"endOffset":5716,"count":0},{"startOffset":5721,"endOffset":5789,"count":0},{"startOffset":5791,"endOffset":6367,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5061,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6151,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6372,"endOffset":6655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":335,"count":16},{"startOffset":105,"endOffset":109,"count":0},{"startOffset":131,"endOffset":136,"count":0},{"startOffset":268,"endOffset":331,"count":0}],"isBlockCoverage":true}]},{"scriptId":"142","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":433,"count":1},{"startOffset":420,"endOffset":430,"count":0}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6302,"count":1},{"startOffset":1591,"endOffset":1831,"count":44},{"startOffset":2136,"endOffset":2441,"count":8},{"startOffset":2477,"endOffset":2854,"count":8},{"startOffset":6193,"endOffset":6196,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":450,"endOffset":837,"count":2},{"startOffset":498,"endOffset":579,"count":1},{"startOffset":581,"endOffset":661,"count":0},{"startOffset":755,"endOffset":758,"count":0},{"startOffset":805,"endOffset":817,"count":1},{"startOffset":818,"endOffset":833,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":863,"endOffset":975,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":1003,"endOffset":1461,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1089,"endOffset":1147,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1281,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1466,"endOffset":1526,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1620,"endOffset":1823,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1856,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2161,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2570,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2896,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2956,"endOffset":3002,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3007,"endOffset":3059,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":3093,"endOffset":3385,"count":4},{"startOffset":3224,"endOffset":3310,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3412,"endOffset":4231,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3461,"endOffset":3937,"count":8},{"startOffset":3512,"endOffset":3541,"count":0},{"startOffset":3543,"endOffset":3698,"count":0},{"startOffset":3909,"endOffset":3931,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4255,"endOffset":5327,"count":8},{"startOffset":4309,"endOffset":4353,"count":0},{"startOffset":4415,"endOffset":4438,"count":0},{"startOffset":4518,"endOffset":4856,"count":0},{"startOffset":5199,"endOffset":5284,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5364,"endOffset":5983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4302,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":36,"endOffset":134,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":159,"endOffset":265,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":290,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":440,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":465,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":516,"endOffset":822,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":597,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":919,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1463,"endOffset":4177,"count":6},{"startOffset":2991,"endOffset":3339,"count":18},{"startOffset":3052,"endOffset":3240,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3549,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3658,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3769,"endOffset":3828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3873,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3983,"endOffset":4047,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4095,"endOffset":4153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2883,"count":1},{"startOffset":261,"endOffset":283,"count":0},{"startOffset":390,"endOffset":412,"count":0},{"startOffset":442,"endOffset":674,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":678,"endOffset":847,"count":2},{"startOffset":730,"endOffset":752,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":851,"endOffset":2562,"count":2},{"startOffset":925,"endOffset":943,"count":0},{"startOffset":1035,"endOffset":1053,"count":0},{"startOffset":1084,"endOffset":1102,"count":0},{"startOffset":1138,"endOffset":1165,"count":0},{"startOffset":1167,"endOffset":1185,"count":0},{"startOffset":1248,"endOffset":1268,"count":0},{"startOffset":1646,"endOffset":1649,"count":0},{"startOffset":1655,"endOffset":2561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1789,"endOffset":1808,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2566,"endOffset":2698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":335,"count":16},{"startOffset":105,"endOffset":109,"count":0},{"startOffset":131,"endOffset":136,"count":0},{"startOffset":268,"endOffset":331,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1074,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":42,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":568,"endOffset":992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":323,"count":1},{"startOffset":78,"endOffset":99,"count":0},{"startOffset":237,"endOffset":280,"count":0},{"startOffset":281,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35488,"count":1},{"startOffset":5997,"endOffset":6016,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":4126,"endOffset":5828,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4554,"endOffset":4843,"count":54},{"startOffset":4626,"endOffset":4640,"count":0},{"startOffset":4642,"endOffset":4804,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4885,"endOffset":4941,"count":23}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":5121,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6354,"endOffset":7290,"count":67},{"startOffset":6611,"endOffset":6666,"count":1},{"startOffset":6667,"endOffset":6736,"count":0},{"startOffset":6742,"endOffset":6865,"count":0},{"startOffset":6966,"endOffset":7000,"count":1},{"startOffset":7006,"endOffset":7017,"count":66},{"startOffset":7087,"endOffset":7119,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7610,"endOffset":8241,"count":2},{"startOffset":7741,"endOffset":8153,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8423,"endOffset":8763,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":9029,"endOffset":9200,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9409,"endOffset":9680,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9486,"endOffset":9656,"count":216},{"startOffset":9579,"endOffset":9610,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9803,"endOffset":10041,"count":1},{"startOffset":9921,"endOffset":10019,"count":8},{"startOffset":9960,"endOffset":9985,"count":6},{"startOffset":9985,"endOffset":10019,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":10219,"endOffset":10403,"count":2},{"startOffset":10262,"endOffset":10295,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10504,"endOffset":11073,"count":77},{"startOffset":10566,"endOffset":11070,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10999,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11872,"endOffset":12943,"count":5},{"startOffset":11953,"endOffset":11962,"count":0},{"startOffset":11964,"endOffset":11983,"count":0},{"startOffset":12031,"endOffset":12224,"count":0},{"startOffset":12358,"endOffset":12394,"count":0},{"startOffset":12732,"endOffset":12834,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hook","ranges":[{"startOffset":13105,"endOffset":15998,"count":368},{"startOffset":13153,"endOffset":13165,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":13257,"endOffset":15936,"count":391},{"startOffset":13318,"endOffset":13346,"count":368},{"startOffset":13346,"endOffset":13423,"count":23},{"startOffset":13423,"endOffset":13483,"count":3},{"startOffset":13483,"endOffset":13665,"count":20},{"startOffset":13523,"endOffset":13610,"count":5},{"startOffset":13610,"endOffset":13665,"count":15},{"startOffset":13665,"endOffset":13837,"count":23},{"startOffset":13837,"endOffset":13949,"count":11},{"startOffset":13949,"endOffset":15935,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13884,"endOffset":13940,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13966,"endOffset":15409,"count":23},{"startOffset":14051,"endOffset":14103,"count":0},{"startOffset":14156,"endOffset":15130,"count":0},{"startOffset":15145,"endOffset":15271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14721,"endOffset":14785,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14820,"endOffset":14886,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":15419,"endOffset":15931,"count":46},{"startOffset":15496,"endOffset":15509,"count":11},{"startOffset":15556,"endOffset":15649,"count":17},{"startOffset":15649,"endOffset":15924,"count":29},{"startOffset":15715,"endOffset":15771,"count":27},{"startOffset":15771,"endOffset":15848,"count":2},{"startOffset":15832,"endOffset":15836,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15961,"endOffset":15993,"count":368}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":16231,"endOffset":16670,"count":108}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":16312,"endOffset":16642,"count":432},{"startOffset":16379,"endOffset":16433,"count":108},{"startOffset":16433,"endOffset":16641,"count":324}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16457,"endOffset":16635,"count":324},{"startOffset":16490,"endOffset":16599,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16820,"endOffset":16940,"count":54}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":17098,"endOffset":17208,"count":54}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":17354,"endOffset":17518,"count":108},{"startOffset":17439,"endOffset":17497,"count":216}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":17651,"endOffset":18119,"count":54},{"startOffset":17693,"endOffset":17723,"count":0},{"startOffset":17787,"endOffset":17806,"count":0},{"startOffset":17832,"endOffset":17866,"count":0},{"startOffset":17986,"endOffset":18050,"count":0},{"startOffset":18084,"endOffset":18116,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17908,"endOffset":17956,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":18310,"endOffset":23059,"count":22}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":18407,"endOffset":19135,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":19141,"endOffset":22995,"count":76},{"startOffset":19230,"endOffset":19244,"count":60},{"startOffset":19246,"endOffset":19273,"count":0},{"startOffset":19298,"endOffset":19326,"count":0},{"startOffset":19343,"endOffset":19395,"count":0},{"startOffset":19478,"endOffset":19506,"count":22},{"startOffset":19506,"endOffset":19597,"count":54},{"startOffset":19597,"endOffset":19628,"count":0},{"startOffset":19628,"endOffset":19646,"count":54},{"startOffset":19646,"endOffset":20301,"count":0},{"startOffset":20301,"endOffset":20374,"count":54},{"startOffset":20374,"endOffset":20674,"count":0},{"startOffset":20674,"endOffset":22994,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20816,"endOffset":22988,"count":54},{"startOffset":20917,"endOffset":21503,"count":0},{"startOffset":21520,"endOffset":21577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21396,"endOffset":21492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21639,"endOffset":22979,"count":54},{"startOffset":21749,"endOffset":22118,"count":0},{"startOffset":22133,"endOffset":22777,"count":5},{"startOffset":22218,"endOffset":22598,"count":0},{"startOffset":22777,"endOffset":22978,"count":49}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":23241,"endOffset":24955,"count":22},{"startOffset":23427,"endOffset":23441,"count":16},{"startOffset":23444,"endOffset":23503,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":23576,"endOffset":24504,"count":43},{"startOffset":23621,"endOffset":23981,"count":0},{"startOffset":24006,"endOffset":24036,"count":0},{"startOffset":24090,"endOffset":24120,"count":22},{"startOffset":24120,"endOffset":24356,"count":21},{"startOffset":24356,"endOffset":24451,"count":0},{"startOffset":24451,"endOffset":24499,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24384,"endOffset":24442,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":24510,"endOffset":24785,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24685,"endOffset":24778,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24851,"endOffset":24950,"count":22},{"startOffset":24882,"endOffset":24912,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":25819,"endOffset":28570,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":28951,"endOffset":31038,"count":1},{"startOffset":29039,"endOffset":29044,"count":0},{"startOffset":29104,"endOffset":29121,"count":0},{"startOffset":30705,"endOffset":30971,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":29107,"endOffset":29121,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":29140,"endOffset":29340,"count":1},{"startOffset":29169,"endOffset":29191,"count":0},{"startOffset":29193,"endOffset":29211,"count":0}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":29361,"endOffset":29575,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":29598,"endOffset":29986,"count":1},{"startOffset":29704,"endOffset":29796,"count":0},{"startOffset":29867,"endOffset":29958,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30122,"endOffset":30171,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30232,"endOffset":30375,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":31897,"endOffset":31934,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":32332,"endOffset":32443,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32391,"endOffset":32438,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":32587,"endOffset":32675,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":32885,"endOffset":32932,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":33294,"endOffset":33392,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":33550,"endOffset":34621,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":34846,"endOffset":34948,"count":5},{"startOffset":34901,"endOffset":34944,"count":0}],"isBlockCoverage":true},{"functionName":"thrown2Error","ranges":[{"startOffset":35121,"endOffset":35280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":178,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1},{"startOffset":223,"endOffset":271,"count":0}],"isBlockCoverage":true}]},{"scriptId":"152","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4991,"count":1},{"startOffset":849,"endOffset":865,"count":0},{"startOffset":1567,"endOffset":1670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1902,"endOffset":1944,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1953,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2516,"endOffset":2659,"count":14},{"startOffset":2580,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2740,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3191,"endOffset":3311,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3417,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3624,"endOffset":3889,"count":1},{"startOffset":3670,"endOffset":3710,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":4015,"endOffset":4063,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4237,"endOffset":4447,"count":14},{"startOffset":4377,"endOffset":4444,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4622,"endOffset":4784,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4883,"endOffset":4988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7204,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":114,"endOffset":7175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":438,"endOffset":482,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1052,"endOffset":1339,"count":14},{"startOffset":1151,"endOffset":1259,"count":220}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1519,"endOffset":3772,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1650,"endOffset":2909,"count":336},{"startOffset":1737,"endOffset":1870,"count":0},{"startOffset":2046,"endOffset":2874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2237,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3273,"endOffset":3549,"count":336},{"startOffset":3315,"endOffset":3352,"count":0},{"startOffset":3406,"endOffset":3515,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3560,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3777,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":4154,"endOffset":4614,"count":1},{"startOffset":4364,"endOffset":4376,"count":0},{"startOffset":4485,"endOffset":4610,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4817,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5971,"endOffset":6169,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6321,"endOffset":6589,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6687,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6926,"endOffset":7104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11096,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":849,"endOffset":1243,"count":65},{"startOffset":939,"endOffset":944,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1164,"endOffset":1216,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1430,"endOffset":1566,"count":119}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2291,"endOffset":2775,"count":200},{"startOffset":2333,"endOffset":2366,"count":135},{"startOffset":2366,"endOffset":2398,"count":65},{"startOffset":2398,"endOffset":2432,"count":0},{"startOffset":2432,"endOffset":2594,"count":65},{"startOffset":2596,"endOffset":2626,"count":0},{"startOffset":2626,"endOffset":2724,"count":65},{"startOffset":2724,"endOffset":2756,"count":0},{"startOffset":2756,"endOffset":2774,"count":65}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2944,"endOffset":3175,"count":155},{"startOffset":2985,"endOffset":3013,"count":65},{"startOffset":3015,"endOffset":3045,"count":90},{"startOffset":3045,"endOffset":3077,"count":65},{"startOffset":3077,"endOffset":3111,"count":0},{"startOffset":3111,"endOffset":3174,"count":65}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3291,"endOffset":3386,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3518,"endOffset":3602,"count":190}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3729,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3942,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":4123,"endOffset":4222,"count":70},{"startOffset":4164,"endOffset":4197,"count":5},{"startOffset":4197,"endOffset":4221,"count":65}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4317,"endOffset":4426,"count":5},{"startOffset":4396,"endOffset":4425,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4632,"endOffset":4686,"count":270}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4893,"endOffset":4965,"count":275}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":5054,"endOffset":5099,"count":135}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":5188,"endOffset":5471,"count":58},{"startOffset":5249,"endOffset":5263,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5318,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5626,"endOffset":5751,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5872,"endOffset":9568,"count":77},{"startOffset":6034,"endOffset":6046,"count":0},{"startOffset":6879,"endOffset":7020,"count":0},{"startOffset":7084,"endOffset":7793,"count":0},{"startOffset":7864,"endOffset":8072,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":6197,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6387,"endOffset":6747,"count":77},{"startOffset":6462,"endOffset":6485,"count":0},{"startOffset":6507,"endOffset":6544,"count":0},{"startOffset":6650,"endOffset":6671,"count":72},{"startOffset":6672,"endOffset":6681,"count":0},{"startOffset":6683,"endOffset":6728,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":7193,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":8078,"endOffset":8807,"count":77},{"startOffset":8148,"endOffset":8184,"count":58},{"startOffset":8186,"endOffset":8572,"count":58},{"startOffset":8572,"endOffset":8802,"count":19},{"startOffset":8607,"endOffset":8778,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8245,"endOffset":8432,"count":53}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8443,"endOffset":8555,"count":5},{"startOffset":8486,"endOffset":8542,"count":0}],"isBlockCoverage":true},{"functionName":"callFnAsync","ranges":[{"startOffset":8813,"endOffset":9565,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9760,"endOffset":10032,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10859,"endOffset":11058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16202,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":365,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":786,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1111,"endOffset":1164,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4565,"endOffset":4749,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":5061,"endOffset":5242,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5562,"endOffset":5730,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5988,"endOffset":6118,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6456,"endOffset":6596,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6953,"endOffset":7209,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7605,"endOffset":7900,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":8173,"endOffset":8376,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8616,"endOffset":8796,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":9157,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9957,"endOffset":10117,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10477,"endOffset":10771,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10991,"endOffset":11188,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11487,"endOffset":12281,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12528,"endOffset":12791,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":13101,"endOffset":13292,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13764,"endOffset":14023,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":14299,"endOffset":14476,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14752,"endOffset":14899,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":15135,"endOffset":15214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16102,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":751,"endOffset":925,"count":21}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1340,"endOffset":2218,"count":22},{"startOffset":1412,"endOffset":1614,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1641,"endOffset":1662,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2143,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2393,"endOffset":2715,"count":22}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2435,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2827,"endOffset":3093,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3336,"endOffset":3679,"count":108},{"startOffset":3378,"endOffset":3411,"count":86},{"startOffset":3411,"endOffset":3443,"count":22},{"startOffset":3443,"endOffset":3477,"count":0},{"startOffset":3477,"endOffset":3678,"count":22}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3861,"endOffset":4022,"count":107},{"startOffset":3902,"endOffset":3935,"count":86},{"startOffset":3935,"endOffset":3998,"count":21},{"startOffset":3998,"endOffset":4002,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4200,"endOffset":4402,"count":108},{"startOffset":4242,"endOffset":4272,"count":86},{"startOffset":4272,"endOffset":4304,"count":22},{"startOffset":4304,"endOffset":4338,"count":0},{"startOffset":4338,"endOffset":4401,"count":22}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4573,"endOffset":4715,"count":42},{"startOffset":4617,"endOffset":4714,"count":21}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4841,"endOffset":4925,"count":733},{"startOffset":4894,"endOffset":4920,"count":478}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":5123,"endOffset":5365,"count":11}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5558,"endOffset":5932,"count":3},{"startOffset":5606,"endOffset":5630,"count":0},{"startOffset":5753,"endOffset":5767,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterAll","ranges":[{"startOffset":6123,"endOffset":6494,"count":5},{"startOffset":6171,"endOffset":6195,"count":0},{"startOffset":6317,"endOffset":6331,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6689,"endOffset":7066,"count":3},{"startOffset":6737,"endOffset":6761,"count":0},{"startOffset":6885,"endOffset":6899,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":7259,"endOffset":7633,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7774,"endOffset":8064,"count":21}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":8210,"endOffset":8464,"count":54}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8658,"endOffset":8712,"count":43}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8908,"endOffset":9099,"count":940},{"startOffset":8962,"endOffset":9022,"count":622},{"startOffset":9042,"endOffset":9078,"count":622}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":9233,"endOffset":9381,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9283,"endOffset":9348,"count":21}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9597,"endOffset":9732,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9663,"endOffset":9711,"count":57}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9859,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":10108,"endOffset":10300,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10234,"endOffset":10290,"count":21}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":10427,"endOffset":11487,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11635,"endOffset":11689,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11780,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11989,"endOffset":12040,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":12169,"endOffset":12225,"count":368}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":12330,"endOffset":12444,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12856,"endOffset":13452,"count":22},{"startOffset":13413,"endOffset":13449,"count":54}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12888,"endOffset":13003,"count":88},{"startOffset":12965,"endOffset":12998,"count":11}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13629,"endOffset":13932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":374,"endOffset":461,"count":11}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":613,"endOffset":692,"count":11}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":839,"endOffset":981,"count":23},{"startOffset":954,"endOffset":980,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1157,"endOffset":1873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1978,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":782,"endOffset":1857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2404,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":722,"endOffset":2359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7337,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":887,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":2044,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2331,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2796,"endOffset":3117,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3289,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3437,"endOffset":3451,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3635,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3926,"endOffset":3989,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4238,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4595,"endOffset":4667,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4859,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5468,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6265,"endOffset":7196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3796,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":918,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2563,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":3050,"endOffset":3459,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3584,"endOffset":3742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12336,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1722,"endOffset":9212,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":9347,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":9820,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":9994,"endOffset":10073,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":10255,"endOffset":10578,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":10646,"endOffset":10749,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":10831,"endOffset":11197,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":11327,"endOffset":11609,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":11650,"endOffset":11842,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":11953,"endOffset":12089,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":12145,"endOffset":12306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1983,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":890,"endOffset":1856,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1143,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":707,"endOffset":1021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2437,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":915,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1046,"endOffset":1109,"count":76}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1142,"endOffset":1184,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1221,"endOffset":1329,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1364,"endOffset":1457,"count":22},{"startOffset":1418,"endOffset":1452,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1645,"endOffset":2109,"count":49},{"startOffset":1709,"endOffset":1876,"count":35},{"startOffset":1876,"endOffset":2104,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144,"endOffset":2243,"count":5}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5837,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":793,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1883,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2180,"endOffset":2544,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2636,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":3072,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3432,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":4360,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4693,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4869,"endOffset":4932,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":5048,"endOffset":5417,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":5563,"endOffset":5795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5096,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1110,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":3070,"endOffset":3229,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3327,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3664,"endOffset":4485,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4615,"endOffset":5040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2546,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":791,"endOffset":2490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2621,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":820,"endOffset":2501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2634,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":1001,"endOffset":2509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2171,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":708,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1560,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1892,"endOffset":2108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3639,"count":1}],"isBlockCoverage":true},{"functionName":"forward","ranges":[{"startOffset":78,"endOffset":84,"count":6}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":113,"endOffset":1118,"count":6},{"startOffset":282,"endOffset":1062,"count":0},{"startOffset":1067,"endOffset":1117,"count":0}],"isBlockCoverage":true},{"functionName":"exports.doImport","ranges":[{"startOffset":1142,"endOffset":1168,"count":6}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1199,"endOffset":3174,"count":6},{"startOffset":1269,"endOffset":1324,"count":0},{"startOffset":1411,"endOffset":3171,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3179,"endOffset":3331,"count":6},{"startOffset":3237,"endOffset":3271,"count":0}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3360,"endOffset":3636,"count":1},{"startOffset":3464,"endOffset":3633,"count":6}],"isBlockCoverage":true}]},{"scriptId":"173","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2303,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1369,"endOffset":2259,"count":1},{"startOffset":1572,"endOffset":1631,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1693,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1777,"endOffset":1835,"count":22},{"startOffset":1812,"endOffset":1829,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1868,"endOffset":1907,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1940,"endOffset":1981,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2017,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2089,"endOffset":2127,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2160,"endOffset":2254,"count":1}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true}]},{"scriptId":"175","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2626,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":567,"endOffset":2559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":2554,"count":6},{"startOffset":959,"endOffset":988,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1175,"endOffset":1294,"count":21}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1435,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1654,"endOffset":1771,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1953,"endOffset":2185,"count":54},{"startOffset":2036,"endOffset":2066,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2261,"endOffset":2352,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2482,"endOffset":2548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":577,"endOffset":903,"count":54},{"startOffset":629,"endOffset":825,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1074,"endOffset":1180,"count":108}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1269,"endOffset":1376,"count":54},{"startOffset":1347,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1483,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1564,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2141,"endOffset":2745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2447,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":656,"endOffset":2345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2233,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":679,"endOffset":2183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1488,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":481,"endOffset":1417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1526,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":167,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":362,"endOffset":505,"count":77},{"startOffset":410,"endOffset":444,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":649,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":939,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1176,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1387,"endOffset":1523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9125,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":858,"endOffset":951,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":897,"endOffset":946,"count":1}],"isBlockCoverage":true},{"functionName":"exitMocha","ranges":[{"startOffset":1198,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":2142,"endOffset":2221,"count":8},{"startOffset":2171,"endOffset":2200,"count":4},{"startOffset":2201,"endOffset":2221,"count":4}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2501,"endOffset":3381,"count":1},{"startOffset":2664,"endOffset":3205,"count":0},{"startOffset":3292,"endOffset":3359,"count":0}],"isBlockCoverage":true},{"functionName":"handleUnmatchedFiles","ranges":[{"startOffset":3653,"endOffset":4106,"count":0}],"isBlockCoverage":false},{"functionName":"singleRun","ranges":[{"startOffset":4653,"endOffset":5194,"count":1},{"startOffset":4851,"endOffset":4932,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":5614,"endOffset":6146,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":6622,"endOffset":7148,"count":1},{"startOffset":6977,"endOffset":7034,"count":0},{"startOffset":7062,"endOffset":7075,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":7742,"endOffset":8845,"count":2},{"startOffset":8023,"endOffset":8153,"count":0},{"startOffset":8445,"endOffset":8842,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":8186,"endOffset":8347,"count":0}],"isBlockCoverage":false},{"functionName":"createExitHandler","ranges":[{"startOffset":8876,"endOffset":9122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8926,"endOffset":9118,"count":1},{"startOffset":8991,"endOffset":8994,"count":0},{"startOffset":9051,"endOffset":9075,"count":0}],"isBlockCoverage":true}]},{"scriptId":"182","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11146,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1042,"endOffset":2708,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3376,"endOffset":4876,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5687,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8431,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9714,"endOffset":9936,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":10146,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":10272,"endOffset":10320,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10489,"endOffset":10683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29348,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1704,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1777,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1988,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2424,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2873,"endOffset":2922,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2952,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3155,"endOffset":3357,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3376,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3604,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3771,"endOffset":3904,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3910,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4265,"endOffset":4362,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4413,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4524,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4764,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5504,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":6004,"endOffset":6146,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":6152,"endOffset":6578,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6584,"endOffset":6906,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6912,"endOffset":7443,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7800,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11857,"endOffset":13650,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13868,"endOffset":14571,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14678,"endOffset":15464,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15545,"endOffset":15802,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15806,"endOffset":15913,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":16337,"endOffset":18716,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18898,"endOffset":19182,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":19487,"endOffset":20249,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":20253,"endOffset":20305,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20762,"endOffset":22170,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":22174,"endOffset":22240,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":22422,"endOffset":23037,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":23041,"endOffset":23110,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":23415,"endOffset":23659,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23867,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":24416,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":25016,"endOffset":27765,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":27837,"endOffset":27981,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":28057,"endOffset":28218,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":28288,"endOffset":28479,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":28483,"endOffset":28896,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":29210,"endOffset":29319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9163,"count":1},{"startOffset":1186,"endOffset":1213,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":973,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1087,"endOffset":1114,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1243,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2187,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2516,"endOffset":3837,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3843,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5296,"endOffset":5508,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5514,"endOffset":5959,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5965,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":6123,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7345,"endOffset":7495,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":8076,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8754,"endOffset":9018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":63,"count":1}],"isBlockCoverage":true}]},{"scriptId":"186","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10298,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":211,"endOffset":271,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1049,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3500,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4760,"endOffset":4950,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5605,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":6092,"endOffset":6263,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6927,"endOffset":6967,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7472,"endOffset":8002,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8896,"endOffset":9418,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9899,"endOffset":10135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9580,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":686,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":788,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1560,"endOffset":9551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1949,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":253,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":349,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":410,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":488,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":570,"endOffset":610,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":643,"endOffset":759,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":794,"endOffset":989,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":1014,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1194,"endOffset":1444,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1472,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1662,"endOffset":1946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4627,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":4146,"endOffset":4493,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4540,"endOffset":4621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28854,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":308,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":756,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1004,"endOffset":26211,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":26442,"endOffset":28824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":446,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":619,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1187,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2199,"endOffset":3221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1059,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":183,"endOffset":1056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":479,"endOffset":1159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3778,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":256,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2867,"endOffset":3434,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3456,"endOffset":3775,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":461,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":175,"endOffset":458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4550,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":564,"endOffset":1075,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1420,"endOffset":1466,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1872,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2506,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3264,"endOffset":3682,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4277,"endOffset":4487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":735,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2640,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":37,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":308,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":441,"endOffset":652,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":744,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1147,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1410,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1848,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":2061,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2279,"endOffset":2637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1561,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":107,"endOffset":1529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6654,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":277,"endOffset":346,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":369,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":481,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":600,"endOffset":629,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":648,"endOffset":848,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":871,"endOffset":1024,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1041,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1367,"endOffset":1612,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1636,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2403,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2687,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2977,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":3099,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3237,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3412,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4978,"endOffset":5789,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5807,"endOffset":6625,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6769,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":246,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2267,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2651,"endOffset":3156,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3287,"endOffset":3989,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3993,"endOffset":4824,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4828,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5337,"endOffset":5454,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5458,"endOffset":5523,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5527,"endOffset":5609,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5613,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5715,"endOffset":5808,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5812,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5990,"endOffset":6086,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":6090,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":6156,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6663,"endOffset":6694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":193,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2910,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":149,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":864,"endOffset":2879,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7230,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":606,"endOffset":7200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1646,"count":1}],"isBlockCoverage":true}]},{"scriptId":"206","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20721,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":761,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":887,"endOffset":1063,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1086,"endOffset":1218,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1242,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1454,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2344,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3299,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3839,"endOffset":6011,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6605,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8839,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":9155,"endOffset":10030,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":10299,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12750,"endOffset":13823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13827,"endOffset":16415,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16876,"endOffset":17961,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":18421,"endOffset":20679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":170,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55,"count":1}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1944,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1729,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1762,"endOffset":1772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16894,"count":1},{"startOffset":253,"endOffset":274,"count":0},{"startOffset":295,"endOffset":584,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":1059,"endOffset":1104,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2190,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2692,"endOffset":5144,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":5253,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5584,"endOffset":5629,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5715,"endOffset":5841,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5981,"endOffset":6188,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":6296,"endOffset":6336,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6338,"endOffset":6654,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6658,"endOffset":6890,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6894,"endOffset":7576,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7580,"endOffset":8906,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":9304,"endOffset":11356,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11701,"endOffset":12816,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12888,"endOffset":13375,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":13379,"endOffset":13653,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":14003,"endOffset":16817,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4211,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":805,"endOffset":3108,"count":1},{"startOffset":2231,"endOffset":2260,"count":0},{"startOffset":2485,"endOffset":2886,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":964,"endOffset":1570,"count":1},{"startOffset":1359,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1093,"endOffset":1241,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1143,"endOffset":1228,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1267,"endOffset":1301,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1685,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2356,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2962,"endOffset":3046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29762,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"charSet","ranges":[{"startOffset":1319,"endOffset":1395,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1343,"endOffset":1390,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1676,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1768,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1928,"endOffset":2767,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":3063,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3138,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":3546,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4466,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4559,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4828,"endOffset":4858,"count":0}],"isBlockCoverage":false},{"functionName":"charUnescape","ranges":[{"startOffset":4881,"endOffset":4916,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4939,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"braExpEscape","ranges":[{"startOffset":5012,"endOffset":5046,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":5071,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":5662,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5679,"endOffset":6929,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":6935,"endOffset":7307,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":7546,"endOffset":12857,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12863,"endOffset":12936,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12942,"endOffset":25638,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":25644,"endOffset":28073,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":28079,"endOffset":29642,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":29655,"endOffset":29722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/minimatch/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1},{"startOffset":139,"endOffset":153,"count":0}],"isBlockCoverage":true}]},{"scriptId":"214","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5195,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":308,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":424,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":671,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1076,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1571,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2167,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2222,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2281,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2324,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2369,"endOffset":5191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":43,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":387,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":504,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4702,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1087,"endOffset":1138,"count":6}],"isBlockCoverage":true},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1664,"endOffset":1796,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1707,"endOffset":1753,"count":18},{"startOffset":1735,"endOffset":1740,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1766,"endOffset":1795,"count":6}],"isBlockCoverage":true},{"functionName":"lookupFiles","ranges":[{"startOffset":2476,"endOffset":4699,"count":1},{"startOffset":2626,"endOffset":3690,"count":0},{"startOffset":3779,"endOffset":3811,"count":0},{"startOffset":3817,"endOffset":3869,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2903,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3452,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3931,"endOffset":4675,"count":6},{"startOffset":4090,"endOffset":4226,"count":0},{"startOffset":4234,"endOffset":4273,"count":0},{"startOffset":4303,"endOffset":4491,"count":0},{"startOffset":4620,"endOffset":4643,"count":0}],"isBlockCoverage":true}]},{"scriptId":"217","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2943,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":711,"endOffset":753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":827,"endOffset":871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":980,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1141,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1303,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"globStreamSync","ranges":[{"startOffset":1351,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":1467,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":1575,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":1683,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1790,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1908,"endOffset":2016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41573,"count":1},{"startOffset":3340,"endOffset":3349,"count":0},{"startOffset":3507,"endOffset":3523,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":740,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1188,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1270,"endOffset":1301,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1333,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1483,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1640,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1714,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1816,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1912,"endOffset":1955,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1978,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2098,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2325,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2549,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2703,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2859,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2990,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4209,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4371,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4429,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6417,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":7593,"endOffset":7660,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7747,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":8145,"endOffset":8197,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8216,"endOffset":40812,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40969,"endOffset":41005,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41120,"endOffset":41162,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41283,"endOffset":41329,"count":1}],"isBlockCoverage":true}]},{"scriptId":"219","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5195,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":308,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":424,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":671,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1076,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1571,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2167,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2222,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2281,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2324,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2369,"endOffset":5191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":183,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23413,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":323,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1111,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1582,"endOffset":23360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"222","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1024,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1124,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1264,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1656,"endOffset":5832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":711,"endOffset":927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":565,"endOffset":926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8792,"count":1},{"startOffset":566,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":655,"endOffset":8736,"count":0}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68135,"count":1},{"startOffset":415,"endOffset":499,"count":0},{"startOffset":678,"endOffset":722,"count":0},{"startOffset":67702,"endOffset":67713,"count":0},{"startOffset":68022,"endOffset":68099,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89,"endOffset":413,"count":106},{"startOffset":236,"endOffset":251,"count":8},{"startOffset":252,"endOffset":288,"count":98},{"startOffset":268,"endOffset":288,"count":5},{"startOffset":291,"endOffset":369,"count":101}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":332,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":418,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":583,"endOffset":676,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":680,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":776,"endOffset":1062,"count":1},{"startOffset":825,"endOffset":836,"count":0},{"startOffset":900,"endOffset":1001,"count":106}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2273,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":2650,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3881,"endOffset":4195,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4284,"endOffset":4446,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":4514,"endOffset":4695,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":4844,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":5843,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6702,"endOffset":39310,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":39552,"endOffset":41464,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41625,"endOffset":42549,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":42937,"endOffset":64576,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64849,"endOffset":65964,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":66279,"endOffset":66981,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":67301,"endOffset":67436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56565,"count":1},{"startOffset":273,"endOffset":279,"count":0},{"startOffset":400,"endOffset":404,"count":0},{"startOffset":763,"endOffset":2376,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":451,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":811,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1039,"endOffset":1544,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1658,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2419,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2496,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":3076,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":3465,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3553,"endOffset":4320,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3553,"endOffset":4320,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4985,"endOffset":56500,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"229","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8490,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":956,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1182,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1316,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1461,"endOffset":1627,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1633,"endOffset":1772,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1778,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1943,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2100,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2253,"endOffset":2405,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2411,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2603,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2791,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2976,"endOffset":3151,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3157,"endOffset":3359,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3365,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3564,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3731,"endOffset":3894,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3900,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":4045,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4202,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4359,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"get deliveryType","ranges":[{"startOffset":4625,"endOffset":4759,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStatus","ranges":[{"startOffset":4765,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4909,"endOffset":5959,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6934,"endOffset":7710,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7782,"endOffset":8409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6716,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1200,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1722,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2482,"endOffset":2590,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2596,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3051,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3366,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3483,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3887,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4102,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4252,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5888,"endOffset":6335,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6339,"endOffset":6603,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":780,"endOffset":3224,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1479,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1700,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1923,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2147,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2369,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2599,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2994,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3230,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3486,"endOffset":3886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6637,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2900,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3170,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3403,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3700,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3805,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4135,"endOffset":4264,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4270,"endOffset":4505,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6168,"endOffset":6342,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6226,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6390,"endOffset":6533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8862,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1089,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1723,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1911,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2111,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2295,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2491,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2675,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2871,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":3057,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3249,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3453,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3663,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":4097,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4535,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4799,"endOffset":5006,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":5048,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5174,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5341,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5409,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5732,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5979,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6306,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6522,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6807,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6984,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":7053,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":7316,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":7330,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7711,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7725,"endOffset":7821,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7974,"endOffset":8676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1840,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"238","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34777,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3350,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3510,"endOffset":3595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3967,"endOffset":4100,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4142,"endOffset":10513,"count":17}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4228,"endOffset":4454,"count":17},{"startOffset":4387,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4460,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4525,"endOffset":4563,"count":34}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4569,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4659,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4723,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4795,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4855,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4907,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":5024,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":5113,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5188,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5342,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5410,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5482,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5564,"endOffset":5677,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5683,"endOffset":5768,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5774,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5871,"endOffset":6694,"count":17},{"startOffset":5906,"endOffset":5946,"count":0},{"startOffset":5979,"endOffset":6022,"count":0},{"startOffset":6257,"endOffset":6629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6197,"endOffset":6239,"count":17}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6344,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6462,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6701,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6967,"endOffset":8715,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9028,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9501,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9664,"endOffset":10079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10085,"endOffset":10140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10146,"endOffset":10236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10242,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10510,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10517,"endOffset":10899,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10631,"endOffset":10690,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10677,"endOffset":10689,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10697,"endOffset":10889,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10903,"endOffset":11196,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":11200,"endOffset":11678,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11682,"endOffset":11804,"count":68},{"startOffset":11727,"endOffset":11736,"count":0},{"startOffset":11743,"endOffset":11801,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11808,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12987,"endOffset":15477,"count":17},{"startOffset":13142,"endOffset":13172,"count":0},{"startOffset":13542,"endOffset":13580,"count":0},{"startOffset":13615,"endOffset":13665,"count":0},{"startOffset":13701,"endOffset":13739,"count":0},{"startOffset":14023,"endOffset":14097,"count":0},{"startOffset":14287,"endOffset":14291,"count":0},{"startOffset":14380,"endOffset":14448,"count":0},{"startOffset":14545,"endOffset":14556,"count":0},{"startOffset":14615,"endOffset":14677,"count":0},{"startOffset":14724,"endOffset":14738,"count":0},{"startOffset":14740,"endOffset":14853,"count":0},{"startOffset":14886,"endOffset":15123,"count":0},{"startOffset":15124,"endOffset":15139,"count":0},{"startOffset":15160,"endOffset":15469,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15634,"endOffset":15833,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15837,"endOffset":16053,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":16057,"endOffset":16332,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16456,"endOffset":16797,"count":17}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16801,"endOffset":18354,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":18358,"endOffset":18734,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18738,"endOffset":20138,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":20142,"endOffset":20623,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20627,"endOffset":20915,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20919,"endOffset":21055,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21059,"endOffset":21306,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":21310,"endOffset":21487,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21491,"endOffset":21928,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21932,"endOffset":22107,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22111,"endOffset":22278,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22282,"endOffset":22816,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":22820,"endOffset":24866,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24870,"endOffset":25484,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":25488,"endOffset":25760,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":25764,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":27046,"endOffset":27305,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27309,"endOffset":27579,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27583,"endOffset":27851,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":27855,"endOffset":28110,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":28114,"endOffset":28423,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":28427,"endOffset":28607,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":28611,"endOffset":28831,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":28835,"endOffset":29080,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":29084,"endOffset":29318,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":29322,"endOffset":29634,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":29638,"endOffset":29923,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":29927,"endOffset":30237,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":30241,"endOffset":30535,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":30539,"endOffset":30826,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":30830,"endOffset":31110,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":31114,"endOffset":31359,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":31363,"endOffset":31682,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":31686,"endOffset":32591,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":32595,"endOffset":32711,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":32715,"endOffset":32947,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":32951,"endOffset":33306,"count":17},{"startOffset":33070,"endOffset":33076,"count":0},{"startOffset":33120,"endOffset":33157,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":33310,"endOffset":33989,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34018,"endOffset":34056,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":34060,"endOffset":34212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7685,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":727,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":6817,"endOffset":7393,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7397,"endOffset":7621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11645,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1485,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1539,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1901,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2665,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3758,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4018,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4401,"endOffset":4843,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4876,"endOffset":5165,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5200,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5463,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7010,"endOffset":7953,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8176,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8311,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8690,"endOffset":8762,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8795,"endOffset":8869,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8874,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9158,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9199,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9281,"endOffset":11503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7491,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":908,"endOffset":7431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40452,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3967,"endOffset":9659,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9907,"endOffset":10009,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":10013,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10230,"endOffset":10283,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10383,"endOffset":10428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10434,"endOffset":10633,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10779,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11047,"endOffset":11366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11372,"endOffset":11623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11629,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11724,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11904,"endOffset":12107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12113,"endOffset":13325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13331,"endOffset":14374,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14464,"endOffset":14643,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14730,"endOffset":14867,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14965,"endOffset":15107,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15392,"endOffset":15558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15564,"endOffset":17343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17349,"endOffset":18042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18048,"endOffset":18460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18466,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20749,"endOffset":21222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21228,"endOffset":21492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21498,"endOffset":21992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21998,"endOffset":22493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22499,"endOffset":23281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23287,"endOffset":23724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23730,"endOffset":24015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24021,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24291,"endOffset":24557,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24563,"endOffset":24723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24729,"endOffset":25423,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25429,"endOffset":25584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25590,"endOffset":25750,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25756,"endOffset":25948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25954,"endOffset":26275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26281,"endOffset":26602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27046,"endOffset":27701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27707,"endOffset":28436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28514,"endOffset":29485,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29672,"endOffset":29845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29968,"endOffset":30548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30588,"endOffset":39121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39440,"endOffset":39831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12765,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":383,"endOffset":585,"count":4},{"startOffset":547,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":976,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1251,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2278,"endOffset":12197,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12230,"endOffset":12642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34823,"count":1},{"startOffset":382,"endOffset":438,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":764,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1092,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1488,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2962,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":3015,"endOffset":3027,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":3047,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3137,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3350,"endOffset":3401,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3507,"endOffset":4068,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4233,"endOffset":4336,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4342,"endOffset":4514,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4547,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4597,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5077,"endOffset":34758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7518,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":246,"endOffset":268,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":290,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":420,"endOffset":7453,"count":0}],"isBlockCoverage":true}]},{"scriptId":"247","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13255,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":420,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":682,"endOffset":10835,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10901,"endOffset":12055,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12125,"endOffset":13185,"count":0}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4385,"count":1},{"startOffset":546,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":624,"endOffset":4323,"count":0}],"isBlockCoverage":true}]},{"scriptId":"249","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11060,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":386,"endOffset":965,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1247,"endOffset":1696,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1854,"endOffset":2683,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2906,"endOffset":10989,"count":0}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":763,"endOffset":1014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8677,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":642,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":970,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2082,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2761,"endOffset":3258,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3765,"endOffset":4795,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4598,"endOffset":4652,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4901,"endOffset":6080,"count":3},{"startOffset":4977,"endOffset":5108,"count":0},{"startOffset":5141,"endOffset":5287,"count":0},{"startOffset":5373,"endOffset":5510,"count":0},{"startOffset":5605,"endOffset":5618,"count":0},{"startOffset":5669,"endOffset":5836,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6339,"endOffset":7200,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":7637,"endOffset":8156,"count":1},{"startOffset":7783,"endOffset":8064,"count":3},{"startOffset":7816,"endOffset":8057,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8289,"endOffset":8401,"count":1}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2724,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":917,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":996,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1426,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1788,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2530,"endOffset":2721,"count":1},{"startOffset":2634,"endOffset":2698,"count":0}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2029,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":192,"endOffset":1067,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1094,"endOffset":1907,"count":2},{"startOffset":1163,"endOffset":1168,"count":1},{"startOffset":1624,"endOffset":1904,"count":9},{"startOffset":1718,"endOffset":1736,"count":0},{"startOffset":1757,"endOffset":1810,"count":1},{"startOffset":1810,"endOffset":1840,"count":8},{"startOffset":1840,"endOffset":1858,"count":1},{"startOffset":1858,"endOffset":1904,"count":7}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1267,"endOffset":1553,"count":9},{"startOffset":1377,"endOffset":1552,"count":0}],"isBlockCoverage":true}]},{"scriptId":"254","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1397,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":302,"endOffset":434,"count":9},{"startOffset":375,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":456,"endOffset":520,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":542,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":991,"endOffset":1394,"count":9},{"startOffset":1189,"endOffset":1203,"count":0},{"startOffset":1236,"endOffset":1391,"count":49},{"startOffset":1347,"endOffset":1373,"count":1},{"startOffset":1379,"endOffset":1387,"count":48},{"startOffset":1391,"endOffset":1393,"count":8}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1207,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":86,"endOffset":145,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":224,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":361,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":532,"endOffset":1175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1592,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":71,"endOffset":1561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":42,"endOffset":168,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":295,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":336,"endOffset":545,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":550,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":714,"endOffset":800,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":805,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":848,"endOffset":985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":140,"endOffset":243,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":270,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2929,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1115,"endOffset":1886,"count":11},{"startOffset":1162,"endOffset":1404,"count":1},{"startOffset":1293,"endOffset":1404,"count":0},{"startOffset":1404,"endOffset":1644,"count":10},{"startOffset":1644,"endOffset":1656,"count":1},{"startOffset":1657,"endOffset":1679,"count":1},{"startOffset":1681,"endOffset":1709,"count":10},{"startOffset":1710,"endOffset":1877,"count":10}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2171,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2710,"endOffset":2926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"260","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5404,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":182,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":368,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":460,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":662,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":749,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1821,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2682,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3756,"endOffset":4454,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4458,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4687,"endOffset":5372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4128,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":86,"endOffset":247,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":251,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":300,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1339,"endOffset":4126,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3385,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":476,"endOffset":1449,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1491,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1643,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1931,"endOffset":3265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":255,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3120,"count":1},{"startOffset":3095,"endOffset":3118,"count":0}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1411,"endOffset":2902,"count":1},{"startOffset":1773,"endOffset":1858,"count":0},{"startOffset":1885,"endOffset":1905,"count":0},{"startOffset":2624,"endOffset":2628,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2158,"endOffset":2380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1508,"count":1}],"isBlockCoverage":true},{"functionName":"Argv","ranges":[{"startOffset":282,"endOffset":477,"count":2}],"isBlockCoverage":true},{"functionName":"defineGetter","ranges":[{"startOffset":481,"endOffset":635,"count":14}],"isBlockCoverage":true},{"functionName":"lookupGetter","ranges":[{"startOffset":637,"endOffset":797,"count":2}],"isBlockCoverage":true},{"functionName":"singletonify","ranges":[{"startOffset":1048,"endOffset":1506,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1187,"endOffset":1501,"count":178},{"startOffset":1221,"endOffset":1286,"count":2},{"startOffset":1286,"endOffset":1496,"count":176},{"startOffset":1329,"endOffset":1378,"count":170},{"startOffset":1378,"endOffset":1496,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1418,"endOffset":1431,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1470,"endOffset":1487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62179,"count":1},{"startOffset":60890,"endOffset":60897,"count":0},{"startOffset":60924,"endOffset":60931,"count":0},{"startOffset":60960,"endOffset":60974,"count":0},{"startOffset":61244,"endOffset":61249,"count":0},{"startOffset":61482,"endOffset":61489,"count":0},{"startOffset":61515,"endOffset":61522,"count":0},{"startOffset":61549,"endOffset":61592,"count":0},{"startOffset":61676,"endOffset":61831,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":59,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":186,"endOffset":734,"count":1},{"startOffset":272,"endOffset":691,"count":0},{"startOffset":704,"endOffset":711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":371,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":571,"count":0}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":926,"endOffset":1377,"count":262},{"startOffset":1037,"endOffset":1082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1154,"endOffset":1372,"count":540},{"startOffset":1211,"endOffset":1235,"count":2},{"startOffset":1249,"endOffset":1310,"count":248},{"startOffset":1310,"endOffset":1371,"count":292}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":1437,"endOffset":2173,"count":260},{"startOffset":1498,"endOffset":1530,"count":2},{"startOffset":1530,"endOffset":1550,"count":258},{"startOffset":1583,"endOffset":1607,"count":306},{"startOffset":1609,"endOffset":1617,"count":52},{"startOffset":1626,"endOffset":1636,"count":4},{"startOffset":1660,"endOffset":1762,"count":0},{"startOffset":1813,"endOffset":1894,"count":0},{"startOffset":2141,"endOffset":2172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914,"endOffset":2003,"count":291},{"startOffset":1983,"endOffset":1997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1974,"count":639},{"startOffset":1965,"endOffset":1974,"count":348}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2026,"endOffset":2138,"count":246},{"startOffset":2046,"endOffset":2053,"count":74},{"startOffset":2053,"endOffset":2118,"count":172},{"startOffset":2118,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2092,"endOffset":2109,"count":217},{"startOffset":2100,"endOffset":2109,"count":54}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":2173,"endOffset":2244,"count":463},{"startOffset":2210,"endOffset":2218,"count":32},{"startOffset":2218,"endOffset":2243,"count":431},{"startOffset":2227,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":2244,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2360,"endOffset":2421,"count":30},{"startOffset":2393,"endOffset":2420,"count":6}],"isBlockCoverage":true},{"functionName":"d","ranges":[{"startOffset":2421,"endOffset":2472,"count":6}],"isBlockCoverage":true},{"functionName":"u","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":2528,"endOffset":2564,"count":38}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":2564,"endOffset":2656,"count":34}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2583,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2624,"endOffset":2651,"count":9},{"startOffset":2637,"endOffset":2650,"count":8}],"isBlockCoverage":true},{"functionName":"m","ranges":[{"startOffset":2656,"endOffset":2727,"count":1},{"startOffset":2701,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":2727,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":2809,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":2866,"endOffset":3163,"count":1054},{"startOffset":2896,"endOffset":2900,"count":0},{"startOffset":2901,"endOffset":2970,"count":0},{"startOffset":2993,"endOffset":3003,"count":0},{"startOffset":3014,"endOffset":3110,"count":0},{"startOffset":3123,"endOffset":3125,"count":0},{"startOffset":3133,"endOffset":3143,"count":0},{"startOffset":3145,"endOffset":3153,"count":0}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":3163,"endOffset":3524,"count":78},{"startOffset":3196,"endOffset":3250,"count":0},{"startOffset":3260,"endOffset":3264,"count":0},{"startOffset":3265,"endOffset":3334,"count":0},{"startOffset":3357,"endOffset":3367,"count":0},{"startOffset":3378,"endOffset":3473,"count":0},{"startOffset":3486,"endOffset":3498,"count":0},{"startOffset":3500,"endOffset":3510,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":3532,"endOffset":3601,"count":2}],"isBlockCoverage":true},{"functionName":"addMiddleware","ranges":[{"startOffset":3601,"endOffset":4067,"count":8},{"startOffset":3727,"endOffset":3930,"count":0}],"isBlockCoverage":true},{"functionName":"addCoerceMiddleware","ranges":[{"startOffset":4067,"endOffset":4295,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4183,"endOffset":4250,"count":15}],"isBlockCoverage":true},{"functionName":"getMiddleware","ranges":[{"startOffset":4295,"endOffset":4340,"count":1}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":4340,"endOffset":4395,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":4395,"endOffset":4471,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":4471,"endOffset":4545,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4531,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":4546,"endOffset":4853,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4583,"endOffset":4848,"count":16},{"startOffset":4622,"endOffset":4644,"count":8},{"startOffset":4644,"endOffset":4680,"count":6},{"startOffset":4658,"endOffset":4667,"count":0},{"startOffset":4680,"endOffset":4688,"count":8},{"startOffset":4688,"endOffset":4768,"count":0},{"startOffset":4768,"endOffset":4795,"count":8},{"startOffset":4795,"endOffset":4827,"count":1},{"startOffset":4827,"endOffset":4846,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4703,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4738,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4804,"endOffset":4825,"count":1}],"isBlockCoverage":true},{"functionName":"j","ranges":[{"startOffset":4853,"endOffset":4982,"count":5},{"startOffset":4918,"endOffset":4922,"count":3},{"startOffset":4922,"endOffset":4924,"count":2},{"startOffset":4936,"endOffset":4954,"count":1},{"startOffset":4954,"endOffset":4959,"count":4},{"startOffset":4960,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":4871,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4945,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"_","ranges":[{"startOffset":5013,"endOffset":5177,"count":2}],"isBlockCoverage":true},{"functionName":"addDirectory","ranges":[{"startOffset":5177,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"addHandler","ranges":[{"startOffset":5536,"endOffset":6668,"count":4},{"startOffset":5654,"endOffset":5664,"count":2},{"startOffset":5682,"endOffset":5793,"count":1},{"startOffset":5752,"endOffset":5793,"count":0},{"startOffset":5793,"endOffset":6194,"count":3},{"startOffset":5861,"endOffset":6094,"count":2},{"startOffset":5892,"endOffset":5920,"count":1},{"startOffset":5930,"endOffset":5949,"count":0},{"startOffset":5966,"endOffset":6002,"count":0},{"startOffset":6094,"endOffset":6102,"count":1},{"startOffset":6102,"endOffset":6193,"count":0},{"startOffset":6194,"endOffset":6667,"count":2},{"startOffset":6335,"endOffset":6352,"count":0},{"startOffset":6354,"endOffset":6402,"count":1},{"startOffset":6548,"endOffset":6552,"count":0},{"startOffset":6622,"endOffset":6666,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5577,"endOffset":5644,"count":4},{"startOffset":5597,"endOffset":5640,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5605,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":5657,"endOffset":5663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5685,"endOffset":5737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5734,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5801,"endOffset":5857,"count":3},{"startOffset":5837,"endOffset":5856,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6239,"endOffset":6250,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6296,"endOffset":6320,"count":3},{"startOffset":6309,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6414,"endOffset":6441,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandHandlers","ranges":[{"startOffset":6668,"endOffset":6710,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":6710,"endOffset":6793,"count":2}],"isBlockCoverage":true},{"functionName":"hasDefaultCommand","ranges":[{"startOffset":6793,"endOffset":6841,"count":2}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":6841,"endOffset":7291,"count":1},{"startOffset":7009,"endOffset":7063,"count":0},{"startOffset":7145,"endOffset":7224,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7154,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"applyBuilderUpdateUsageAndParse","ranges":[{"startOffset":7291,"endOffset":7841,"count":1},{"startOffset":7479,"endOffset":7604,"count":0},{"startOffset":7605,"endOffset":7796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7494,"endOffset":7602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7610,"endOffset":7647,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7771,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"parseAndUpdateUsage","ranges":[{"startOffset":7841,"endOffset":8259,"count":1},{"startOffset":8165,"endOffset":8219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8174,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":8259,"endOffset":8413,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":8413,"endOffset":8591,"count":1},{"startOffset":8482,"endOffset":8514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8538,"endOffset":8551,"count":0}],"isBlockCoverage":false},{"functionName":"handleValidationAndGetResult","ranges":[{"startOffset":8591,"endOffset":9288,"count":1},{"startOffset":9037,"endOffset":9099,"count":0},{"startOffset":9244,"endOffset":9285,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8754,"endOffset":8765,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8978,"endOffset":9033,"count":1},{"startOffset":9030,"endOffset":9032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9023,"endOffset":9028,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9159,"endOffset":9233,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddlewareAndGetResult","ranges":[{"startOffset":9288,"endOffset":9649,"count":1},{"startOffset":9345,"endOffset":9354,"count":0},{"startOffset":9533,"endOffset":9597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9542,"endOffset":9595,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":9649,"endOffset":10069,"count":1},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9986,"endOffset":9993,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":10069,"endOffset":10195,"count":1},{"startOffset":10153,"endOffset":10194,"count":0}],"isBlockCoverage":true},{"functionName":"cmdToParseOptions","ranges":[{"startOffset":10195,"endOffset":10508,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10299,"endOffset":10397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10420,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":10508,"endOffset":11522,"count":1},{"startOffset":10917,"endOffset":11521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10791,"endOffset":10897,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10805,"endOffset":10894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11181,"endOffset":11209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11241,"endOffset":11518,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaulted","ranges":[{"startOffset":11522,"endOffset":11691,"count":0}],"isBlockCoverage":false},{"functionName":"isInConfigs","ranges":[{"startOffset":11691,"endOffset":11892,"count":0}],"isBlockCoverage":false},{"functionName":"runDefaultBuilderOn","ranges":[{"startOffset":11892,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12303,"endOffset":12629,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":12629,"endOffset":12712,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":12712,"endOffset":12848,"count":2},{"startOffset":12781,"endOffset":12839,"count":3},{"startOffset":12803,"endOffset":12811,"count":1},{"startOffset":12812,"endOffset":12821,"count":2},{"startOffset":12821,"endOffset":12839,"count":1},{"startOffset":12839,"endOffset":12847,"count":0}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":12848,"endOffset":12959,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":12959,"endOffset":13106,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":13106,"endOffset":13213,"count":1}],"isBlockCoverage":true},{"functionName":"k","ranges":[{"startOffset":13214,"endOffset":13296,"count":1},{"startOffset":13252,"endOffset":13295,"count":0}],"isBlockCoverage":true},{"functionName":"x","ranges":[{"startOffset":13296,"endOffset":13337,"count":1}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":13337,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":13525,"endOffset":13565,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":13565,"endOffset":21218,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.failFn","ranges":[{"startOffset":13618,"endOffset":13640,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.showHelpOnFail","ranges":[{"startOffset":13681,"endOffset":13806,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.fail","ranges":[{"startOffset":13823,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.usage","ranges":[{"startOffset":14295,"endOffset":14351,"count":1},{"startOffset":14310,"endOffset":14324,"count":0},{"startOffset":14342,"endOffset":14346,"count":0}],"isBlockCoverage":true},{"functionName":"P.n.getUsage","ranges":[{"startOffset":14363,"endOffset":14368,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getUsageDisabled","ranges":[{"startOffset":14388,"endOffset":14393,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getPositionalGroupName","ranges":[{"startOffset":14419,"endOffset":14440,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.example","ranges":[{"startOffset":14460,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.command","ranges":[{"startOffset":14506,"endOffset":14584,"count":2},{"startOffset":14530,"endOffset":14559,"count":1},{"startOffset":14571,"endOffset":14575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14542,"endOffset":14556,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getCommands","ranges":[{"startOffset":14599,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.describe","ranges":[{"startOffset":14625,"endOffset":14766,"count":50},{"startOffset":14655,"endOffset":14689,"count":0},{"startOffset":14708,"endOffset":14758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14667,"endOffset":14687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14733,"endOffset":14756,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getDescriptions","ranges":[{"startOffset":14785,"endOffset":14790,"count":45}],"isBlockCoverage":true},{"functionName":"P.n.epilog","ranges":[{"startOffset":14809,"endOffset":14823,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.wrap","ranges":[{"startOffset":14842,"endOffset":14855,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getWrap","ranges":[{"startOffset":14866,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":15037,"endOffset":15258,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":15264,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":15372,"endOffset":15575,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.deferY18nLookup","ranges":[{"startOffset":15593,"endOffset":15599,"count":5}],"isBlockCoverage":true},{"functionName":"P.n.help","ranges":[{"startOffset":15607,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.cacheHelpMessage","ranges":[{"startOffset":20057,"endOffset":20082,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.clearCachedHelpMessage","ranges":[{"startOffset":20108,"endOffset":20128,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.hasCachedHelpMessage","ranges":[{"startOffset":20152,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.showHelp","ranges":[{"startOffset":20185,"endOffset":20295,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.functionDescription","ranges":[{"startOffset":20318,"endOffset":20399,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.stringifiedValues","ranges":[{"startOffset":20420,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.version","ranges":[{"startOffset":20577,"endOffset":20585,"count":4}],"isBlockCoverage":true},{"functionName":"P.n.showVersion","ranges":[{"startOffset":20600,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.reset","ranges":[{"startOffset":20712,"endOffset":20788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20775,"endOffset":20783,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.freeze","ranges":[{"startOffset":20816,"endOffset":20939,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.unfreeze","ranges":[{"startOffset":20951,"endOffset":21215,"count":2},{"startOffset":20987,"endOffset":21213,"count":1}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":21218,"endOffset":21257,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":21257,"endOffset":21299,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":21299,"endOffset":21334,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":21342,"endOffset":21745,"count":2},{"startOffset":21629,"endOffset":21647,"count":0},{"startOffset":21709,"endOffset":21727,"count":0},{"startOffset":21741,"endOffset":21744,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCompletion","ranges":[{"startOffset":21745,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"commandCompletions","ranges":[{"startOffset":22183,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"optionCompletions","ranges":[{"startOffset":22504,"endOffset":22928,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromOptionsCompletions","ranges":[{"startOffset":22928,"endOffset":23100,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromPositionalsCompletions","ranges":[{"startOffset":23100,"endOffset":23519,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousArgChoices","ranges":[{"startOffset":23519,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"previousArgHasChoices","ranges":[{"startOffset":23941,"endOffset":24034,"count":0}],"isBlockCoverage":false},{"functionName":"argsContainKey","ranges":[{"startOffset":24034,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"completeOptionKey","ranges":[{"startOffset":24233,"endOffset":24764,"count":0}],"isBlockCoverage":false},{"functionName":"customCompletion","ranges":[{"startOffset":24764,"endOffset":25283,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":25283,"endOffset":25489,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":25489,"endOffset":27133,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunction","ranges":[{"startOffset":27133,"endOffset":27185,"count":0}],"isBlockCoverage":false},{"functionName":"setParsed","ranges":[{"startOffset":27185,"endOffset":27221,"count":1}],"isBlockCoverage":true},{"functionName":"N","ranges":[{"startOffset":27222,"endOffset":27674,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":28887,"endOffset":29895,"count":2}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":29895,"endOffset":30205,"count":3},{"startOffset":29985,"endOffset":30031,"count":1},{"startOffset":30038,"endOffset":30050,"count":0},{"startOffset":30080,"endOffset":30082,"count":1},{"startOffset":30082,"endOffset":30089,"count":2},{"startOffset":30152,"endOffset":30197,"count":2}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":30205,"endOffset":30243,"count":3}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":30243,"endOffset":30529,"count":0}],"isBlockCoverage":false},{"functionName":"showHidden","ranges":[{"startOffset":30529,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":30579,"endOffset":30711,"count":23}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":30711,"endOffset":30805,"count":1}],"isBlockCoverage":true},{"functionName":"boolean","ranges":[{"startOffset":30805,"endOffset":30903,"count":7}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":30903,"endOffset":31275,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30987,"endOffset":31262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30997,"endOffset":31020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31023,"endOffset":31195,"count":1},{"startOffset":31069,"endOffset":31192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31198,"endOffset":31260,"count":0}],"isBlockCoverage":false},{"functionName":"choices","ranges":[{"startOffset":31275,"endOffset":31413,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":31413,"endOffset":32093,"count":6},{"startOffset":31506,"endOffset":31607,"count":0},{"startOffset":31629,"endOffset":31692,"count":0},{"startOffset":31698,"endOffset":31746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31813,"endOffset":32083,"count":6},{"startOffset":31875,"endOffset":32080,"count":2},{"startOffset":32080,"endOffset":32082,"count":4}],"isBlockCoverage":true},{"functionName":"Object.hasOwnProperty.call.i.<computed>","ranges":[{"startOffset":31879,"endOffset":31909,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31912,"endOffset":32048,"count":2},{"startOffset":32012,"endOffset":32039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32051,"endOffset":32078,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":32093,"endOffset":32209,"count":4}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":32209,"endOffset":32699,"count":2},{"startOffset":32332,"endOffset":32545,"count":1},{"startOffset":32372,"endOffset":32388,"count":0},{"startOffset":32485,"endOffset":32487,"count":0},{"startOffset":32545,"endOffset":32698,"count":1},{"startOffset":32677,"endOffset":32681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32502,"endOffset":32537,"count":1}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":32699,"endOffset":32998,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":32998,"endOffset":33198,"count":2}],"isBlockCoverage":true},{"functionName":"commands","ranges":[{"startOffset":33198,"endOffset":33253,"count":0}],"isBlockCoverage":false},{"functionName":"commandDir","ranges":[{"startOffset":33253,"endOffset":33439,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":33439,"endOffset":33533,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":33533,"endOffset":33907,"count":9},{"startOffset":33621,"endOffset":33683,"count":0},{"startOffset":33704,"endOffset":33853,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":33907,"endOffset":33950,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":33950,"endOffset":34210,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":34210,"endOffset":34593,"count":0}],"isBlockCoverage":false},{"functionName":"demandOption","ranges":[{"startOffset":34593,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateOption","ranges":[{"startOffset":34743,"endOffset":34868,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":34868,"endOffset":34997,"count":50}],"isBlockCoverage":true},{"functionName":"detectLocale","ranges":[{"startOffset":34997,"endOffset":35077,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":35077,"endOffset":35209,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":35209,"endOffset":35293,"count":1}],"isBlockCoverage":true},{"functionName":"epilog","ranges":[{"startOffset":35293,"endOffset":35327,"count":1}],"isBlockCoverage":true},{"functionName":"example","ranges":[{"startOffset":35327,"endOffset":35484,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":35484,"endOffset":35573,"count":0}],"isBlockCoverage":false},{"functionName":"exitProcess","ranges":[{"startOffset":35573,"endOffset":35655,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":35655,"endOffset":35852,"count":1},{"startOffset":35730,"endOffset":35738,"count":0},{"startOffset":35739,"endOffset":35815,"count":0}],"isBlockCoverage":true},{"functionName":"getAliases","ranges":[{"startOffset":35852,"endOffset":35907,"count":8},{"startOffset":35883,"endOffset":35903,"count":2},{"startOffset":35903,"endOffset":35906,"count":6}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":35907,"endOffset":36099,"count":0}],"isBlockCoverage":false},{"functionName":"getDemandedOptions","ranges":[{"startOffset":36099,"endOffset":36166,"count":1}],"isBlockCoverage":true},{"functionName":"getDemandedCommands","ranges":[{"startOffset":36166,"endOffset":36235,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecatedOptions","ranges":[{"startOffset":36235,"endOffset":36306,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectLocale","ranges":[{"startOffset":36306,"endOffset":36345,"count":0}],"isBlockCoverage":false},{"functionName":"getExitProcess","ranges":[{"startOffset":36345,"endOffset":36383,"count":0}],"isBlockCoverage":false},{"functionName":"getGroups","ranges":[{"startOffset":36383,"endOffset":36449,"count":0}],"isBlockCoverage":false},{"functionName":"getHelp","ranges":[{"startOffset":36449,"endOffset":36784,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":36784,"endOffset":36819,"count":4}],"isBlockCoverage":true},{"functionName":"getStrict","ranges":[{"startOffset":36819,"endOffset":36853,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictCommands","ranges":[{"startOffset":36853,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptions","ranges":[{"startOffset":36895,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":36936,"endOffset":37189,"count":14},{"startOffset":37102,"endOffset":37183,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37080,"endOffset":37100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37114,"endOffset":37181,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":37189,"endOffset":37428,"count":41},{"startOffset":37313,"endOffset":37339,"count":0},{"startOffset":37377,"endOffset":37381,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37401,"endOffset":37420,"count":257}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":37428,"endOffset":37520,"count":1}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":37520,"endOffset":37639,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":37639,"endOffset":37804,"count":0}],"isBlockCoverage":false},{"functionName":"middleware","ranges":[{"startOffset":37804,"endOffset":37866,"count":2}],"isBlockCoverage":true},{"functionName":"nargs","ranges":[{"startOffset":37866,"endOffset":37991,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":37991,"endOffset":38081,"count":2}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":38081,"endOffset":38177,"count":1}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":38177,"endOffset":40145,"count":44},{"startOffset":38264,"endOffset":38316,"count":1},{"startOffset":38316,"endOffset":40133,"count":43},{"startOffset":38339,"endOffset":38347,"count":0},{"startOffset":38412,"endOffset":38419,"count":0},{"startOffset":38428,"endOffset":38772,"count":0},{"startOffset":38805,"endOffset":38828,"count":0},{"startOffset":38864,"endOffset":38891,"count":0},{"startOffset":38933,"endOffset":38951,"count":0},{"startOffset":38966,"endOffset":39042,"count":0},{"startOffset":39054,"endOffset":39085,"count":4},{"startOffset":39099,"endOffset":39126,"count":9},{"startOffset":39145,"endOffset":39172,"count":0},{"startOffset":39189,"endOffset":39212,"count":0},{"startOffset":39221,"endOffset":39252,"count":1},{"startOffset":39264,"endOffset":39283,"count":2},{"startOffset":39293,"endOffset":39320,"count":0},{"startOffset":39329,"endOffset":39354,"count":6},{"startOffset":39362,"endOffset":39385,"count":40},{"startOffset":39417,"endOffset":39467,"count":0},{"startOffset":39495,"endOffset":39541,"count":0},{"startOffset":39571,"endOffset":39619,"count":0},{"startOffset":39649,"endOffset":39697,"count":0},{"startOffset":39725,"endOffset":39740,"count":0},{"startOffset":39767,"endOffset":39792,"count":0},{"startOffset":39813,"endOffset":39874,"count":5},{"startOffset":39891,"endOffset":39915,"count":0},{"startOffset":39949,"endOffset":39957,"count":0},{"startOffset":40034,"endOffset":40054,"count":1},{"startOffset":40083,"endOffset":40097,"count":1},{"startOffset":40111,"endOffset":40132,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38288,"endOffset":38313,"count":42}],"isBlockCoverage":true},{"functionName":"options","ranges":[{"startOffset":40145,"endOffset":40182,"count":43}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":40182,"endOffset":40870,"count":1},{"startOffset":40298,"endOffset":40318,"count":0},{"startOffset":40337,"endOffset":40361,"count":0},{"startOffset":40382,"endOffset":40407,"count":0},{"startOffset":40442,"endOffset":40460,"count":0},{"startOffset":40767,"endOffset":40869,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40556,"endOffset":40635,"count":1},{"startOffset":40574,"endOffset":40632,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40645,"endOffset":40723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40735,"endOffset":40765,"count":1}],"isBlockCoverage":true},{"functionName":"parseAsync","ranges":[{"startOffset":40870,"endOffset":40947,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":40947,"endOffset":41104,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":41104,"endOffset":41191,"count":1}],"isBlockCoverage":true},{"functionName":"pkgConf","ranges":[{"startOffset":41191,"endOffset":41491,"count":0}],"isBlockCoverage":false},{"functionName":"positional","ranges":[{"startOffset":41491,"endOffset":42122,"count":1},{"startOffset":41858,"endOffset":41893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41701,"endOffset":41780,"count":3},{"startOffset":41720,"endOffset":41764,"count":1},{"startOffset":41765,"endOffset":41780,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41956,"endOffset":42048,"count":4},{"startOffset":41989,"endOffset":42018,"count":1},{"startOffset":42007,"endOffset":42018,"count":0},{"startOffset":42018,"endOffset":42047,"count":3},{"startOffset":42023,"endOffset":42047,"count":0}],"isBlockCoverage":true},{"functionName":"recommendCommands","ranges":[{"startOffset":42122,"endOffset":42211,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":42211,"endOffset":42253,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42253,"endOffset":42294,"count":0}],"isBlockCoverage":false},{"functionName":"requiresArg","ranges":[{"startOffset":42294,"endOffset":42473,"count":14}],"isBlockCoverage":true},{"functionName":"showCompletionScript","ranges":[{"startOffset":42473,"endOffset":42662,"count":0}],"isBlockCoverage":false},{"functionName":"showHelp","ranges":[{"startOffset":42662,"endOffset":43060,"count":0}],"isBlockCoverage":false},{"functionName":"scriptName","ranges":[{"startOffset":43060,"endOffset":43121,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":43121,"endOffset":43242,"count":0}],"isBlockCoverage":false},{"functionName":"showVersion","ranges":[{"startOffset":43242,"endOffset":43343,"count":0}],"isBlockCoverage":false},{"functionName":"skipValidation","ranges":[{"startOffset":43343,"endOffset":43443,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":43443,"endOffset":43523,"count":0}],"isBlockCoverage":false},{"functionName":"strictCommands","ranges":[{"startOffset":43523,"endOffset":43611,"count":0}],"isBlockCoverage":false},{"functionName":"strictOptions","ranges":[{"startOffset":43611,"endOffset":43698,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":43698,"endOffset":43794,"count":1}],"isBlockCoverage":true},{"functionName":"terminalWidth","ranges":[{"startOffset":43794,"endOffset":43859,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":43859,"endOffset":43904,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrings","ranges":[{"startOffset":43904,"endOffset":44021,"count":1}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":44021,"endOffset":44366,"count":0}],"isBlockCoverage":false},{"functionName":"usageConfiguration","ranges":[{"startOffset":44366,"endOffset":44452,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":44452,"endOffset":44991,"count":3},{"startOffset":44567,"endOffset":44646,"count":1},{"startOffset":44668,"endOffset":44685,"count":2},{"startOffset":44685,"endOffset":44787,"count":1},{"startOffset":44714,"endOffset":44745,"count":0},{"startOffset":44770,"endOffset":44786,"count":0},{"startOffset":44824,"endOffset":44826,"count":0},{"startOffset":44835,"endOffset":44890,"count":2},{"startOffset":44915,"endOffset":44923,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":44991,"endOffset":45084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45084,"endOffset":45695,"count":1},{"startOffset":45629,"endOffset":45694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45695,"endOffset":46036,"count":2}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":45713,"endOffset":45869,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":45876,"endOffset":46034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46036,"endOffset":46266,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46071,"endOffset":46220,"count":44},{"startOffset":46098,"endOffset":46105,"count":2},{"startOffset":46105,"endOffset":46147,"count":42},{"startOffset":46147,"endOffset":46187,"count":18},{"startOffset":46161,"endOffset":46187,"count":2},{"startOffset":46187,"endOffset":46219,"count":24},{"startOffset":46206,"endOffset":46219,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46266,"endOffset":46358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46358,"endOffset":46856,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46856,"endOffset":47374,"count":2},{"startOffset":46996,"endOffset":47037,"count":0},{"startOffset":47193,"endOffset":47371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47047,"endOffset":47147,"count":2},{"startOffset":47144,"endOffset":47146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47374,"endOffset":47403,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47403,"endOffset":47432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47432,"endOffset":47653,"count":2},{"startOffset":47464,"endOffset":47616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47653,"endOffset":47697,"count":2},{"startOffset":47685,"endOffset":47696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47697,"endOffset":47891,"count":1},{"startOffset":47720,"endOffset":47728,"count":0},{"startOffset":47769,"endOffset":47882,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47891,"endOffset":48310,"count":2},{"startOffset":47935,"endOffset":47960,"count":0},{"startOffset":48251,"endOffset":48261,"count":0},{"startOffset":48287,"endOffset":48291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48114,"endOffset":48169,"count":4},{"startOffset":48147,"endOffset":48169,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48310,"endOffset":48393,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48346,"endOffset":48390,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48393,"endOffset":48461,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48425,"endOffset":48458,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48461,"endOffset":48564,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48493,"endOffset":48561,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48564,"endOffset":48714,"count":96},{"startOffset":48600,"endOffset":48625,"count":0},{"startOffset":48660,"endOffset":48690,"count":1},{"startOffset":48680,"endOffset":48690,"count":20},{"startOffset":48690,"endOffset":48713,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48611,"endOffset":48622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48634,"endOffset":48655,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48714,"endOffset":48760,"count":146},{"startOffset":48743,"endOffset":48757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48760,"endOffset":48822,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48822,"endOffset":49732,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49013,"endOffset":49040,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49077,"endOffset":49103,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49119,"endOffset":49145,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49161,"endOffset":49188,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49207,"endOffset":49233,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49252,"endOffset":49278,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49313,"endOffset":49340,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49364,"endOffset":49391,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49414,"endOffset":49441,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49468,"endOffset":49494,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49511,"endOffset":49538,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49560,"endOffset":49587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49732,"endOffset":49768,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalMethods","ranges":[{"startOffset":49768,"endOffset":50389,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50389,"endOffset":50417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50417,"endOffset":50445,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50445,"endOffset":50473,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50473,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50501,"endOffset":50534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50534,"endOffset":50563,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50563,"endOffset":50592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50592,"endOffset":50622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50622,"endOffset":50650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50650,"endOffset":50879,"count":3},{"startOffset":50669,"endOffset":50678,"count":1},{"startOffset":50678,"endOffset":50686,"count":2},{"startOffset":50686,"endOffset":50713,"count":1},{"startOffset":50759,"endOffset":50808,"count":1},{"startOffset":50809,"endOffset":50826,"count":1},{"startOffset":50828,"endOffset":50876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50879,"endOffset":57436,"count":3},{"startOffset":50914,"endOffset":50918,"count":2},{"startOffset":50963,"endOffset":50967,"count":2},{"startOffset":51012,"endOffset":51016,"count":2},{"startOffset":51691,"endOffset":51715,"count":1},{"startOffset":51715,"endOffset":51738,"count":2},{"startOffset":51768,"endOffset":51792,"count":1},{"startOffset":51792,"endOffset":57044,"count":2},{"startOffset":57072,"endOffset":57094,"count":1},{"startOffset":57094,"endOffset":57195,"count":2},{"startOffset":57214,"endOffset":57320,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51045,"endOffset":51092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51159,"endOffset":51245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51375,"endOffset":51427,"count":24},{"startOffset":51402,"endOffset":51406,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51416,"endOffset":51424,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51569,"endOffset":51610,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51599,"endOffset":51607,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51793,"endOffset":57008,"count":2}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51858,"endOffset":52604,"count":1},{"startOffset":51923,"endOffset":51938,"count":0},{"startOffset":51997,"endOffset":52603,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":52621,"endOffset":52783,"count":1},{"startOffset":52638,"endOffset":52782,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":52802,"endOffset":53192,"count":1},{"startOffset":52857,"endOffset":52935,"count":0},{"startOffset":52940,"endOffset":53191,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":53210,"endOffset":54009,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":54026,"endOffset":54359,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":54388,"endOffset":54564,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":54580,"endOffset":55078,"count":1},{"startOffset":54661,"endOffset":55077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54685,"endOffset":54861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54945,"endOffset":55065,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":55089,"endOffset":55318,"count":0}],"isBlockCoverage":false},{"functionName":"r.implies","ranges":[{"startOffset":55328,"endOffset":55583,"count":0}],"isBlockCoverage":false},{"functionName":"r.getImplied","ranges":[{"startOffset":55597,"endOffset":55617,"count":0}],"isBlockCoverage":false},{"functionName":"r.implications","ranges":[{"startOffset":55633,"endOffset":55877,"count":1},{"startOffset":55803,"endOffset":55876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55683,"endOffset":55791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55854,"endOffset":55863,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicts","ranges":[{"startOffset":55899,"endOffset":56135,"count":14},{"startOffset":55990,"endOffset":56041,"count":0},{"startOffset":56059,"endOffset":56070,"count":4},{"startOffset":56087,"endOffset":56120,"count":2},{"startOffset":56120,"endOffset":56133,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56015,"endOffset":56039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56099,"endOffset":56118,"count":10}],"isBlockCoverage":true},{"functionName":"r.getConflicting","ranges":[{"startOffset":56153,"endOffset":56158,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicting","ranges":[{"startOffset":56173,"endOffset":56586,"count":1},{"startOffset":56399,"endOffset":56585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56209,"endOffset":56333,"count":15},{"startOffset":56217,"endOffset":56332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56233,"endOffset":56330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56425,"endOffset":56583,"count":0}],"isBlockCoverage":false},{"functionName":"r.recommendCommands","ranges":[{"startOffset":56607,"endOffset":56783,"count":0}],"isBlockCoverage":false},{"functionName":"r.reset","ranges":[{"startOffset":56792,"endOffset":56849,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56818,"endOffset":56826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56836,"endOffset":56844,"count":0}],"isBlockCoverage":false},{"functionName":"r.freeze","ranges":[{"startOffset":56877,"endOffset":56922,"count":1}],"isBlockCoverage":true},{"functionName":"r.unfreeze","ranges":[{"startOffset":56934,"endOffset":57005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57095,"endOffset":57135,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57225,"endOffset":57265,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57436,"endOffset":57487,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57487,"endOffset":59870,"count":2},{"startOffset":57517,"endOffset":57520,"count":1},{"startOffset":57524,"endOffset":57540,"count":1},{"startOffset":58128,"endOffset":58156,"count":0},{"startOffset":58213,"endOffset":58217,"count":0},{"startOffset":58273,"endOffset":58291,"count":0},{"startOffset":58404,"endOffset":58847,"count":0},{"startOffset":58883,"endOffset":58887,"count":1},{"startOffset":58888,"endOffset":58980,"count":1},{"startOffset":58980,"endOffset":59239,"count":0},{"startOffset":59239,"endOffset":59400,"count":1},{"startOffset":59259,"endOffset":59321,"count":0},{"startOffset":59323,"endOffset":59399,"count":0},{"startOffset":59403,"endOffset":59529,"count":0},{"startOffset":59533,"endOffset":59760,"count":0},{"startOffset":59761,"endOffset":59832,"count":0},{"startOffset":59832,"endOffset":59855,"count":1},{"startOffset":59855,"endOffset":59857,"count":0},{"startOffset":59857,"endOffset":59859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57965,"endOffset":58031,"count":25},{"startOffset":57986,"endOffset":57997,"count":0},{"startOffset":58016,"endOffset":58030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58227,"endOffset":58240,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59120,"endOffset":59214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59469,"endOffset":59526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59709,"endOffset":59755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59870,"endOffset":60315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59930,"endOffset":60314,"count":1},{"startOffset":59939,"endOffset":59962,"count":0},{"startOffset":60056,"endOffset":60095,"count":0},{"startOffset":60110,"endOffset":60157,"count":0},{"startOffset":60172,"endOffset":60219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60315,"endOffset":60339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60339,"endOffset":60441,"count":53},{"startOffset":60369,"endOffset":60394,"count":49},{"startOffset":60394,"endOffset":60440,"count":4},{"startOffset":60416,"endOffset":60440,"count":43}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":60733,"endOffset":60750,"count":6}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":61020,"endOffset":61036,"count":4}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":61065,"endOffset":61096,"count":0}],"isBlockCoverage":false},{"functionName":"execPath","ranges":[{"startOffset":61106,"endOffset":61126,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":61132,"endOffset":61152,"count":0}],"isBlockCoverage":false},{"functionName":"ue.Yargs","ranges":[{"startOffset":61923,"endOffset":62074,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":62021,"endOffset":62034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32614,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2950,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3709,"endOffset":3829,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3999,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":5278,"endOffset":5341,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":5611,"endOffset":5997,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":6226,"endOffset":6616,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":6825,"endOffset":7204,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":7419,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":8060,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":8723,"endOffset":9134,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":9348,"endOffset":9674,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":9895,"endOffset":10229,"count":6},{"startOffset":9977,"endOffset":10038,"count":0},{"startOffset":10074,"endOffset":10226,"count":0}],"isBlockCoverage":true},{"functionName":"isSpecial","ranges":[{"startOffset":10234,"endOffset":10360,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareMaps","ranges":[{"startOffset":10488,"endOffset":11111,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareArrayBuffersOrViews","ranges":[{"startOffset":11115,"endOffset":13090,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareSets","ranges":[{"startOffset":13094,"endOffset":13987,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareArrays","ranges":[{"startOffset":13991,"endOffset":15211,"count":0}],"isBlockCoverage":false},{"functionName":"compareBranch","ranges":[{"startOffset":15706,"endOffset":17705,"count":0}],"isBlockCoverage":false},{"functionName":"partialDeepStrictEqual","ranges":[{"startOffset":17921,"endOffset":18361,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18388,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18790,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19539,"endOffset":23026,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23030,"endOffset":23178,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23182,"endOffset":23554,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23558,"endOffset":24295,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24299,"endOffset":25958,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25962,"endOffset":26598,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26602,"endOffset":27267,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27433,"endOffset":27529,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27716,"endOffset":27830,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28000,"endOffset":28096,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28270,"endOffset":28384,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28519,"endOffset":30361,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30366,"endOffset":31473,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":31678,"endOffset":31772,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31989,"endOffset":32097,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32297,"endOffset":32368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14171,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1553,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":2050,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":2641,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"checkOperator","ranges":[{"startOffset":2743,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"getColoredMyersDiff","ranges":[{"startOffset":3253,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"getStackedDiff","ranges":[{"startOffset":3663,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"getSimpleDiff","ranges":[{"startOffset":4669,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleDiff","ranges":[{"startOffset":5453,"endOffset":5738,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":5742,"endOffset":7729,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":7733,"endOffset":8079,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":8123,"endOffset":13163,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":13169,"endOffset":13246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13252,"endOffset":14130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":274,"endOffset":541,"count":110},{"startOffset":347,"endOffset":408,"count":0},{"startOffset":528,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":546,"endOffset":1200,"count":1},{"startOffset":717,"endOffset":721,"count":0},{"startOffset":778,"endOffset":782,"count":0},{"startOffset":839,"endOffset":843,"count":0},{"startOffset":901,"endOffset":905,"count":0},{"startOffset":960,"endOffset":964,"count":0},{"startOffset":1020,"endOffset":1024,"count":0},{"startOffset":1078,"endOffset":1082,"count":0},{"startOffset":1138,"endOffset":1142,"count":0}],"isBlockCoverage":true}]},{"scriptId":"271","url":"node:internal/assert/myers_diff","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5135,"count":1}],"isBlockCoverage":false},{"functionName":"areLinesEqual","ranges":[{"startOffset":239,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"myersDiff","ranges":[{"startOffset":482,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"backtrack","ranges":[{"startOffset":1657,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"printSimpleMyersDiff","ranges":[{"startOffset":3065,"endOffset":3537,"count":0}],"isBlockCoverage":false},{"functionName":"printMyersDiff","ranges":[{"startOffset":3541,"endOffset":5060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"node:internal/assert/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9869,"count":1}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":1555,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":1608,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":2577,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":4261,"endOffset":5716,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":5720,"endOffset":9201,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":9205,"endOffset":9829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":514,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1586,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6986,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":131,"endOffset":629,"count":1},{"startOffset":206,"endOffset":211,"count":0},{"startOffset":254,"endOffset":268,"count":0},{"startOffset":355,"endOffset":361,"count":0},{"startOffset":487,"endOffset":512,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":635,"endOffset":1729,"count":1},{"startOffset":696,"endOffset":777,"count":0},{"startOffset":939,"endOffset":955,"count":0},{"startOffset":973,"endOffset":991,"count":0},{"startOffset":1054,"endOffset":1077,"count":0},{"startOffset":1188,"endOffset":1207,"count":0},{"startOffset":1209,"endOffset":1576,"count":0},{"startOffset":1700,"endOffset":1706,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":831,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":976,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1735,"endOffset":3297,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3303,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3366,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3421,"endOffset":3708,"count":1},{"startOffset":3549,"endOffset":3701,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3714,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":4070,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4224,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4885,"endOffset":5618,"count":1},{"startOffset":5288,"endOffset":5562,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5624,"endOffset":6109,"count":1},{"startOffset":5801,"endOffset":5828,"count":0},{"startOffset":5830,"endOffset":6080,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":6115,"endOffset":6180,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6185,"endOffset":6537,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6725,"endOffset":6878,"count":1},{"startOffset":6820,"endOffset":6871,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6899,"endOffset":6957,"count":1}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10255,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":173,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":358,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":454,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":507,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":1001,"endOffset":1144,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1150,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2279,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2410,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2632,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2978,"endOffset":4905,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4986,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5776,"endOffset":7261,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7267,"endOffset":7548,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7554,"endOffset":8416,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8421,"endOffset":8678,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8760,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8984,"endOffset":9214,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":9216,"endOffset":9426,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9428,"endOffset":9679,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9693,"endOffset":9940,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":10116,"endOffset":10229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":189,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1806,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":73,"endOffset":1713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10292,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":10289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5988,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":409,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":520,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":739,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":921,"endOffset":2181,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2283,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2827,"endOffset":5733,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5806,"endOffset":5985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":434,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":116,"endOffset":432,"count":2},{"startOffset":242,"endOffset":270,"count":0},{"startOffset":288,"endOffset":429,"count":4},{"startOffset":344,"endOffset":419,"count":2},{"startOffset":419,"endOffset":425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"283","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1129,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":238,"endOffset":1093,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2953,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":247,"endOffset":291,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":305,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":357,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1308,"endOffset":2870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":189,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10292,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":10289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":247,"count":1}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":994,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":281,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":390,"endOffset":991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11473,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1055,"endOffset":11206,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3855,"endOffset":3887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4847,"endOffset":4879,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5037,"endOffset":5068,"count":6}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":6007,"endOffset":6511,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8226,"endOffset":10432,"count":1},{"startOffset":8560,"endOffset":8599,"count":0},{"startOffset":8601,"endOffset":8800,"count":0},{"startOffset":8829,"endOffset":9913,"count":0},{"startOffset":9943,"endOffset":10170,"count":0},{"startOffset":10195,"endOffset":10403,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8339,"endOffset":8469,"count":2},{"startOffset":8372,"endOffset":8460,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10451,"endOffset":11076,"count":1},{"startOffset":10884,"endOffset":11069,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":11229,"endOffset":11470,"count":1},{"startOffset":11374,"endOffset":11467,"count":0}],"isBlockCoverage":true}]},{"scriptId":"292","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":572,"endOffset":5021,"count":6}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":758,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1242,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1481,"endOffset":1554,"count":3}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":1691,"endOffset":1763,"count":5}],"isBlockCoverage":true},{"functionName":"beforeEach","ranges":[{"startOffset":1907,"endOffset":1981,"count":3}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":2123,"endOffset":2196,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":2419,"endOffset":2622,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2833,"endOffset":2928,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3394,"endOffset":4460,"count":21},{"startOffset":3615,"endOffset":3656,"count":0},{"startOffset":3696,"endOffset":3737,"count":0},{"startOffset":3738,"endOffset":3773,"count":0},{"startOffset":3785,"endOffset":3864,"count":0},{"startOffset":3980,"endOffset":4426,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4648,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4948,"endOffset":5005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36408,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1637,"endOffset":1770,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1930,"endOffset":2054,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2222,"endOffset":2347,"count":19}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3151,"endOffset":28931,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":4245,"endOffset":4324,"count":1}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5914,"endOffset":6165,"count":1},{"startOffset":6019,"endOffset":6103,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":6171,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForImport","ranges":[{"startOffset":7454,"endOffset":7709,"count":45}],"isBlockCoverage":true},{"functionName":"getModuleJobForRequireInImportedCJS","ranges":[{"startOffset":8220,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"#getJobFromResolveResult","ranges":[{"startOffset":9073,"endOffset":9559,"count":45},{"startOffset":9414,"endOffset":9535,"count":18}],"isBlockCoverage":true},{"functionName":"importSyncForRequire","ranges":[{"startOffset":10106,"endOffset":12203,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForRequire","ranges":[{"startOffset":12637,"endOffset":16158,"count":0}],"isBlockCoverage":false},{"functionName":"#translate","ranges":[{"startOffset":16740,"endOffset":17049,"count":18},{"startOffset":16903,"endOffset":16968,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTranslateForRequireInImportedCJS","ranges":[{"startOffset":17476,"endOffset":18420,"count":0}],"isBlockCoverage":false},{"functionName":"loadAndTranslate","ranges":[{"startOffset":18792,"endOffset":18972,"count":18}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":19798,"endOffset":20809,"count":18},{"startOffset":20052,"endOffset":20159,"count":0},{"startOffset":20292,"endOffset":20333,"count":0},{"startOffset":20391,"endOffset":20406,"count":0},{"startOffset":20408,"endOffset":20464,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":21282,"endOffset":21692,"count":6}],"isBlockCoverage":true},{"functionName":"onImport.tracePromise.__proto__","ranges":[{"startOffset":21393,"endOffset":21610,"count":6}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":21763,"endOffset":22319,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23058,"endOffset":23385,"count":45},{"startOffset":23172,"endOffset":23300,"count":0}],"isBlockCoverage":true},{"functionName":"#cachedDefaultResolve","ranges":[{"startOffset":23757,"endOffset":24213,"count":45},{"startOffset":24011,"endOffset":24047,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":24647,"endOffset":24949,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":25675,"endOffset":25858,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":26077,"endOffset":26428,"count":45}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":26752,"endOffset":26990,"count":18},{"startOffset":26810,"endOffset":26873,"count":0}],"isBlockCoverage":true},{"functionName":"#loadAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":27359,"endOffset":27633,"count":0}],"isBlockCoverage":false},{"functionName":"#loadSync","ranges":[{"startOffset":28190,"endOffset":28285,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":28291,"endOffset":28446,"count":18},{"startOffset":28350,"endOffset":28441,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":28452,"endOffset":28794,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":28860,"endOffset":28928,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29017,"endOffset":31680,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":32073,"endOffset":33729,"count":1},{"startOffset":32487,"endOffset":33675,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":32564,"endOffset":33066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33390,"endOffset":33478,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":33849,"endOffset":34032,"count":0}],"isBlockCoverage":false},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":34548,"endOffset":34663,"count":6}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":35936,"endOffset":36292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3991,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1343,"endOffset":1384,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1817,"endOffset":3236,"count":18},{"startOffset":2016,"endOffset":2147,"count":0},{"startOffset":2223,"endOffset":2371,"count":0},{"startOffset":2646,"endOffset":2707,"count":0},{"startOffset":2715,"endOffset":2826,"count":0},{"startOffset":2834,"endOffset":3228,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3477,"endOffset":3911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4174,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":295,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":878,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1262,"endOffset":1890,"count":45},{"startOffset":1680,"endOffset":1889,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1896,"endOffset":2118,"count":90},{"startOffset":2012,"endOffset":2086,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2300,"endOffset":2404,"count":45}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2551,"endOffset":2683,"count":45}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2689,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2936,"endOffset":2964,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3014,"endOffset":3164,"count":45},{"startOffset":3150,"endOffset":3158,"count":27}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3168,"endOffset":3796,"count":18},{"startOffset":3407,"endOffset":3444,"count":0},{"startOffset":3446,"endOffset":3518,"count":0},{"startOffset":3607,"endOffset":3613,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3800,"endOffset":3964,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3968,"endOffset":4112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17534,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1198,"endOffset":1225,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1798,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2239,"endOffset":2380,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2580,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2816,"endOffset":3146,"count":14}],"isBlockCoverage":true},{"functionName":"loadCJSModule","ranges":[{"startOffset":3819,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":6416,"endOffset":7904,"count":4},{"startOffset":6690,"endOffset":6723,"count":0},{"startOffset":6892,"endOffset":6915,"count":0},{"startOffset":6964,"endOffset":7022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7084,"endOffset":7891,"count":4},{"startOffset":7386,"endOffset":7431,"count":0},{"startOffset":7475,"endOffset":7845,"count":32},{"startOffset":7580,"endOffset":7609,"count":0},{"startOffset":7738,"endOffset":7796,"count":0}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":7941,"endOffset":8216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8382,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8678,"endOffset":8884,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":9076,"endOffset":9839,"count":4},{"startOffset":9143,"endOffset":9174,"count":1},{"startOffset":9578,"endOffset":9593,"count":0},{"startOffset":9723,"endOffset":9773,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":9426,"endOffset":9577,"count":4}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":10035,"endOffset":12645,"count":5},{"startOffset":10220,"endOffset":10263,"count":0},{"startOffset":10265,"endOffset":10336,"count":0},{"startOffset":10734,"endOffset":10739,"count":0},{"startOffset":10748,"endOffset":10800,"count":0},{"startOffset":10973,"endOffset":12605,"count":1},{"startOffset":11850,"endOffset":11885,"count":0},{"startOffset":12105,"endOffset":12122,"count":0},{"startOffset":12123,"endOffset":12153,"count":0},{"startOffset":12538,"endOffset":12584,"count":11}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":12773,"endOffset":13190,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":13257,"endOffset":15517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15586,"endOffset":16712,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16811,"endOffset":17125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17218,"endOffset":17530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6546,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":976,"endOffset":1651,"count":17},{"startOffset":1253,"endOffset":1596,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":1841,"endOffset":2419,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":2549,"endOffset":3980,"count":18},{"startOffset":2741,"endOffset":2776,"count":0},{"startOffset":2777,"endOffset":2809,"count":0},{"startOffset":2811,"endOffset":3026,"count":0},{"startOffset":3156,"endOffset":3209,"count":0},{"startOffset":3241,"endOffset":3268,"count":1},{"startOffset":3270,"endOffset":3835,"count":17},{"startOffset":3456,"endOffset":3830,"count":3}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":4513,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":5331,"endOffset":5798,"count":18},{"startOffset":5538,"endOffset":5566,"count":0},{"startOffset":5567,"endOffset":5595,"count":0},{"startOffset":5596,"endOffset":5672,"count":0},{"startOffset":5678,"endOffset":5795,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":6186,"endOffset":6433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"node:internal/data_url","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10529,"count":1}],"isBlockCoverage":false},{"functionName":"lazyEncoder","ranges":[{"startOffset":407,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"dataURLProcessor","ranges":[{"startOffset":773,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":4101,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":4721,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":5196,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"isHexCharByte","ranges":[{"startOffset":5453,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"hexByteToNumber","ranges":[{"startOffset":5653,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":5952,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":7359,"endOffset":8528,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":8624,"endOffset":8777,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":8972,"endOffset":9111,"count":0}],"isBlockCoverage":false},{"functionName":"removeChars","ranges":[{"startOffset":9261,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":9821,"endOffset":10480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11560,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":611,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":906,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2688,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3127,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3365,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3632,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9997,"endOffset":11344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15842,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":510,"count":1}],"isBlockCoverage":true},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1370,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1535,"endOffset":1728,"count":18}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1886,"endOffset":11238,"count":18}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":2608,"endOffset":3586,"count":18},{"startOffset":2962,"endOffset":3121,"count":0}],"isBlockCoverage":true},{"functionName":"_link","ranges":[{"startOffset":3730,"endOffset":5392,"count":18},{"startOffset":4731,"endOffset":5313,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4993,"endOffset":5148,"count":39}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":5398,"endOffset":5548,"count":6}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":5554,"endOffset":9368,"count":6},{"startOffset":6102,"endOffset":6283,"count":0},{"startOffset":6343,"endOffset":9114,"count":0},{"startOffset":9163,"endOffset":9363,"count":39}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":5655,"endOffset":5997,"count":48},{"startOffset":5792,"endOffset":5819,"count":9},{"startOffset":5819,"endOffset":5996,"count":39}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":9374,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9830,"endOffset":11235,"count":6},{"startOffset":9918,"endOffset":9994,"count":0},{"startOffset":10169,"endOffset":11176,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11867,"endOffset":15716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/authRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3795,"count":1}],"isBlockCoverage":true},{"functionName":"deleteTestUser","ranges":[{"startOffset":323,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":452,"endOffset":3789,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":586,"endOffset":2017,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":643,"endOffset":904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":961,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1285,"endOffset":1683,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1740,"endOffset":2010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2049,"endOffset":3674,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2106,"endOffset":2356,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2413,"endOffset":2657,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2709,"endOffset":2970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3029,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3351,"endOffset":3667,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3728,"endOffset":3784,"count":1}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1377,"count":1},{"startOffset":208,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":511,"endOffset":1242,"count":57},{"startOffset":622,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":967,"endOffset":1159,"count":1995}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":1005,"endOffset":1153,"count":57},{"startOffset":1093,"endOffset":1126,"count":0}],"isBlockCoverage":true}]},{"scriptId":"303","url":"node:internal/deps/cjs-module-lexer/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55157,"count":1}],"isBlockCoverage":false},{"functionName":"resetState","ranges":[{"startOffset":303,"endOffset":761,"count":10}],"isBlockCoverage":true},{"functionName":"parseCJS","ranges":[{"startOffset":850,"endOffset":1334,"count":5},{"startOffset":951,"endOffset":1121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1226,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1338,"endOffset":2115,"count":64},{"startOffset":1404,"endOffset":2080,"count":32},{"startOffset":1570,"endOffset":2031,"count":501},{"startOffset":1739,"endOffset":2022,"count":0},{"startOffset":2067,"endOffset":2075,"count":0},{"startOffset":2080,"endOffset":2112,"count":32}],"isBlockCoverage":true},{"functionName":"parseSource","ranges":[{"startOffset":2119,"endOffset":8029,"count":5},{"startOffset":2291,"endOffset":2321,"count":0},{"startOffset":2328,"endOffset":2532,"count":0},{"startOffset":2558,"endOffset":7876,"count":11338},{"startOffset":2615,"endOffset":2635,"count":8629},{"startOffset":2626,"endOffset":2635,"count":1126},{"startOffset":2644,"endOffset":2653,"count":3835},{"startOffset":2653,"endOffset":2687,"count":7503},{"startOffset":2687,"endOffset":4222,"count":1436},{"startOffset":2719,"endOffset":2897,"count":64},{"startOffset":2785,"endOffset":2805,"count":0},{"startOffset":2820,"endOffset":2845,"count":0},{"startOffset":2907,"endOffset":3133,"count":127},{"startOffset":2994,"endOffset":3019,"count":31},{"startOffset":3034,"endOffset":3081,"count":31},{"startOffset":3143,"endOffset":4206,"count":13},{"startOffset":3225,"endOffset":3289,"count":0},{"startOffset":3291,"endOffset":3677,"count":0},{"startOffset":3736,"endOffset":3800,"count":0},{"startOffset":3802,"endOffset":4154,"count":0},{"startOffset":4215,"endOffset":4222,"count":1232},{"startOffset":4222,"endOffset":4251,"count":7299},{"startOffset":4251,"endOffset":4548,"count":697},{"startOffset":4315,"endOffset":4335,"count":28},{"startOffset":4337,"endOffset":4532,"count":28},{"startOffset":4440,"endOffset":4521,"count":0},{"startOffset":4556,"endOffset":4731,"count":267},{"startOffset":4601,"endOffset":4638,"count":107},{"startOffset":4639,"endOffset":4678,"count":1},{"startOffset":4691,"endOffset":4715,"count":1},{"startOffset":4739,"endOffset":4885,"count":132},{"startOffset":4803,"endOffset":4823,"count":14},{"startOffset":4836,"endOffset":4869,"count":14},{"startOffset":4893,"endOffset":5054,"count":3},{"startOffset":5062,"endOffset":5152,"count":235},{"startOffset":5160,"endOffset":5310,"count":235},{"startOffset":5220,"endOffset":5267,"count":0},{"startOffset":5318,"endOffset":5507,"count":107},{"startOffset":5515,"endOffset":5949,"count":107},{"startOffset":5576,"endOffset":5621,"count":0},{"startOffset":5671,"endOffset":5776,"count":0},{"startOffset":5829,"endOffset":5862,"count":0},{"startOffset":5877,"endOffset":5922,"count":0},{"startOffset":5957,"endOffset":6029,"count":1},{"startOffset":6037,"endOffset":6050,"count":104},{"startOffset":6058,"endOffset":6115,"count":107},{"startOffset":6123,"endOffset":7775,"count":58},{"startOffset":6226,"endOffset":6321,"count":44},{"startOffset":6321,"endOffset":7750,"count":14},{"startOffset":6457,"endOffset":7750,"count":0},{"startOffset":7750,"endOffset":7775,"count":0},{"startOffset":7783,"endOffset":7839,"count":0},{"startOffset":7846,"endOffset":7876,"count":7241},{"startOffset":7913,"endOffset":7955,"count":0},{"startOffset":7986,"endOffset":8026,"count":0}],"isBlockCoverage":true},{"functionName":"tryBacktrackAddStarExportBinding","ranges":[{"startOffset":8033,"endOffset":9292,"count":31},{"startOffset":8421,"endOffset":8433,"count":304},{"startOffset":8435,"endOffset":8658,"count":304},{"startOffset":8480,"endOffset":8487,"count":0},{"startOffset":8544,"endOffset":8550,"count":31},{"startOffset":8550,"endOffset":8658,"count":273},{"startOffset":8724,"endOffset":9284,"count":28},{"startOffset":8922,"endOffset":9026,"count":12},{"startOffset":9001,"endOffset":9008,"count":0},{"startOffset":9036,"endOffset":9180,"count":16},{"startOffset":9155,"endOffset":9162,"count":0},{"startOffset":9190,"endOffset":9206,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseObjectHasOwnProperty","ranges":[{"startOffset":9380,"endOffset":10585,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectDefineOrKeys","ranges":[{"startOffset":10589,"endOffset":28502,"count":3},{"startOffset":10801,"endOffset":10847,"count":1},{"startOffset":10849,"endOffset":14604,"count":1},{"startOffset":11004,"endOffset":11010,"count":0},{"startOffset":11111,"endOffset":11117,"count":0},{"startOffset":11182,"endOffset":11188,"count":0},{"startOffset":11293,"endOffset":14527,"count":0},{"startOffset":14545,"endOffset":14597,"count":0},{"startOffset":14604,"endOffset":28474,"count":2},{"startOffset":14624,"endOffset":14637,"count":0},{"startOffset":14643,"endOffset":14679,"count":0},{"startOffset":14681,"endOffset":28474,"count":0}],"isBlockCoverage":true},{"functionName":"readExportsOrModuleDotExports","ranges":[{"startOffset":28506,"endOffset":28978,"count":1},{"startOffset":28601,"endOffset":28639,"count":0},{"startOffset":28641,"endOffset":28815,"count":0},{"startOffset":28919,"endOffset":28975,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseModuleExportsDotAssign","ranges":[{"startOffset":28982,"endOffset":29327,"count":14},{"startOffset":29304,"endOffset":29326,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseExportsDotAssign","ranges":[{"startOffset":29331,"endOffset":30758,"count":42},{"startOffset":29495,"endOffset":29833,"count":37},{"startOffset":29707,"endOffset":29803,"count":32},{"startOffset":29812,"endOffset":29833,"count":5},{"startOffset":29863,"endOffset":30313,"count":0},{"startOffset":30344,"endOffset":30730,"count":4},{"startOffset":30379,"endOffset":30723,"count":3},{"startOffset":30421,"endOffset":30443,"count":0},{"startOffset":30545,"endOffset":30613,"count":0},{"startOffset":30684,"endOffset":30714,"count":1},{"startOffset":30735,"endOffset":30757,"count":10}],"isBlockCoverage":true},{"functionName":"tryParseRequire","ranges":[{"startOffset":30762,"endOffset":31771,"count":128},{"startOffset":30895,"endOffset":31751,"count":33},{"startOffset":31081,"endOffset":31093,"count":1},{"startOffset":31100,"endOffset":31717,"count":32},{"startOffset":31279,"endOffset":31405,"count":1},{"startOffset":31419,"endOffset":31543,"count":0},{"startOffset":31557,"endOffset":31684,"count":31},{"startOffset":31724,"endOffset":31751,"count":1},{"startOffset":31751,"endOffset":31770,"count":96}],"isBlockCoverage":true},{"functionName":"tryParseLiteralExports","ranges":[{"startOffset":31775,"endOffset":33388,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":44773,"endOffset":44992,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":45060,"endOffset":45438,"count":310},{"startOffset":45121,"endOffset":45139,"count":0},{"startOffset":45158,"endOffset":45169,"count":35},{"startOffset":45169,"endOffset":45188,"count":275},{"startOffset":45188,"endOffset":45206,"count":3},{"startOffset":45206,"endOffset":45237,"count":272},{"startOffset":45237,"endOffset":45437,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":45505,"endOffset":45984,"count":653},{"startOffset":45565,"endOffset":45583,"count":68},{"startOffset":45583,"endOffset":45602,"count":585},{"startOffset":45602,"endOffset":45613,"count":0},{"startOffset":45613,"endOffset":45632,"count":585},{"startOffset":45632,"endOffset":45644,"count":0},{"startOffset":45644,"endOffset":45663,"count":585},{"startOffset":45663,"endOffset":45674,"count":55},{"startOffset":45674,"endOffset":45693,"count":530},{"startOffset":45693,"endOffset":45711,"count":9},{"startOffset":45711,"endOffset":45742,"count":521},{"startOffset":45742,"endOffset":45981,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":45988,"endOffset":46430,"count":37},{"startOffset":46107,"endOffset":46120,"count":0},{"startOffset":46189,"endOffset":46411,"count":349},{"startOffset":46228,"endOffset":46268,"count":312},{"startOffset":46268,"endOffset":46406,"count":37},{"startOffset":46296,"endOffset":46373,"count":0}],"isBlockCoverage":true},{"functionName":"codePointLen","ranges":[{"startOffset":46434,"endOffset":46509,"count":622},{"startOffset":46493,"endOffset":46508,"count":0}],"isBlockCoverage":true},{"functionName":"codePointAtLast","ranges":[{"startOffset":46513,"endOffset":46774,"count":304},{"startOffset":46677,"endOffset":46757,"count":0}],"isBlockCoverage":true},{"functionName":"esmSyntaxErr","ranges":[{"startOffset":46778,"endOffset":46885,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfImportStatement","ranges":[{"startOffset":46889,"endOffset":47708,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfExportStatement","ranges":[{"startOffset":47712,"endOffset":47948,"count":0}],"isBlockCoverage":false},{"functionName":"commentWhitespace","ranges":[{"startOffset":47952,"endOffset":48370,"count":255},{"startOffset":48001,"endOffset":48332,"count":295},{"startOffset":48062,"endOffset":48271,"count":0},{"startOffset":48301,"endOffset":48327,"count":255},{"startOffset":48332,"endOffset":48369,"count":0}],"isBlockCoverage":true},{"functionName":"templateString","ranges":[{"startOffset":48374,"endOffset":48779,"count":0}],"isBlockCoverage":false},{"functionName":"blockComment","ranges":[{"startOffset":48783,"endOffset":48997,"count":14},{"startOffset":48843,"endOffset":48994,"count":929},{"startOffset":48909,"endOffset":48945,"count":56},{"startOffset":48952,"endOffset":48989,"count":14}],"isBlockCoverage":true},{"functionName":"lineComment","ranges":[{"startOffset":49001,"endOffset":49159,"count":44},{"startOffset":49050,"endOffset":49156,"count":1892},{"startOffset":49144,"endOffset":49151,"count":44}],"isBlockCoverage":true},{"functionName":"stringLiteral","ranges":[{"startOffset":49163,"endOffset":49545,"count":139},{"startOffset":49219,"endOffset":49498,"count":2931},{"startOffset":49289,"endOffset":49296,"count":139},{"startOffset":49296,"endOffset":49322,"count":2792},{"startOffset":49322,"endOffset":49455,"count":0},{"startOffset":49455,"endOffset":49493,"count":2792},{"startOffset":49487,"endOffset":49493,"count":0},{"startOffset":49498,"endOffset":49544,"count":0}],"isBlockCoverage":true},{"functionName":"regexCharacterClass","ranges":[{"startOffset":49549,"endOffset":49869,"count":0}],"isBlockCoverage":false},{"functionName":"regularExpression","ranges":[{"startOffset":49873,"endOffset":50247,"count":0}],"isBlockCoverage":false},{"functionName":"isBr","ranges":[{"startOffset":50389,"endOffset":50455,"count":2792}],"isBlockCoverage":true},{"functionName":"isBrOrWs","ranges":[{"startOffset":50459,"endOffset":50537,"count":296},{"startOffset":50521,"endOffset":50533,"count":255}],"isBlockCoverage":true},{"functionName":"isBrOrWsOrPunctuatorNotDot","ranges":[{"startOffset":50541,"endOffset":50673,"count":343},{"startOffset":50609,"endOffset":50620,"count":288},{"startOffset":50621,"endOffset":50633,"count":172},{"startOffset":50634,"endOffset":50664,"count":172},{"startOffset":50653,"endOffset":50664,"count":23}],"isBlockCoverage":true},{"functionName":"keywordStart","ranges":[{"startOffset":50677,"endOffset":50788,"count":343}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword","ranges":[{"startOffset":50792,"endOffset":51033,"count":0}],"isBlockCoverage":false},{"functionName":"readPrecedingKeyword1","ranges":[{"startOffset":51037,"endOffset":51196,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKeyword","ranges":[{"startOffset":51322,"endOffset":53492,"count":0}],"isBlockCoverage":false},{"functionName":"isParenKeyword","ranges":[{"startOffset":53496,"endOffset":53807,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuator","ranges":[{"startOffset":53811,"endOffset":54104,"count":172},{"startOffset":53928,"endOffset":53940,"count":169},{"startOffset":53946,"endOffset":53958,"count":169},{"startOffset":53964,"endOffset":53990,"count":169},{"startOffset":53991,"endOffset":54012,"count":149},{"startOffset":54013,"endOffset":54030,"count":149},{"startOffset":54036,"endOffset":54048,"count":149},{"startOffset":54054,"endOffset":54066,"count":149},{"startOffset":54072,"endOffset":54100,"count":149},{"startOffset":54089,"endOffset":54100,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionPunctuator","ranges":[{"startOffset":54108,"endOffset":54416,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionTerminator","ranges":[{"startOffset":54420,"endOffset":54998,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.init","ranges":[{"startOffset":55066,"endOffset":55083,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.initSync","ranges":[{"startOffset":55112,"endOffset":55120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"305","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"306","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"307","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":235,"count":1}],"isBlockCoverage":true}]},{"scriptId":"309","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"310","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"311","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"312","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"313","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19,"count":1}],"isBlockCoverage":true}]},{"scriptId":"314","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"315","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"316","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"317","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"319","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"320","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"321","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/config/db.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":293,"count":1}],"isBlockCoverage":true}]},{"scriptId":"322","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"323","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"324","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"325","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"326","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"327","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"328","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":1}],"isBlockCoverage":true}]},{"scriptId":"329","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":1}],"isBlockCoverage":true}]},{"scriptId":"330","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"331","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"332","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"333","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":1}],"isBlockCoverage":true}]},{"scriptId":"334","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/authRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2419,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208,"endOffset":1143,"count":5},{"startOffset":287,"endOffset":299,"count":4},{"startOffset":301,"endOffset":392,"count":2},{"startOffset":392,"endOffset":530,"count":3},{"startOffset":530,"endOffset":605,"count":1},{"startOffset":605,"endOffset":759,"count":2},{"startOffset":759,"endOffset":1011,"count":1},{"startOffset":1011,"endOffset":1140,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1202,"endOffset":2389,"count":4},{"startOffset":1287,"endOffset":1299,"count":3},{"startOffset":1301,"endOffset":1480,"count":2},{"startOffset":1480,"endOffset":1489,"count":0},{"startOffset":1490,"endOffset":1498,"count":2},{"startOffset":1648,"endOffset":1684,"count":2},{"startOffset":1684,"endOffset":2249,"count":1},{"startOffset":2249,"endOffset":2386,"count":0}],"isBlockCoverage":true}]},{"scriptId":"335","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chai/chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143898,"count":1},{"startOffset":15415,"endOffset":15434,"count":0},{"startOffset":18404,"endOffset":18746,"count":0},{"startOffset":19850,"endOffset":19857,"count":0},{"startOffset":23258,"endOffset":23276,"count":0},{"startOffset":23381,"endOffset":23406,"count":0},{"startOffset":23419,"endOffset":23469,"count":0},{"startOffset":34240,"endOffset":34249,"count":0},{"startOffset":136228,"endOffset":136262,"count":15}],"isBlockCoverage":true},{"functionName":"__name","ranges":[{"startOffset":106,"endOffset":181,"count":647}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":201,"endOffset":342,"count":1}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":214,"endOffset":342,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":360,"endOffset":474,"count":3},{"startOffset":409,"endOffset":471,"count":37}],"isBlockCoverage":true},{"functionName":"(disabled):util","ranges":[{"startOffset":534,"endOffset":560,"count":1}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":671,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":716,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":752,"endOffset":767,"count":0}],"isBlockCoverage":false},{"functionName":"addProperty","ranges":[{"startOffset":785,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":819,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":867,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"eql","ranges":[{"startOffset":899,"endOffset":921,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":939,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":967,"endOffset":977,"count":1}],"isBlockCoverage":true},{"functionName":"getActual","ranges":[{"startOffset":993,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":1025,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1056,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1087,"endOffset":1104,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":1137,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":1207,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":1262,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1297,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1328,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":1354,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":1382,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":1418,"endOffset":1438,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":1453,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"objDisplay","ranges":[{"startOffset":1485,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":1532,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":1584,"endOffset":1605,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteProperty","ranges":[{"startOffset":1629,"endOffset":1652,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":1666,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1690,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"transferFlags","ranges":[{"startOffset":1720,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":1750,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1896,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":1948,"endOffset":1972,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":1996,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":2044,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":2085,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorInstance","ranges":[{"startOffset":2108,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":2281,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":2410,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":2576,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":3033,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":3422,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":3924,"endOffset":4136,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":4202,"endOffset":4419,"count":2952},{"startOffset":4262,"endOffset":4316,"count":339},{"startOffset":4349,"endOffset":4380,"count":2054},{"startOffset":4380,"endOffset":4416,"count":898}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":4473,"endOffset":4588,"count":117},{"startOffset":4570,"endOffset":4577,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4649,"endOffset":4985,"count":19},{"startOffset":4705,"endOffset":4736,"count":0},{"startOffset":4758,"endOffset":4784,"count":0},{"startOffset":4869,"endOffset":4898,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5163,"endOffset":5838,"count":5}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":5163,"endOffset":5838,"count":1}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":5234,"endOffset":5281,"count":5}],"isBlockCoverage":true},{"functionName":"get ok","ranges":[{"startOffset":5285,"endOffset":5319,"count":0}],"isBlockCoverage":false},{"functionName":"_AssertionError","ranges":[{"startOffset":5323,"endOffset":5649,"count":5},{"startOffset":5507,"endOffset":5525,"count":0},{"startOffset":5565,"endOffset":5644,"count":20}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":5653,"endOffset":5835,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":5877,"endOffset":6671,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":6744,"endOffset":6826,"count":10},{"startOffset":6812,"endOffset":6822,"count":0}],"isBlockCoverage":true},{"functionName":"colorise","ranges":[{"startOffset":7885,"endOffset":8117,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":8150,"endOffset":8921,"count":125},{"startOffset":8860,"endOffset":8899,"count":0}],"isBlockCoverage":true},{"functionName":"isHighSurrogate","ranges":[{"startOffset":8970,"endOffset":9053,"count":2},{"startOffset":9030,"endOffset":9049,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":9100,"endOffset":9591,"count":125},{"startOffset":9283,"endOffset":9311,"count":0},{"startOffset":9313,"endOffset":9337,"count":0},{"startOffset":9367,"endOffset":9395,"count":2},{"startOffset":9397,"endOffset":9570,"count":2},{"startOffset":9489,"endOffset":9519,"count":0},{"startOffset":9570,"endOffset":9590,"count":123}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":9624,"endOffset":11098,"count":0}],"isBlockCoverage":false},{"functionName":"quoteComplexKey","ranges":[{"startOffset":11137,"endOffset":11339,"count":0}],"isBlockCoverage":false},{"functionName":"inspectProperty","ranges":[{"startOffset":11386,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArray","ranges":[{"startOffset":11820,"endOffset":12394,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12520,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":12762,"endOffset":13711,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":13799,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":14231,"endOffset":14548,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":14631,"endOffset":14860,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":14907,"endOffset":15053,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":15094,"endOffset":15314,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":15419,"endOffset":15433,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":15437,"endOffset":15917,"count":10},{"startOffset":15501,"endOffset":15553,"count":0},{"startOffset":15582,"endOffset":15639,"count":0},{"startOffset":15669,"endOffset":15727,"count":0},{"startOffset":15749,"endOffset":15833,"count":0}],"isBlockCoverage":true},{"functionName":"inspectBigInt","ranges":[{"startOffset":15999,"endOffset":16196,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":16278,"endOffset":16549,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":16628,"endOffset":16761,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":16802,"endOffset":16976,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":17420,"endOffset":17555,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":17584,"endOffset":17815,"count":115},{"startOffset":17665,"endOffset":17728,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":17897,"endOffset":18085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18213,"endOffset":18236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18452,"endOffset":18720,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":18851,"endOffset":19678,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":19860,"endOffset":20209,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":20292,"endOffset":20473,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject2","ranges":[{"startOffset":20737,"endOffset":21544,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":21625,"endOffset":21881,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":21930,"endOffset":22049,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":22108,"endOffset":23027,"count":0}],"isBlockCoverage":false},{"functionName":"undefined","ranges":[{"startOffset":23583,"endOffset":23644,"count":0}],"isBlockCoverage":false},{"functionName":"null","ranges":[{"startOffset":23655,"endOffset":23706,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":23720,"endOffset":23781,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":23795,"endOffset":23856,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":24401,"endOffset":24466,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":24480,"endOffset":24545,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":24911,"endOffset":24919,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":24934,"endOffset":24942,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":24960,"endOffset":24968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25121,"endOffset":25792,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":25856,"endOffset":27034,"count":125},{"startOffset":26013,"endOffset":26021,"count":0},{"startOffset":26065,"endOffset":26119,"count":0},{"startOffset":26205,"endOffset":26235,"count":0},{"startOffset":26237,"endOffset":26484,"count":0},{"startOffset":26485,"endOffset":26492,"count":0},{"startOffset":26528,"endOffset":26545,"count":0},{"startOffset":26547,"endOffset":26646,"count":0},{"startOffset":26647,"endOffset":26678,"count":0},{"startOffset":26680,"endOffset":27033,"count":0}],"isBlockCoverage":true},{"functionName":"inspect2","ranges":[{"startOffset":31000,"endOffset":31274,"count":125},{"startOffset":31129,"endOffset":31136,"count":0},{"startOffset":31222,"endOffset":31232,"count":0}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":31341,"endOffset":32030,"count":10},{"startOffset":31516,"endOffset":31998,"count":0}],"isBlockCoverage":true},{"functionName":"getMessage2","ranges":[{"startOffset":32102,"endOffset":32669,"count":5},{"startOffset":32264,"endOffset":32273,"count":0},{"startOffset":32356,"endOffset":32368,"count":0},{"startOffset":32382,"endOffset":32387,"count":0},{"startOffset":32637,"endOffset":32659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32424,"endOffset":32470,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32493,"endOffset":32542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32565,"endOffset":32616,"count":5}],"isBlockCoverage":true},{"functionName":"transferFlags","ranges":[{"startOffset":32745,"endOffset":33246,"count":248},{"startOffset":32834,"endOffset":32894,"count":0},{"startOffset":32920,"endOffset":32985,"count":0},{"startOffset":33025,"endOffset":33037,"count":4},{"startOffset":33038,"endOffset":33044,"count":244},{"startOffset":33074,"endOffset":33243,"count":1262},{"startOffset":33096,"endOffset":33183,"count":0}],"isBlockCoverage":true},{"functionName":"type2","ranges":[{"startOffset":33326,"endOffset":33703,"count":0}],"isBlockCoverage":false},{"functionName":"FakeMap","ranges":[{"startOffset":33729,"endOffset":33815,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33899,"endOffset":33951,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":33992,"endOffset":34169,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCompare","ranges":[{"startOffset":34252,"endOffset":34656,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeSet","ranges":[{"startOffset":34701,"endOffset":35162,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":35234,"endOffset":35629,"count":0}],"isBlockCoverage":false},{"functionName":"simpleEqual","ranges":[{"startOffset":35664,"endOffset":36123,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqual","ranges":[{"startOffset":36162,"endOffset":37651,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqualByType","ranges":[{"startOffset":37704,"endOffset":39877,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEqual","ranges":[{"startOffset":39942,"endOffset":40072,"count":0}],"isBlockCoverage":false},{"functionName":"entriesEqual","ranges":[{"startOffset":40111,"endOffset":40830,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEqual","ranges":[{"startOffset":40871,"endOffset":41285,"count":0}],"isBlockCoverage":false},{"functionName":"generatorEqual","ranges":[{"startOffset":41328,"endOffset":41511,"count":0}],"isBlockCoverage":false},{"functionName":"hasIteratorFunction","ranges":[{"startOffset":41556,"endOffset":41759,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorEntries","ranges":[{"startOffset":41814,"endOffset":42040,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorEntries","ranges":[{"startOffset":42093,"endOffset":42385,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableKeys","ranges":[{"startOffset":42440,"endOffset":42568,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableSymbols","ranges":[{"startOffset":42619,"endOffset":42929,"count":0}],"isBlockCoverage":false},{"functionName":"keysEqual","ranges":[{"startOffset":42986,"endOffset":43318,"count":0}],"isBlockCoverage":false},{"functionName":"objectEqual","ranges":[{"startOffset":43353,"endOffset":44599,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":44638,"endOffset":44725,"count":0}],"isBlockCoverage":false},{"functionName":"mapSymbols","ranges":[{"startOffset":44764,"endOffset":44979,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":45052,"endOffset":45196,"count":21},{"startOffset":45137,"endOffset":45162,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":45235,"endOffset":45771,"count":0}],"isBlockCoverage":false},{"functionName":"internalGetPathValue","ranges":[{"startOffset":45806,"endOffset":46356,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":46413,"endOffset":46789,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion","ranges":[{"startOffset":46856,"endOffset":47130,"count":339},{"startOffset":46930,"endOffset":46942,"count":337}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47224,"endOffset":47386,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47396,"endOffset":47564,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47626,"endOffset":47776,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47786,"endOffset":47942,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.addProperty","ranges":[{"startOffset":47973,"endOffset":48038,"count":43}],"isBlockCoverage":true},{"functionName":"Assertion.addMethod","ranges":[{"startOffset":48063,"endOffset":48126,"count":49}],"isBlockCoverage":true},{"functionName":"Assertion.addChainableMethod","ranges":[{"startOffset":48160,"endOffset":48268,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteProperty","ranges":[{"startOffset":48301,"endOffset":48372,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteMethod","ranges":[{"startOffset":48403,"endOffset":48472,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteChainableMethod","ranges":[{"startOffset":48512,"endOffset":48626,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.assert","ranges":[{"startOffset":48658,"endOffset":49430,"count":117},{"startOffset":48831,"endOffset":48852,"count":27},{"startOffset":48859,"endOffset":48876,"count":27},{"startOffset":48915,"endOffset":48932,"count":0},{"startOffset":48945,"endOffset":49427,"count":5},{"startOffset":49380,"endOffset":49393,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":49494,"endOffset":49545,"count":71}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":49555,"endOffset":49607,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":49653,"endOffset":49776,"count":533}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":49857,"endOffset":50437,"count":43},{"startOffset":49929,"endOffset":49948,"count":17},{"startOffset":49949,"endOffset":49957,"count":26}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":49931,"endOffset":49948,"count":130}],"isBlockCoverage":true},{"functionName":"propertyGetter","ranges":[{"startOffset":50030,"endOffset":50383,"count":133},{"startOffset":50087,"endOffset":50113,"count":0},{"startOffset":50115,"endOffset":50170,"count":0},{"startOffset":50249,"endOffset":50263,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50566,"endOffset":50581,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":50595,"endOffset":51214,"count":61},{"startOffset":50693,"endOffset":50703,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":50755,"endOffset":51190,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":51297,"endOffset":51749,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":51884,"endOffset":53531,"count":400},{"startOffset":51963,"endOffset":51974,"count":0}],"isBlockCoverage":true},{"functionName":"proxyGetter","ranges":[{"startOffset":52035,"endOffset":53505,"count":2660},{"startOffset":52204,"endOffset":53323,"count":0},{"startOffset":53369,"endOffset":53397,"count":239},{"startOffset":53399,"endOffset":53453,"count":229}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52552,"endOffset":53056,"count":0}],"isBlockCoverage":false},{"functionName":"stringDistanceCapped","ranges":[{"startOffset":53562,"endOffset":54334,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":54425,"endOffset":54933,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54511,"endOffset":54819,"count":94},{"startOffset":54558,"endOffset":54608,"count":88},{"startOffset":54693,"endOffset":54707,"count":0},{"startOffset":54707,"endOffset":54818,"count":89}],"isBlockCoverage":true},{"functionName":"overwriteProperty","ranges":[{"startOffset":55010,"endOffset":55911,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":56002,"endOffset":56927,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57121,"endOffset":57136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57211,"endOffset":57384,"count":3},{"startOffset":57335,"endOffset":57347,"count":0}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":57464,"endOffset":59311,"count":8},{"startOffset":57578,"endOffset":57673,"count":2},{"startOffset":57767,"endOffset":57798,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57627,"endOffset":57646,"count":5}],"isBlockCoverage":true},{"functionName":"chainableMethodGetter","ranges":[{"startOffset":57914,"endOffset":59250,"count":12},{"startOffset":58755,"endOffset":59144,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58062,"endOffset":58450,"count":10},{"startOffset":58284,"endOffset":58322,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58856,"endOffset":59133,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":59413,"endOffset":60394,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":60500,"endOffset":60582,"count":20},{"startOffset":60570,"endOffset":60574,"count":16},{"startOffset":60575,"endOffset":60578,"count":4}],"isBlockCoverage":true},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":60687,"endOffset":60952,"count":2},{"startOffset":60799,"endOffset":60809,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60861,"endOffset":60947,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":61082,"endOffset":61200,"count":2}],"isBlockCoverage":true},{"functionName":"isObjectType","ranges":[{"startOffset":61363,"endOffset":61529,"count":5}],"isBlockCoverage":true},{"functionName":"getOperator","ranges":[{"startOffset":61570,"endOffset":62163,"count":5},{"startOffset":61729,"endOffset":61738,"count":0},{"startOffset":61767,"endOffset":61795,"count":0},{"startOffset":61835,"endOffset":61847,"count":0},{"startOffset":61861,"endOffset":61866,"count":0},{"startOffset":61881,"endOffset":61907,"count":0},{"startOffset":61937,"endOffset":61963,"count":0},{"startOffset":62034,"endOffset":62104,"count":0},{"startOffset":62124,"endOffset":62143,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":62232,"endOffset":62276,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp2","ranges":[{"startOffset":62307,"endOffset":62404,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":62438,"endOffset":62518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62813,"endOffset":62866,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62899,"endOffset":62946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62980,"endOffset":63025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63061,"endOffset":63108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63141,"endOffset":63185,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63222,"endOffset":63270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63303,"endOffset":63377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63410,"endOffset":63484,"count":0}],"isBlockCoverage":false},{"functionName":"an","ranges":[{"startOffset":63819,"endOffset":64506,"count":5},{"startOffset":63862,"endOffset":63890,"count":0},{"startOffset":64029,"endOffset":64035,"count":0},{"startOffset":64136,"endOffset":64327,"count":0}],"isBlockCoverage":true},{"functionName":"SameValueZero","ranges":[{"startOffset":64608,"endOffset":64686,"count":0}],"isBlockCoverage":false},{"functionName":"includeChainingBehavior","ranges":[{"startOffset":64729,"endOffset":64802,"count":5}],"isBlockCoverage":true},{"functionName":"include","ranges":[{"startOffset":64865,"endOffset":67603,"count":3},{"startOffset":64911,"endOffset":64939,"count":0},{"startOffset":65155,"endOffset":65164,"count":0},{"startOffset":65186,"endOffset":65206,"count":0},{"startOffset":65245,"endOffset":65261,"count":0},{"startOffset":65320,"endOffset":65391,"count":1},{"startOffset":65397,"endOffset":65635,"count":0},{"startOffset":65641,"endOffset":65763,"count":0},{"startOffset":65769,"endOffset":65977,"count":0},{"startOffset":65983,"endOffset":66196,"count":0},{"startOffset":66202,"endOffset":67413,"count":2},{"startOffset":66243,"endOffset":66589,"count":0},{"startOffset":67314,"endOffset":67333,"count":0},{"startOffset":67334,"endOffset":67361,"count":0},{"startOffset":67363,"endOffset":67398,"count":0},{"startOffset":67418,"endOffset":67602,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65672,"endOffset":65747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65823,"endOffset":65902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66047,"endOffset":66110,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66678,"endOffset":67287,"count":4},{"startOffset":66865,"endOffset":66886,"count":0},{"startOffset":66971,"endOffset":67278,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67968,"endOffset":68107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68141,"endOffset":68330,"count":1},{"startOffset":68307,"endOffset":68314,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68367,"endOffset":68619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68657,"endOffset":69311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69346,"endOffset":69536,"count":2},{"startOffset":69513,"endOffset":69519,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":69570,"endOffset":69719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69758,"endOffset":69919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69952,"endOffset":70098,"count":0}],"isBlockCoverage":false},{"functionName":"assertExist","ranges":[{"startOffset":70102,"endOffset":70295,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":70458,"endOffset":71549,"count":0}],"isBlockCoverage":false},{"functionName":"checkArguments","ranges":[{"startOffset":71553,"endOffset":71790,"count":0}],"isBlockCoverage":false},{"functionName":"assertEqual","ranges":[{"startOffset":71941,"endOffset":72432,"count":71},{"startOffset":71991,"endOffset":72019,"count":0},{"startOffset":72084,"endOffset":72239,"count":0}],"isBlockCoverage":true},{"functionName":"assertEql","ranges":[{"startOffset":72601,"endOffset":72909,"count":0}],"isBlockCoverage":false},{"functionName":"assertAbove","ranges":[{"startOffset":73025,"endOffset":74762,"count":0}],"isBlockCoverage":false},{"functionName":"assertLeast","ranges":[{"startOffset":74936,"endOffset":76674,"count":0}],"isBlockCoverage":false},{"functionName":"assertBelow","ranges":[{"startOffset":76856,"endOffset":78593,"count":0}],"isBlockCoverage":false},{"functionName":"assertMost","ranges":[{"startOffset":78764,"endOffset":80497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80700,"endOffset":82688,"count":0}],"isBlockCoverage":false},{"functionName":"assertInstanceOf","ranges":[{"startOffset":82692,"endOffset":83533,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":83690,"endOffset":86045,"count":21},{"startOffset":83749,"endOffset":83777,"count":0},{"startOffset":83983,"endOffset":83999,"count":0},{"startOffset":84023,"endOffset":84233,"count":0},{"startOffset":84272,"endOffset":84296,"count":0},{"startOffset":84297,"endOffset":84321,"count":0},{"startOffset":84323,"endOffset":84488,"count":0},{"startOffset":84510,"endOffset":84518,"count":0},{"startOffset":84520,"endOffset":84661,"count":0},{"startOffset":84701,"endOffset":84829,"count":0},{"startOffset":84919,"endOffset":84943,"count":0},{"startOffset":84969,"endOffset":84985,"count":0},{"startOffset":85014,"endOffset":85034,"count":0},{"startOffset":85112,"endOffset":85134,"count":0},{"startOffset":85154,"endOffset":85175,"count":0},{"startOffset":85198,"endOffset":85222,"count":0},{"startOffset":85293,"endOffset":85356,"count":0},{"startOffset":85384,"endOffset":85415,"count":0},{"startOffset":85483,"endOffset":85508,"count":0},{"startOffset":85728,"endOffset":86009,"count":12}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":85037,"endOffset":85066,"count":12}],"isBlockCoverage":true},{"functionName":"assertOwnProperty","ranges":[{"startOffset":86140,"endOffset":86263,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnPropertyDescriptor","ranges":[{"startOffset":86430,"endOffset":87508,"count":0}],"isBlockCoverage":false},{"functionName":"assertLengthChain","ranges":[{"startOffset":87735,"endOffset":87802,"count":2}],"isBlockCoverage":true},{"functionName":"assertLength","ranges":[{"startOffset":87853,"endOffset":88570,"count":2},{"startOffset":87902,"endOffset":87930,"count":0},{"startOffset":88126,"endOffset":88137,"count":0},{"startOffset":88143,"endOffset":88226,"count":0}],"isBlockCoverage":true},{"functionName":"assertMatch","ranges":[{"startOffset":88761,"endOffset":89001,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":89160,"endOffset":89541,"count":0}],"isBlockCoverage":false},{"functionName":"assertKeys","ranges":[{"startOffset":89545,"endOffset":92276,"count":2},{"startOffset":89804,"endOffset":89820,"count":0},{"startOffset":90038,"endOffset":90267,"count":0},{"startOffset":90354,"endOffset":90496,"count":0},{"startOffset":90504,"endOffset":90682,"count":0},{"startOffset":90892,"endOffset":90970,"count":0},{"startOffset":91081,"endOffset":91101,"count":0},{"startOffset":91192,"endOffset":91361,"count":0},{"startOffset":91575,"endOffset":91631,"count":0},{"startOffset":91843,"endOffset":91898,"count":0},{"startOffset":91903,"endOffset":91945,"count":0},{"startOffset":91974,"endOffset":91982,"count":0},{"startOffset":92038,"endOffset":92047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90115,"endOffset":90167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":90782,"endOffset":90863,"count":7},{"startOffset":90836,"endOffset":90841,"count":0}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":91104,"endOffset":91133,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91218,"endOffset":91354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":91401,"endOffset":91537,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91451,"endOffset":91528,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91676,"endOffset":91727,"count":7}],"isBlockCoverage":true},{"functionName":"assertThrows","ranges":[{"startOffset":92396,"endOffset":96814,"count":0}],"isBlockCoverage":false},{"functionName":"respondTo","ranges":[{"startOffset":96991,"endOffset":97406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97566,"endOffset":97613,"count":0}],"isBlockCoverage":false},{"functionName":"satisfy","ranges":[{"startOffset":97617,"endOffset":97975,"count":0}],"isBlockCoverage":false},{"functionName":"closeTo","ranges":[{"startOffset":98092,"endOffset":99250,"count":0}],"isBlockCoverage":false},{"functionName":"isSubsetOf","ranges":[{"startOffset":99371,"endOffset":100183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100251,"endOffset":101338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101376,"endOffset":101641,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":101645,"endOffset":102808,"count":0}],"isBlockCoverage":false},{"functionName":"assertChanges","ranges":[{"startOffset":102873,"endOffset":103878,"count":0}],"isBlockCoverage":false},{"functionName":"assertIncreases","ranges":[{"startOffset":104016,"endOffset":105092,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecreases","ranges":[{"startOffset":105242,"endOffset":106318,"count":0}],"isBlockCoverage":false},{"functionName":"assertDelta","ranges":[{"startOffset":106468,"endOffset":107138,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107254,"endOffset":107504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107540,"endOffset":107776,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107812,"endOffset":108048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108084,"endOffset":108305,"count":0}],"isBlockCoverage":false},{"functionName":"compareSubset","ranges":[{"startOffset":108309,"endOffset":109472,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":109552,"endOffset":109856,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":109895,"endOffset":109968,"count":101}],"isBlockCoverage":true},{"functionName":"expect.fail","ranges":[{"startOffset":110011,"endOffset":110312,"count":0}],"isBlockCoverage":false},{"functionName":"Should","ranges":[{"startOffset":110414,"endOffset":110426,"count":0}],"isBlockCoverage":false},{"functionName":"should","ranges":[{"startOffset":110439,"endOffset":110451,"count":0}],"isBlockCoverage":false},{"functionName":"loadShould","ranges":[{"startOffset":110458,"endOffset":112383,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":112507,"endOffset":112670,"count":0}],"isBlockCoverage":false},{"functionName":"assert.fail","ranges":[{"startOffset":112713,"endOffset":113014,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isOk","ranges":[{"startOffset":113031,"endOffset":113107,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotOk","ranges":[{"startOffset":113127,"endOffset":113210,"count":0}],"isBlockCoverage":false},{"functionName":"assert.equal","ranges":[{"startOffset":113228,"endOffset":113490,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notEqual","ranges":[{"startOffset":113511,"endOffset":113776,"count":0}],"isBlockCoverage":false},{"functionName":"assert.strictEqual","ranges":[{"startOffset":113800,"endOffset":113896,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notStrictEqual","ranges":[{"startOffset":113923,"endOffset":114026,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepEqual.assert.deepStrictEqual","ranges":[{"startOffset":114073,"endOffset":114165,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepEqual","ranges":[{"startOffset":114190,"endOffset":114289,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAbove","ranges":[{"startOffset":114309,"endOffset":114404,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtLeast","ranges":[{"startOffset":114426,"endOffset":114527,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBelow","ranges":[{"startOffset":114547,"endOffset":114642,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtMost","ranges":[{"startOffset":114663,"endOffset":114762,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isTrue","ranges":[{"startOffset":114781,"endOffset":114864,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotTrue","ranges":[{"startOffset":114886,"endOffset":114980,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFalse","ranges":[{"startOffset":115000,"endOffset":115085,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFalse","ranges":[{"startOffset":115108,"endOffset":115204,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNull","ranges":[{"startOffset":115223,"endOffset":115310,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNull","ranges":[{"startOffset":115332,"endOffset":115426,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNaN","ranges":[{"startOffset":115444,"endOffset":115525,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNaN","ranges":[{"startOffset":115546,"endOffset":115646,"count":0}],"isBlockCoverage":false},{"functionName":"assert.exists","ranges":[{"startOffset":115665,"endOffset":115746,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notExists","ranges":[{"startOffset":115768,"endOffset":115856,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isUndefined","ranges":[{"startOffset":115880,"endOffset":115974,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isDefined","ranges":[{"startOffset":115996,"endOffset":116092,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isCallable","ranges":[{"startOffset":116115,"endOffset":116215,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotCallable","ranges":[{"startOffset":116241,"endOffset":116348,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isObject","ranges":[{"startOffset":116369,"endOffset":116461,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotObject","ranges":[{"startOffset":116485,"endOffset":116584,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isArray","ranges":[{"startOffset":116604,"endOffset":116695,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotArray","ranges":[{"startOffset":116718,"endOffset":116816,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isString","ranges":[{"startOffset":116837,"endOffset":116929,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotString","ranges":[{"startOffset":116953,"endOffset":117052,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumber","ranges":[{"startOffset":117073,"endOffset":117165,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumber","ranges":[{"startOffset":117189,"endOffset":117288,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumeric","ranges":[{"startOffset":117310,"endOffset":117396,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumeric","ranges":[{"startOffset":117421,"endOffset":117514,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFinite","ranges":[{"startOffset":117535,"endOffset":117622,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBoolean","ranges":[{"startOffset":117644,"endOffset":117738,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotBoolean","ranges":[{"startOffset":117763,"endOffset":117864,"count":0}],"isBlockCoverage":false},{"functionName":"assert.typeOf","ranges":[{"startOffset":117883,"endOffset":117977,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notTypeOf","ranges":[{"startOffset":117999,"endOffset":118112,"count":0}],"isBlockCoverage":false},{"functionName":"assert.instanceOf","ranges":[{"startOffset":118135,"endOffset":118242,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInstanceOf","ranges":[{"startOffset":118268,"endOffset":118392,"count":0}],"isBlockCoverage":false},{"functionName":"assert.include","ranges":[{"startOffset":118412,"endOffset":118503,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInclude","ranges":[{"startOffset":118526,"endOffset":118624,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepInclude","ranges":[{"startOffset":118648,"endOffset":118748,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepInclude","ranges":[{"startOffset":118775,"endOffset":118882,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedInclude","ranges":[{"startOffset":118908,"endOffset":119012,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedInclude","ranges":[{"startOffset":119041,"endOffset":119162,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedInclude","ranges":[{"startOffset":119192,"endOffset":119315,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedInclude","ranges":[{"startOffset":119348,"endOffset":119493,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownInclude","ranges":[{"startOffset":119516,"endOffset":119614,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnInclude","ranges":[{"startOffset":119640,"endOffset":119745,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnInclude","ranges":[{"startOffset":119772,"endOffset":119879,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnInclude","ranges":[{"startOffset":119909,"endOffset":120033,"count":0}],"isBlockCoverage":false},{"functionName":"assert.match","ranges":[{"startOffset":120051,"endOffset":120139,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notMatch","ranges":[{"startOffset":120160,"endOffset":120255,"count":0}],"isBlockCoverage":false},{"functionName":"assert.property","ranges":[{"startOffset":120276,"endOffset":120379,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notProperty","ranges":[{"startOffset":120403,"endOffset":120513,"count":0}],"isBlockCoverage":false},{"functionName":"assert.propertyVal","ranges":[{"startOffset":120537,"endOffset":120653,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notPropertyVal","ranges":[{"startOffset":120680,"endOffset":120818,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepPropertyVal","ranges":[{"startOffset":120846,"endOffset":120986,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepPropertyVal","ranges":[{"startOffset":121017,"endOffset":121174,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownProperty","ranges":[{"startOffset":121198,"endOffset":121308,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnProperty","ranges":[{"startOffset":121335,"endOffset":121462,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownPropertyVal","ranges":[{"startOffset":121489,"endOffset":121631,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnPropertyVal","ranges":[{"startOffset":121661,"endOffset":121820,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnPropertyVal","ranges":[{"startOffset":121851,"endOffset":122012,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnPropertyVal","ranges":[{"startOffset":122046,"endOffset":122214,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedProperty","ranges":[{"startOffset":122241,"endOffset":122367,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedProperty","ranges":[{"startOffset":122397,"endOffset":122545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedPropertyVal","ranges":[{"startOffset":122575,"endOffset":122729,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedPropertyVal","ranges":[{"startOffset":122762,"endOffset":122923,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedPropertyVal","ranges":[{"startOffset":122957,"endOffset":123120,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedPropertyVal","ranges":[{"startOffset":123157,"endOffset":123327,"count":0}],"isBlockCoverage":false},{"functionName":"assert.lengthOf","ranges":[{"startOffset":123348,"endOffset":123449,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyKeys","ranges":[{"startOffset":123472,"endOffset":123577,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllKeys","ranges":[{"startOffset":123600,"endOffset":123705,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllKeys","ranges":[{"startOffset":123733,"endOffset":123856,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyKeys","ranges":[{"startOffset":123887,"endOffset":124014,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllKeys","ranges":[{"startOffset":124045,"endOffset":124172,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyDeepKeys","ranges":[{"startOffset":124199,"endOffset":124323,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllDeepKeys","ranges":[{"startOffset":124350,"endOffset":124474,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllDeepKeys","ranges":[{"startOffset":124506,"endOffset":124653,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyDeepKeys","ranges":[{"startOffset":124688,"endOffset":124839,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllDeepKeys","ranges":[{"startOffset":124874,"endOffset":125025,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":125044,"endOffset":125374,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":125399,"endOffset":125694,"count":0}],"isBlockCoverage":false},{"functionName":"assert.operator","ranges":[{"startOffset":125715,"endOffset":126708,"count":0}],"isBlockCoverage":false},{"functionName":"assert.closeTo","ranges":[{"startOffset":126728,"endOffset":126839,"count":0}],"isBlockCoverage":false},{"functionName":"assert.approximately","ranges":[{"startOffset":126865,"endOffset":127003,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameMembers","ranges":[{"startOffset":127027,"endOffset":127139,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameMembers","ranges":[{"startOffset":127166,"endOffset":127310,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepMembers","ranges":[{"startOffset":127338,"endOffset":127484,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepMembers","ranges":[{"startOffset":127515,"endOffset":127668,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameOrderedMembers","ranges":[{"startOffset":127699,"endOffset":127851,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameOrderedMembers","ranges":[{"startOffset":127885,"endOffset":128044,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepOrderedMembers","ranges":[{"startOffset":128079,"endOffset":128240,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepOrderedMembers","ranges":[{"startOffset":128278,"endOffset":128446,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeMembers","ranges":[{"startOffset":128473,"endOffset":128608,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeMembers","ranges":[{"startOffset":128638,"endOffset":128795,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepMembers","ranges":[{"startOffset":128826,"endOffset":128985,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepMembers","ranges":[{"startOffset":129019,"endOffset":129185,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeOrderedMembers","ranges":[{"startOffset":129219,"endOffset":129384,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeOrderedMembers","ranges":[{"startOffset":129421,"endOffset":129593,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepOrderedMembers","ranges":[{"startOffset":129631,"endOffset":129805,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepOrderedMembers","ranges":[{"startOffset":129846,"endOffset":130027,"count":0}],"isBlockCoverage":false},{"functionName":"assert.oneOf","ranges":[{"startOffset":130045,"endOffset":130146,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isIterable","ranges":[{"startOffset":130169,"endOffset":130428,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changes","ranges":[{"startOffset":130448,"endOffset":130653,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesBy","ranges":[{"startOffset":130675,"endOffset":131004,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotChange","ranges":[{"startOffset":131030,"endOffset":131267,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesButNotBy","ranges":[{"startOffset":131295,"endOffset":131638,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increases","ranges":[{"startOffset":131660,"endOffset":131876,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesBy","ranges":[{"startOffset":131900,"endOffset":132233,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotIncrease","ranges":[{"startOffset":132261,"endOffset":132502,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesButNotBy","ranges":[{"startOffset":132532,"endOffset":132879,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreases","ranges":[{"startOffset":132901,"endOffset":133117,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesBy","ranges":[{"startOffset":133141,"endOffset":133474,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecrease","ranges":[{"startOffset":133502,"endOffset":133743,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecreaseBy","ranges":[{"startOffset":133773,"endOffset":134123,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesButNotBy","ranges":[{"startOffset":134153,"endOffset":134500,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":134520,"endOffset":134573,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isExtensible","ranges":[{"startOffset":134598,"endOffset":134693,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotExtensible","ranges":[{"startOffset":134721,"endOffset":134823,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isSealed","ranges":[{"startOffset":134844,"endOffset":134931,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotSealed","ranges":[{"startOffset":134955,"endOffset":135049,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFrozen","ranges":[{"startOffset":135070,"endOffset":135157,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFrozen","ranges":[{"startOffset":135181,"endOffset":135275,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isEmpty","ranges":[{"startOffset":135295,"endOffset":135380,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotEmpty","ranges":[{"startOffset":135403,"endOffset":135495,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsSubset","ranges":[{"startOffset":135522,"endOffset":135600,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotContainSubset","ranges":[{"startOffset":135633,"endOffset":135715,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":136298,"endOffset":136587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bcrypt/bcrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7551,"count":1}],"isBlockCoverage":true},{"functionName":"genSaltSync","ranges":[{"startOffset":449,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"genSalt","ranges":[{"startOffset":1056,"endOffset":2441,"count":1},{"startOffset":1225,"endOffset":1414,"count":0},{"startOffset":1608,"endOffset":1682,"count":0},{"startOffset":1729,"endOffset":1759,"count":0},{"startOffset":1797,"endOffset":1985,"count":0},{"startOffset":2004,"endOffset":2033,"count":0},{"startOffset":2056,"endOffset":2072,"count":0},{"startOffset":2074,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1929,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2172,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2259,"endOffset":2436,"count":1},{"startOffset":2310,"endOffset":2367,"count":0}],"isBlockCoverage":true},{"functionName":"hashSync","ranges":[{"startOffset":2635,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":3387,"endOffset":5024,"count":2},{"startOffset":3474,"endOffset":3690,"count":0},{"startOffset":3730,"endOffset":3946,"count":0},{"startOffset":4036,"endOffset":4063,"count":1},{"startOffset":4065,"endOffset":4170,"count":0},{"startOffset":4187,"endOffset":4295,"count":1},{"startOffset":4297,"endOffset":4452,"count":0},{"startOffset":4452,"endOffset":4491,"count":1},{"startOffset":4491,"endOffset":4516,"count":0},{"startOffset":4518,"endOffset":4575,"count":1},{"startOffset":4577,"endOffset":4791,"count":0},{"startOffset":4791,"endOffset":4973,"count":1},{"startOffset":4973,"endOffset":5023,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3632,"endOffset":3681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3888,"endOffset":3937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4396,"endOffset":4443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4735,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4878,"endOffset":4964,"count":1}],"isBlockCoverage":true},{"functionName":"compareSync","ranges":[{"startOffset":5243,"endOffset":5629,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5886,"endOffset":7137,"count":4},{"startOffset":5976,"endOffset":6133,"count":0},{"startOffset":6173,"endOffset":6330,"count":0},{"startOffset":6420,"endOffset":6447,"count":2},{"startOffset":6449,"endOffset":6554,"count":0},{"startOffset":6571,"endOffset":6682,"count":2},{"startOffset":6684,"endOffset":6839,"count":0},{"startOffset":6839,"endOffset":6878,"count":2},{"startOffset":6878,"endOffset":6903,"count":0},{"startOffset":6905,"endOffset":6932,"count":2},{"startOffset":6934,"endOffset":7086,"count":0},{"startOffset":7086,"endOffset":7136,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6075,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6272,"endOffset":6321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6783,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7030,"endOffset":7077,"count":0}],"isBlockCoverage":false},{"functionName":"getRounds","ranges":[{"startOffset":7297,"endOffset":7548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"338","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"339","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"340","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"341","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2525,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":732,"endOffset":1319,"count":6}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":776,"endOffset":840,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2204,"endOffset":2521,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2274,"endOffset":2486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2837,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1505,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":2069,"endOffset":2170,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2116,"endOffset":2167,"count":4}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2225,"endOffset":2835,"count":4},{"startOffset":2327,"endOffset":2352,"count":0},{"startOffset":2438,"endOffset":2507,"count":1},{"startOffset":2513,"endOffset":2580,"count":1},{"startOffset":2586,"endOffset":2655,"count":1},{"startOffset":2661,"endOffset":2742,"count":1}],"isBlockCoverage":true}]},{"scriptId":"343","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11470,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":375,"endOffset":708,"count":18},{"startOffset":609,"endOffset":653,"count":0},{"startOffset":655,"endOffset":682,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":778,"endOffset":1235,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1294,"endOffset":1447,"count":15}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1499,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1832,"endOffset":2434,"count":9},{"startOffset":1879,"endOffset":1944,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2041,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"eehaslisteners","ranges":[{"startOffset":2764,"endOffset":2962,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":3017,"endOffset":3257,"count":9},{"startOffset":3080,"endOffset":3136,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":3311,"endOffset":3558,"count":9},{"startOffset":3376,"endOffset":3435,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3607,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":5433,"endOffset":5818,"count":24},{"startOffset":5509,"endOffset":5525,"count":0},{"startOffset":5634,"endOffset":5691,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5880,"endOffset":6488,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":6550,"endOffset":7007,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":7066,"endOffset":7628,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7675,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7864,"endOffset":8301,"count":24}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":8354,"endOffset":8420,"count":24}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":8492,"endOffset":9118,"count":15},{"startOffset":8563,"endOffset":8628,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":9178,"endOffset":10386,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":10446,"endOffset":11468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":645,"endOffset":1276,"count":12},{"startOffset":698,"endOffset":758,"count":0},{"startOffset":774,"endOffset":833,"count":0},{"startOffset":867,"endOffset":918,"count":0}],"isBlockCoverage":true},{"functionName":"forEachOwnPropertyName","ranges":[{"startOffset":964,"endOffset":1255,"count":432},{"startOffset":1060,"endOffset":1108,"count":0}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15254,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1488,"endOffset":1607,"count":6}],"isBlockCoverage":true},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1706,"endOffset":3370,"count":6},{"startOffset":3108,"endOffset":3146,"count":0}],"isBlockCoverage":true},{"functionName":"onmount","ranges":[{"startOffset":2232,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3202,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3620,"endOffset":3932,"count":12},{"startOffset":3666,"endOffset":3929,"count":6}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":4192,"endOffset":4546,"count":57},{"startOffset":4435,"endOffset":4507,"count":0}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":4802,"endOffset":6032,"count":12},{"startOffset":4953,"endOffset":5176,"count":6},{"startOffset":5007,"endOffset":5026,"count":0},{"startOffset":5028,"endOffset":5057,"count":0},{"startOffset":5259,"endOffset":5334,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5425,"endOffset":6003,"count":12},{"startOffset":5492,"endOffset":5502,"count":6},{"startOffset":5548,"endOffset":6002,"count":0}],"isBlockCoverage":true},{"functionName":"mounted_app","ranges":[{"startOffset":5708,"endOffset":5942,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":6272,"endOffset":6355,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7648,"endOffset":7931,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":8226,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8797,"endOffset":9787,"count":423},{"startOffset":8857,"endOffset":9160,"count":351},{"startOffset":8941,"endOffset":8973,"count":525},{"startOffset":9028,"endOffset":9072,"count":177},{"startOffset":9072,"endOffset":9160,"count":174},{"startOffset":9160,"endOffset":9316,"count":72},{"startOffset":9316,"endOffset":9388,"count":6},{"startOffset":9394,"endOffset":9489,"count":6},{"startOffset":9495,"endOffset":9761,"count":6},{"startOffset":9766,"endOffset":9786,"count":72}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":10103,"endOffset":10199,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":10462,"endOffset":10530,"count":69}],"isBlockCoverage":true},{"functionName":"disabled","ranges":[{"startOffset":10788,"endOffset":10849,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10976,"endOffset":11040,"count":6}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":11169,"endOffset":11235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11323,"endOffset":11649,"count":35}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":11358,"endOffset":11645,"count":282},{"startOffset":11492,"endOffset":11644,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":11893,"endOffset":12135,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":12628,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":14718,"endOffset":14831,"count":0}],"isBlockCoverage":false},{"functionName":"logerror","ranges":[{"startOffset":14923,"endOffset":15059,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":15114,"endOffset":15252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7109,"count":1},{"startOffset":649,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":651,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":852,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler","ranges":[{"startOffset":1531,"endOffset":2956,"count":57},{"startOffset":1597,"endOffset":1602,"count":0},{"startOffset":1649,"endOffset":1672,"count":0},{"startOffset":1673,"endOffset":1689,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1759,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":3068,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3587,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":4066,"endOffset":4414,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4674,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4929,"endOffset":5170,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5304,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5634,"endOffset":6751,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":6886,"endOffset":7107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":273,"count":1},{"startOffset":170,"endOffset":219,"count":0}],"isBlockCoverage":true}]},{"scriptId":"349","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6263,"count":1},{"startOffset":1505,"endOffset":1714,"count":0},{"startOffset":1740,"endOffset":1756,"count":0},{"startOffset":1799,"endOffset":1844,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":694,"endOffset":745,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":754,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1525,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1921,"endOffset":2054,"count":11},{"startOffset":1991,"endOffset":2028,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2147,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2441,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2629,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3183,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3360,"endOffset":3644,"count":1},{"startOffset":3592,"endOffset":3641,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3770,"endOffset":3819,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":4032,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5944,"endOffset":6159,"count":11},{"startOffset":6086,"endOffset":6156,"count":0}],"isBlockCoverage":true}]},{"scriptId":"350","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4596,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":861,"endOffset":1123,"count":11},{"startOffset":941,"endOffset":1052,"count":170}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1262,"endOffset":3084,"count":11}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1301,"endOffset":2760,"count":726},{"startOffset":1370,"endOffset":1494,"count":0},{"startOffset":1729,"endOffset":2695,"count":0},{"startOffset":2696,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2050,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3254,"endOffset":3812,"count":1},{"startOffset":3410,"endOffset":3422,"count":0},{"startOffset":3539,"endOffset":3804,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3874,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4072,"endOffset":4394,"count":11},{"startOffset":4169,"endOffset":4243,"count":0},{"startOffset":4301,"endOffset":4374,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4492,"endOffset":4594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2916,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":431,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":953,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2115,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2513,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2725,"endOffset":2914,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1638,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1458,"endOffset":1636,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":525,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4664,"count":1},{"startOffset":522,"endOffset":588,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":524,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":797,"endOffset":1024,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1148,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1694,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2717,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":3137,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3695,"endOffset":4005,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":4065,"endOffset":4183,"count":1},{"startOffset":4149,"endOffset":4180,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4313,"endOffset":4662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1779,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":311,"endOffset":1346,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1406,"endOffset":1777,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2967,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":501,"endOffset":860,"count":342},{"startOffset":576,"endOffset":629,"count":0},{"startOffset":692,"endOffset":749,"count":280},{"startOffset":749,"endOffset":859,"count":62}],"isBlockCoverage":true},{"functionName":"originalurl","ranges":[{"startOffset":1009,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1526,"endOffset":2618,"count":62},{"startOffset":1623,"endOffset":1652,"count":0},{"startOffset":1915,"endOffset":2393,"count":563},{"startOffset":1958,"endOffset":2154,"count":0},{"startOffset":2162,"endOffset":2172,"count":0},{"startOffset":2189,"endOffset":2199,"count":0},{"startOffset":2216,"endOffset":2226,"count":0},{"startOffset":2243,"endOffset":2253,"count":0},{"startOffset":2270,"endOffset":2280,"count":0},{"startOffset":2297,"endOffset":2307,"count":0},{"startOffset":2324,"endOffset":2334,"count":0},{"startOffset":2342,"endOffset":2381,"count":0},{"startOffset":2449,"endOffset":2453,"count":0},{"startOffset":2545,"endOffset":2599,"count":0}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":2775,"endOffset":2965,"count":342},{"startOffset":2849,"endOffset":2875,"count":285},{"startOffset":2876,"endOffset":2931,"count":285},{"startOffset":2932,"endOffset":2962,"count":285}],"isBlockCoverage":true}]},{"scriptId":"357","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2756,"count":1}],"isBlockCoverage":true},{"functionName":"createMessageToStatusCodeMap","ranges":[{"startOffset":968,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":1064,"endOffset":1224,"count":63}],"isBlockCoverage":true},{"functionName":"createStatusCodeList","ranges":[{"startOffset":1312,"endOffset":1444,"count":1}],"isBlockCoverage":true},{"functionName":"mapCode","ranges":[{"startOffset":1385,"endOffset":1440,"count":63}],"isBlockCoverage":true},{"functionName":"getStatusCode","ranges":[{"startOffset":1516,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"getStatusMessage","ranges":[{"startOffset":1828,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"status","ranges":[{"startOffset":2417,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1187,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":262,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":592,"endOffset":1185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15796,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":964,"endOffset":1376,"count":12},{"startOffset":1006,"endOffset":1011,"count":6}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":1018,"endOffset":1092,"count":57}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":2565,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3494,"endOffset":8435,"count":114},{"startOffset":4013,"endOffset":4018,"count":109},{"startOffset":4238,"endOffset":4401,"count":0},{"startOffset":4498,"endOffset":4508,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4263,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4528,"endOffset":7156,"count":285},{"startOffset":4594,"endOffset":4600,"count":0},{"startOffset":4665,"endOffset":4734,"count":0},{"startOffset":4800,"endOffset":4932,"count":0},{"startOffset":4999,"endOffset":5053,"count":0},{"startOffset":5118,"endOffset":5180,"count":0},{"startOffset":5229,"endOffset":5275,"count":0},{"startOffset":5369,"endOffset":5409,"count":0},{"startOffset":5522,"endOffset":5543,"count":400},{"startOffset":5545,"endOffset":6441,"count":400},{"startOffset":5685,"endOffset":5772,"count":0},{"startOffset":5802,"endOffset":5831,"count":97},{"startOffset":5831,"endOffset":5853,"count":303},{"startOffset":5853,"endOffset":5930,"count":228},{"startOffset":5930,"endOffset":5956,"count":75},{"startOffset":5956,"endOffset":6062,"count":0},{"startOffset":6062,"endOffset":6223,"count":75},{"startOffset":6223,"endOffset":6246,"count":18},{"startOffset":6248,"endOffset":6309,"count":0},{"startOffset":6309,"endOffset":6378,"count":75},{"startOffset":6378,"endOffset":6398,"count":18},{"startOffset":6400,"endOffset":6434,"count":18},{"startOffset":6486,"endOffset":6526,"count":0},{"startOffset":6588,"endOffset":6622,"count":57},{"startOffset":6705,"endOffset":6746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6902,"endOffset":7149,"count":285},{"startOffset":6935,"endOffset":6978,"count":0},{"startOffset":6995,"endOffset":7051,"count":57},{"startOffset":7051,"endOffset":7124,"count":228}],"isBlockCoverage":true},{"functionName":"trim_prefix","ranges":[{"startOffset":7162,"endOffset":8432,"count":228},{"startOffset":7254,"endOffset":8213,"count":5},{"startOffset":7356,"endOffset":7408,"count":0},{"startOffset":7513,"endOffset":7525,"count":3},{"startOffset":7526,"endOffset":7538,"count":0},{"startOffset":7540,"endOffset":7563,"count":0},{"startOffset":7944,"endOffset":8016,"count":2},{"startOffset":8143,"endOffset":8185,"count":0},{"startOffset":8305,"endOffset":8368,"count":0}],"isBlockCoverage":true},{"functionName":"process_params","ranges":[{"startOffset":8530,"endOffset":10307,"count":285},{"startOffset":8756,"endOffset":8782,"count":265},{"startOffset":8782,"endOffset":10306,"count":20}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":8977,"endOffset":9835,"count":42},{"startOffset":9013,"endOffset":9046,"count":0},{"startOffset":9077,"endOffset":9107,"count":20},{"startOffset":9107,"endOffset":9330,"count":22},{"startOffset":9332,"endOffset":9363,"count":22},{"startOffset":9363,"endOffset":9551,"count":0},{"startOffset":9553,"endOffset":9834,"count":0}],"isBlockCoverage":true},{"functionName":"paramCallback","ranges":[{"startOffset":9870,"endOffset":10290,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10870,"endOffset":11945,"count":24},{"startOffset":11024,"endOffset":11247,"count":12},{"startOffset":11078,"endOffset":11097,"count":0},{"startOffset":11099,"endOffset":11128,"count":0},{"startOffset":11342,"endOffset":11420,"count":0},{"startOffset":11536,"endOffset":11643,"count":0},{"startOffset":11711,"endOffset":11727,"count":0}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":12256,"endOffset":12532,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12600,"endOffset":12772,"count":36}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12637,"endOffset":12768,"count":20}],"isBlockCoverage":true},{"functionName":"appendMethods","ranges":[{"startOffset":12818,"endOffset":13017,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":13049,"endOffset":13171,"count":285},{"startOffset":13127,"endOffset":13168,"count":0}],"isBlockCoverage":true},{"functionName":"getProtohost","ranges":[{"startOffset":13213,"endOffset":13621,"count":114},{"startOffset":13340,"endOffset":13438,"count":0},{"startOffset":13444,"endOffset":13456,"count":0},{"startOffset":13550,"endOffset":13601,"count":0},{"startOffset":13607,"endOffset":13618,"count":0}],"isBlockCoverage":true},{"functionName":"gettype","ranges":[{"startOffset":13656,"endOffset":13863,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13973,"endOffset":14091,"count":400},{"startOffset":14053,"endOffset":14088,"count":0}],"isBlockCoverage":true},{"functionName":"mergeParams","ranges":[{"startOffset":14131,"endOffset":14825,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14866,"endOffset":15285,"count":114},{"startOffset":15033,"endOffset":15103,"count":342}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15116,"endOffset":15281,"count":0}],"isBlockCoverage":false},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":15318,"endOffset":15505,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":15529,"endOffset":15794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4629,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":705,"endOffset":868,"count":20}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":982,"endOffset":1294,"count":75},{"startOffset":1043,"endOffset":1067,"count":0},{"startOffset":1165,"endOffset":1173,"count":0},{"startOffset":1199,"endOffset":1223,"count":0},{"startOffset":1225,"endOffset":1250,"count":0}],"isBlockCoverage":true},{"functionName":"_options","ranges":[{"startOffset":1394,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1810,"endOffset":2825,"count":57},{"startOffset":1934,"endOffset":1960,"count":0},{"startOffset":2045,"endOffset":2057,"count":0},{"startOffset":2085,"endOffset":2109,"count":0},{"startOffset":2111,"endOffset":2138,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":2180,"endOffset":2822,"count":57},{"startOffset":2243,"endOffset":2261,"count":0},{"startOffset":2263,"endOffset":2293,"count":0},{"startOffset":2339,"endOffset":2358,"count":0},{"startOffset":2360,"endOffset":2392,"count":0},{"startOffset":2441,"endOffset":2487,"count":0},{"startOffset":2561,"endOffset":2593,"count":0},{"startOffset":2646,"endOffset":2671,"count":0},{"startOffset":2686,"endOffset":2742,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3464,"endOffset":3971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3992,"endOffset":4625,"count":35}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":4039,"endOffset":4621,"count":20},{"startOffset":4227,"endOffset":4402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"361","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1259,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":245,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":695,"endOffset":952,"count":56},{"startOffset":840,"endOffset":885,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1102,"endOffset":1257,"count":56},{"startOffset":1207,"endOffset":1256,"count":0}],"isBlockCoverage":true}]},{"scriptId":"362","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3477,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":518,"endOffset":1000,"count":84},{"startOffset":587,"endOffset":635,"count":20},{"startOffset":635,"endOffset":685,"count":64},{"startOffset":685,"endOffset":690,"count":0},{"startOffset":738,"endOffset":754,"count":20},{"startOffset":976,"endOffset":997,"count":46}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1207,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1646,"endOffset":1873,"count":342},{"startOffset":1729,"endOffset":1794,"count":0},{"startOffset":1836,"endOffset":1870,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":2052,"endOffset":3027,"count":400},{"startOffset":2206,"endOffset":2279,"count":223},{"startOffset":2279,"endOffset":2370,"count":177},{"startOffset":2370,"endOffset":2468,"count":0},{"startOffset":2468,"endOffset":2552,"count":177},{"startOffset":2552,"endOffset":2635,"count":97},{"startOffset":2635,"endOffset":2802,"count":80},{"startOffset":2802,"endOffset":3006,"count":34},{"startOffset":2925,"endOffset":2964,"count":0},{"startOffset":3006,"endOffset":3026,"count":80}],"isBlockCoverage":true},{"functionName":"decode_param","ranges":[{"startOffset":3130,"endOffset":3475,"count":34},{"startOffset":3211,"endOffset":3234,"count":0},{"startOffset":3288,"endOffset":3472,"count":0}],"isBlockCoverage":true}]},{"scriptId":"363","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3995,"count":1}],"isBlockCoverage":true},{"functionName":"pathToRegexp","ranges":[{"startOffset":565,"endOffset":3992,"count":64},{"startOffset":631,"endOffset":636,"count":0},{"startOffset":653,"endOffset":658,"count":0},{"startOffset":761,"endOffset":765,"count":0},{"startOffset":991,"endOffset":1236,"count":0},{"startOffset":1267,"endOffset":1647,"count":0},{"startOffset":1683,"endOffset":1781,"count":0},{"startOffset":3347,"endOffset":3676,"count":8},{"startOffset":3376,"endOffset":3385,"count":0},{"startOffset":3470,"endOffset":3659,"count":0},{"startOffset":3697,"endOffset":3701,"count":0},{"startOffset":3734,"endOffset":3739,"count":46},{"startOffset":3740,"endOffset":3746,"count":18},{"startOffset":3827,"endOffset":3851,"count":40},{"startOffset":3851,"endOffset":3946,"count":24},{"startOffset":3929,"endOffset":3940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1509,"endOffset":1591,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":3229,"count":8},{"startOffset":1975,"endOffset":2056,"count":0},{"startOffset":2085,"endOffset":2193,"count":0},{"startOffset":2213,"endOffset":2222,"count":0},{"startOffset":2259,"endOffset":2322,"count":0},{"startOffset":2389,"endOffset":2450,"count":0},{"startOffset":2480,"endOffset":2568,"count":0},{"startOffset":2592,"endOffset":2597,"count":0},{"startOffset":2622,"endOffset":2629,"count":0},{"startOffset":2695,"endOffset":2780,"count":0},{"startOffset":2803,"endOffset":2839,"count":0},{"startOffset":3071,"endOffset":3102,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2732,"endOffset":2779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1},{"startOffset":320,"endOffset":344,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":411,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":489,"endOffset":562,"count":35}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":663,"endOffset":1107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6620,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2187,"endOffset":2281,"count":57}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":4464,"endOffset":4550,"count":57}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4724,"endOffset":4830,"count":0}],"isBlockCoverage":false},{"functionName":"lazyUndici","ranges":[{"startOffset":5010,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":5395,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5621,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5968,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6020,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6202,"endOffset":6250,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6380,"endOffset":6429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6561,"endOffset":6612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17313,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2526,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2615,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2803,"endOffset":6078,"count":59},{"startOffset":2867,"endOffset":2893,"count":0},{"startOffset":3444,"endOffset":3452,"count":57},{"startOffset":3633,"endOffset":3642,"count":57},{"startOffset":3844,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3987,"endOffset":5957,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6190,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6909,"endOffset":7427,"count":171},{"startOffset":6979,"endOffset":6993,"count":0},{"startOffset":7113,"endOffset":7142,"count":0},{"startOffset":7309,"endOffset":7338,"count":0},{"startOffset":7373,"endOffset":7406,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7461,"endOffset":9469,"count":57},{"startOffset":7687,"endOffset":7798,"count":0},{"startOffset":7896,"endOffset":7930,"count":0},{"startOffset":8126,"endOffset":8395,"count":0},{"startOffset":8429,"endOffset":8449,"count":0},{"startOffset":8528,"endOffset":8681,"count":0},{"startOffset":9061,"endOffset":9466,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8919,"endOffset":9054,"count":57},{"startOffset":8963,"endOffset":8989,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9505,"endOffset":10499,"count":57},{"startOffset":9642,"endOffset":9676,"count":0},{"startOffset":10278,"endOffset":10383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9889,"endOffset":10177,"count":57},{"startOffset":9924,"endOffset":9939,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeServerName","ranges":[{"startOffset":10504,"endOffset":10669,"count":114},{"startOffset":10611,"endOffset":10666,"count":57}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":10673,"endOffset":11449,"count":57},{"startOffset":10997,"endOffset":11252,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":11453,"endOffset":12945,"count":57},{"startOffset":12897,"endOffset":12942,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":11503,"endOffset":11600,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":11631,"endOffset":11961,"count":57}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":11994,"endOffset":12306,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12343,"endOffset":12835,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":12980,"endOffset":14749,"count":57},{"startOffset":13318,"endOffset":13611,"count":114},{"startOffset":13377,"endOffset":13606,"count":57},{"startOffset":13652,"endOffset":13660,"count":0},{"startOffset":13662,"endOffset":13762,"count":0},{"startOffset":14093,"endOffset":14433,"count":0},{"startOffset":14452,"endOffset":14462,"count":0},{"startOffset":14464,"endOffset":14744,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14618,"endOffset":14737,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14788,"endOffset":15932,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15967,"endOffset":16140,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16171,"endOffset":16532,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16537,"endOffset":16785,"count":57},{"startOffset":16695,"endOffset":16726,"count":0},{"startOffset":16747,"endOffset":16784,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16789,"endOffset":17192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29685,"count":1}],"isBlockCoverage":false},{"functionName":"emitErrorEvent","ranges":[{"startOffset":3018,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3361,"endOffset":3388,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":3643,"endOffset":3943,"count":114},{"startOffset":3722,"endOffset":3749,"count":57},{"startOffset":3751,"endOffset":3924,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3982,"endOffset":4055,"count":57}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":4062,"endOffset":12050,"count":57},{"startOffset":4174,"endOffset":4255,"count":0},{"startOffset":4279,"endOffset":4348,"count":0},{"startOffset":4461,"endOffset":4524,"count":0},{"startOffset":4763,"endOffset":5263,"count":0},{"startOffset":5580,"endOffset":5711,"count":0},{"startOffset":5757,"endOffset":5828,"count":0},{"startOffset":6045,"endOffset":6059,"count":0},{"startOffset":6060,"endOffset":6065,"count":0},{"startOffset":6230,"endOffset":6244,"count":0},{"startOffset":6297,"endOffset":6328,"count":0},{"startOffset":6650,"endOffset":6710,"count":0},{"startOffset":6762,"endOffset":6841,"count":0},{"startOffset":6997,"endOffset":7076,"count":0},{"startOffset":7150,"endOffset":7217,"count":0},{"startOffset":7272,"endOffset":7319,"count":0},{"startOffset":7411,"endOffset":7462,"count":0},{"startOffset":7603,"endOffset":7681,"count":0},{"startOffset":7786,"endOffset":7876,"count":0},{"startOffset":7970,"endOffset":7976,"count":0},{"startOffset":7989,"endOffset":8027,"count":0},{"startOffset":8054,"endOffset":8081,"count":42},{"startOffset":8082,"endOffset":8111,"count":42},{"startOffset":8112,"endOffset":8142,"count":29},{"startOffset":8143,"endOffset":8171,"count":29},{"startOffset":8172,"endOffset":8202,"count":29},{"startOffset":8204,"endOffset":8257,"count":28},{"startOffset":8257,"endOffset":8315,"count":29},{"startOffset":9034,"endOffset":9111,"count":0},{"startOffset":9224,"endOffset":9531,"count":0},{"startOffset":9887,"endOffset":9939,"count":0},{"startOffset":9940,"endOffset":9985,"count":0},{"startOffset":9996,"endOffset":10047,"count":0},{"startOffset":10212,"endOffset":10247,"count":0},{"startOffset":10249,"endOffset":10376,"count":0},{"startOffset":10414,"endOffset":10631,"count":0},{"startOffset":10636,"endOffset":10761,"count":0},{"startOffset":10945,"endOffset":11911,"count":0},{"startOffset":11965,"endOffset":12047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11394,"endOffset":11566,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":12218,"endOffset":12948,"count":57},{"startOffset":12316,"endOffset":12661,"count":0},{"startOffset":12713,"endOffset":12793,"count":0},{"startOffset":12823,"endOffset":12945,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":12995,"endOffset":13213,"count":57},{"startOffset":13045,"endOffset":13099,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":13250,"endOffset":13395,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":13434,"endOffset":13725,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13730,"endOffset":13782,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13786,"endOffset":13952,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13956,"endOffset":15176,"count":57},{"startOffset":14359,"endOffset":14422,"count":0},{"startOffset":14511,"endOffset":14542,"count":0},{"startOffset":14547,"endOffset":14890,"count":0},{"startOffset":15107,"endOffset":15173,"count":0}],"isBlockCoverage":true},{"functionName":"socketErrorListener","ranges":[{"startOffset":15180,"endOffset":15845,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15849,"endOffset":16357,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":16361,"endOffset":18757,"count":57},{"startOffset":16591,"endOffset":16888,"count":0},{"startOffset":16924,"endOffset":18129,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":18761,"endOffset":19002,"count":114},{"startOffset":18963,"endOffset":18979,"count":0},{"startOffset":18980,"endOffset":18997,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":19017,"endOffset":22129,"count":57},{"startOffset":19198,"endOffset":19365,"count":0},{"startOffset":19449,"endOffset":19458,"count":0},{"startOffset":19578,"endOffset":19660,"count":0},{"startOffset":19709,"endOffset":20432,"count":0},{"startOffset":20462,"endOffset":20481,"count":0},{"startOffset":20482,"endOffset":20506,"count":0},{"startOffset":20508,"endOffset":20731,"count":0},{"startOffset":20771,"endOffset":20793,"count":0},{"startOffset":20795,"endOffset":21029,"count":0},{"startOffset":21083,"endOffset":21186,"count":0},{"startOffset":21215,"endOffset":21255,"count":0},{"startOffset":21257,"endOffset":21395,"count":0},{"startOffset":21872,"endOffset":21884,"count":0},{"startOffset":21918,"endOffset":21927,"count":0},{"startOffset":22003,"endOffset":22085,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":22144,"endOffset":23242,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":23246,"endOffset":24435,"count":57},{"startOffset":23371,"endOffset":23424,"count":0},{"startOffset":23700,"endOffset":23735,"count":0},{"startOffset":23778,"endOffset":24432,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":24439,"endOffset":24596,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":24742,"endOffset":24867,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24871,"endOffset":25001,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":25005,"endOffset":26190,"count":57},{"startOffset":25176,"endOffset":25200,"count":0},{"startOffset":25396,"endOffset":25409,"count":0},{"startOffset":25673,"endOffset":25734,"count":0},{"startOffset":26119,"endOffset":26156,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":26194,"endOffset":26307,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":26311,"endOffset":26716,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":26755,"endOffset":26930,"count":57}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":26935,"endOffset":27769,"count":57},{"startOffset":27004,"endOffset":27703,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":27040,"endOffset":27292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27467,"endOffset":27621,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":27833,"endOffset":28610,"count":57},{"startOffset":28578,"endOffset":28607,"count":0}],"isBlockCoverage":true},{"functionName":"callSocketMethod","ranges":[{"startOffset":28244,"endOffset":28340,"count":57}],"isBlockCoverage":true},{"functionName":"onSocket","ranges":[{"startOffset":28364,"endOffset":28511,"count":57},{"startOffset":28438,"endOffset":28506,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":28651,"endOffset":29032,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":29037,"endOffset":29231,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":29272,"endOffset":29355,"count":57}],"isBlockCoverage":true},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":29410,"endOffset":29537,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":29581,"endOffset":29638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8415,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2344,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2817,"endOffset":4344,"count":114},{"startOffset":3109,"endOffset":3174,"count":0},{"startOffset":3203,"endOffset":3256,"count":57},{"startOffset":3348,"endOffset":3368,"count":57},{"startOffset":3370,"endOffset":3422,"count":57},{"startOffset":3699,"endOffset":3721,"count":57},{"startOffset":4098,"endOffset":4283,"count":57}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4348,"endOffset":4678,"count":86},{"startOffset":4499,"endOffset":4506,"count":0},{"startOffset":4648,"endOffset":4670,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4682,"endOffset":5189,"count":114},{"startOffset":4933,"endOffset":5051,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5241,"endOffset":5540,"count":2}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5546,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5934,"endOffset":6581,"count":114},{"startOffset":6028,"endOffset":6047,"count":57},{"startOffset":6137,"endOffset":6319,"count":0},{"startOffset":6499,"endOffset":6529,"count":57}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6801,"endOffset":6869,"count":514}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7140,"endOffset":7218,"count":514}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7222,"endOffset":7617,"count":116}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7621,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7852,"endOffset":8043,"count":114},{"startOffset":7901,"endOffset":7918,"count":0},{"startOffset":7920,"endOffset":8010,"count":0}],"isBlockCoverage":true}]},{"scriptId":"369","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":114},{"startOffset":255,"endOffset":279,"count":112},{"startOffset":280,"endOffset":329,"count":2}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":114},{"startOffset":447,"endOffset":470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"370","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15203,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1603,"endOffset":1709,"count":143}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1713,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1848,"endOffset":2874,"count":114}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3090,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3142,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3285,"endOffset":3594,"count":724},{"startOffset":3324,"endOffset":3561,"count":114},{"startOffset":3485,"endOffset":3554,"count":571}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3604,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3758,"endOffset":4107,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4117,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4272,"endOffset":4587,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4597,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4753,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5118,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5223,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5855,"endOffset":6243,"count":29}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":6491,"endOffset":7310,"count":114},{"startOffset":6566,"endOffset":6625,"count":0},{"startOffset":6995,"endOffset":7248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7071,"endOffset":7241,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7377,"endOffset":7845,"count":114},{"startOffset":7481,"endOffset":7588,"count":0},{"startOffset":7716,"endOffset":7837,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8580,"endOffset":12555,"count":628},{"startOffset":8659,"endOffset":8741,"count":0},{"startOffset":8747,"endOffset":9100,"count":171},{"startOffset":8783,"endOffset":8802,"count":114},{"startOffset":8804,"endOffset":8818,"count":57},{"startOffset":8818,"endOffset":8866,"count":114},{"startOffset":8868,"endOffset":8882,"count":0},{"startOffset":8882,"endOffset":8911,"count":114},{"startOffset":8911,"endOffset":8930,"count":57},{"startOffset":8932,"endOffset":8975,"count":57},{"startOffset":8975,"endOffset":8994,"count":0},{"startOffset":8996,"endOffset":9016,"count":57},{"startOffset":9016,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9100,"count":0},{"startOffset":9106,"endOffset":9501,"count":0},{"startOffset":9507,"endOffset":9753,"count":0},{"startOffset":9759,"endOffset":9956,"count":0},{"startOffset":9962,"endOffset":10259,"count":114},{"startOffset":10041,"endOffset":10061,"count":0},{"startOffset":10132,"endOffset":10148,"count":0},{"startOffset":10183,"endOffset":10208,"count":0},{"startOffset":10245,"endOffset":10259,"count":0},{"startOffset":10265,"endOffset":10381,"count":0},{"startOffset":10387,"endOffset":10603,"count":200},{"startOffset":10432,"endOffset":10459,"count":114},{"startOffset":10470,"endOffset":10492,"count":86},{"startOffset":10492,"endOffset":10556,"count":114},{"startOffset":10567,"endOffset":10589,"count":0},{"startOffset":10589,"endOffset":10603,"count":114},{"startOffset":10609,"endOffset":11043,"count":0},{"startOffset":11049,"endOffset":11174,"count":86},{"startOffset":11096,"endOffset":11125,"count":0},{"startOffset":11160,"endOffset":11174,"count":0},{"startOffset":11180,"endOffset":11538,"count":57},{"startOffset":11228,"endOffset":11258,"count":0},{"startOffset":11300,"endOffset":11370,"count":0},{"startOffset":11381,"endOffset":11482,"count":0},{"startOffset":11493,"endOffset":11538,"count":0},{"startOffset":11544,"endOffset":11796,"count":0},{"startOffset":11802,"endOffset":12172,"count":0},{"startOffset":12178,"endOffset":12436,"count":0},{"startOffset":12441,"endOffset":12461,"count":114},{"startOffset":12461,"endOffset":12554,"count":57}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":13177,"endOffset":14225,"count":571},{"startOffset":13314,"endOffset":13327,"count":286},{"startOffset":13329,"endOffset":13545,"count":285},{"startOffset":13432,"endOffset":13498,"count":0},{"startOffset":13545,"endOffset":14222,"count":286},{"startOffset":13567,"endOffset":13769,"count":0},{"startOffset":13806,"endOffset":14129,"count":0}],"isBlockCoverage":true},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14305,"endOffset":14491,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14619,"endOffset":14868,"count":28}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":14873,"endOffset":15128,"count":114},{"startOffset":15080,"endOffset":15125,"count":57}],"isBlockCoverage":true}]},{"scriptId":"371","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37422,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2703,"endOffset":2730,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3184,"endOffset":3192,"count":229}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3442,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3534,"endOffset":3648,"count":400},{"startOffset":3600,"endOffset":3644,"count":0}],"isBlockCoverage":true},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3652,"endOffset":5287,"count":114},{"startOffset":5152,"endOffset":5167,"count":57},{"startOffset":5168,"endOffset":5196,"count":57},{"startOffset":5245,"endOffset":5274,"count":57},{"startOffset":5275,"endOffset":5283,"count":57}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5491,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5624,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5765,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6022,"endOffset":6053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6154,"endOffset":6271,"count":86},{"startOffset":6230,"endOffset":6260,"count":57},{"startOffset":6261,"endOffset":6264,"count":29}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6379,"endOffset":6479,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6580,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6742,"endOffset":6790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6887,"endOffset":7372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7538,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7592,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7734,"endOffset":7778,"count":399}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7788,"endOffset":7940,"count":171},{"startOffset":7849,"endOffset":7909,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8067,"endOffset":8539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8640,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":9227,"endOffset":9749,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9787,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9918,"endOffset":10707,"count":114},{"startOffset":9973,"endOffset":10008,"count":57},{"startOffset":10089,"endOffset":10628,"count":0},{"startOffset":10629,"endOffset":10635,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10543,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10751,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":11312,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":11759,"endOffset":12733,"count":200},{"startOffset":12042,"endOffset":12066,"count":114},{"startOffset":12068,"endOffset":12666,"count":114},{"startOffset":12260,"endOffset":12331,"count":57},{"startOffset":12318,"endOffset":12330,"count":29},{"startOffset":12333,"endOffset":12631,"count":57}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":12788,"endOffset":13659,"count":200},{"startOffset":12883,"endOffset":12894,"count":114},{"startOffset":12896,"endOffset":13047,"count":0},{"startOffset":13089,"endOffset":13143,"count":0},{"startOffset":13158,"endOffset":13187,"count":114},{"startOffset":13188,"endOffset":13204,"count":114},{"startOffset":13206,"endOffset":13433,"count":114},{"startOffset":13304,"endOffset":13344,"count":57},{"startOffset":13433,"endOffset":13658,"count":86}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":13721,"endOffset":18757,"count":114},{"startOffset":14163,"endOffset":14274,"count":400},{"startOffset":14281,"endOffset":15007,"count":0},{"startOffset":15083,"endOffset":15097,"count":57},{"startOffset":15099,"endOffset":15151,"count":57},{"startOffset":15758,"endOffset":15845,"count":0},{"startOffset":15847,"endOffset":16035,"count":0},{"startOffset":16093,"endOffset":16296,"count":0},{"startOffset":16381,"endOffset":16458,"count":0},{"startOffset":16489,"endOffset":16527,"count":0},{"startOffset":16529,"endOffset":16579,"count":0},{"startOffset":16610,"endOffset":17020,"count":0},{"startOffset":17132,"endOffset":17144,"count":28},{"startOffset":17146,"endOffset":18155,"count":28},{"startOffset":17173,"endOffset":17292,"count":0},{"startOffset":17371,"endOffset":18150,"count":0},{"startOffset":18482,"endOffset":18531,"count":0},{"startOffset":18739,"endOffset":18754,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":18761,"endOffset":19907,"count":400},{"startOffset":18843,"endOffset":18867,"count":0},{"startOffset":19116,"endOffset":19138,"count":0},{"startOffset":19140,"endOffset":19395,"count":0},{"startOffset":19426,"endOffset":19853,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":19911,"endOffset":20115,"count":400},{"startOffset":19991,"endOffset":20023,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":20119,"endOffset":21012,"count":400},{"startOffset":20220,"endOffset":20227,"count":0},{"startOffset":20285,"endOffset":20505,"count":0},{"startOffset":20511,"endOffset":20682,"count":0},{"startOffset":20688,"endOffset":20826,"count":86},{"startOffset":20832,"endOffset":20844,"count":0},{"startOffset":20850,"endOffset":20864,"count":0},{"startOffset":20870,"endOffset":20927,"count":0},{"startOffset":20933,"endOffset":21004,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21059,"endOffset":21246,"count":457},{"startOffset":21147,"endOffset":21243,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21296,"endOffset":21616,"count":457},{"startOffset":21343,"endOffset":21429,"count":0},{"startOffset":21468,"endOffset":21613,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":21622,"endOffset":21890,"count":114},{"startOffset":21722,"endOffset":21889,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":21932,"endOffset":22292,"count":457},{"startOffset":21987,"endOffset":22038,"count":0},{"startOffset":22173,"endOffset":22223,"count":114}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":22336,"endOffset":23382,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":23428,"endOffset":24178,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":24223,"endOffset":24433,"count":496},{"startOffset":24353,"endOffset":24360,"count":57},{"startOffset":24360,"endOffset":24424,"count":439},{"startOffset":24424,"endOffset":24429,"count":204}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":24550,"endOffset":24655,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":24779,"endOffset":25193,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":25299,"endOffset":25723,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":25768,"endOffset":25916,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":25964,"endOffset":26542,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":26593,"endOffset":26686,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26828,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26970,"endOffset":27006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27115,"endOffset":27199,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":27282,"endOffset":27545,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":27550,"endOffset":27963,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":27967,"endOffset":28123,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":28127,"endOffset":28370,"count":114},{"startOffset":28204,"endOffset":28238,"count":0},{"startOffset":28239,"endOffset":28259,"count":0},{"startOffset":28260,"endOffset":28288,"count":0},{"startOffset":28289,"endOffset":28317,"count":0},{"startOffset":28318,"endOffset":28361,"count":0}],"isBlockCoverage":true},{"functionName":"write_","ranges":[{"startOffset":28374,"endOffset":30867,"count":86},{"startOffset":28518,"endOffset":28565,"count":0},{"startOffset":28601,"endOffset":28624,"count":57},{"startOffset":28626,"endOffset":28729,"count":0},{"startOffset":28765,"endOffset":28816,"count":0},{"startOffset":28841,"endOffset":28893,"count":0},{"startOffset":28908,"endOffset":29057,"count":0},{"startOffset":29106,"endOffset":29517,"count":0},{"startOffset":29604,"endOffset":29640,"count":29},{"startOffset":29641,"endOffset":29659,"count":57},{"startOffset":29758,"endOffset":30031,"count":0},{"startOffset":30050,"endOffset":30063,"count":0},{"startOffset":30064,"endOffset":30093,"count":0},{"startOffset":30095,"endOffset":30178,"count":0},{"startOffset":30220,"endOffset":30241,"count":0},{"startOffset":30243,"endOffset":30749,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":30873,"endOffset":30927,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":30971,"endOffset":32420,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":32425,"endOffset":32523,"count":114},{"startOffset":32487,"endOffset":32494,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":32559,"endOffset":34634,"count":114},{"startOffset":32637,"endOffset":32707,"count":0},{"startOffset":32749,"endOffset":32803,"count":0},{"startOffset":32820,"endOffset":33128,"count":86},{"startOffset":32846,"endOffset":33009,"count":0},{"startOffset":33036,"endOffset":33073,"count":57},{"startOffset":33128,"endOffset":33540,"count":28},{"startOffset":33153,"endOffset":33386,"count":0},{"startOffset":33437,"endOffset":33474,"count":0},{"startOffset":33587,"endOffset":33617,"count":0},{"startOffset":33653,"endOffset":33699,"count":0},{"startOffset":33701,"endOffset":33798,"count":0},{"startOffset":33899,"endOffset":33974,"count":0},{"startOffset":34002,"endOffset":34024,"count":86},{"startOffset":34025,"endOffset":34033,"count":0},{"startOffset":34080,"endOffset":34123,"count":0},{"startOffset":34148,"endOffset":34271,"count":57},{"startOffset":34515,"endOffset":34538,"count":57},{"startOffset":34539,"endOffset":34584,"count":57},{"startOffset":34586,"endOffset":34613,"count":57}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":34813,"endOffset":34889,"count":114}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":35705,"endOffset":36143,"count":114},{"startOffset":35924,"endOffset":36135,"count":57},{"startOffset":36046,"endOffset":36065,"count":0},{"startOffset":36067,"endOffset":36135,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":36189,"endOffset":36782,"count":171},{"startOffset":36300,"endOffset":36317,"count":57},{"startOffset":36317,"endOffset":36535,"count":114},{"startOffset":36535,"endOffset":36649,"count":143},{"startOffset":36649,"endOffset":36781,"count":114}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":36830,"endOffset":36968,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":37006,"endOffset":37151,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":37212,"endOffset":37259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":307,"endOffset":377,"count":57},{"startOffset":346,"endOffset":354,"count":3}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":381,"endOffset":518,"count":3}],"isBlockCoverage":true},{"functionName":"resetCache","ranges":[{"startOffset":522,"endOffset":573,"count":2}],"isBlockCoverage":true},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":602,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":729,"endOffset":793,"count":228}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":845,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":939,"endOffset":1027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40105,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2828,"endOffset":2855,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7428,"endOffset":7510,"count":57}],"isBlockCoverage":true},{"functionName":"ServerResponse","ranges":[{"startOffset":7517,"endOffset":8532,"count":57},{"startOffset":7629,"endOffset":7651,"count":0},{"startOffset":7821,"endOffset":7940,"count":0},{"startOffset":7971,"endOffset":8229,"count":0},{"startOffset":8259,"endOffset":8381,"count":0},{"startOffset":8430,"endOffset":8529,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":8703,"endOffset":9368,"count":57},{"startOffset":8763,"endOffset":8785,"count":0},{"startOffset":8787,"endOffset":9076,"count":0},{"startOffset":9154,"endOffset":9195,"count":0},{"startOffset":9197,"endOffset":9365,"count":0}],"isBlockCoverage":true},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9474,"endOffset":10486,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10530,"endOffset":10794,"count":57},{"startOffset":10590,"endOffset":10639,"count":0}],"isBlockCoverage":true},{"functionName":"detachSocket","ranges":[{"startOffset":10839,"endOffset":11026,"count":57}],"isBlockCoverage":true},{"functionName":"writeContinue","ranges":[{"startOffset":11072,"endOffset":11193,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":11241,"endOffset":11341,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":11389,"endOffset":11925,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11973,"endOffset":12040,"count":57}],"isBlockCoverage":true},{"functionName":"writeHead","ranges":[{"startOffset":12094,"endOffset":15029,"count":57},{"startOffset":12163,"endOffset":12216,"count":0},{"startOffset":12328,"endOffset":12399,"count":0},{"startOffset":12439,"endOffset":12534,"count":0},{"startOffset":12636,"endOffset":12648,"count":0},{"startOffset":12865,"endOffset":13416,"count":0},{"startOffset":13431,"endOffset":13709,"count":0},{"startOffset":13785,"endOffset":13849,"count":0},{"startOffset":13908,"endOffset":13952,"count":0},{"startOffset":14131,"endOffset":14726,"count":0},{"startOffset":14903,"endOffset":14920,"count":0},{"startOffset":14922,"endOffset":14963,"count":0}],"isBlockCoverage":true},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":15145,"endOffset":18017,"count":57},{"startOffset":15414,"endOffset":15465,"count":0},{"startOffset":15611,"endOffset":15677,"count":0},{"startOffset":15816,"endOffset":15924,"count":0},{"startOffset":16075,"endOffset":16183,"count":0},{"startOffset":16415,"endOffset":16509,"count":0},{"startOffset":16605,"endOffset":16721,"count":0},{"startOffset":16912,"endOffset":17072,"count":0},{"startOffset":17245,"endOffset":17370,"count":0},{"startOffset":17526,"endOffset":17608,"count":0},{"startOffset":17790,"endOffset":17955,"count":0}],"isBlockCoverage":true},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":18021,"endOffset":18573,"count":57},{"startOffset":18185,"endOffset":18247,"count":0}],"isBlockCoverage":true},{"functionName":"httpServerPreClose","ranges":[{"startOffset":18577,"endOffset":18707,"count":57}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":18711,"endOffset":19942,"count":57},{"startOffset":18789,"endOffset":18833,"count":0},{"startOffset":18941,"endOffset":19056,"count":0}],"isBlockCoverage":true},{"functionName":"Server.close","ranges":[{"startOffset":20077,"endOffset":20199,"count":57}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":20243,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":20352,"endOffset":20568,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":20613,"endOffset":20951,"count":57},{"startOffset":20654,"endOffset":20673,"count":0},{"startOffset":20829,"endOffset":20876,"count":0},{"startOffset":20878,"endOffset":20903,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":20986,"endOffset":21120,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":21171,"endOffset":21760,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":21765,"endOffset":22124,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":22128,"endOffset":22277,"count":57}],"isBlockCoverage":true},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":22281,"endOffset":25780,"count":57},{"startOffset":22713,"endOffset":22755,"count":0},{"startOffset":22762,"endOffset":22796,"count":0},{"startOffset":22956,"endOffset":22983,"count":0},{"startOffset":23298,"endOffset":23311,"count":0},{"startOffset":23529,"endOffset":23593,"count":0}],"isBlockCoverage":true},{"functionName":"socketSetEncoding","ranges":[{"startOffset":25784,"endOffset":25858,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":25862,"endOffset":25981,"count":114}],"isBlockCoverage":true},{"functionName":"socketOnDrain","ranges":[{"startOffset":25985,"endOffset":26455,"count":114},{"startOffset":26178,"endOffset":26191,"count":0},{"startOffset":26193,"endOffset":26305,"count":0},{"startOffset":26392,"endOffset":26452,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnTimeout","ranges":[{"startOffset":26459,"endOffset":26827,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":26831,"endOffset":26984,"count":57}],"isBlockCoverage":true},{"functionName":"abortIncoming","ranges":[{"startOffset":26988,"endOffset":27181,"count":57},{"startOffset":27050,"endOffset":27144,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnEnd","ranges":[{"startOffset":27185,"endOffset":27723,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":27727,"endOffset":27962,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":27966,"endOffset":28143,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":28147,"endOffset":28654,"count":57}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":28658,"endOffset":28808,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":28825,"endOffset":28833,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":29405,"endOffset":30509,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":30513,"endOffset":32151,"count":57},{"startOffset":30662,"endOffset":30773,"count":0},{"startOffset":30809,"endOffset":31840,"count":0},{"startOffset":31903,"endOffset":31970,"count":0},{"startOffset":31995,"endOffset":32011,"count":0},{"startOffset":32013,"endOffset":32148,"count":0}],"isBlockCoverage":true},{"functionName":"clearIncoming","ranges":[{"startOffset":32155,"endOffset":32486,"count":85},{"startOffset":32388,"endOffset":32427,"count":57},{"startOffset":32427,"endOffset":32478,"count":28}],"isBlockCoverage":true},{"functionName":"resOnFinish","ranges":[{"startOffset":32490,"endOffset":34021,"count":57},{"startOffset":32593,"endOffset":32720,"count":0},{"startOffset":33190,"endOffset":33228,"count":28},{"startOffset":33235,"endOffset":33247,"count":28},{"startOffset":33451,"endOffset":33486,"count":0},{"startOffset":33491,"endOffset":34018,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":34025,"endOffset":34164,"count":57}],"isBlockCoverage":true},{"functionName":"parserOnIncoming","ranges":[{"startOffset":34335,"endOffset":38155,"count":57},{"startOffset":34470,"endOffset":34618,"count":0},{"startOffset":34964,"endOffset":35191,"count":0},{"startOffset":35908,"endOffset":36033,"count":0},{"startOffset":36064,"endOffset":36157,"count":0},{"startOffset":36829,"endOffset":36924,"count":0},{"startOffset":37097,"endOffset":37243,"count":0},{"startOffset":37274,"endOffset":37335,"count":0},{"startOffset":37337,"endOffset":37461,"count":0},{"startOffset":37505,"endOffset":38041,"count":0}],"isBlockCoverage":true},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":38159,"endOffset":38345,"count":114},{"startOffset":38259,"endOffset":38302,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketResume","ranges":[{"startOffset":38349,"endOffset":38887,"count":57},{"startOffset":38726,"endOffset":38764,"count":0},{"startOffset":38813,"endOffset":38884,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketPause","ranges":[{"startOffset":38891,"endOffset":39022,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":39026,"endOffset":39286,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":39290,"endOffset":39860,"count":171}],"isBlockCoverage":true},{"functionName":"socketListenerWrap","ranges":[{"startOffset":39357,"endOffset":39856,"count":114},{"startOffset":39551,"endOffset":39748,"count":0},{"startOffset":39803,"endOffset":39832,"count":0}],"isBlockCoverage":true}]},{"scriptId":"374","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":404,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":291,"endOffset":401,"count":6},{"startOffset":348,"endOffset":380,"count":0}],"isBlockCoverage":true}]},{"scriptId":"375","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1},{"startOffset":79,"endOffset":149,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":153,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":233,"endOffset":422,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":896,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":529,"endOffset":891,"count":6}],"isBlockCoverage":true},{"functionName":"expressInit","ranges":[{"startOffset":554,"endOffset":887,"count":57}],"isBlockCoverage":true}]},{"scriptId":"377","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":424,"endOffset":929,"count":6},{"startOffset":638,"endOffset":675,"count":0},{"startOffset":677,"endOffset":751,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":764,"endOffset":925,"count":57}],"isBlockCoverage":true}]},{"scriptId":"378","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11680,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":225,"endOffset":290,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":327,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":422,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":568,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1212,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1374,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1627,"endOffset":5925,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5962,"endOffset":9507,"count":57},{"startOffset":6021,"endOffset":6055,"count":0},{"startOffset":6112,"endOffset":6157,"count":0},{"startOffset":6159,"endOffset":6271,"count":0},{"startOffset":6327,"endOffset":6371,"count":0},{"startOffset":6373,"endOffset":6484,"count":0},{"startOffset":6557,"endOffset":6594,"count":0},{"startOffset":6596,"endOffset":6667,"count":0},{"startOffset":6768,"endOffset":6795,"count":0},{"startOffset":6796,"endOffset":6828,"count":0},{"startOffset":6830,"endOffset":6937,"count":0},{"startOffset":7023,"endOffset":7201,"count":0},{"startOffset":7356,"endOffset":7395,"count":0},{"startOffset":7472,"endOffset":7521,"count":0},{"startOffset":7588,"endOffset":7599,"count":0},{"startOffset":7618,"endOffset":7677,"count":0},{"startOffset":7714,"endOffset":7757,"count":0},{"startOffset":7759,"endOffset":7846,"count":0},{"startOffset":7940,"endOffset":7946,"count":0},{"startOffset":7968,"endOffset":7986,"count":0},{"startOffset":8070,"endOffset":8091,"count":0},{"startOffset":8220,"endOffset":8245,"count":0},{"startOffset":8405,"endOffset":8427,"count":0},{"startOffset":8581,"endOffset":8597,"count":0},{"startOffset":8649,"endOffset":8662,"count":0},{"startOffset":8750,"endOffset":8772,"count":0},{"startOffset":8854,"endOffset":8868,"count":0},{"startOffset":8959,"endOffset":8982,"count":0},{"startOffset":9158,"endOffset":9178,"count":0},{"startOffset":9261,"endOffset":9277,"count":0},{"startOffset":9347,"endOffset":9358,"count":0},{"startOffset":9467,"endOffset":9496,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":9529,"endOffset":11677,"count":57},{"startOffset":9716,"endOffset":9790,"count":0},{"startOffset":9825,"endOffset":9894,"count":0},{"startOffset":9969,"endOffset":9997,"count":0},{"startOffset":10133,"endOffset":10158,"count":0},{"startOffset":10252,"endOffset":10297,"count":0},{"startOffset":10387,"endOffset":11155,"count":0},{"startOffset":11256,"endOffset":11261,"count":0},{"startOffset":11304,"endOffset":11618,"count":0},{"startOffset":11651,"endOffset":11668,"count":0}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1232,"count":1},{"startOffset":318,"endOffset":338,"count":0},{"startOffset":339,"endOffset":360,"count":0}],"isBlockCoverage":true},{"functionName":"getSideChannel","ranges":[{"startOffset":410,"endOffset":1229,"count":57}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":613,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":760,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":849,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":930,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1013,"endOffset":1143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19758,"count":1},{"startOffset":181,"endOffset":187,"count":0},{"startOffset":303,"endOffset":309,"count":0},{"startOffset":544,"endOffset":550,"count":0},{"startOffset":666,"endOffset":672,"count":0},{"startOffset":848,"endOffset":854,"count":0},{"startOffset":979,"endOffset":985,"count":0},{"startOffset":1114,"endOffset":1120,"count":0},{"startOffset":1744,"endOffset":1750,"count":0},{"startOffset":1909,"endOffset":1915,"count":0},{"startOffset":2164,"endOffset":2174,"count":0},{"startOffset":2218,"endOffset":2224,"count":0},{"startOffset":2329,"endOffset":2353,"count":0},{"startOffset":2379,"endOffset":2574,"count":0},{"startOffset":3472,"endOffset":3478,"count":0},{"startOffset":13553,"endOffset":13594,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2465,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2579,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3676,"endOffset":11540,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":11545,"endOffset":11717,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":11721,"endOffset":11797,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":11801,"endOffset":11936,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11938,"endOffset":12071,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":12073,"endOffset":12210,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":12212,"endOffset":12347,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":12349,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":12488,"endOffset":12625,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":12627,"endOffset":12766,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12879,"endOffset":13275,"count":1},{"startOffset":12932,"endOffset":13013,"count":0},{"startOffset":13078,"endOffset":13119,"count":0},{"startOffset":13120,"endOffset":13135,"count":0},{"startOffset":13137,"endOffset":13274,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":13279,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":13556,"endOffset":13594,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":13597,"endOffset":13659,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":13663,"endOffset":13725,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":13729,"endOffset":13911,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13915,"endOffset":14103,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":14107,"endOffset":14460,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":14464,"endOffset":14858,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":14862,"endOffset":15078,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":15082,"endOffset":15435,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":15439,"endOffset":15833,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":15837,"endOffset":16107,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":16111,"endOffset":16713,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":16717,"endOffset":16996,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":17000,"endOffset":17063,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":17067,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":17136,"endOffset":17346,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":17350,"endOffset":17532,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":17536,"endOffset":17935,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":17939,"endOffset":18154,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":18158,"endOffset":19756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43,"count":1}],"isBlockCoverage":true}]},{"scriptId":"384","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-list/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3504,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":526,"endOffset":1081,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1146,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1354,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":1813,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"listDelete","ranges":[{"startOffset":2034,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannelList","ranges":[{"startOffset":2176,"endOffset":3501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2049,"count":1}],"isBlockCoverage":true},{"functionName":"getSideChannelMap","ranges":[{"startOffset":910,"endOffset":2046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14733,"count":1},{"startOffset":1564,"endOffset":1580,"count":0},{"startOffset":2012,"endOffset":2023,"count":0},{"startOffset":2149,"endOffset":2160,"count":0},{"startOffset":2253,"endOffset":2264,"count":0},{"startOffset":2367,"endOffset":2378,"count":0},{"startOffset":2622,"endOffset":2633,"count":0},{"startOffset":2689,"endOffset":2700,"count":0},{"startOffset":2769,"endOffset":2780,"count":0},{"startOffset":2858,"endOffset":2869,"count":0},{"startOffset":2960,"endOffset":2971,"count":0},{"startOffset":3305,"endOffset":3316,"count":0},{"startOffset":3389,"endOffset":3400,"count":0},{"startOffset":3489,"endOffset":3500,"count":0},{"startOffset":3638,"endOffset":3649,"count":0},{"startOffset":3715,"endOffset":3726,"count":0},{"startOffset":3793,"endOffset":3804,"count":0},{"startOffset":3957,"endOffset":3968,"count":0},{"startOffset":4014,"endOffset":4025,"count":0},{"startOffset":4065,"endOffset":4076,"count":0},{"startOffset":4167,"endOffset":4178,"count":0},{"startOffset":4432,"endOffset":4443,"count":0},{"startOffset":4497,"endOffset":4508,"count":0},{"startOffset":4634,"endOffset":4645,"count":0},{"startOffset":4717,"endOffset":4728,"count":0},{"startOffset":4819,"endOffset":4830,"count":0},{"startOffset":4939,"endOffset":4950,"count":0},{"startOffset":5082,"endOffset":5093,"count":0},{"startOffset":5129,"endOffset":5140,"count":0},{"startOffset":5324,"endOffset":5335,"count":0},{"startOffset":5416,"endOffset":5427,"count":0},{"startOffset":5503,"endOffset":5514,"count":0},{"startOffset":5584,"endOffset":5595,"count":0},{"startOffset":5684,"endOffset":5695,"count":0},{"startOffset":5753,"endOffset":5764,"count":0},{"startOffset":5822,"endOffset":5833,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":813,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":1069,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1146,"endOffset":1558,"count":1},{"startOffset":1495,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"doEval","ranges":[{"startOffset":6517,"endOffset":7210,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":10725,"endOffset":11289,"count":13},{"startOffset":10852,"endOffset":10867,"count":4},{"startOffset":10869,"endOffset":10951,"count":0},{"startOffset":10974,"endOffset":10990,"count":4},{"startOffset":10992,"endOffset":11074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11125,"endOffset":11267,"count":34},{"startOffset":11203,"endOffset":11244,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":11339,"endOffset":12040,"count":13},{"startOffset":11473,"endOffset":11561,"count":0},{"startOffset":11677,"endOffset":11718,"count":0},{"startOffset":11755,"endOffset":11771,"count":0},{"startOffset":11773,"endOffset":11883,"count":0},{"startOffset":11967,"endOffset":12039,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":12062,"endOffset":14730,"count":13},{"startOffset":12159,"endOffset":12234,"count":0},{"startOffset":12262,"endOffset":12298,"count":12},{"startOffset":12300,"endOffset":12375,"count":0},{"startOffset":12421,"endOffset":12539,"count":0},{"startOffset":12628,"endOffset":12632,"count":0},{"startOffset":12870,"endOffset":12956,"count":0},{"startOffset":13017,"endOffset":14711,"count":21},{"startOffset":13250,"endOffset":13267,"count":0},{"startOffset":13273,"endOffset":13363,"count":0},{"startOffset":13405,"endOffset":13442,"count":0},{"startOffset":13583,"endOffset":13632,"count":8},{"startOffset":13632,"endOffset":14707,"count":13},{"startOffset":13685,"endOffset":13859,"count":0},{"startOffset":13902,"endOffset":14537,"count":10},{"startOffset":14423,"endOffset":14456,"count":1},{"startOffset":14458,"endOffset":14490,"count":1},{"startOffset":14490,"endOffset":14531,"count":9},{"startOffset":14537,"endOffset":14610,"count":3}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-object-atoms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71,"count":1}],"isBlockCoverage":true}]},{"scriptId":"388","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70,"count":1}],"isBlockCoverage":true}]},{"scriptId":"389","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"390","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":81,"count":1}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/abs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/floor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":81,"count":1}],"isBlockCoverage":true}]},{"scriptId":"396","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/max.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/pow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/round.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":81,"count":1}],"isBlockCoverage":true}]},{"scriptId":"400","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":103,"endOffset":222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/isNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1},{"startOffset":81,"endOffset":124,"count":0}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":84,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gopd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1},{"startOffset":128,"endOffset":189,"count":0}],"isBlockCoverage":true}]},{"scriptId":"403","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gopd/gOPD.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":101,"count":1}],"isBlockCoverage":true}]},{"scriptId":"404","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1},{"startOffset":89,"endOffset":97,"count":0},{"startOffset":178,"endOffset":260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"405","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":461,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":164,"endOffset":458,"count":1},{"startOffset":234,"endOffset":251,"count":0},{"startOffset":288,"endOffset":305,"count":0},{"startOffset":351,"endOffset":368,"count":0},{"startOffset":410,"endOffset":427,"count":0}],"isBlockCoverage":true}]},{"scriptId":"406","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1967,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":127,"endOffset":1964,"count":2},{"startOffset":241,"endOffset":258,"count":0},{"startOffset":318,"endOffset":1305,"count":0},{"startOffset":1307,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1541,"count":0},{"startOffset":1543,"endOffset":1963,"count":0}],"isBlockCoverage":true}]},{"scriptId":"407","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":848,"count":1},{"startOffset":389,"endOffset":845,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":257,"endOffset":386,"count":9}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":413,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"getProto","ranges":[{"startOffset":700,"endOffset":834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/Reflect.getPrototypeOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1},{"startOffset":144,"endOffset":151,"count":0}],"isBlockCoverage":true}]},{"scriptId":"409","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/Object.getPrototypeOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1},{"startOffset":152,"endOffset":159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/dunder-proto/get.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1010,"count":1},{"startOffset":299,"endOffset":417,"count":0},{"startOffset":781,"endOffset":1007,"count":0}],"isBlockCoverage":true},{"functionName":"getDunder","ranges":[{"startOffset":857,"endOffset":996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"callBindBasic","ranges":[{"startOffset":235,"endOffset":423,"count":11},{"startOffset":322,"endOffset":378,"count":0}],"isBlockCoverage":true}]},{"scriptId":"412","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":131,"count":1},{"startOffset":111,"endOffset":128,"count":0}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2127,"count":1}],"isBlockCoverage":true},{"functionName":"concatty","ranges":[{"startOffset":239,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"slicy","ranges":[{"startOffset":487,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"joiny","ranges":[{"startOffset":689,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":926,"endOffset":2124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/functionCall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":101,"count":1}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/actualApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":290,"count":1},{"startOffset":260,"endOffset":287,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/functionApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"417","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/reflectApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true}]},{"scriptId":"418","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/hasown/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"419","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bound/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":685,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":333,"endOffset":682,"count":9},{"startOffset":659,"endOffset":681,"count":0}],"isBlockCoverage":true}]},{"scriptId":"420","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-weakmap/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2792,"count":1},{"startOffset":2770,"endOffset":2789,"count":0}],"isBlockCoverage":true},{"functionName":"getSideChannelWeakMap","ranges":[{"startOffset":975,"endOffset":2767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7532,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":148,"endOffset":331,"count":1},{"startOffset":218,"endOffset":307,"count":256},{"startOffset":255,"endOffset":260,"count":16},{"startOffset":261,"endOffset":265,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":358,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":838,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1140,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2825,"endOffset":3005,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":3023,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3505,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5972,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":6622,"endOffset":6720,"count":57}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":6740,"endOffset":6937,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6956,"endOffset":7012,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":7032,"endOffset":7266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":250,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":362,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11607,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":705,"endOffset":859,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":886,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1712,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":4133,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":5557,"endOffset":7329,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":7362,"endOffset":10804,"count":57},{"startOffset":7417,"endOffset":7451,"count":0},{"startOffset":7508,"endOffset":7553,"count":0},{"startOffset":7555,"endOffset":7667,"count":0},{"startOffset":7723,"endOffset":7767,"count":0},{"startOffset":7769,"endOffset":7880,"count":0},{"startOffset":7953,"endOffset":7990,"count":0},{"startOffset":7992,"endOffset":8063,"count":0},{"startOffset":8111,"endOffset":8138,"count":0},{"startOffset":8139,"endOffset":8171,"count":0},{"startOffset":8173,"endOffset":8280,"count":0},{"startOffset":8355,"endOffset":8369,"count":0},{"startOffset":8456,"endOffset":8473,"count":0},{"startOffset":8511,"endOffset":8536,"count":0},{"startOffset":8537,"endOffset":8561,"count":0},{"startOffset":8563,"endOffset":8665,"count":0},{"startOffset":8759,"endOffset":8765,"count":0},{"startOffset":8787,"endOffset":8805,"count":0},{"startOffset":8924,"endOffset":8949,"count":0},{"startOffset":9070,"endOffset":9096,"count":0},{"startOffset":9158,"endOffset":9176,"count":0},{"startOffset":9258,"endOffset":9275,"count":0},{"startOffset":9394,"endOffset":9416,"count":0},{"startOffset":9493,"endOffset":9505,"count":0},{"startOffset":9592,"endOffset":9614,"count":0},{"startOffset":9696,"endOffset":9710,"count":0},{"startOffset":9820,"endOffset":9836,"count":0},{"startOffset":10007,"endOffset":10020,"count":0},{"startOffset":10219,"endOffset":10250,"count":0},{"startOffset":10353,"endOffset":10374,"count":0},{"startOffset":10514,"endOffset":10533,"count":0},{"startOffset":10619,"endOffset":10639,"count":0},{"startOffset":10738,"endOffset":10763,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":10826,"endOffset":11604,"count":57},{"startOffset":10935,"endOffset":10964,"count":0},{"startOffset":11005,"endOffset":11026,"count":0},{"startOffset":11039,"endOffset":11112,"count":0},{"startOffset":11113,"endOffset":11118,"count":0},{"startOffset":11156,"endOffset":11177,"count":0},{"startOffset":11178,"endOffset":11182,"count":0},{"startOffset":11324,"endOffset":11603,"count":0}],"isBlockCoverage":true}]},{"scriptId":"424","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3507,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":905,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2065,"endOffset":2465,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2617,"endOffset":2738,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2895,"endOffset":3254,"count":0}],"isBlockCoverage":false},{"functionName":"tryStat","ranges":[{"startOffset":3362,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6174,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1162,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1797,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":2090,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2794,"endOffset":3151,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3313,"endOffset":3694,"count":6},{"startOffset":3376,"endOffset":3399,"count":0},{"startOffset":3425,"endOffset":3435,"count":0},{"startOffset":3500,"endOffset":3525,"count":0},{"startOffset":3531,"endOffset":3585,"count":0},{"startOffset":3591,"endOffset":3670,"count":0}],"isBlockCoverage":true},{"functionName":"compileQueryParser","ranges":[{"startOffset":3863,"endOffset":4314,"count":6},{"startOffset":3945,"endOffset":3968,"count":0},{"startOffset":3994,"endOffset":4004,"count":0},{"startOffset":4010,"endOffset":4069,"count":0},{"startOffset":4075,"endOffset":4123,"count":0},{"startOffset":4203,"endOffset":4290,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4497,"endOffset":4979,"count":6},{"startOffset":4547,"endOffset":4558,"count":0},{"startOffset":4582,"endOffset":4660,"count":0},{"startOffset":4695,"endOffset":4782,"count":0},{"startOffset":4817,"endOffset":4934,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4629,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4744,"endOffset":4776,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4896,"endOffset":4928,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":5163,"endOffset":5431,"count":57},{"startOffset":5226,"endOffset":5250,"count":0}],"isBlockCoverage":true},{"functionName":"createETagGenerator","ranges":[{"startOffset":5600,"endOffset":5821,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5651,"endOffset":5818,"count":57},{"startOffset":5737,"endOffset":5766,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5943,"endOffset":6046,"count":57}],"isBlockCoverage":true},{"functionName":"newObject","ranges":[{"startOffset":6133,"endOffset":6172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1735,"count":1},{"startOffset":451,"endOffset":567,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":247,"endOffset":337,"count":1},{"startOffset":303,"endOffset":334,"count":12}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":571,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":824,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1037,"endOffset":1386,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1415,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1585,"endOffset":1733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11052,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4366,"endOffset":4662,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4848,"endOffset":6157,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6350,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":7172,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7909,"endOffset":8042,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8167,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9904,"endOffset":9985,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":10103,"endOffset":10219,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":10326,"endOffset":10436,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10563,"endOffset":10774,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10947,"endOffset":11050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5227,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1850,"endOffset":2573,"count":57},{"startOffset":1914,"endOffset":1973,"count":0},{"startOffset":2077,"endOffset":2124,"count":0},{"startOffset":2407,"endOffset":2472,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2692,"endOffset":4113,"count":86},{"startOffset":2734,"endOffset":2796,"count":0},{"startOffset":2894,"endOffset":2918,"count":29},{"startOffset":2924,"endOffset":2932,"count":57},{"startOffset":2970,"endOffset":3047,"count":0},{"startOffset":3117,"endOffset":3148,"count":57},{"startOffset":3154,"endOffset":3169,"count":29},{"startOffset":3204,"endOffset":3257,"count":0},{"startOffset":3355,"endOffset":4094,"count":57},{"startOffset":3525,"endOffset":3592,"count":0},{"startOffset":3738,"endOffset":3945,"count":0},{"startOffset":4026,"endOffset":4089,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":4230,"endOffset":4649,"count":29},{"startOffset":4322,"endOffset":4389,"count":0},{"startOffset":4550,"endOffset":4627,"count":0}],"isBlockCoverage":true},{"functionName":"qstring","ranges":[{"startOffset":4760,"endOffset":5066,"count":57},{"startOffset":4895,"endOffset":4945,"count":0},{"startOffset":4947,"endOffset":5065,"count":0}],"isBlockCoverage":true},{"functionName":"ContentType","ranges":[{"startOffset":5132,"endOffset":5225,"count":86}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24597,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1634,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1884,"endOffset":3706,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3955,"endOffset":4055,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4270,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4668,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":5001,"endOffset":5111,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5505,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5957,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6871,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":7101,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7456,"endOffset":8123,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":8269,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8633,"endOffset":8781,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8903,"endOffset":9061,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":9261,"endOffset":9405,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9523,"endOffset":9753,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9876,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":10167,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10722,"endOffset":11428,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11559,"endOffset":13313,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":13423,"endOffset":15748,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15870,"endOffset":16758,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16882,"endOffset":17365,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":17520,"endOffset":18092,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":18257,"endOffset":18613,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":18801,"endOffset":19702,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":19798,"endOffset":19954,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":20062,"endOffset":20254,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":20338,"endOffset":20540,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":20672,"endOffset":20800,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20920,"endOffset":21226,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpError","ranges":[{"startOffset":21369,"endOffset":21580,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":21741,"endOffset":21853,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":21978,"endOffset":22130,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":22454,"endOffset":22650,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":22784,"endOffset":22913,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":23055,"endOffset":23315,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":23411,"endOffset":23559,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":23645,"endOffset":24281,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":24410,"endOffset":24595,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6680,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":820,"endOffset":902,"count":63}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":984,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2598,"endOffset":2787,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2642,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2861,"endOffset":3929,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2967,"endOffset":3705,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":4013,"endOffset":4399,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":4072,"endOffset":4396,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4473,"endOffset":5542,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4579,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5616,"endOffset":5824,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5926,"endOffset":6500,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":6009,"endOffset":6496,"count":63},{"startOffset":6152,"endOffset":6249,"count":29},{"startOffset":6257,"endOffset":6354,"count":12},{"startOffset":6384,"endOffset":6491,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6574,"endOffset":6678,"count":41},{"startOffset":6647,"endOffset":6663,"count":40},{"startOffset":6669,"endOffset":6675,"count":1}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":259,"count":1},{"startOffset":111,"endOffset":120,"count":0},{"startOffset":159,"endOffset":257,"count":0}],"isBlockCoverage":true}]},{"scriptId":"432","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":321,"endOffset":534,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":392,"endOffset":480,"count":133}],"isBlockCoverage":true}]},{"scriptId":"433","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4467,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":590,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1062,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1449,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2250,"endOffset":3189,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3255,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3435,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3585,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3730,"endOffset":4040,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4089,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4214,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4341,"endOffset":4465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1129,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2163,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3287,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3542,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3673,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4706,"endOffset":6514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6709,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6771,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":7077,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":8291,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8898,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9071,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":9138,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11409,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11471,"endOffset":11530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11570,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11753,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12577,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":13456,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13892,"endOffset":14480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":14518,"endOffset":15091,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":15126,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15715,"endOffset":15749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29666,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3518,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4165,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4507,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4599,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4946,"endOffset":5505,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5509,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6076,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8418,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8911,"endOffset":8959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9108,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9356,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9601,"endOffset":9675,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":9745,"endOffset":9783,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10400,"endOffset":10477,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10932,"endOffset":11349,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11473,"endOffset":11558,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11593,"endOffset":11656,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11693,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12280,"endOffset":12515,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12520,"endOffset":14814,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14818,"endOffset":15426,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15430,"endOffset":18373,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":18429,"endOffset":18587,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18793,"endOffset":21178,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":21536,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21838,"endOffset":22266,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":22314,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":22553,"endOffset":22692,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22792,"endOffset":22919,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23013,"endOffset":23148,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23246,"endOffset":23456,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":23562,"endOffset":23713,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":23819,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24046,"endOffset":24448,"count":18},{"startOffset":24106,"endOffset":24447,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24120,"endOffset":24223,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24240,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24526,"endOffset":24597,"count":107},{"startOffset":24585,"endOffset":24592,"count":9},{"startOffset":24593,"endOffset":24596,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":24824,"endOffset":25870,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25968,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":26254,"endOffset":26428,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":26552,"endOffset":26747,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":26678,"endOffset":26737,"count":0}],"isBlockCoverage":false},{"functionName":"crc32","ranges":[{"startOffset":26751,"endOffset":27025,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27260,"endOffset":27296,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27301,"endOffset":27342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1646,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1466,"endOffset":1644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":497,"endOffset":975,"count":57},{"startOffset":555,"endOffset":631,"count":0},{"startOffset":862,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":1160,"endOffset":1772,"count":57},{"startOffset":1217,"endOffset":1279,"count":0},{"startOffset":1429,"endOffset":1438,"count":0},{"startOffset":1540,"endOffset":1626,"count":0},{"startOffset":1681,"endOffset":1698,"count":0},{"startOffset":1764,"endOffset":1769,"count":0}],"isBlockCoverage":true},{"functionName":"isstats","ranges":[{"startOffset":1898,"endOffset":2341,"count":57},{"startOffset":2006,"endOffset":2029,"count":0},{"startOffset":2114,"endOffset":2161,"count":0},{"startOffset":2162,"endOffset":2184,"count":0},{"startOffset":2185,"endOffset":2232,"count":0},{"startOffset":2233,"endOffset":2253,"count":0},{"startOffset":2254,"endOffset":2284,"count":0},{"startOffset":2285,"endOffset":2306,"count":0},{"startOffset":2307,"endOffset":2338,"count":0}],"isBlockCoverage":true},{"functionName":"stattag","ranges":[{"startOffset":2451,"endOffset":2608,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8796,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3216,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3348,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3627,"endOffset":3711,"count":60}],"isBlockCoverage":true},{"functionName":"createCipheriv","ranges":[{"startOffset":3715,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3823,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3935,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4097,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4185,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4247,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4335,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4423,"endOffset":4511,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5773,"endOffset":5860,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5864,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6162,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6337,"endOffset":6601,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6606,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6857,"endOffset":7731,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6959,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7478,"endOffset":7721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8143,"endOffset":8183,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8303,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8484,"endOffset":8505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":1},{"startOffset":1568,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":2},{"startOffset":1891,"endOffset":2012,"count":0},{"startOffset":2046,"endOffset":2133,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":1},{"startOffset":2425,"endOffset":2490,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2597,"endOffset":2743,"count":1},{"startOffset":2631,"endOffset":2683,"count":0}],"isBlockCoverage":true},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":1},{"startOffset":3537,"endOffset":3563,"count":0},{"startOffset":3565,"endOffset":3678,"count":0},{"startOffset":3771,"endOffset":3923,"count":0},{"startOffset":3961,"endOffset":4022,"count":0},{"startOffset":4174,"endOffset":4217,"count":0},{"startOffset":4318,"endOffset":4363,"count":0}],"isBlockCoverage":true},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":1},{"startOffset":8385,"endOffset":8437,"count":0}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3103,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":519,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1214,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1640,"endOffset":2122,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2168,"endOffset":3028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16959,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":2033,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2240,"endOffset":2518,"count":120},{"startOffset":2299,"endOffset":2493,"count":1},{"startOffset":2370,"endOffset":2488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2446,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2522,"endOffset":2653,"count":60},{"startOffset":2636,"endOffset":2640,"count":1},{"startOffset":2641,"endOffset":2649,"count":59}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2689,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2767,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2844,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2892,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3362,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6936,"endOffset":7048,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7883,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":8335,"endOffset":10843,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10847,"endOffset":10989,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10993,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":11151,"endOffset":11305,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":11309,"endOffset":11453,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":11457,"endOffset":11811,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11815,"endOffset":12017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12064,"endOffset":12370,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":12376,"endOffset":12615,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12619,"endOffset":12899,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":13444,"endOffset":13735,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13739,"endOffset":13984,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":13988,"endOffset":14158,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":14162,"endOffset":14381,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":14385,"endOffset":14608,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":14612,"endOffset":14802,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14954,"endOffset":15949,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15953,"endOffset":16345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2586,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3545,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":882,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1461,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1917,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2406,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2801,"endOffset":3476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28384,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2487,"endOffset":9772,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2600,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3167,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3231,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3384,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3923,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3991,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4081,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":4447,"endOffset":5927,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":6066,"endOffset":6344,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":6457,"endOffset":6519,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":6527,"endOffset":6640,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":6648,"endOffset":6987,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":6995,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":8652,"endOffset":8712,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":8720,"endOffset":9020,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":9089,"endOffset":9150,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":9158,"endOffset":9687,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":9778,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":10177,"endOffset":11051,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":11055,"endOffset":11179,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":11183,"endOffset":11900,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":11904,"endOffset":12045,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":12049,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":13652,"endOffset":13790,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":13995,"endOffset":14113,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":14117,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":14718,"endOffset":15239,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":15243,"endOffset":17900,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":17904,"endOffset":19489,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":19493,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":19587,"endOffset":19684,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":19688,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":20411,"endOffset":20620,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":20624,"endOffset":20972,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":20976,"endOffset":21328,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":21332,"endOffset":21416,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":21848,"endOffset":21910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21916,"endOffset":22280,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":22286,"endOffset":22425,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":22431,"endOffset":22574,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":22580,"endOffset":22719,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":22725,"endOffset":22861,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":23336,"endOffset":24279,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":24583,"endOffset":24962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24968,"endOffset":25344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25350,"endOffset":25499,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":25633,"endOffset":25719,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":25723,"endOffset":27882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10478,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1316,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3180,"endOffset":3516,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3634,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3873,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4243,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4473,"endOffset":4601,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4719,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4956,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5119,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5312,"endOffset":5460,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5467,"endOffset":5627,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5945,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6106,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6284,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6561,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6704,"endOffset":7037,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7115,"endOffset":8209,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8346,"endOffset":10363,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2945,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3191,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3625,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4220,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4500,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4650,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4827,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5391,"endOffset":5644,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5685,"endOffset":5836,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5871,"endOffset":6036,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6043,"endOffset":6260,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6290,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6894,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7113,"endOffset":7716,"count":3},{"startOffset":7515,"endOffset":7590,"count":1},{"startOffset":7590,"endOffset":7654,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8128,"endOffset":8266,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8682,"endOffset":8904,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9072,"endOffset":9934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1443,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":416,"endOffset":480,"count":60}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":616,"endOffset":796,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":800,"endOffset":1029,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":838,"endOffset":1025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":922,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1317,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1441,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1769,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1850,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1937,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2304,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2584,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3225,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4499,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5010,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5617,"endOffset":7161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6172,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1165,"endOffset":1909,"count":60},{"startOffset":1226,"endOffset":1262,"count":0},{"startOffset":1416,"endOffset":1435,"count":0},{"startOffset":1436,"endOffset":1463,"count":0},{"startOffset":1511,"endOffset":1558,"count":0},{"startOffset":1693,"endOffset":1697,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":2045,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2252,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2389,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2501,"endOffset":2980,"count":62},{"startOffset":2597,"endOffset":2635,"count":0},{"startOffset":2671,"endOffset":2716,"count":1},{"startOffset":2716,"endOffset":2865,"count":61},{"startOffset":2752,"endOffset":2865,"count":0},{"startOffset":2919,"endOffset":2961,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3011,"endOffset":3341,"count":60},{"startOffset":3107,"endOffset":3145,"count":0},{"startOffset":3270,"endOffset":3292,"count":57}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3346,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3946,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4554,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":5047,"endOffset":6101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10867,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1220,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1309,"endOffset":2581,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2615,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2785,"endOffset":10609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2848,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":554,"endOffset":1884,"count":7},{"startOffset":802,"endOffset":1082,"count":0},{"startOffset":1084,"endOffset":1168,"count":0},{"startOffset":1170,"endOffset":1883,"count":0}],"isBlockCoverage":true},{"functionName":"parseHttpDate","ranges":[{"startOffset":1980,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2284,"endOffset":2846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2834,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":56,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":582,"endOffset":1131,"count":1},{"startOffset":624,"endOffset":1128,"count":844},{"startOffset":696,"endOffset":983,"count":1069},{"startOffset":732,"endOffset":754,"count":0},{"startOffset":756,"endOffset":939,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1393,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1920,"endOffset":2071,"count":4},{"startOffset":2035,"endOffset":2046,"count":0},{"startOffset":2047,"endOffset":2067,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2167,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2639,"endOffset":2802,"count":57},{"startOffset":2786,"endOffset":2796,"count":0}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3186,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":447,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":963,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2209,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2648,"endOffset":2999,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":3041,"endOffset":3184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3062,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":427,"endOffset":1619,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1691,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2475,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2678,"endOffset":2777,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2849,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2995,"endOffset":3060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6327,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":933,"endOffset":1301,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1406,"endOffset":2060,"count":6},{"startOffset":1444,"endOffset":1499,"count":0},{"startOffset":1549,"endOffset":1574,"count":0},{"startOffset":1635,"endOffset":1702,"count":0},{"startOffset":1747,"endOffset":2004,"count":0}],"isBlockCoverage":true},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2163,"endOffset":2367,"count":6},{"startOffset":2286,"endOffset":2339,"count":0}],"isBlockCoverage":true},{"functionName":"compileTrust","ranges":[{"startOffset":2484,"endOffset":2732,"count":6},{"startOffset":2646,"endOffset":2729,"count":0}],"isBlockCoverage":true},{"functionName":"parseipNotation","ranges":[{"startOffset":2838,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3829,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":4140,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4498,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4649,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5670,"endOffset":6325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1668,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":333,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":780,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1000,"endOffset":1666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20006,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19991,"count":1},{"startOffset":266,"endOffset":308,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":326,"endOffset":833,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":861,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1550,"endOffset":4441,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1568,"endOffset":1985,"count":15},{"startOffset":1650,"endOffset":1726,"count":0},{"startOffset":1781,"endOffset":1949,"count":60},{"startOffset":1857,"endOffset":1940,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":2015,"endOffset":2056,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2091,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2192,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2280,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2367,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3450,"endOffset":3529,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3575,"endOffset":3658,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3711,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4705,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5855,"endOffset":11490,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5873,"endOffset":6593,"count":11},{"startOffset":5972,"endOffset":6127,"count":0},{"startOffset":6196,"endOffset":6283,"count":0},{"startOffset":6360,"endOffset":6525,"count":88},{"startOffset":6433,"endOffset":6516,"count":0},{"startOffset":6545,"endOffset":6586,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6623,"endOffset":6664,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6699,"endOffset":6793,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6835,"endOffset":7439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7477,"endOffset":7750,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7795,"endOffset":8274,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8320,"endOffset":8816,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8848,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9980,"endOffset":10059,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":10105,"endOffset":10169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":10209,"endOffset":10535,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10588,"endOffset":11462,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11944,"endOffset":13335,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":13363,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":14280,"endOffset":14345,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":14374,"endOffset":14549,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14593,"endOffset":14771,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14800,"endOffset":15117,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":15144,"endOffset":15355,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":15382,"endOffset":15614,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15645,"endOffset":16165,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":16213,"endOffset":16733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16779,"endOffset":17397,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":17441,"endOffset":18053,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":18084,"endOffset":18605,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18629,"endOffset":18724,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18746,"endOffset":19039,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":19065,"endOffset":19409,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":19439,"endOffset":19749,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19773,"endOffset":19985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13030,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1214,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"req.accepts","ranges":[{"startOffset":3044,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3302,"endOffset":3400,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3746,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4180,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5431,"endOffset":5566,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":6040,"endOffset":6547,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":7175,"endOffset":7443,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7851,"endOffset":8352,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8492,"endOffset":8550,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8764,"endOffset":8862,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":9225,"endOffset":9460,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":10024,"endOffset":10296,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10427,"endOffset":10479,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10740,"endOffset":11397,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11505,"endOffset":11549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11761,"endOffset":12219,"count":57},{"startOffset":11934,"endOffset":11954,"count":42},{"startOffset":11956,"endOffset":11969,"count":42},{"startOffset":11969,"endOffset":12047,"count":15},{"startOffset":12049,"endOffset":12066,"count":8},{"startOffset":12068,"endOffset":12197,"count":7},{"startOffset":12197,"endOffset":12218,"count":8}],"isBlockCoverage":true},{"functionName":"stale","ranges":[{"startOffset":12415,"endOffset":12458,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12589,"endOffset":12706,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12873,"endOffset":13028,"count":11}],"isBlockCoverage":true}]},{"scriptId":"465","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5490,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":442,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1854,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2886,"endOffset":3375,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3750,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4616,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":5214,"endOffset":5316,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5423,"endOffset":5488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2533,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":622,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":801,"endOffset":897,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":934,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1084,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1220,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1373,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1509,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1663,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1802,"endOffset":1908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3250,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":501,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":898,"endOffset":1356,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1420,"endOffset":1772,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1841,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2199,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2910,"endOffset":3015,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":3073,"endOffset":3131,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3197,"endOffset":3248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3690,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":506,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1377,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1907,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2332,"endOffset":2604,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2697,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3347,"endOffset":3452,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3511,"endOffset":3571,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3637,"endOffset":3688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3588,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":523,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":927,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1530,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1955,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2531,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3249,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3413,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3535,"endOffset":3586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5652,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":514,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":913,"endOffset":1785,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1852,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2272,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":3109,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3809,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3969,"endOffset":4042,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":4108,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4232,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4468,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4784,"endOffset":5124,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":5187,"endOffset":5650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3851,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":889,"endOffset":1299,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1442,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":2040,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2505,"endOffset":2824,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2897,"endOffset":3849,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":3069,"endOffset":3845,"count":2279},{"startOffset":3177,"endOffset":3192,"count":965},{"startOffset":3194,"endOffset":3216,"count":1314},{"startOffset":3216,"endOffset":3346,"count":965},{"startOffset":3346,"endOffset":3840,"count":1220},{"startOffset":3410,"endOffset":3764,"count":40},{"startOffset":3593,"endOffset":3688,"count":34},{"startOffset":3618,"endOffset":3687,"count":19},{"startOffset":3634,"endOffset":3686,"count":11},{"startOffset":3690,"endOffset":3755,"count":23},{"startOffset":3764,"endOffset":3840,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"472","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true}]},{"scriptId":"473","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5828,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":840,"endOffset":1602,"count":29},{"startOffset":1022,"endOffset":1046,"count":0},{"startOffset":1332,"endOffset":1354,"count":0},{"startOffset":1531,"endOffset":1536,"count":0},{"startOffset":1564,"endOffset":1601,"count":0}],"isBlockCoverage":true},{"functionName":"hasbody","ranges":[{"startOffset":1896,"endOffset":2026,"count":86}],"isBlockCoverage":true},{"functionName":"typeofrequest","ranges":[{"startOffset":2918,"endOffset":3353,"count":29},{"startOffset":3017,"endOffset":3040,"count":0},{"startOffset":3106,"endOffset":3245,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3737,"endOffset":4167,"count":29},{"startOffset":3798,"endOffset":3843,"count":0},{"startOffset":3870,"endOffset":3938,"count":0},{"startOffset":3944,"endOffset":3989,"count":0},{"startOffset":4021,"endOffset":4090,"count":0},{"startOffset":4133,"endOffset":4152,"count":0}],"isBlockCoverage":true},{"functionName":"mimeMatch","ranges":[{"startOffset":4382,"endOffset":5210,"count":29},{"startOffset":4468,"endOffset":4492,"count":0},{"startOffset":4681,"endOffset":4705,"count":0},{"startOffset":4800,"endOffset":4824,"count":0},{"startOffset":4905,"endOffset":5068,"count":0},{"startOffset":5166,"endOffset":5190,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeType","ranges":[{"startOffset":5334,"endOffset":5533,"count":29}],"isBlockCoverage":true},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5664,"endOffset":5826,"count":29},{"startOffset":5715,"endOffset":5738,"count":0},{"startOffset":5788,"endOffset":5823,"count":0}],"isBlockCoverage":true}]},{"scriptId":"474","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6645,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2828,"endOffset":3927,"count":29},{"startOffset":2891,"endOffset":2950,"count":0},{"startOffset":3113,"endOffset":3160,"count":0},{"startOffset":3216,"endOffset":3266,"count":0},{"startOffset":3373,"endOffset":3502,"count":0},{"startOffset":3547,"endOffset":3580,"count":0},{"startOffset":3582,"endOffset":3905,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4050,"endOffset":5218,"count":29},{"startOffset":4091,"endOffset":4153,"count":0},{"startOffset":4238,"endOffset":4281,"count":0},{"startOffset":4319,"endOffset":4396,"count":0},{"startOffset":4466,"endOffset":4491,"count":0},{"startOffset":4674,"endOffset":5060,"count":0},{"startOffset":5083,"endOffset":5109,"count":0},{"startOffset":5111,"endOffset":5170,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":5339,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5718,"endOffset":6020,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":6149,"endOffset":6643,"count":29},{"startOffset":6248,"endOffset":6301,"count":0},{"startOffset":6456,"endOffset":6542,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29908,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1458,"endOffset":1735,"count":46},{"startOffset":1545,"endOffset":1557,"count":0},{"startOffset":1558,"endOffset":1572,"count":0},{"startOffset":1574,"endOffset":1689,"count":0}],"isBlockCoverage":true},{"functionName":"res.links","ranges":[{"startOffset":2044,"endOffset":2274,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2529,"endOffset":5826,"count":57},{"startOffset":2724,"endOffset":3161,"count":0},{"startOffset":3259,"endOffset":3284,"count":0},{"startOffset":3286,"endOffset":3567,"count":0},{"startOffset":3689,"endOffset":3727,"count":3},{"startOffset":3747,"endOffset":3762,"count":0},{"startOffset":3768,"endOffset":3782,"count":0},{"startOffset":3788,"endOffset":4051,"count":0},{"startOffset":4593,"endOffset":4658,"count":0},{"startOffset":4682,"endOffset":4704,"count":0},{"startOffset":4706,"endOffset":4821,"count":0},{"startOffset":5231,"endOffset":5253,"count":0},{"startOffset":5346,"endOffset":5496,"count":0},{"startOffset":5559,"endOffset":5662,"count":0},{"startOffset":5695,"endOffset":5745,"count":0}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":6020,"endOffset":6876,"count":54},{"startOffset":6118,"endOffset":6513,"count":0}],"isBlockCoverage":true},{"functionName":"jsonp","ranges":[{"startOffset":7101,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":9335,"endOffset":9521,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10948,"endOffset":11966,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":13393,"endOffset":14030,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14806,"endOffset":16091,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":16539,"endOffset":16687,"count":3},{"startOffset":16635,"endOffset":16641,"count":0}],"isBlockCoverage":true},{"functionName":"res.format","ranges":[{"startOffset":18181,"endOffset":18741,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":18928,"endOffset":19107,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":19528,"endOffset":19830,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":20270,"endOffset":20956,"count":228},{"startOffset":20376,"endOffset":20393,"count":0},{"startOffset":20503,"endOffset":20812,"count":114},{"startOffset":20538,"endOffset":20620,"count":0},{"startOffset":20660,"endOffset":20805,"count":57},{"startOffset":20854,"endOffset":20937,"count":0}],"isBlockCoverage":true},{"functionName":"res.get","ranges":[{"startOffset":21080,"endOffset":21132,"count":239}],"isBlockCoverage":true},{"functionName":"clearCookie","ranges":[{"startOffset":21305,"endOffset":22040,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":22697,"endOffset":23456,"count":0}],"isBlockCoverage":false},{"functionName":"location","ranges":[{"startOffset":23851,"endOffset":24245,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":24733,"endOffset":25775,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":25992,"endOffset":26217,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":26618,"endOffset":27159,"count":0}],"isBlockCoverage":false},{"functionName":"sendfile","ranges":[{"startOffset":27194,"endOffset":28916,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":29211,"endOffset":29906,"count":54},{"startOffset":29423,"endOffset":29464,"count":0},{"startOffset":29511,"endOffset":29538,"count":0},{"startOffset":29540,"endOffset":29886,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29577,"endOffset":29880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":232,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":816,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1194,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8437,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3116,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"startIndex","ranges":[{"startOffset":4544,"endOffset":4747,"count":0}],"isBlockCoverage":false},{"functionName":"endIndex","ranges":[{"startOffset":4751,"endOffset":4952,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":5346,"endOffset":7785,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":7921,"endOffset":8023,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":8109,"endOffset":8187,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":8326,"endOffset":8435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3079,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":732,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1963,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2672,"endOffset":3077,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5546,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1130,"endOffset":3436,"count":6},{"startOffset":1279,"endOffset":1291,"count":0},{"startOffset":1509,"endOffset":1540,"count":0},{"startOffset":1542,"endOffset":1607,"count":0},{"startOffset":1740,"endOffset":1746,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1752,"endOffset":2401,"count":29},{"startOffset":1804,"endOffset":1978,"count":0},{"startOffset":2062,"endOffset":2078,"count":0},{"startOffset":2080,"endOffset":2177,"count":0},{"startOffset":2272,"endOffset":2396,"count":0}],"isBlockCoverage":true},{"functionName":"jsonParser","ranges":[{"startOffset":2414,"endOffset":3433,"count":57},{"startOffset":2473,"endOffset":2545,"count":0},{"startOffset":2649,"endOffset":2717,"count":28},{"startOffset":2717,"endOffset":2855,"count":29},{"startOffset":2855,"endOffset":2920,"count":0},{"startOffset":2920,"endOffset":3012,"count":29},{"startOffset":3054,"endOffset":3269,"count":0},{"startOffset":3269,"endOffset":3432,"count":29}],"isBlockCoverage":true},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3602,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":4379,"endOffset":4502,"count":29},{"startOffset":4488,"endOffset":4499,"count":0}],"isBlockCoverage":true},{"functionName":"getCharset","ranges":[{"startOffset":4597,"endOffset":4756,"count":29},{"startOffset":4715,"endOffset":4753,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4901,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5431,"endOffset":5544,"count":6}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":5471,"endOffset":5541,"count":29}],"isBlockCoverage":true}]},{"scriptId":"483","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3783,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":994,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1681,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3137,"endOffset":3781,"count":35},{"startOffset":3190,"endOffset":3204,"count":29},{"startOffset":3206,"endOffset":3229,"count":29},{"startOffset":3229,"endOffset":3264,"count":6},{"startOffset":3264,"endOffset":3288,"count":0},{"startOffset":3288,"endOffset":3429,"count":6},{"startOffset":3429,"endOffset":3545,"count":0},{"startOffset":3545,"endOffset":3706,"count":6},{"startOffset":3706,"endOffset":3730,"count":0},{"startOffset":3730,"endOffset":3780,"count":6}],"isBlockCoverage":true}]},{"scriptId":"484","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4530,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":703,"endOffset":3073,"count":29},{"startOffset":940,"endOffset":946,"count":0},{"startOffset":1135,"endOffset":1175,"count":0},{"startOffset":1260,"endOffset":1266,"count":0},{"startOffset":1349,"endOffset":1369,"count":0},{"startOffset":1370,"endOffset":1404,"count":0},{"startOffset":1406,"endOffset":1588,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":3069,"count":29},{"startOffset":1695,"endOffset":2372,"count":0},{"startOffset":2407,"endOffset":2674,"count":0},{"startOffset":2787,"endOffset":2807,"count":0},{"startOffset":2817,"endOffset":2847,"count":0},{"startOffset":2900,"endOffset":3050,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":2277,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":3262,"endOffset":4243,"count":29},{"startOffset":3522,"endOffset":3548,"count":0},{"startOffset":3550,"endOffset":3689,"count":0},{"startOffset":3720,"endOffset":3838,"count":0},{"startOffset":3844,"endOffset":3957,"count":0},{"startOffset":4048,"endOffset":4216,"count":0}],"isBlockCoverage":true},{"functionName":"dump","ranges":[{"startOffset":4371,"endOffset":4528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7507,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":674,"endOffset":1078,"count":29},{"startOffset":725,"endOffset":736,"count":0},{"startOffset":792,"endOffset":1075,"count":0}],"isBlockCoverage":true},{"functionName":"getRawBody","ranges":[{"startOffset":1267,"endOffset":2857,"count":29},{"startOffset":1362,"endOffset":1367,"count":0},{"startOffset":1422,"endOffset":1484,"count":0},{"startOffset":1576,"endOffset":1643,"count":0},{"startOffset":1702,"endOffset":1785,"count":0},{"startOffset":1826,"endOffset":1867,"count":0},{"startOffset":1978,"endOffset":2049,"count":0},{"startOffset":2109,"endOffset":2127,"count":0},{"startOffset":2129,"endOffset":2193,"count":0},{"startOffset":2282,"endOffset":2291,"count":0},{"startOffset":2518,"endOffset":2524,"count":0},{"startOffset":2645,"endOffset":2856,"count":0}],"isBlockCoverage":true},{"functionName":"executor","ranges":[{"startOffset":2670,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2936,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":3319,"endOffset":6848,"count":29},{"startOffset":3638,"endOffset":3818,"count":0},{"startOffset":4158,"endOffset":4305,"count":0},{"startOffset":4375,"endOffset":4487,"count":0},{"startOffset":4577,"endOffset":4617,"count":0},{"startOffset":4659,"endOffset":4663,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4896,"endOffset":5407,"count":29},{"startOffset":5027,"endOffset":5065,"count":58},{"startOffset":5128,"endOffset":5176,"count":0}],"isBlockCoverage":true},{"functionName":"invokeCallback","ranges":[{"startOffset":5222,"endOffset":5402,"count":29},{"startOffset":5290,"endOffset":5359,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":5413,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":5667,"endOffset":6072,"count":29},{"startOffset":5712,"endOffset":5718,"count":0},{"startOffset":5798,"endOffset":5962,"count":0},{"startOffset":6027,"endOffset":6067,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":6078,"endOffset":6571,"count":29},{"startOffset":6120,"endOffset":6126,"count":0},{"startOffset":6141,"endOffset":6157,"count":0},{"startOffset":6209,"endOffset":6423,"count":0},{"startOffset":6510,"endOffset":6533,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":6577,"endOffset":6845,"count":29}],"isBlockCoverage":true},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":6908,"endOffset":7026,"count":1},{"startOffset":6992,"endOffset":7023,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":7156,"endOffset":7505,"count":29},{"startOffset":7401,"endOffset":7422,"count":0}],"isBlockCoverage":true}]},{"scriptId":"486","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5273,"count":1},{"startOffset":4896,"endOffset":4918,"count":0},{"startOffset":5074,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":603,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":923,"endOffset":1521,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1548,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1941,"endOffset":3697,"count":29},{"startOffset":2007,"endOffset":2049,"count":1},{"startOffset":2340,"endOffset":3694,"count":30},{"startOffset":2424,"endOffset":2437,"count":28},{"startOffset":2437,"endOffset":2537,"count":2},{"startOffset":2537,"endOffset":2643,"count":0},{"startOffset":2659,"endOffset":2996,"count":1},{"startOffset":2777,"endOffset":2811,"count":2},{"startOffset":3012,"endOffset":3546,"count":1},{"startOffset":3116,"endOffset":3148,"count":0},{"startOffset":3562,"endOffset":3676,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3731,"endOffset":3917,"count":29}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3940,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4247,"endOffset":4544,"count":29},{"startOffset":4424,"endOffset":4453,"count":0}],"isBlockCoverage":true}]},{"scriptId":"487","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2187,"count":1},{"startOffset":174,"endOffset":309,"count":14},{"startOffset":212,"endOffset":220,"count":0},{"startOffset":249,"endOffset":268,"count":13},{"startOffset":270,"endOffset":278,"count":2},{"startOffset":278,"endOffset":309,"count":12},{"startOffset":364,"endOffset":509,"count":12},{"startOffset":402,"endOffset":410,"count":0},{"startOffset":440,"endOffset":468,"count":11},{"startOffset":470,"endOffset":478,"count":2},{"startOffset":478,"endOffset":509,"count":10},{"startOffset":609,"endOffset":1106,"count":0},{"startOffset":1128,"endOffset":1698,"count":0},{"startOffset":1731,"endOffset":1965,"count":0},{"startOffset":1991,"endOffset":2159,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":627,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1147,"endOffset":1695,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":494,"endOffset":1686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":84,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":227,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":413,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":587,"endOffset":722,"count":29}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":760,"endOffset":1074,"count":29},{"startOffset":853,"endOffset":864,"count":0},{"startOffset":896,"endOffset":1029,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1110,"endOffset":1157,"count":29}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3508,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":206,"endOffset":849,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":287,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":455,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":934,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1352,"endOffset":1677,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1723,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1950,"endOffset":2181,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2265,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2657,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":3042,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3300,"endOffset":3504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8918,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":235,"endOffset":8916,"count":1},{"startOffset":576,"endOffset":614,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":652,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7903,"endOffset":8913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1985,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":483,"endOffset":1769,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1870,"endOffset":1983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4730,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":658,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2908,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3240,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3623,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3817,"endOffset":4728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2406,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":529,"endOffset":1936,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":2031,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2291,"endOffset":2404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6711,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":759,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"extendedparser","ranges":[{"startOffset":2992,"endOffset":4433,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":4528,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4839,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":5211,"endOffset":5620,"count":0}],"isBlockCoverage":false},{"functionName":"simpleparser","ranges":[{"startOffset":5701,"endOffset":6495,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":6596,"endOffset":6709,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":false}]},{"scriptId":"497","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113251,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":4935,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":4978,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":5190,"endOffset":5388,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5392,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5538,"endOffset":5645,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":9020,"endOffset":9093,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":9402,"endOffset":12371,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":12375,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":12738,"endOffset":13048,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":13164,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":13441,"endOffset":14039,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":14043,"endOffset":14810,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14927,"endOffset":15254,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":15258,"endOffset":15587,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":15591,"endOffset":15804,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":16199,"endOffset":17329,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":17425,"endOffset":17705,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":17903,"endOffset":18364,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":18480,"endOffset":19188,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":19192,"endOffset":19504,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":19508,"endOffset":20150,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":20154,"endOffset":20574,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":20985,"endOffset":21962,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":22169,"endOffset":24283,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24656,"endOffset":25341,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":25442,"endOffset":25617,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":25621,"endOffset":26102,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":26166,"endOffset":26498,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":26666,"endOffset":27103,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":27344,"endOffset":27567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27603,"endOffset":28335,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":28340,"endOffset":28527,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28532,"endOffset":29200,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":29621,"endOffset":29828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30448,"endOffset":32705,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":32846,"endOffset":33572,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":33864,"endOffset":36315,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":36433,"endOffset":36538,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":36542,"endOffset":36996,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":37000,"endOffset":37978,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":37982,"endOffset":39006,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":41197,"endOffset":43966,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":44097,"endOffset":44149,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":44334,"endOffset":44392,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":44766,"endOffset":44901,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":44981,"endOffset":45066,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":45133,"endOffset":45211,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":45280,"endOffset":45364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45403,"endOffset":45517,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":45738,"endOffset":46020,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":46198,"endOffset":46512,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":46716,"endOffset":47335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47341,"endOffset":47712,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":47757,"endOffset":47949,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":47978,"endOffset":48020,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":48100,"endOffset":48180,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":48263,"endOffset":48344,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":48423,"endOffset":48495,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":48556,"endOffset":48666,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":48815,"endOffset":49087,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":49153,"endOffset":49626,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":49694,"endOffset":50225,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":50485,"endOffset":50992,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":51100,"endOffset":51532,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":52119,"endOffset":52425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52431,"endOffset":52681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52825,"endOffset":53162,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":53168,"endOffset":53217,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":53223,"endOffset":53296,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":53302,"endOffset":53379,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":53604,"endOffset":54134,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":54140,"endOffset":54186,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":54441,"endOffset":56321,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":56369,"endOffset":57146,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":57461,"endOffset":57589,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":57703,"endOffset":61488,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":61495,"endOffset":61713,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":61717,"endOffset":61803,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":61807,"endOffset":61908,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":61912,"endOffset":62146,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":62150,"endOffset":62714,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":62718,"endOffset":63195,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":63283,"endOffset":64231,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":64235,"endOffset":64613,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":64774,"endOffset":65935,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65941,"endOffset":66126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66132,"endOffset":66574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66580,"endOffset":66961,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":66967,"endOffset":67185,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":67191,"endOffset":67261,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":67267,"endOffset":67323,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":67329,"endOffset":67387,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":67393,"endOffset":67453,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":67459,"endOffset":67516,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":67615,"endOffset":67653,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":67710,"endOffset":67758,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":67764,"endOffset":67823,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":67875,"endOffset":67963,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":68023,"endOffset":68102,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":68150,"endOffset":68238,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":68308,"endOffset":68362,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":68412,"endOffset":68567,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68573,"endOffset":68708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68714,"endOffset":68885,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68891,"endOffset":71366,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":71372,"endOffset":71458,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":71464,"endOffset":71534,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":71540,"endOffset":71766,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":71772,"endOffset":72113,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":72119,"endOffset":72636,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":72642,"endOffset":73360,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":73366,"endOffset":73443,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":74238,"endOffset":74567,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":74791,"endOffset":77308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77429,"endOffset":78472,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":78479,"endOffset":79374,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":79378,"endOffset":79434,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":79438,"endOffset":80883,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":80889,"endOffset":81075,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":81197,"endOffset":81374,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":81378,"endOffset":82215,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":82219,"endOffset":82678,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":82682,"endOffset":84141,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":84145,"endOffset":86223,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":86227,"endOffset":86672,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":86725,"endOffset":86968,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":87025,"endOffset":87237,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":87351,"endOffset":89608,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":89660,"endOffset":91174,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":91575,"endOffset":93623,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":94106,"endOffset":95728,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":96242,"endOffset":97307,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":97443,"endOffset":97681,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":97688,"endOffset":97821,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":98213,"endOffset":98679,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":98777,"endOffset":98949,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":98953,"endOffset":99127,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":99131,"endOffset":99256,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":99390,"endOffset":99651,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":99655,"endOffset":102059,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":102063,"endOffset":103430,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":103434,"endOffset":103806,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":103810,"endOffset":103936,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":103987,"endOffset":104668,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":104674,"endOffset":104879,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":104885,"endOffset":105068,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":105074,"endOffset":105238,"count":0}],"isBlockCoverage":false},{"functionName":"closeIdleConnections","ranges":[{"startOffset":105244,"endOffset":105408,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":105456,"endOffset":105772,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":105778,"endOffset":105983,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":105989,"endOffset":106172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106178,"endOffset":106260,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":106328,"endOffset":107274,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":107279,"endOffset":107559,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":107563,"endOffset":108026,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":108030,"endOffset":109868,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":109979,"endOffset":110255,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":110265,"endOffset":110366,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":110370,"endOffset":110557,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":110727,"endOffset":110916,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":110920,"endOffset":112516,"count":0}],"isBlockCoverage":false},{"functionName":"performServerHandshake","ranges":[{"startOffset":112520,"endOffset":112681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10941,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3140,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3238,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3463,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"convertProtocols","ranges":[{"startOffset":3733,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4385,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":4927,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5101,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5185,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5284,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":7596,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":8743,"endOffset":10483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4945,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1779,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2152,"endOffset":3011,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3015,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3736,"endOffset":4846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9926,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":772,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":1031,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1272,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1445,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1614,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1911,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2162,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":3270,"endOffset":9874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55293,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1904,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4020,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4211,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5027,"endOffset":5333,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5339,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6586,"endOffset":7263,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7269,"endOffset":8342,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8346,"endOffset":9715,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9719,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":9926,"endOffset":10170,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10174,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":11045,"endOffset":11725,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11729,"endOffset":12463,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12467,"endOffset":12561,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12565,"endOffset":12684,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12688,"endOffset":13789,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":13937,"endOffset":14493,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14577,"endOffset":17790,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":18248,"endOffset":18428,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":18291,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18601,"endOffset":19483,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":19531,"endOffset":19606,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":19800,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":21235,"endOffset":21832,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":21975,"endOffset":22228,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":22232,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":22387,"endOffset":22440,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":22478,"endOffset":22780,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":22785,"endOffset":23106,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":23110,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":23567,"endOffset":28375,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":28414,"endOffset":29709,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":29757,"endOffset":30089,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":30135,"endOffset":30260,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":30302,"endOffset":30373,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":30414,"endOffset":30504,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":30541,"endOffset":30654,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":30697,"endOffset":30859,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":30898,"endOffset":31984,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":32018,"endOffset":32536,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":32577,"endOffset":32753,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":32791,"endOffset":32933,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":32979,"endOffset":33150,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":33192,"endOffset":33406,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":33456,"endOffset":33599,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":33645,"endOffset":33776,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setKeyCert","ranges":[{"startOffset":33814,"endOffset":34090,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":34130,"endOffset":34334,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":34179,"endOffset":34330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34550,"endOffset":34630,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":34677,"endOffset":35190,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":35194,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":35440,"endOffset":35529,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":35533,"endOffset":35901,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":35905,"endOffset":36817,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":39650,"endOffset":41448,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":41607,"endOffset":41693,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":41736,"endOffset":44724,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":44765,"endOffset":44853,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":44894,"endOffset":44973,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":45013,"endOffset":45095,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":45135,"endOffset":45336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45383,"endOffset":47458,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":47584,"endOffset":48000,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":48051,"endOffset":48317,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":48322,"endOffset":48625,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":48875,"endOffset":49620,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":49624,"endOffset":51899,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":51903,"endOffset":52478,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":52547,"endOffset":55290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8857,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":834,"endOffset":897,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":901,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":970,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":1037,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1112,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1964,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3891,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3948,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":4018,"endOffset":4078,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":4084,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":4148,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5501,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5806,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":7362,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7824,"endOffset":8658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8664,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8738,"endOffset":8816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2078,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":415,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":514,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":651,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":868,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":997,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1239,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1878,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1990,"endOffset":2075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24584,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2198,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2732,"endOffset":3071,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3075,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3323,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3457,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3810,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":3955,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4189,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4364,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4548,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4608,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4670,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":4800,"endOffset":5007,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":5011,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5075,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5165,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5325,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6404,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6582,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7416,"endOffset":7885,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":7889,"endOffset":8024,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":8075,"endOffset":9113,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9119,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9173,"endOffset":9330,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9336,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9388,"endOffset":9436,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9442,"endOffset":9496,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9502,"endOffset":9552,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9558,"endOffset":9614,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9620,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9670,"endOffset":9714,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":9720,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":9769,"endOffset":10002,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":10008,"endOffset":10056,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10062,"endOffset":10320,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10326,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10400,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10612,"endOffset":10676,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":10682,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":10756,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":10825,"endOffset":10890,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10896,"endOffset":11029,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":11036,"endOffset":11123,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":11127,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11583,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12517,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12573,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12664,"endOffset":12744,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":12750,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":13172,"endOffset":13220,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":13226,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":13278,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13347,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13409,"endOffset":13478,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13484,"endOffset":13544,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13550,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13625,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":13714,"endOffset":13787,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":13793,"endOffset":13862,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":13868,"endOffset":14122,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":14128,"endOffset":14305,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":14311,"endOffset":14513,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14519,"endOffset":14649,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":14655,"endOffset":14718,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":14724,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":14842,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":14992,"endOffset":15300,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15306,"endOffset":15487,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15493,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":15895,"endOffset":16082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16088,"endOffset":17003,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":17009,"endOffset":17079,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":17085,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":17146,"endOffset":17295,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":17301,"endOffset":19478,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":19484,"endOffset":19524,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":19530,"endOffset":19574,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19580,"endOffset":20274,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":20280,"endOffset":21329,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":21335,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":21479,"endOffset":21606,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":21612,"endOffset":22035,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22041,"endOffset":22358,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":22401,"endOffset":22642,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":22648,"endOffset":23305,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":23312,"endOffset":24490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28297,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":7246,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomSettingsToObj","ranges":[{"startOffset":9965,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":10284,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":12260,"endOffset":13112,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":13116,"endOffset":18428,"count":0}],"isBlockCoverage":false},{"functionName":"remoteCustomSettingsToBuffer","ranges":[{"startOffset":18432,"endOffset":19139,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":19143,"endOffset":20025,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":20029,"endOffset":20475,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":20479,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20957,"endOffset":21067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21129,"endOffset":21227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21288,"endOffset":21351,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":21518,"endOffset":23573,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":23614,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23879,"endOffset":23924,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":23930,"endOffset":24007,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24053,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24345,"endOffset":24556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24608,"endOffset":24878,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":24887,"endOffset":26984,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":26988,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":27075,"endOffset":27287,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":27291,"endOffset":27749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9561,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":564,"endOffset":834,"count":57},{"startOffset":777,"endOffset":789,"count":0}],"isBlockCoverage":true},{"functionName":"serverAddress","ranges":[{"startOffset":1014,"endOffset":1282,"count":57},{"startOffset":1204,"endOffset":1213,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":1717,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2983,"endOffset":3271,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3044,"endOffset":3244,"count":57},{"startOffset":3213,"endOffset":3243,"count":0}],"isBlockCoverage":true},{"functionName":"localAssert","ranges":[{"startOffset":3087,"endOffset":3139,"count":57}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":3454,"endOffset":4729,"count":57},{"startOffset":4009,"endOffset":4020,"count":0},{"startOffset":4022,"endOffset":4317,"count":0},{"startOffset":4382,"endOffset":4394,"count":0},{"startOffset":4404,"endOffset":4475,"count":0},{"startOffset":4598,"endOffset":4641,"count":38},{"startOffset":4643,"endOffset":4679,"count":0}],"isBlockCoverage":true},{"functionName":"_assertBody","ranges":[{"startOffset":4979,"endOffset":5779,"count":0}],"isBlockCoverage":false},{"functionName":"_assertHeader","ranges":[{"startOffset":6034,"endOffset":6849,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatus","ranges":[{"startOffset":7106,"endOffset":7362,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatusArray","ranges":[{"startOffset":7631,"endOffset":7943,"count":0}],"isBlockCoverage":false},{"functionName":"_assertFunction","ranges":[{"startOffset":8200,"endOffset":8363,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAssertFn","ranges":[{"startOffset":8616,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":9338,"endOffset":9502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127761,"count":1},{"startOffset":33362,"endOffset":33863,"count":36},{"startOffset":33417,"endOffset":33427,"count":1},{"startOffset":33428,"endOffset":33436,"count":35}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":853,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1373,"endOffset":1391,"count":0}],"isBlockCoverage":false},{"functionName":"_initHeaders","ranges":[{"startOffset":2520,"endOffset":2692,"count":57}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":2852,"endOffset":3517,"count":57},{"startOffset":2938,"endOffset":2956,"count":0},{"startOffset":3232,"endOffset":3235,"count":0}],"isBlockCoverage":true},{"functionName":"Request.http2","ranges":[{"startOffset":4212,"endOffset":4446,"count":0}],"isBlockCoverage":false},{"functionName":"Request.attach","ranges":[{"startOffset":5088,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"Request._getFormData","ranges":[{"startOffset":5876,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"Request.agent","ranges":[{"startOffset":6570,"endOffset":6682,"count":0}],"isBlockCoverage":false},{"functionName":"Request.lookup","ranges":[{"startOffset":6862,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"Request.type","ranges":[{"startOffset":7536,"endOffset":7640,"count":29},{"startOffset":7608,"endOffset":7614,"count":0}],"isBlockCoverage":true},{"functionName":"Request.accept","ranges":[{"startOffset":8097,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"Request.query","ranges":[{"startOffset":8462,"endOffset":8618,"count":0}],"isBlockCoverage":false},{"functionName":"Request.write","ranges":[{"startOffset":8813,"endOffset":8990,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pipe","ranges":[{"startOffset":9167,"endOffset":9316,"count":0}],"isBlockCoverage":false},{"functionName":"Request._pipeContinue","ranges":[{"startOffset":9353,"endOffset":10377,"count":0}],"isBlockCoverage":false},{"functionName":"Request.buffer","ranges":[{"startOffset":10536,"endOffset":10608,"count":57}],"isBlockCoverage":true},{"functionName":"Request._redirect","ranges":[{"startOffset":10765,"endOffset":12381,"count":0}],"isBlockCoverage":false},{"functionName":"Request.auth","ranges":[{"startOffset":12843,"endOffset":13263,"count":0}],"isBlockCoverage":false},{"functionName":"Request.ca","ranges":[{"startOffset":13451,"endOffset":13507,"count":0}],"isBlockCoverage":false},{"functionName":"Request.key","ranges":[{"startOffset":13698,"endOffset":13755,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pfx","ranges":[{"startOffset":13967,"endOffset":14172,"count":0}],"isBlockCoverage":false},{"functionName":"Request.cert","ranges":[{"startOffset":14360,"endOffset":14418,"count":0}],"isBlockCoverage":false},{"functionName":"Request.disableTLSCerts","ranges":[{"startOffset":14651,"endOffset":14716,"count":0}],"isBlockCoverage":false},{"functionName":"Request.request","ranges":[{"startOffset":14883,"endOffset":19328,"count":57},{"startOffset":14914,"endOffset":14930,"count":0},{"startOffset":15086,"endOffset":15147,"count":0},{"startOffset":15187,"endOffset":15242,"count":0},{"startOffset":15386,"endOffset":15420,"count":0},{"startOffset":15615,"endOffset":15827,"count":0},{"startOffset":15900,"endOffset":16638,"count":0},{"startOffset":17067,"endOffset":17091,"count":0},{"startOffset":17244,"endOffset":17316,"count":0},{"startOffset":17345,"endOffset":17410,"count":0},{"startOffset":17412,"endOffset":17459,"count":0},{"startOffset":17522,"endOffset":17573,"count":0},{"startOffset":18597,"endOffset":18647,"count":0},{"startOffset":18669,"endOffset":18685,"count":0},{"startOffset":18687,"endOffset":18739,"count":0},{"startOffset":18774,"endOffset":18853,"count":29},{"startOffset":18895,"endOffset":19310,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17938,"endOffset":17975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17997,"endOffset":18544,"count":0}],"isBlockCoverage":false},{"functionName":"Request.callback","ranges":[{"startOffset":19517,"endOffset":20790,"count":57},{"startOffset":19579,"endOffset":19612,"count":0},{"startOffset":19752,"endOffset":19759,"count":0},{"startOffset":19805,"endOffset":19860,"count":0},{"startOffset":19949,"endOffset":20197,"count":38},{"startOffset":20075,"endOffset":20085,"count":0},{"startOffset":20176,"endOffset":20187,"count":0},{"startOffset":20205,"endOffset":20315,"count":0},{"startOffset":20436,"endOffset":20469,"count":19},{"startOffset":20469,"endOffset":20520,"count":38},{"startOffset":20520,"endOffset":20554,"count":0},{"startOffset":20554,"endOffset":20728,"count":38},{"startOffset":20730,"endOffset":20768,"count":0},{"startOffset":20768,"endOffset":20789,"count":38}],"isBlockCoverage":true},{"functionName":"Request._isHost","ranges":[{"startOffset":20966,"endOffset":21081,"count":58}],"isBlockCoverage":true},{"functionName":"Request._emitResponse","ranges":[{"startOffset":21302,"endOffset":21751,"count":57},{"startOffset":21467,"endOffset":21500,"count":54}],"isBlockCoverage":true},{"functionName":"response.pipe","ranges":[{"startOffset":21575,"endOffset":21686,"count":0}],"isBlockCoverage":false},{"functionName":"Request._emitRedirect","ranges":[{"startOffset":21884,"endOffset":22020,"count":0}],"isBlockCoverage":false},{"functionName":"Request.end","ranges":[{"startOffset":22047,"endOffset":22341,"count":57},{"startOffset":22148,"endOffset":22240,"count":0},{"startOffset":22314,"endOffset":22321,"count":0}],"isBlockCoverage":true},{"functionName":"Request._end","ranges":[{"startOffset":22369,"endOffset":31516,"count":57},{"startOffset":22405,"endOffset":22499,"count":0},{"startOffset":22900,"endOffset":22940,"count":29},{"startOffset":23038,"endOffset":23060,"count":28},{"startOffset":23062,"endOffset":23132,"count":0},{"startOffset":23155,"endOffset":23178,"count":29},{"startOffset":23225,"endOffset":23260,"count":29},{"startOffset":23262,"endOffset":23373,"count":29},{"startOffset":23325,"endOffset":23338,"count":0},{"startOffset":30673,"endOffset":31378,"count":0},{"startOffset":31411,"endOffset":31481,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23462,"endOffset":29401,"count":57},{"startOffset":23574,"endOffset":23631,"count":0},{"startOffset":23653,"endOffset":23676,"count":0},{"startOffset":23771,"endOffset":23776,"count":0},{"startOffset":23778,"endOffset":23793,"count":0},{"startOffset":24079,"endOffset":24107,"count":0},{"startOffset":24109,"endOffset":24152,"count":0},{"startOffset":24186,"endOffset":24284,"count":0},{"startOffset":24341,"endOffset":24373,"count":0},{"startOffset":24436,"endOffset":24461,"count":0},{"startOffset":24463,"endOffset":24518,"count":0},{"startOffset":24581,"endOffset":24590,"count":0},{"startOffset":24592,"endOffset":24831,"count":0},{"startOffset":24877,"endOffset":24984,"count":0},{"startOffset":25005,"endOffset":25127,"count":0},{"startOffset":25153,"endOffset":25300,"count":0},{"startOffset":25331,"endOffset":25380,"count":54},{"startOffset":25380,"endOffset":25875,"count":3},{"startOffset":25547,"endOffset":25875,"count":0},{"startOffset":25989,"endOffset":26004,"count":0},{"startOffset":26022,"endOffset":26052,"count":54},{"startOffset":28558,"endOffset":28626,"count":0},{"startOffset":28694,"endOffset":29014,"count":0},{"startOffset":29183,"endOffset":29396,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26288,"endOffset":26890,"count":57},{"startOffset":26373,"endOffset":26376,"count":0},{"startOffset":26414,"endOffset":26881,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27127,"endOffset":28546,"count":57},{"startOffset":27185,"endOffset":27278,"count":0},{"startOffset":27430,"endOffset":27447,"count":0},{"startOffset":27449,"endOffset":27505,"count":0},{"startOffset":27569,"endOffset":28422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28895,"endOffset":28990,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29067,"endOffset":29152,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29199,"endOffset":29394,"count":0}],"isBlockCoverage":false},{"functionName":"getProgressMonitor","ranges":[{"startOffset":29465,"endOffset":29914,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToChunks","ranges":[{"startOffset":29942,"endOffset":30536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31000,"endOffset":31371,"count":0}],"isBlockCoverage":false},{"functionName":"Request._shouldUnzip","ranges":[{"startOffset":31617,"endOffset":32123,"count":57},{"startOffset":31683,"endOffset":31755,"count":0},{"startOffset":31894,"endOffset":32018,"count":0}],"isBlockCoverage":true},{"functionName":"Request.connect","ranges":[{"startOffset":32637,"endOffset":32953,"count":0}],"isBlockCoverage":false},{"functionName":"Request.trustLocalhost","ranges":[{"startOffset":32991,"endOffset":33093,"count":0}],"isBlockCoverage":false},{"functionName":"request.<computed>","ranges":[{"startOffset":33491,"endOffset":33859,"count":0}],"isBlockCoverage":false},{"functionName":"isText","ranges":[{"startOffset":33998,"endOffset":34278,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":34486,"endOffset":34762,"count":57}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":34913,"endOffset":35041,"count":85}],"isBlockCoverage":true},{"functionName":"isRedirect","ranges":[{"startOffset":35176,"endOffset":35263,"count":57}],"isBlockCoverage":true}]},{"scriptId":"508","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11360,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1937,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":2097,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3780,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":3946,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4325,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":4445,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5955,"endOffset":6361,"count":1},{"startOffset":6019,"endOffset":6045,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":6747,"endOffset":8555,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":8590,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":8696,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":9326,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":9766,"endOffset":10313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11148,"endOffset":11258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":131,"count":1}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/Mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2989,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":108,"endOffset":435,"count":1},{"startOffset":255,"endOffset":293,"count":2}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":1288,"endOffset":2336,"count":3},{"startOffset":1344,"endOffset":2333,"count":957},{"startOffset":1523,"endOffset":2129,"count":1214},{"startOffset":1702,"endOffset":1731,"count":38},{"startOffset":1731,"endOffset":1752,"count":1176},{"startOffset":1752,"endOffset":1775,"count":1173},{"startOffset":1777,"endOffset":2088,"count":0},{"startOffset":2088,"endOffset":2129,"count":1176},{"startOffset":2186,"endOffset":2212,"count":956},{"startOffset":2299,"endOffset":2304,"count":924},{"startOffset":2305,"endOffset":2320,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1386,"endOffset":1437,"count":1214}],"isBlockCoverage":true},{"functionName":"Mime.getType","ranges":[{"startOffset":2418,"endOffset":2727,"count":29},{"startOffset":2716,"endOffset":2723,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.getExtension","ranges":[{"startOffset":2826,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/types/standard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"512","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/types/other.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25894,"count":1}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/form-data/lib/form_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14511,"count":1}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":807,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.append","ranges":[{"startOffset":1267,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._trackLength","ranges":[{"startOffset":2171,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lengthRetriever","ranges":[{"startOffset":3309,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartHeader","ranges":[{"startOffset":5003,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentDisposition","ranges":[{"startOffset":6493,"endOffset":7333,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentType","ranges":[{"startOffset":7375,"endOffset":8343,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartFooter","ranges":[{"startOffset":8386,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lastBoundary","ranges":[{"startOffset":8664,"endOffset":8745,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getHeaders","ranges":[{"startOffset":8782,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.setBoundary","ranges":[{"startOffset":9171,"endOffset":9224,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBoundary","ranges":[{"startOffset":9262,"endOffset":9367,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBuffer","ranges":[{"startOffset":9403,"endOffset":10337,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._generateBoundary","ranges":[{"startOffset":10381,"endOffset":10706,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLengthSync","ranges":[{"startOffset":10895,"endOffset":11578,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.hasKnownLength","ranges":[{"startOffset":11786,"endOffset":11934,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLength","ranges":[{"startOffset":11970,"endOffset":12518,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.submit","ranges":[{"startOffset":12551,"endOffset":14237,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._error","ranges":[{"startOffset":14270,"endOffset":14387,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.toString","ranges":[{"startOffset":14422,"endOffset":14469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/combined-stream/lib/combined_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4895,"count":1}],"isBlockCoverage":true},{"functionName":"CombinedStream","ranges":[{"startOffset":153,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.create","ranges":[{"startOffset":534,"endOffset":735,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.isStreamLike","ranges":[{"startOffset":770,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.append","ranges":[{"startOffset":1019,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pipe","ranges":[{"startOffset":1589,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._getNext","ranges":[{"startOffset":1744,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._realGetNext","ranges":[{"startOffset":2123,"endOffset":2639,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._pipeNext","ranges":[{"startOffset":2681,"endOffset":2991,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._handleErrors","ranges":[{"startOffset":3037,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.write","ranges":[{"startOffset":3188,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pause","ranges":[{"startOffset":3273,"endOffset":3488,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.resume","ranges":[{"startOffset":3527,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.end","ranges":[{"startOffset":3842,"endOffset":3896,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.destroy","ranges":[{"startOffset":3936,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._reset","ranges":[{"startOffset":4031,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._checkDataSize","ranges":[{"startOffset":4173,"endOffset":4414,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._updateDataSize","ranges":[{"startOffset":4462,"endOffset":4785,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._emitError","ranges":[{"startOffset":4828,"endOffset":4892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/delayed-stream/lib/delayed_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2426,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedStream","ranges":[{"startOffset":104,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.create","ranges":[{"startOffset":404,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1025,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.setEncoding","ranges":[{"startOffset":1123,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.resume","ranges":[{"startOffset":1241,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pause","ranges":[{"startOffset":1372,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.release","ranges":[{"startOffset":1450,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pipe","ranges":[{"startOffset":1660,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._handleEmit","ranges":[{"startOffset":1806,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._checkIfMaxDataSizeExceeded","ranges":[{"startOffset":2114,"endOffset":2423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/parallel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"parallel","ranges":[{"startOffset":508,"endOffset":1058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1869,"count":1}],"isBlockCoverage":true},{"functionName":"iterate","ranges":[{"startOffset":405,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"runJob","ranges":[{"startOffset":1513,"endOffset":1867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":263,"endOffset":631,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/defer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":147,"endOffset":465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":130,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":422,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":978,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":353,"endOffset":976,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/terminator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":562,"count":1}],"isBlockCoverage":true},{"functionName":"terminator","ranges":[{"startOffset":283,"endOffset":560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/serial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":518,"count":1}],"isBlockCoverage":true},{"functionName":"serial","ranges":[{"startOffset":412,"endOffset":516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/serialOrdered.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1826,"count":1}],"isBlockCoverage":true},{"functionName":"serialOrdered","ranges":[{"startOffset":677,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"ascending","ranges":[{"startOffset":1486,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"descending","ranges":[{"startOffset":1761,"endOffset":1824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-set-tostringtag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1248,"count":1},{"startOffset":329,"endOffset":335,"count":0}],"isBlockCoverage":true},{"functionName":"setToStringTag","ranges":[{"startOffset":385,"endOffset":1245,"count":1},{"startOffset":469,"endOffset":486,"count":0},{"startOffset":487,"endOffset":508,"count":0},{"startOffset":555,"endOffset":572,"count":0},{"startOffset":573,"endOffset":604,"count":0},{"startOffset":784,"endOffset":897,"count":0},{"startOffset":1152,"endOffset":1238,"count":0}],"isBlockCoverage":true}]},{"scriptId":"527","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-tostringtag/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"hasToStringTagShams","ranges":[{"startOffset":112,"endOffset":194,"count":1}],"isBlockCoverage":true}]},{"scriptId":"528","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/form-data/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":46,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/formidable/dist/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47129,"count":1}],"isBlockCoverage":true},{"functionName":"PersistentFile","ranges":[{"startOffset":612,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1063,"endOffset":1225,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1231,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1616,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1750,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2104,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":2279,"endOffset":2449,"count":0}],"isBlockCoverage":false},{"functionName":"VolatileFile","ranges":[{"startOffset":2560,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":3057,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3222,"endOffset":3272,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3278,"endOffset":3588,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":3594,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3671,"endOffset":4007,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4013,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"OctetStreamParser","ranges":[{"startOffset":4250,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$3","ranges":[{"startOffset":4514,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"init$2","ranges":[{"startOffset":5146,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"QuerystringParser","ranges":[{"startOffset":6795,"endOffset":6962,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":6968,"endOffset":7121,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":7127,"endOffset":7353,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$2","ranges":[{"startOffset":7532,"endOffset":7900,"count":0}],"isBlockCoverage":false},{"functionName":"init$1","ranges":[{"startOffset":8148,"endOffset":8492,"count":0}],"isBlockCoverage":false},{"functionName":"FormidableError","ranges":[{"startOffset":9174,"endOffset":9314,"count":0}],"isBlockCoverage":false},{"functionName":"lower","ranges":[{"startOffset":10906,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11001,"endOffset":11061,"count":13}],"isBlockCoverage":true},{"functionName":"MultipartParser","ranges":[{"startOffset":11124,"endOffset":11449,"count":0}],"isBlockCoverage":false},{"functionName":"_endUnexpected","ranges":[{"startOffset":11455,"endOffset":11636,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":11642,"endOffset":12038,"count":0}],"isBlockCoverage":false},{"functionName":"initWithBoundary","ranges":[{"startOffset":12044,"endOffset":12361,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCallback","ranges":[{"startOffset":12409,"endOffset":12576,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":12628,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"explain","ranges":[{"startOffset":19790,"endOffset":19874,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.stateToString","ranges":[{"startOffset":19960,"endOffset":20177,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$1","ranges":[{"startOffset":20417,"endOffset":21336,"count":0}],"isBlockCoverage":false},{"functionName":"createInitMultipart","ranges":[{"startOffset":21586,"endOffset":26288,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParser","ranges":[{"startOffset":26391,"endOffset":26530,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":26536,"endOffset":26675,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":26681,"endOffset":26900,"count":0}],"isBlockCoverage":false},{"functionName":"plugin","ranges":[{"startOffset":27066,"endOffset":27426,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":27674,"endOffset":27966,"count":0}],"isBlockCoverage":false},{"functionName":"DummyParser","ranges":[{"startOffset":28070,"endOffset":28211,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":28217,"endOffset":28330,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":28951,"endOffset":28989,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProp","ranges":[{"startOffset":29022,"endOffset":29114,"count":0}],"isBlockCoverage":false},{"functionName":"decorateForceSequential","ranges":[{"startOffset":29152,"endOffset":29838,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29327,"endOffset":29834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29907,"endOffset":30044,"count":0}],"isBlockCoverage":false},{"functionName":"invalidExtensionChar","ranges":[{"startOffset":30079,"endOffset":30270,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm","ranges":[{"startOffset":30332,"endOffset":31639,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":31645,"endOffset":31893,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":31899,"endOffset":32164,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":32170,"endOffset":32439,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":32496,"endOffset":34547,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeaders","ranges":[{"startOffset":34553,"endOffset":34984,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":34990,"endOffset":35399,"count":0}],"isBlockCoverage":false},{"functionName":"onPart","ranges":[{"startOffset":35405,"endOffset":35511,"count":0}],"isBlockCoverage":false},{"functionName":"_handlePart","ranges":[{"startOffset":35517,"endOffset":39565,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentType","ranges":[{"startOffset":39617,"endOffset":40850,"count":0}],"isBlockCoverage":false},{"functionName":"_error","ranges":[{"startOffset":40856,"endOffset":41109,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentLength","ranges":[{"startOffset":41115,"endOffset":41513,"count":0}],"isBlockCoverage":false},{"functionName":"_newParser","ranges":[{"startOffset":41519,"endOffset":41587,"count":0}],"isBlockCoverage":false},{"functionName":"_newFile","ranges":[{"startOffset":41593,"endOffset":42454,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileName","ranges":[{"startOffset":42460,"endOffset":43031,"count":0}],"isBlockCoverage":false},{"functionName":"_getExtension","ranges":[{"startOffset":43158,"endOffset":43831,"count":0}],"isBlockCoverage":false},{"functionName":"_joinDirectoryName","ranges":[{"startOffset":43837,"endOffset":44120,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpRename","ranges":[{"startOffset":44126,"endOffset":45030,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFields","ranges":[{"startOffset":45036,"endOffset":45492,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFiles","ranges":[{"startOffset":45498,"endOffset":45946,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeEnd","ranges":[{"startOffset":45952,"endOffset":46093,"count":0}],"isBlockCoverage":false},{"functionName":"formidable","ranges":[{"startOffset":46241,"endOffset":46279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/hexoid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1},{"startOffset":24,"endOffset":63,"count":256}],"isBlockCoverage":true},{"functionName":"exports.hexoid","ranges":[{"startOffset":78,"endOffset":237,"count":1},{"startOffset":93,"endOffset":97,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":977,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":127,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":450,"endOffset":638,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":482,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":642,"endOffset":975,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":938,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":307,"endOffset":936,"count":3},{"startOffset":351,"endOffset":372,"count":0},{"startOffset":413,"endOffset":457,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":487,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":557,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/dezalgo/dezalgo.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"dezalgo","ranges":[{"startOffset":98,"endOffset":388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asap/asap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2023,"count":1}],"isBlockCoverage":true},{"functionName":"asap","ranges":[{"startOffset":526,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask","ranges":[{"startOffset":779,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask.call","ranges":[{"startOffset":879,"endOffset":2018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asap/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4240,"count":1}],"isBlockCoverage":true},{"functionName":"rawAsap","ranges":[{"startOffset":763,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":1904,"endOffset":3040,"count":0}],"isBlockCoverage":false},{"functionName":"requestFlush","ranges":[{"startOffset":3082,"endOffset":4238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1},{"startOffset":223,"endOffset":271,"count":0}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4991,"count":1},{"startOffset":849,"endOffset":865,"count":0},{"startOffset":1567,"endOffset":1670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1902,"endOffset":1944,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1953,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2516,"endOffset":2659,"count":1},{"startOffset":2580,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2740,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3191,"endOffset":3311,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3417,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3624,"endOffset":3889,"count":1},{"startOffset":3670,"endOffset":3710,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":4015,"endOffset":4063,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4237,"endOffset":4447,"count":1},{"startOffset":4377,"endOffset":4444,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4622,"endOffset":4784,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4883,"endOffset":4988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2902,"count":1},{"startOffset":206,"endOffset":232,"count":0},{"startOffset":339,"endOffset":364,"count":0},{"startOffset":392,"endOffset":480,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":484,"endOffset":653,"count":2},{"startOffset":536,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":657,"endOffset":2643,"count":2},{"startOffset":718,"endOffset":736,"count":0},{"startOffset":828,"endOffset":846,"count":0},{"startOffset":877,"endOffset":895,"count":0},{"startOffset":928,"endOffset":950,"count":0},{"startOffset":952,"endOffset":970,"count":0},{"startOffset":998,"endOffset":1001,"count":0},{"startOffset":1708,"endOffset":1711,"count":0},{"startOffset":1717,"endOffset":2642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1820,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2647,"endOffset":2755,"count":2}],"isBlockCoverage":true}]},{"scriptId":"539","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":328,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":325,"count":15},{"startOffset":119,"endOffset":123,"count":0},{"startOffset":145,"endOffset":150,"count":0},{"startOffset":267,"endOffset":321,"count":0}],"isBlockCoverage":true}]},{"scriptId":"540","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7204,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":114,"endOffset":7175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":438,"endOffset":482,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1052,"endOffset":1339,"count":1},{"startOffset":1151,"endOffset":1259,"count":10}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1519,"endOffset":3772,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1650,"endOffset":2909,"count":114},{"startOffset":1737,"endOffset":1870,"count":0},{"startOffset":2046,"endOffset":2874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2237,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3273,"endOffset":3549,"count":114},{"startOffset":3315,"endOffset":3352,"count":0},{"startOffset":3406,"endOffset":3515,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3560,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3777,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":4154,"endOffset":4614,"count":1},{"startOffset":4364,"endOffset":4376,"count":0},{"startOffset":4485,"endOffset":4610,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4817,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5971,"endOffset":6169,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6321,"endOffset":6589,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6687,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6926,"endOffset":7104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3186,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":447,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":963,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2209,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2648,"endOffset":2999,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":3041,"endOffset":3184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookiejar/cookiejar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26,"endOffset":10493,"count":1}],"isBlockCoverage":true},{"functionName":"CookieAccessInfo","ranges":[{"startOffset":66,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"Cookie","ranges":[{"startOffset":566,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1447,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"toValueString","ranges":[{"startOffset":2061,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2241,"endOffset":4703,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":4739,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"collidesWith","ranges":[{"startOffset":5125,"endOffset":6220,"count":0}],"isBlockCoverage":false},{"functionName":"CookieJar","ranges":[{"startOffset":6229,"endOffset":9661,"count":0}],"isBlockCoverage":false},{"functionName":"setCookies","ranges":[{"startOffset":9849,"endOffset":10489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fast-safe-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6023,"count":1}],"isBlockCoverage":true},{"functionName":"defaultOptions","ranges":[{"startOffset":274,"endOffset":405,"count":29}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":431,"endOffset":1186,"count":29},{"startOffset":730,"endOffset":816,"count":0},{"startOffset":822,"endOffset":936,"count":0},{"startOffset":977,"endOffset":1164,"count":0}],"isBlockCoverage":true},{"functionName":"setReplace","ranges":[{"startOffset":1190,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"decirc","ranges":[{"startOffset":1660,"endOffset":2800,"count":154},{"startOffset":1783,"endOffset":1798,"count":49},{"startOffset":1800,"endOffset":2797,"count":49},{"startOffset":1842,"endOffset":1965,"count":20},{"startOffset":1873,"endOffset":1958,"count":0},{"startOffset":2071,"endOffset":2147,"count":0},{"startOffset":2261,"endOffset":2337,"count":0},{"startOffset":2468,"endOffset":2585,"count":19},{"startOffset":2510,"endOffset":2578,"count":20},{"startOffset":2585,"endOffset":2775,"count":30},{"startOffset":2669,"endOffset":2768,"count":105}],"isBlockCoverage":true},{"functionName":"compareFunction","ranges":[{"startOffset":2825,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicStringify","ranges":[{"startOffset":2948,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicDecirc","ranges":[{"startOffset":3803,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetterValues","ranges":[{"startOffset":5487,"endOffset":6021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8523,"count":1},{"startOffset":1825,"endOffset":2040,"count":0}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":156,"endOffset":197,"count":114}],"isBlockCoverage":true},{"functionName":"exports.params","ranges":[{"startOffset":333,"endOffset":593,"count":57},{"startOffset":413,"endOffset":572,"count":114},{"startOffset":547,"endOffset":567,"count":57}],"isBlockCoverage":true},{"functionName":"exports.parseLinks","ranges":[{"startOffset":727,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cleanHeader","ranges":[{"startOffset":1162,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isObject","ranges":[{"startOffset":1585,"endOffset":1656,"count":87}],"isBlockCoverage":true},{"functionName":"exports.hasOwn","ranges":[{"startOffset":1828,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"exports.mixin","ranges":[{"startOffset":2059,"endOffset":2200,"count":2},{"startOffset":2110,"endOffset":2197,"count":33}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/request-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65007,"count":1}],"isBlockCoverage":true},{"functionName":"RequestBase","ranges":[{"startOffset":294,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.clearTimeout","ranges":[{"startOffset":455,"endOffset":702,"count":114}],"isBlockCoverage":true},{"functionName":"RequestBase.parse","ranges":[{"startOffset":913,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.responseType","ranges":[{"startOffset":1403,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.serialize","ranges":[{"startOffset":1708,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.timeout","ranges":[{"startOffset":2422,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.retry","ranges":[{"startOffset":3380,"endOffset":3637,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._shouldRetry","ranges":[{"startOffset":4819,"endOffset":5787,"count":57},{"startOffset":4868,"endOffset":4906,"count":0},{"startOffset":4933,"endOffset":5497,"count":0},{"startOffset":5498,"endOffset":5529,"count":0},{"startOffset":5531,"endOffset":5786,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._retry","ranges":[{"startOffset":5909,"endOffset":6145,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.then","ranges":[{"startOffset":6298,"endOffset":7279,"count":57},{"startOffset":6412,"endOffset":6571,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6615,"endOffset":7212,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6662,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7124,"endOffset":7203,"count":57},{"startOffset":7162,"endOffset":7176,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.catch","ranges":[{"startOffset":7312,"endOffset":7378,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.use","ranges":[{"startOffset":7447,"endOffset":7494,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.ok","ranges":[{"startOffset":7524,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._isResponseOK","ranges":[{"startOffset":7714,"endOffset":7888,"count":57},{"startOffset":7744,"endOffset":7769,"count":0},{"startOffset":7795,"endOffset":7836,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.get","ranges":[{"startOffset":8054,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.set","ranges":[{"startOffset":8998,"endOffset":9265,"count":29},{"startOffset":9048,"endOffset":9169,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.unset","ranges":[{"startOffset":9502,"endOffset":9614,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.field","ranges":[{"startOffset":10199,"endOffset":11249,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.abort","ranges":[{"startOffset":11396,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._auth","ranges":[{"startOffset":11681,"endOffset":12159,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.withCredentials","ranges":[{"startOffset":12574,"endOffset":12737,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.redirects","ranges":[{"startOffset":12943,"endOffset":13003,"count":114}],"isBlockCoverage":true},{"functionName":"RequestBase.maxResponseSize","ranges":[{"startOffset":13234,"endOffset":13380,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.toJSON","ranges":[{"startOffset":13696,"endOffset":13826,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.send","ranges":[{"startOffset":14883,"endOffset":16373,"count":29},{"startOffset":15005,"endOffset":15145,"count":0},{"startOffset":15211,"endOffset":15243,"count":0},{"startOffset":15311,"endOffset":15429,"count":0},{"startOffset":15517,"endOffset":15704,"count":104},{"startOffset":15559,"endOffset":15579,"count":0},{"startOffset":15581,"endOffset":15638,"count":0},{"startOffset":15709,"endOffset":16231,"count":0},{"startOffset":16273,"endOffset":16297,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.sortQuery","ranges":[{"startOffset":17020,"endOffset":17186,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._finalizeQueryString","ranges":[{"startOffset":17312,"endOffset":17883,"count":57},{"startOffset":17380,"endOffset":17449,"count":0},{"startOffset":17527,"endOffset":17880,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._appendQueryString","ranges":[{"startOffset":17961,"endOffset":18003,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._timeoutError","ranges":[{"startOffset":18119,"endOffset":18443,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._setTimeouts","ranges":[{"startOffset":18483,"endOffset":18976,"count":57},{"startOffset":18557,"endOffset":18572,"count":0},{"startOffset":18574,"endOffset":18708,"count":0},{"startOffset":18763,"endOffset":18793,"count":0},{"startOffset":18795,"endOffset":18973,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18606,"endOffset":18686,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18842,"endOffset":18943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/http2wrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18622,"count":1}],"isBlockCoverage":true},{"functionName":"setProtocol","ranges":[{"startOffset":339,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":505,"endOffset":1449,"count":0}],"isBlockCoverage":false},{"functionName":"createUnixConnection","ranges":[{"startOffset":1453,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":1893,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"getFrame","ranges":[{"startOffset":2128,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttpHeader","ranges":[{"startOffset":2980,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttp2Header","ranges":[{"startOffset":3429,"endOffset":3938,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":3942,"endOffset":4019,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":4023,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4096,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":4205,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4314,"endOffset":4388,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4392,"endOffset":4509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/unzip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6577,"count":1}],"isBlockCoverage":true},{"functionName":"exports.unzip","ranges":[{"startOffset":349,"endOffset":1630,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11768,"count":1}],"isBlockCoverage":true},{"functionName":"Response","ranges":[{"startOffset":554,"endOffset":1218,"count":57}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1372,"endOffset":1486,"count":42},{"startOffset":1430,"endOffset":1480,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1491,"endOffset":1533,"count":54}],"isBlockCoverage":true},{"functionName":"Response.destroy","ranges":[{"startOffset":1755,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"Response.pause","ranges":[{"startOffset":1859,"endOffset":1896,"count":0}],"isBlockCoverage":false},{"functionName":"Response.resume","ranges":[{"startOffset":1953,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toError","ranges":[{"startOffset":2132,"endOffset":2473,"count":38}],"isBlockCoverage":true},{"functionName":"Response.setStatusProperties","ranges":[{"startOffset":2517,"endOffset":2662,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toJSON","ranges":[{"startOffset":2761,"endOffset":2901,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/response-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10123,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseBase","ranges":[{"startOffset":233,"endOffset":259,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase.get","ranges":[{"startOffset":411,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase._setHeaderProperties","ranges":[{"startOffset":791,"endOffset":1308,"count":57},{"startOffset":916,"endOffset":921,"count":0},{"startOffset":1207,"endOffset":1266,"count":0},{"startOffset":1272,"endOffset":1305,"count":0}],"isBlockCoverage":true},{"functionName":"ResponseBase._setStatusProperties","ranges":[{"startOffset":1986,"endOffset":2748,"count":57},{"startOffset":2354,"endOffset":2367,"count":36},{"startOffset":2368,"endOffset":2384,"count":38},{"startOffset":2385,"endOffset":2392,"count":19}],"isBlockCoverage":true}]},{"scriptId":"550","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10280,"count":1},{"startOffset":1748,"endOffset":2231,"count":35}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":375,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"_saveCookies","ranges":[{"startOffset":1001,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"_attachCookies","ranges":[{"startOffset":1448,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":1815,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":2449,"endOffset":2535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/agent-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3390,"count":1},{"startOffset":462,"endOffset":783,"count":22}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":267,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"_setDefaults","ranges":[{"startOffset":317,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":544,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1626,"count":1}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1825,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":98,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2676,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":617,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":119,"endOffset":158,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":178,"endOffset":612,"count":54},{"startOffset":283,"endOffset":566,"count":0}],"isBlockCoverage":true}]},{"scriptId":"555","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1098,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":179,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":113,"endOffset":152,"count":3}],"isBlockCoverage":true}]},{"scriptId":"556","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/image.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1307,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/lib/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2054,"count":1},{"startOffset":259,"endOffset":308,"count":0}],"isBlockCoverage":true},{"functionName":"TestAgent","ranges":[{"startOffset":475,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"TestAgent.host","ranges":[{"startOffset":1259,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1368,"endOffset":1930,"count":35}],"isBlockCoverage":true},{"functionName":"TestAgent.<computed>","ranges":[{"startOffset":1420,"endOffset":1926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1168,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":216,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":837,"count":42}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":851,"endOffset":1161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/node-pre-gyp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9153,"count":1},{"startOffset":993,"endOffset":1063,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1189,"endOffset":1249,"count":1}],"isBlockCoverage":true},{"functionName":"Run","ranges":[{"startOffset":2030,"endOffset":2584,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2211,"endOffset":2405,"count":13}],"isBlockCoverage":true},{"functionName":"self.commands.<computed>","ranges":[{"startOffset":2256,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"parseOpts","ranges":[{"startOffset":3514,"endOffset":5837,"count":1},{"startOffset":4309,"endOffset":4373,"count":0},{"startOffset":4544,"endOffset":4626,"count":0},{"startOffset":5774,"endOffset":5817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3768,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4005,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4975,"endOffset":5742,"count":82},{"startOffset":5035,"endOffset":5042,"count":71},{"startOffset":5042,"endOffset":5129,"count":11},{"startOffset":5129,"endOffset":5161,"count":0},{"startOffset":5161,"endOffset":5737,"count":11},{"startOffset":5468,"endOffset":5682,"count":0}],"isBlockCoverage":true},{"functionName":"proto.setBinaryHostProperty","ranges":[{"startOffset":7209,"endOffset":8486,"count":1},{"startOffset":7256,"endOffset":7305,"count":0},{"startOffset":7485,"endOffset":7630,"count":0},{"startOffset":7632,"endOffset":7745,"count":0},{"startOffset":7747,"endOffset":8070,"count":0},{"startOffset":8072,"endOffset":8485,"count":0}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":8570,"endOffset":8980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9074,"endOffset":9125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/s3_setup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4744,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.detect","ranges":[{"startOffset":159,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_s3","ranges":[{"startOffset":989,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_mockS3Http","ranges":[{"startOffset":2870,"endOffset":4735,"count":1},{"startOffset":2982,"endOffset":4734,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2963,"endOffset":2976,"count":2}],"isBlockCoverage":true},{"functionName":"mock_http","ranges":[{"startOffset":3384,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"mockS3Http","ranges":[{"startOffset":4202,"endOffset":4495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12661,"count":1},{"startOffset":101,"endOffset":158,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":103,"endOffset":158,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":164,"endOffset":178,"count":2}],"isBlockCoverage":true},{"functionName":"nopt","ranges":[{"startOffset":838,"endOffset":1530,"count":1},{"startOffset":902,"endOffset":917,"count":0},{"startOffset":935,"endOffset":940,"count":0},{"startOffset":968,"endOffset":973,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1416,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1534,"endOffset":4150,"count":1},{"startOffset":1598,"endOffset":1617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1724,"endOffset":4146,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":4154,"endOffset":4222,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":4226,"endOffset":4650,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4654,"endOffset":4804,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":4808,"endOffset":4979,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4983,"endOffset":5275,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":5279,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":5408,"endOffset":5514,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5518,"endOffset":7023,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7027,"endOffset":10898,"count":1},{"startOffset":7281,"endOffset":10895,"count":0}],"isBlockCoverage":true},{"functionName":"resolveShort","ranges":[{"startOffset":10902,"endOffset":12659,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/abbrev/abbrev.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1824,"count":1}],"isBlockCoverage":true},{"functionName":"monkeyPatch","ranges":[{"startOffset":89,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"abbrev","ranges":[{"startOffset":473,"endOffset":1751,"count":2},{"startOffset":553,"endOffset":612,"count":0},{"startOffset":675,"endOffset":752,"count":13},{"startOffset":730,"endOffset":747,"count":0},{"startOffset":1036,"endOffset":1730,"count":13},{"startOffset":1093,"endOffset":1098,"count":2},{"startOffset":1182,"endOffset":1190,"count":0},{"startOffset":1249,"endOffset":1503,"count":21},{"startOffset":1323,"endOffset":1352,"count":17},{"startOffset":1386,"endOffset":1415,"count":17},{"startOffset":1440,"endOffset":1455,"count":17},{"startOffset":1457,"endOffset":1496,"count":13},{"startOffset":1543,"endOffset":1601,"count":2},{"startOffset":1601,"endOffset":1659,"count":11},{"startOffset":1659,"endOffset":1725,"count":57}],"isBlockCoverage":true},{"functionName":"lexSort","ranges":[{"startOffset":1755,"endOffset":1822,"count":23},{"startOffset":1799,"endOffset":1802,"count":0},{"startOffset":1811,"endOffset":1814,"count":16},{"startOffset":1815,"endOffset":1819,"count":7}],"isBlockCoverage":true}]},{"scriptId":"563","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/npmlog/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9410,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":403,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":539,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"log.useColor","ranges":[{"startOffset":660,"endOffset":737,"count":1},{"startOffset":705,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"log.enableColor","ranges":[{"startOffset":759,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableColor","ranges":[{"startOffset":896,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableUnicode","ranges":[{"startOffset":1663,"endOffset":1784,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableUnicode","ranges":[{"startOffset":1809,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeThemeset","ranges":[{"startOffset":1958,"endOffset":2014,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeTemplate","ranges":[{"startOffset":2041,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableProgress","ranges":[{"startOffset":2126,"endOffset":2336,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableProgress","ranges":[{"startOffset":2362,"endOffset":2543,"count":1},{"startOffset":2424,"endOffset":2542,"count":0}],"isBlockCoverage":true},{"functionName":"mixinLog","ranges":[{"startOffset":2628,"endOffset":3533,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3622,"endOffset":3739,"count":3}],"isBlockCoverage":true},{"functionName":"log.<computed>","ranges":[{"startOffset":3649,"endOffset":3736,"count":0}],"isBlockCoverage":false},{"functionName":"log.clearProgress","ranges":[{"startOffset":3764,"endOffset":3883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3906,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"log.pause","ranges":[{"startOffset":4664,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"log.resume","ranges":[{"startOffset":4782,"endOffset":5034,"count":1},{"startOffset":4836,"endOffset":5031,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4923,"endOffset":4963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5124,"endOffset":6309,"count":0}],"isBlockCoverage":false},{"functionName":"log.emitLog","ranges":[{"startOffset":6337,"endOffset":7249,"count":0}],"isBlockCoverage":false},{"functionName":"log._format","ranges":[{"startOffset":7267,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"log.write","ranges":[{"startOffset":8075,"endOffset":8180,"count":0}],"isBlockCoverage":false},{"functionName":"log.addLevel","ranges":[{"startOffset":8199,"endOffset":8693,"count":9},{"startOffset":8316,"endOffset":8338,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8430,"endOffset":8649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9393,"endOffset":9407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":167,"count":1}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-group.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3397,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":219,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"bubbleChange","ranges":[{"startOffset":501,"endOffset":803,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":550,"endOffset":800,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.nameInTree","ranges":[{"startOffset":843,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.addUnit","ranges":[{"startOffset":1041,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.completed","ranges":[{"startOffset":1770,"endOffset":2120,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newGroup","ranges":[{"startOffset":2158,"endOffset":2241,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newItem","ranges":[{"startOffset":2278,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newStream","ranges":[{"startOffset":2407,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.finish","ranges":[{"startOffset":2539,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.debug","ranges":[{"startOffset":2963,"endOffset":3395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":285,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":149,"endOffset":241,"count":1}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":868,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":123,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completed","ranges":[{"startOffset":302,"endOffset":384,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.addWork","ranges":[{"startOffset":416,"endOffset":519,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completeWork","ranges":[{"startOffset":556,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.finish","ranges":[{"startOffset":770,"endOffset":866,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":999,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":198,"endOffset":415,"count":0}],"isBlockCoverage":false},{"functionName":"delegateChange","ranges":[{"startOffset":467,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._transform","ranges":[{"startOffset":673,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._flush","ranges":[{"startOffset":831,"endOffset":882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1},{"startOffset":79,"endOffset":88,"count":0},{"startOffset":90,"endOffset":208,"count":0},{"startOffset":311,"endOffset":321,"count":0}],"isBlockCoverage":true}]},{"scriptId":"570","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37049,"count":1},{"startOffset":1686,"endOffset":1768,"count":0},{"startOffset":1781,"endOffset":1798,"count":0},{"startOffset":2120,"endOffset":2162,"count":0}],"isBlockCoverage":true},{"functionName":"EElistenerCount","ranges":[{"startOffset":1382,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":1784,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1801,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":1873,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2139,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":3044,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3842,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":6780,"endOffset":7414,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7640,"endOffset":7778,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7788,"endOffset":8076,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":8220,"endOffset":8255,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8490,"endOffset":8977,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":9075,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":9159,"endOffset":10839,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10841,"endOffset":11289,"count":0}],"isBlockCoverage":false},{"functionName":"chunkInvalid","ranges":[{"startOffset":11291,"endOffset":11554,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11586,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11718,"endOffset":12419,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12481,"endOffset":12861,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12978,"endOffset":13591,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":13691,"endOffset":17354,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":17357,"endOffset":18112,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":18318,"endOffset":18652,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18654,"endOffset":19291,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19648,"endOffset":19809,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19811,"endOffset":21617,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21894,"endOffset":21979,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":22008,"endOffset":25844,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25847,"endOffset":26182,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26212,"endOffset":27461,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27590,"endOffset":28509,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28605,"endOffset":29128,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29171,"endOffset":29718,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29721,"endOffset":30161,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30163,"endOffset":30254,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30412,"endOffset":30745,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30748,"endOffset":30903,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30905,"endOffset":31160,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31189,"endOffset":31464,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31467,"endOffset":31616,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31805,"endOffset":33373,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33458,"endOffset":33685,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33927,"endOffset":33995,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34231,"endOffset":34315,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34552,"endOffset":34614,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34624,"endOffset":34733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35042,"endOffset":35103,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":35340,"endOffset":35871,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":35873,"endOffset":36098,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":36100,"endOffset":36695,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":36752,"endOffset":36916,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":36922,"endOffset":37049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7087,"count":1},{"startOffset":2556,"endOffset":2568,"count":0}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":17,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":360,"endOffset":866,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":868,"endOffset":1104,"count":0}],"isBlockCoverage":false},{"functionName":"_classCallCheck","ranges":[{"startOffset":1106,"endOffset":1259,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperties","ranges":[{"startOffset":1261,"endOffset":1594,"count":1},{"startOffset":1344,"endOffset":1592,"count":11}],"isBlockCoverage":true},{"functionName":"_createClass","ranges":[{"startOffset":1596,"endOffset":1881,"count":1},{"startOffset":1745,"endOffset":1789,"count":0}],"isBlockCoverage":true},{"functionName":"_toPropertyKey","ranges":[{"startOffset":1883,"endOffset":2006,"count":11},{"startOffset":1984,"endOffset":1989,"count":1},{"startOffset":1990,"endOffset":2003,"count":10}],"isBlockCoverage":true},{"functionName":"_toPrimitive","ranges":[{"startOffset":2008,"endOffset":2385,"count":11},{"startOffset":2075,"endOffset":2092,"count":0},{"startOffset":2107,"endOffset":2365,"count":0},{"startOffset":2366,"endOffset":2374,"count":0}],"isBlockCoverage":true},{"functionName":"copyBuffer","ranges":[{"startOffset":2571,"endOffset":2668,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2700,"endOffset":7084,"count":1}],"isBlockCoverage":true},{"functionName":"BufferList","ranges":[{"startOffset":2717,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":2915,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":3174,"endOffset":3373,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3413,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":3682,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3807,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":4034,"endOffset":4339,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":4466,"endOffset":4995,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5035,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":5211,"endOffset":5882,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":5998,"endOffset":6687,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6808,"endOffset":7051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3204,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":80,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndCloseNT","ranges":[{"startOffset":1644,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1739,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1935,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2510,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2576,"endOffset":3100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":102,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":269,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3831,"count":1}],"isBlockCoverage":true},{"functionName":"createErrorType","ranges":[{"startOffset":38,"endOffset":540,"count":12},{"startOffset":100,"endOffset":124,"count":8}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":130,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":340,"endOffset":423,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":615,"endOffset":1124,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":1231,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":1453,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":1761,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2035,"endOffset":2137,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2192,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3007,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3193,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3635,"endOffset":3691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22547,"count":1},{"startOffset":2211,"endOffset":2293,"count":0},{"startOffset":2306,"endOffset":2323,"count":0},{"startOffset":8526,"endOffset":8634,"count":0}],"isBlockCoverage":true},{"functionName":"WriteReq","ranges":[{"startOffset":1384,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"CorkedRequest","ranges":[{"startOffset":1618,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":2309,"endOffset":2323,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":2326,"endOffset":2396,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":2398,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3334,"endOffset":3351,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":3353,"endOffset":7360,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":7398,"endOffset":7573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7577,"endOffset":7905,"count":1},{"startOffset":7890,"endOffset":7902,"count":0}],"isBlockCoverage":true},{"functionName":"writableStateBufferGetter","ranges":[{"startOffset":7699,"endOffset":7780,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8309,"endOffset":8516,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":8555,"endOffset":8630,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":8636,"endOffset":9867,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9966,"endOffset":10037,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":10040,"endOffset":10257,"count":0}],"isBlockCoverage":false},{"functionName":"validChunk","ranges":[{"startOffset":10486,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":10901,"endOffset":11570,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":11599,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":11679,"endOffset":11900,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11943,"endOffset":12371,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12603,"endOffset":12692,"count":0}],"isBlockCoverage":false},{"functionName":"decodeChunk","ranges":[{"startOffset":12699,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13141,"endOffset":13209,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":13408,"endOffset":14410,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":14412,"endOffset":14779,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":14781,"endOffset":15512,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteStateUpdate","ranges":[{"startOffset":15514,"endOffset":15662,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":15664,"endOffset":16363,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":16365,"endOffset":16527,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteDrain","ranges":[{"startOffset":16725,"endOffset":16876,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16944,"endOffset":18801,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":18831,"endOffset":18917,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18981,"endOffset":19526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19758,"endOffset":19819,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19826,"endOffset":19974,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":19976,"endOffset":20233,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":20235,"endOffset":20594,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":20596,"endOffset":21158,"count":0}],"isBlockCoverage":false},{"functionName":"endWritable","ranges":[{"startOffset":21160,"endOffset":21406,"count":0}],"isBlockCoverage":false},{"functionName":"onCorkedFinish","ranges":[{"startOffset":21408,"endOffset":21705,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21931,"endOffset":22069,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22079,"endOffset":22367,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22511,"endOffset":22546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/util-deprecate/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":129,"count":1}],"isBlockCoverage":true}]},{"scriptId":"578","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4506,"count":1},{"startOffset":1448,"endOffset":1544,"count":0},{"startOffset":1858,"endOffset":1982,"count":11},{"startOffset":1923,"endOffset":1977,"count":7}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":1451,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1987,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2671,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2973,"endOffset":3062,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3296,"endOffset":3357,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":3396,"endOffset":3633,"count":0}],"isBlockCoverage":false},{"functionName":"onEndNT","ranges":[{"startOffset":3635,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3901,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4119,"endOffset":4501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8125,"count":1}],"isBlockCoverage":true},{"functionName":"afterTransform","ranges":[{"startOffset":4034,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4563,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5512,"endOffset":5760,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5789,"endOffset":5928,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6423,"endOffset":6513,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6545,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7044,"endOffset":7425,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7459,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7570,"endOffset":8125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1664,"count":1}],"isBlockCoverage":true},{"functionName":"PassThrough","ranges":[{"startOffset":1431,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1608,"endOffset":1663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3169,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":237,"endOffset":536,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":538,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":558,"endOffset":655,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":657,"endOffset":3146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2501,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":143,"endOffset":309,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":485,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":593,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":692,"endOffset":1472,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1474,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":1507,"endOffset":1560,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1562,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":1731,"endOffset":2473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/delegates/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2186,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator","ranges":[{"startOffset":182,"endOffset":430,"count":2},{"startOffset":255,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator.method","ranges":[{"startOffset":577,"endOffset":797,"count":3}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":696,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.access","ranges":[{"startOffset":948,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.getter","ranges":[{"startOffset":1157,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.setter","ranges":[{"startOffset":1511,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.fluent","ranges":[{"startOffset":1875,"endOffset":2183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7231,"count":1}],"isBlockCoverage":true},{"functionName":"callWith","ranges":[{"startOffset":378,"endOffset":472,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge","ranges":[{"startOffset":476,"endOffset":2412,"count":1},{"startOffset":599,"endOffset":604,"count":0},{"startOffset":609,"endOffset":767,"count":0},{"startOffset":1227,"endOffset":1247,"count":0},{"startOffset":1353,"endOffset":1377,"count":0},{"startOffset":1469,"endOffset":1493,"count":0},{"startOffset":1661,"endOffset":1867,"count":0},{"startOffset":2211,"endOffset":2235,"count":0},{"startOffset":2318,"endOffset":2330,"count":0},{"startOffset":2331,"endOffset":2349,"count":0},{"startOffset":2352,"endOffset":2377,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.isEnabled","ranges":[{"startOffset":2466,"endOffset":2508,"count":1}],"isBlockCoverage":true},{"functionName":"Gauge.setTemplate","ranges":[{"startOffset":2542,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._computeTheme","ranges":[{"startOffset":2683,"endOffset":3204,"count":1},{"startOffset":2717,"endOffset":2727,"count":0},{"startOffset":2762,"endOffset":2810,"count":0},{"startOffset":2982,"endOffset":3000,"count":0},{"startOffset":3044,"endOffset":3054,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setThemeset","ranges":[{"startOffset":3238,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.setTheme","ranges":[{"startOffset":3346,"endOffset":3485,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._requestRedraw","ranges":[{"startOffset":3522,"endOffset":3613,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.getWidth","ranges":[{"startOffset":3644,"endOffset":3715,"count":1},{"startOffset":3702,"endOffset":3707,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setWriteTo","ranges":[{"startOffset":3748,"endOffset":4106,"count":1},{"startOffset":3823,"endOffset":3837,"count":0},{"startOffset":3963,"endOffset":3997,"count":0},{"startOffset":3998,"endOffset":4015,"count":0},{"startOffset":4036,"endOffset":4073,"count":0},{"startOffset":4090,"endOffset":4103,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.enable","ranges":[{"startOffset":4135,"endOffset":4281,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.disable","ranges":[{"startOffset":4311,"endOffset":4557,"count":1},{"startOffset":4354,"endOffset":4554,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge._enableEvents","ranges":[{"startOffset":4593,"endOffset":4935,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._disableEvents","ranges":[{"startOffset":4972,"endOffset":5163,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.hide","ranges":[{"startOffset":5190,"endOffset":5393,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.show","ranges":[{"startOffset":5420,"endOffset":5897,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.pulse","ranges":[{"startOffset":5925,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._handleSizeChange","ranges":[{"startOffset":6145,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._doRedraw","ranges":[{"startOffset":6265,"endOffset":7229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/plumbing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":193,"endOffset":398,"count":1},{"startOffset":244,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"Plumbing.setTheme","ranges":[{"startOffset":457,"endOffset":526,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setTemplate","ranges":[{"startOffset":563,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setWidth","ranges":[{"startOffset":678,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.hide","ranges":[{"startOffset":777,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.show","ranges":[{"startOffset":1009,"endOffset":1315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/console-control-strings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2464,"count":1}],"isBlockCoverage":true},{"functionName":"up","ranges":[{"startOffset":93,"endOffset":152,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":171,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"forward","ranges":[{"startOffset":254,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":337,"endOffset":398,"count":0}],"isBlockCoverage":false},{"functionName":"nextLine","ranges":[{"startOffset":421,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"previousLine","ranges":[{"startOffset":513,"endOffset":582,"count":0}],"isBlockCoverage":false},{"functionName":"horizontalAbsolute","ranges":[{"startOffset":615,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"eraseData","ranges":[{"startOffset":797,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":870,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"exports.goto","ranges":[{"startOffset":938,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"exports.gotoSOL","ranges":[{"startOffset":1017,"endOffset":1048,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beep","ranges":[{"startOffset":1067,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":1125,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":1203,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"color","ranges":[{"startOffset":2091,"endOffset":2310,"count":8},{"startOffset":2150,"endOffset":2178,"count":4}],"isBlockCoverage":true},{"functionName":"colorNameToCode","ranges":[{"startOffset":2314,"endOffset":2462,"count":12},{"startOffset":2399,"endOffset":2461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"587","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/render-template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5824,"count":1}],"isBlockCoverage":true},{"functionName":"renderValueWithValues","ranges":[{"startOffset":211,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":368,"endOffset":587,"count":0}],"isBlockCoverage":false},{"functionName":"preType","ranges":[{"startOffset":591,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"postType","ranges":[{"startOffset":728,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"hasPreOrPost","ranges":[{"startOffset":867,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePreAndPost","ranges":[{"startOffset":996,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"prepareItems","ranges":[{"startOffset":1639,"endOffset":5011,"count":0}],"isBlockCoverage":false},{"functionName":"renderFunction","ranges":[{"startOffset":5015,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"renderValue","ranges":[{"startOffset":5254,"endOffset":5822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/align.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1493,"count":1}],"isBlockCoverage":true},{"functionName":"createPadding","ranges":[{"startOffset":194,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"alignLeft","ranges":[{"startOffset":434,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":740,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":1046,"endOffset":1491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":189,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10292,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":10289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/aproba/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3749,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":43,"endOffset":167,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":217,"endOffset":227,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":260,"endOffset":299,"count":3},{"startOffset":282,"endOffset":299,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":333,"endOffset":359,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":393,"endOffset":419,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":455,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":517,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":633,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":693,"endOffset":716,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":748,"endOffset":762,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":770,"endOffset":932,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":936,"endOffset":2380,"count":1},{"startOffset":1006,"endOffset":1055,"count":0},{"startOffset":1076,"endOffset":1117,"count":0},{"startOffset":1132,"endOffset":1167,"count":0},{"startOffset":1203,"endOffset":1247,"count":0},{"startOffset":1277,"endOffset":1314,"count":0},{"startOffset":1894,"endOffset":1962,"count":0},{"startOffset":2007,"endOffset":2377,"count":3},{"startOffset":2206,"endOffset":2344,"count":0},{"startOffset":2377,"endOffset":2379,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1397,"endOffset":1837,"count":1},{"startOffset":1457,"endOffset":1549,"count":3},{"startOffset":1515,"endOffset":1542,"count":0},{"startOffset":1580,"endOffset":1610,"count":0},{"startOffset":1668,"endOffset":1832,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2048,"endOffset":2174,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2243,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2275,"endOffset":2289,"count":0}],"isBlockCoverage":false},{"functionName":"missingRequiredArg","ranges":[{"startOffset":2384,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"unknownType","ranges":[{"startOffset":2507,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"invalidType","ranges":[{"startOffset":2642,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"englishList","ranges":[{"startOffset":2980,"endOffset":3070,"count":0}],"isBlockCoverage":false},{"functionName":"wrongNumberOfArgs","ranges":[{"startOffset":3074,"endOffset":3350,"count":0}],"isBlockCoverage":false},{"functionName":"moreThanOneError","ranges":[{"startOffset":3354,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"newException","ranges":[{"startOffset":3545,"endOffset":3747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/wide-truncate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"wideTruncate","ranges":[{"startOffset":131,"endOffset":851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":189,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10292,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":34,"endOffset":10289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":640,"count":1}],"isBlockCoverage":true},{"functionName":"User","ranges":[{"startOffset":70,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"MissingTemplateValue","ranges":[{"startOffset":232,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"Internal","ranges":[{"startOffset":495,"endOffset":638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/template-item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1975,"count":1}],"isBlockCoverage":true},{"functionName":"isPercent","ranges":[{"startOffset":92,"endOffset":198,"count":0}],"isBlockCoverage":false},{"functionName":"percent","ranges":[{"startOffset":202,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem","ranges":[{"startOffset":274,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getBaseLength","ranges":[{"startOffset":1269,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getLength","ranges":[{"startOffset":1523,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMaxLength","ranges":[{"startOffset":1701,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMinLength","ranges":[{"startOffset":1858,"endOffset":1973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-unicode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":673,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":74,"endOffset":671,"count":1},{"startOffset":532,"endOffset":619,"count":0},{"startOffset":620,"endOffset":639,"count":0}],"isBlockCoverage":true}]},{"scriptId":"602","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/has-color.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"603","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/color-support/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2778,"count":1}],"isBlockCoverage":true},{"functionName":"hasNone","ranges":[{"startOffset":139,"endOffset":329,"count":0}],"isBlockCoverage":false},{"functionName":"hasBasic","ranges":[{"startOffset":333,"endOffset":459,"count":2}],"isBlockCoverage":true},{"functionName":"has256","ranges":[{"startOffset":463,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"has16m","ranges":[{"startOffset":590,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"colorSupport","ranges":[{"startOffset":716,"endOffset":2776,"count":2},{"startOffset":776,"endOffset":781,"count":1},{"startOffset":797,"endOffset":802,"count":1},{"startOffset":908,"endOffset":1135,"count":0},{"startOffset":1360,"endOffset":1400,"count":0},{"startOffset":1638,"endOffset":1678,"count":0},{"startOffset":1727,"endOffset":1744,"count":0},{"startOffset":1746,"endOffset":1786,"count":0},{"startOffset":1850,"endOffset":1963,"count":0},{"startOffset":1965,"endOffset":2334,"count":0},{"startOffset":2342,"endOffset":2359,"count":0},{"startOffset":2365,"endOffset":2404,"count":0},{"startOffset":2412,"endOffset":2453,"count":0},{"startOffset":2461,"endOffset":2509,"count":0},{"startOffset":2514,"endOffset":2775,"count":0}],"isBlockCoverage":true}]},{"scriptId":"604","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5910,"count":1},{"startOffset":798,"endOffset":868,"count":0},{"startOffset":1090,"endOffset":1122,"count":0},{"startOffset":1180,"endOffset":1233,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":299,"endOffset":693,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1756,"endOffset":2380,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2399,"endOffset":2771,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":2822,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3110,"endOffset":4025,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3152,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":4057,"endOffset":4095,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":4136,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":4882,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":5355,"endOffset":5905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1348,"count":1},{"startOffset":938,"endOffset":1195,"count":0},{"startOffset":1233,"endOffset":1346,"count":0}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/themes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1681,"count":1}],"isBlockCoverage":true}]},{"scriptId":"607","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/theme-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3806,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":78,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.newTheme","ranges":[{"startOffset":243,"endOffset":385,"count":4},{"startOffset":285,"endOffset":340,"count":2}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getThemeNames","ranges":[{"startOffset":419,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.addTheme","ranges":[{"startOffset":499,"endOffset":586,"count":4}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.addToAllThemes","ranges":[{"startOffset":621,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.getTheme","ranges":[{"startOffset":832,"endOffset":945,"count":3},{"startOffset":877,"endOffset":914,"count":0}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.setDefault","ranges":[{"startOffset":976,"endOffset":1340,"count":6},{"startOffset":1021,"endOffset":1059,"count":0},{"startOffset":1100,"endOffset":1112,"count":2},{"startOffset":1113,"endOffset":1128,"count":4},{"startOffset":1234,"endOffset":1281,"count":3}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getDefault","ranges":[{"startOffset":1371,"endOffset":2622,"count":1},{"startOffset":1403,"endOffset":1412,"count":0},{"startOffset":1631,"endOffset":1705,"count":0},{"startOffset":1746,"endOffset":2427,"count":0},{"startOffset":2531,"endOffset":2619,"count":0}],"isBlockCoverage":true},{"functionName":"newMissingThemeError","ranges":[{"startOffset":2663,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"newMissingDefaultThemeError","ranges":[{"startOffset":2951,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.newThemeSet","ranges":[{"startOffset":3496,"endOffset":3804,"count":1}],"isBlockCoverage":true},{"functionName":"themeset","ranges":[{"startOffset":3528,"endOffset":3588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2198,"count":1},{"startOffset":1664,"endOffset":2195,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":289,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":472,"endOffset":1609,"count":1},{"startOffset":532,"endOffset":556,"count":0},{"startOffset":835,"endOffset":859,"count":0},{"startOffset":972,"endOffset":1023,"count":10},{"startOffset":1162,"endOffset":1186,"count":0},{"startOffset":1453,"endOffset":1477,"count":0},{"startOffset":1500,"endOffset":1606,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1078,"endOffset":1118,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1311,"endOffset":1363,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1666,"endOffset":2195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/base-theme.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"activityIndicator","ranges":[{"startOffset":138,"endOffset":250,"count":0}],"isBlockCoverage":false},{"functionName":"progressbar","ranges":[{"startOffset":268,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/spin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"spin","ranges":[{"startOffset":33,"endOffset":108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/progress-bar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":211,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":733,"endOffset":1033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/set-interval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":96,"count":1}],"isBlockCoverage":true}]},{"scriptId":"613","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":92,"count":1}],"isBlockCoverage":true}]},{"scriptId":"614","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/set-immediate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1},{"startOffset":92,"endOffset":144,"count":0}],"isBlockCoverage":true}]},{"scriptId":"615","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/set-blocking/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":259,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":257,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83,"endOffset":253,"count":2}],"isBlockCoverage":true}]},{"scriptId":"616","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/napi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173,"endOffset":208,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version","ranges":[{"startOffset":476,"endOffset":930,"count":12},{"startOffset":718,"endOffset":908,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version_as_string","ranges":[{"startOffset":979,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.validate_package_json","ranges":[{"startOffset":1231,"endOffset":3450,"count":2},{"startOffset":2071,"endOffset":2256,"count":0},{"startOffset":2282,"endOffset":2299,"count":0},{"startOffset":2300,"endOffset":2318,"count":0},{"startOffset":2349,"endOffset":2538,"count":0},{"startOffset":2635,"endOffset":2684,"count":0},{"startOffset":2686,"endOffset":3012,"count":0},{"startOffset":3070,"endOffset":3117,"count":0},{"startOffset":3119,"endOffset":3445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1738,"endOffset":1971,"count":2},{"startOffset":1860,"endOffset":1964,"count":0}],"isBlockCoverage":true},{"functionName":"pathOK","ranges":[{"startOffset":3455,"endOffset":3590,"count":6},{"startOffset":3542,"endOffset":3585,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.expand_commands","ranges":[{"startOffset":3627,"endOffset":4588,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3812,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions","ranges":[{"startOffset":4634,"endOffset":5852,"count":7},{"startOffset":4838,"endOffset":4851,"count":3},{"startOffset":4852,"endOffset":4863,"count":4},{"startOffset":5497,"endOffset":5538,"count":3},{"startOffset":5540,"endOffset":5777,"count":0},{"startOffset":5837,"endOffset":5848,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5052,"endOffset":5477,"count":7},{"startOffset":5299,"endOffset":5470,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5604,"endOffset":5703,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions_raw","ranges":[{"startOffset":5902,"endOffset":6329,"count":2},{"startOffset":6314,"endOffset":6325,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6100,"endOffset":6247,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.get_command_arg","ranges":[{"startOffset":6367,"endOffset":6455,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_version_from_command_args","ranges":[{"startOffset":6518,"endOffset":6788,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_out","ranges":[{"startOffset":6829,"endOffset":7074,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_in","ranges":[{"startOffset":7114,"endOffset":7318,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_build_dir","ranges":[{"startOffset":7354,"endOffset":7438,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_best_napi_build_version","ranges":[{"startOffset":7488,"endOffset":8094,"count":3},{"startOffset":7743,"endOffset":7756,"count":1},{"startOffset":7757,"endOffset":7768,"count":2},{"startOffset":8053,"endOffset":8064,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7804,"endOffset":8005,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.build_napi_only","ranges":[{"startOffset":8132,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/pre-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1212,"count":1},{"startOffset":193,"endOffset":222,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":389,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":493,"endOffset":1209,"count":1},{"startOffset":568,"endOffset":634,"count":0}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/versioning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14849,"count":1},{"startOffset":426,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":627,"endOffset":742,"count":650},{"startOffset":701,"endOffset":739,"count":18}],"isBlockCoverage":true},{"functionName":"get_electron_abi","ranges":[{"startOffset":748,"endOffset":1259,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_webkit_abi","ranges":[{"startOffset":1316,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_abi","ranges":[{"startOffset":1749,"endOffset":2500,"count":1},{"startOffset":1809,"endOffset":1880,"count":0},{"startOffset":1899,"endOffset":1982,"count":0},{"startOffset":2058,"endOffset":2078,"count":0},{"startOffset":2080,"endOffset":2202,"count":0},{"startOffset":2430,"endOffset":2491,"count":0}],"isBlockCoverage":true},{"functionName":"get_runtime_abi","ranges":[{"startOffset":2549,"endOffset":8764,"count":1},{"startOffset":2618,"endOffset":2692,"count":0},{"startOffset":2727,"endOffset":2826,"count":0},{"startOffset":2860,"endOffset":2950,"count":0},{"startOffset":2987,"endOffset":3057,"count":0},{"startOffset":3147,"endOffset":8756,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3415,"endOffset":3436,"count":0}],"isBlockCoverage":false},{"functionName":"validate_config","ranges":[{"startOffset":8902,"endOffset":9933,"count":2},{"startOffset":9080,"endOffset":9113,"count":0},{"startOffset":9144,"endOffset":9180,"count":0},{"startOffset":9208,"endOffset":9241,"count":0},{"startOffset":9271,"endOffset":9306,"count":0},{"startOffset":9534,"endOffset":9639,"count":0},{"startOffset":9765,"endOffset":9874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9386,"endOffset":9496,"count":6},{"startOffset":9441,"endOffset":9489,"count":0}],"isBlockCoverage":true},{"functionName":"eval_template","ranges":[{"startOffset":9990,"endOffset":10247,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10060,"endOffset":10222,"count":116},{"startOffset":10153,"endOffset":10217,"count":8}],"isBlockCoverage":true},{"functionName":"fix_slashes","ranges":[{"startOffset":10448,"endOffset":10573,"count":2},{"startOffset":10550,"endOffset":10572,"count":0}],"isBlockCoverage":true},{"functionName":"drop_double_slashes","ranges":[{"startOffset":10694,"endOffset":10779,"count":1}],"isBlockCoverage":true},{"functionName":"get_process_runtime","ranges":[{"startOffset":10783,"endOffset":11001,"count":1},{"startOffset":10881,"endOffset":10917,"count":0},{"startOffset":10946,"endOffset":10979,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.evaluate","ranges":[{"startOffset":11221,"endOffset":14846,"count":1},{"startOffset":11296,"endOffset":11301,"count":0},{"startOffset":11641,"endOffset":11650,"count":0},{"startOffset":11830,"endOffset":11867,"count":0},{"startOffset":11914,"endOffset":11946,"count":0},{"startOffset":12202,"endOffset":12244,"count":0},{"startOffset":12394,"endOffset":12399,"count":0},{"startOffset":12474,"endOffset":12516,"count":0},{"startOffset":14031,"endOffset":14186,"count":0},{"startOffset":14404,"endOffset":14425,"count":0},{"startOffset":14519,"endOffset":14541,"count":0}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8154,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":979,"endOffset":1197,"count":43},{"startOffset":1045,"endOffset":1178,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1221,"endOffset":1505,"count":43},{"startOffset":1420,"endOffset":1425,"count":5},{"startOffset":1426,"endOffset":1437,"count":38},{"startOffset":1484,"endOffset":1489,"count":5},{"startOffset":1490,"endOffset":1501,"count":38}],"isBlockCoverage":true}]},{"scriptId":"621","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":894,"count":1},{"startOffset":238,"endOffset":285,"count":0}],"isBlockCoverage":true}]},{"scriptId":"622","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":235,"count":1},{"startOffset":94,"endOffset":142,"count":0},{"startOffset":146,"endOffset":193,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":148,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":199,"endOffset":207,"count":51}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9600,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":318,"endOffset":2312,"count":4},{"startOffset":426,"endOffset":636,"count":0},{"startOffset":675,"endOffset":778,"count":0},{"startOffset":819,"endOffset":923,"count":0},{"startOffset":1271,"endOffset":1284,"count":0},{"startOffset":1314,"endOffset":1380,"count":0},{"startOffset":1576,"endOffset":1636,"count":0},{"startOffset":1697,"endOffset":1757,"count":0},{"startOffset":1818,"endOffset":1878,"count":0},{"startOffset":1942,"endOffset":1978,"count":3},{"startOffset":1978,"endOffset":2240,"count":1},{"startOffset":2266,"endOffset":2283,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2232,"count":1},{"startOffset":2204,"endOffset":2231,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2318,"endOffset":2520,"count":4},{"startOffset":2427,"endOffset":2490,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2526,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2575,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2985,"endOffset":3286,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3292,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4180,"endOffset":4739,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4896,"endOffset":9568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":339,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":156,"endOffset":306,"count":6},{"startOffset":214,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":433,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":55,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":325,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":59,"endOffset":305,"count":2},{"startOffset":138,"endOffset":164,"count":0},{"startOffset":220,"endOffset":302,"count":0}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":48,"endOffset":142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":48,"endOffset":171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":59,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":52,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":59,"endOffset":99,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":59,"endOffset":99,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":59,"endOffset":99,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":53,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":61,"endOffset":131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":55,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":59,"endOffset":88,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":66,"endOffset":241,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":150,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":63,"endOffset":126,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":49,"endOffset":90,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":49,"endOffset":90,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":115,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":117,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":50,"endOffset":93,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":50,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":50,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":999,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":188,"endOffset":975,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2050,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":149,"endOffset":2023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3758,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":103,"endOffset":136,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":142,"endOffset":713,"count":2},{"startOffset":248,"endOffset":374,"count":0},{"startOffset":580,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":719,"endOffset":1234,"count":2},{"startOffset":768,"endOffset":791,"count":0},{"startOffset":855,"endOffset":921,"count":0},{"startOffset":971,"endOffset":975,"count":0},{"startOffset":1008,"endOffset":1042,"count":0},{"startOffset":1124,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1240,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1287,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1689,"endOffset":3453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15478,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":92,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"get range","ranges":[{"startOffset":2172,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2650,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2695,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2742,"endOffset":5093,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":5099,"endOffset":5749,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5820,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":6740,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":6783,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":6928,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":7523,"endOffset":7847,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":7863,"endOffset":7914,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":8259,"endOffset":8388,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":8413,"endOffset":9113,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":9416,"endOffset":9545,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":9570,"endOffset":10923,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":10950,"endOffset":11109,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":11135,"endOffset":12908,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":13058,"endOffset":13249,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":13273,"endOffset":13433,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":13698,"endOffset":14398,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":14418,"endOffset":15476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/lrucache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":828,"count":1}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":20,"endOffset":88,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":94,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":370,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":428,"endOffset":794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":243,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":61,"endOffset":213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":118,"endOffset":240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":604,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":112,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":601,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":110,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1561,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":148,"endOffset":1530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":62,"endOffset":292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2270,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":400,"endOffset":2240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":131,"endOffset":197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":127,"endOffset":193,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":62,"endOffset":186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1388,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":334,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7757,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":2038,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2942,"endOffset":7194,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7248,"endOffset":7461,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7515,"endOffset":7728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/detect-libc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6498,"count":1}],"isBlockCoverage":true},{"functionName":"safeCommand","ranges":[{"startOffset":470,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"safeCommandSync","ranges":[{"startOffset":736,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"isFileMusl","ranges":[{"startOffset":1332,"endOffset":1389,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromReport","ranges":[{"startOffset":1419,"endOffset":1689,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromCommand","ranges":[{"startOffset":1720,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"getFamilyFromLddContent","ranges":[{"startOffset":1965,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystem","ranges":[{"startOffset":2158,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystemSync","ranges":[{"startOffset":2512,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"family","ranges":[{"startOffset":2961,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"familySync","ranges":[{"startOffset":3386,"endOffset":3671,"count":1},{"startOffset":3434,"endOffset":3650,"count":0}],"isBlockCoverage":true},{"functionName":"isNonGlibcLinux","ranges":[{"startOffset":3830,"endOffset":3879,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlibcLinuxSync","ranges":[{"startOffset":4032,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystem","ranges":[{"startOffset":4108,"endOffset":4505,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystemSync","ranges":[{"startOffset":4544,"endOffset":4933,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromReport","ranges":[{"startOffset":4964,"endOffset":5134,"count":0}],"isBlockCoverage":false},{"functionName":"versionSuffix","ranges":[{"startOffset":5161,"endOffset":5192,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromCommand","ranges":[{"startOffset":5224,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":5621,"endOffset":5926,"count":0}],"isBlockCoverage":false},{"functionName":"versionSync","ranges":[{"startOffset":6058,"endOffset":6353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28092,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1992,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3531,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5242,"endOffset":5743,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5747,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6841,"endOffset":7093,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7131,"endOffset":7510,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7153,"endOffset":7506,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7655,"endOffset":8532,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":9172,"endOffset":14060,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14212,"endOffset":14418,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14422,"endOffset":19905,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19909,"endOffset":20175,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20754,"endOffset":22024,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22816,"endOffset":24351,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24357,"endOffset":24756,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25291,"endOffset":25772,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26291,"endOffset":26682,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26688,"endOffset":26915,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26921,"endOffset":27087,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":27093,"endOffset":27285,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27291,"endOffset":27570,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27576,"endOffset":27947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32829,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2661,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2785,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2863,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3043,"endOffset":4643,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4652,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5423,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5969,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6039,"endOffset":6095,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6166,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6299,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6479,"endOffset":6909,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6913,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8591,"endOffset":9084,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9090,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9188,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9428,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9581,"endOffset":13277,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13284,"endOffset":13347,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13353,"endOffset":13405,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13441,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14184,"endOffset":14245,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14281,"endOffset":14337,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14375,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14473,"endOffset":15476,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15630,"endOffset":28098,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28136,"endOffset":28453,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28491,"endOffset":31484,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31490,"endOffset":31814,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31820,"endOffset":32027,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":32031,"endOffset":32693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31134,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":3138,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadBlockList","ranges":[{"startOffset":3238,"endOffset":3337,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3341,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":5824,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":5910,"endOffset":6369,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":6373,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":6958,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":7331,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":7876,"endOffset":11564,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":11596,"endOffset":12419,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":12426,"endOffset":12786,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":12792,"endOffset":13567,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":13603,"endOffset":13924,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":14033,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":14493,"endOffset":15276,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":15282,"endOffset":15680,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":15686,"endOffset":16124,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":16130,"endOffset":16271,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":16277,"endOffset":16404,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":16410,"endOffset":16615,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":17203,"endOffset":20195,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":20200,"endOffset":21558,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":21562,"endOffset":21751,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":21780,"endOffset":22370,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":22414,"endOffset":22552,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":22559,"endOffset":22615,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":22648,"endOffset":22852,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":22890,"endOffset":23217,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":23256,"endOffset":23413,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":23446,"endOffset":23633,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":23675,"endOffset":23880,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":23927,"endOffset":24138,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":24186,"endOffset":24460,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":24498,"endOffset":24889,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":24930,"endOffset":25324,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":25376,"endOffset":26002,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":26057,"endOffset":26689,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":26696,"endOffset":26864,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":26870,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":27048,"endOffset":27486,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":27492,"endOffset":27610,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":27639,"endOffset":27753,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":27785,"endOffset":27901,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":27945,"endOffset":28004,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":28048,"endOffset":28107,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":28151,"endOffset":28210,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":28254,"endOffset":28313,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":28354,"endOffset":28425,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":28467,"endOffset":28539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28663,"endOffset":28719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28793,"endOffset":28851,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29010,"endOffset":29069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29146,"endOffset":29207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29369,"endOffset":29428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29505,"endOffset":29566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29724,"endOffset":29779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29852,"endOffset":29909,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30067,"endOffset":30126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30203,"endOffset":30264,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30375,"endOffset":30412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30524,"endOffset":30563,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30855,"endOffset":30891,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30896,"endOffset":30937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1928,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":485,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":594,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":695,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1374,"endOffset":1843,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"isLinux","ranges":[{"startOffset":120,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"getReport","ranges":[{"startOffset":197,"endOffset":546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/filesystem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":343,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":506,"endOffset":687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bcrypt/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1190,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.promise","ranges":[{"startOffset":375,"endOffset":890,"count":3},{"startOffset":439,"endOffset":497,"count":0},{"startOffset":535,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":638,"endOffset":885,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":685,"endOffset":840,"count":3},{"startOffset":729,"endOffset":775,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.reject","ranges":[{"startOffset":960,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.use","ranges":[{"startOffset":1143,"endOffset":1187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6454,"count":1}],"isBlockCoverage":true},{"functionName":"createConnectionPromise","ranges":[{"startOffset":745,"endOffset":1650,"count":1},{"startOffset":947,"endOffset":1190,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1216,"endOffset":1645,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1275,"endOffset":1356,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1393,"endOffset":1638,"count":0}],"isBlockCoverage":false},{"functionName":"createPromisePool","ranges":[{"startOffset":1772,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"PromisePoolCluster","ranges":[{"startOffset":2264,"endOffset":2482,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":2488,"endOffset":2928,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":2934,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":3361,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":3792,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3938,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4517,"endOffset":5067,"count":1},{"startOffset":4581,"endOffset":4610,"count":3},{"startOffset":4617,"endOffset":5066,"count":2}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":4839,"endOffset":5044,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4884,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"createPromisePoolCluster","ranges":[{"startOffset":5092,"endOffset":5572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6043,"endOffset":6084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6127,"endOffset":6174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6229,"endOffset":6285,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setMaxParserCache","ranges":[{"startOffset":6322,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearParserCache","ranges":[{"startOffset":6406,"endOffset":6451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/sqlstring/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46,"count":1}],"isBlockCoverage":true}]},{"scriptId":"675","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/sqlstring/lib/SqlString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6102,"count":1}],"isBlockCoverage":true},{"functionName":"escapeId","ranges":[{"startOffset":418,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":912,"endOffset":1804,"count":43},{"startOffset":1005,"endOffset":1031,"count":1},{"startOffset":1031,"endOffset":1064,"count":42},{"startOffset":1064,"endOffset":1112,"count":0},{"startOffset":1118,"endOffset":1149,"count":2},{"startOffset":1155,"endOffset":1756,"count":0},{"startOffset":1762,"endOffset":1796,"count":40}],"isBlockCoverage":true},{"functionName":"arrayToList","ranges":[{"startOffset":1833,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2228,"endOffset":3176,"count":26},{"startOffset":2310,"endOffset":2333,"count":0},{"startOffset":2367,"endOffset":2397,"count":0},{"startOffset":2580,"endOffset":2620,"count":43},{"startOffset":2622,"endOffset":2988,"count":43},{"startOffset":2676,"endOffset":2701,"count":0},{"startOffset":2738,"endOffset":2779,"count":0},{"startOffset":3016,"endOffset":3068,"count":3},{"startOffset":3068,"endOffset":3103,"count":23},{"startOffset":3103,"endOffset":3153,"count":12},{"startOffset":3153,"endOffset":3175,"count":11}],"isBlockCoverage":true},{"functionName":"dateToString","ranges":[{"startOffset":3206,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToString","ranges":[{"startOffset":4451,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"objectToValues","ranges":[{"startOffset":4573,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":4922,"endOffset":5119,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":5124,"endOffset":5669,"count":40},{"startOffset":5299,"endOffset":5438,"count":0},{"startOffset":5529,"endOffset":5668,"count":0}],"isBlockCoverage":true},{"functionName":"zeroPad","ranges":[{"startOffset":5673,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"convertTimezone","ranges":[{"startOffset":5834,"endOffset":6100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/parser_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1447,"count":1}],"isBlockCoverage":true},{"functionName":"keyFromFields","ranges":[{"startOffset":117,"endOffset":877,"count":11},{"startOffset":481,"endOffset":499,"count":0},{"startOffset":616,"endOffset":832,"count":47}],"isBlockCoverage":true},{"functionName":"getParser","ranges":[{"startOffset":881,"endOffset":1188,"count":11},{"startOffset":1059,"endOffset":1085,"count":6},{"startOffset":1085,"endOffset":1187,"count":5}],"isBlockCoverage":true},{"functionName":"setMaxCache","ranges":[{"startOffset":1192,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":1254,"endOffset":1304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/lru.min/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8940,"count":1}],"isBlockCoverage":true},{"functionName":"createLRU","ranges":[{"startOffset":126,"endOffset":8905,"count":3},{"startOffset":236,"endOffset":292,"count":0}],"isBlockCoverage":true},{"functionName":"setTail","ranges":[{"startOffset":612,"endOffset":1101,"count":6},{"startOffset":673,"endOffset":680,"count":0},{"startOffset":803,"endOffset":820,"count":1},{"startOffset":820,"endOffset":915,"count":5},{"startOffset":854,"endOffset":872,"count":4},{"startOffset":887,"endOffset":915,"count":1},{"startOffset":959,"endOffset":987,"count":2}],"isBlockCoverage":true},{"functionName":"_evict","ranges":[{"startOffset":1123,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1763,"endOffset":2428,"count":6},{"startOffset":1834,"endOffset":1841,"count":0},{"startOffset":1962,"endOffset":1972,"count":0},{"startOffset":1991,"endOffset":2003,"count":0},{"startOffset":2131,"endOffset":2255,"count":0},{"startOffset":2339,"endOffset":2359,"count":2},{"startOffset":2359,"endOffset":2417,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2538,"endOffset":2775,"count":12},{"startOffset":2648,"endOffset":2706,"count":6},{"startOffset":2706,"endOffset":2728,"count":2},{"startOffset":2728,"endOffset":2774,"count":6}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":2875,"endOffset":3010,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3079,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3201,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3498,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":3807,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":4145,"endOffset":4442,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":4510,"endOffset":5326,"count":0}],"isBlockCoverage":false},{"functionName":"evict","ranges":[{"startOffset":5443,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":5693,"endOffset":6185,"count":0}],"isBlockCoverage":false},{"functionName":"resize","ranges":[{"startOffset":6290,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":8529,"endOffset":8576,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8662,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"get available","ranges":[{"startOffset":8833,"endOffset":8893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8755,"count":1}],"isBlockCoverage":true},{"functionName":"RR","ranges":[{"startOffset":294,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"RANDOM","ranges":[{"startOffset":399,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"ORDER","ranges":[{"startOffset":513,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"getMonotonicMilliseconds","ranges":[{"startOffset":611,"endOffset":833,"count":0}],"isBlockCoverage":false},{"functionName":"PoolNamespace","ranges":[{"startOffset":863,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":1023,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":1968,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":2610,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"_getClusterNode","ranges":[{"startOffset":3022,"endOffset":3345,"count":0}],"isBlockCoverage":false},{"functionName":"PoolCluster","ranges":[{"startOffset":3396,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":3922,"endOffset":4383,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":4389,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4818,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":5083,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":5468,"endOffset":6148,"count":0}],"isBlockCoverage":false},{"functionName":"_findNodeIds","ranges":[{"startOffset":6154,"endOffset":7210,"count":0}],"isBlockCoverage":false},{"functionName":"_getNode","ranges":[{"startOffset":7216,"endOffset":7272,"count":0}],"isBlockCoverage":false},{"functionName":"_increaseErrorCount","ranges":[{"startOffset":7278,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"_decreaseErrorCount","ranges":[{"startOffset":7696,"endOffset":8084,"count":0}],"isBlockCoverage":false},{"functionName":"_getConnection","ranges":[{"startOffset":8090,"endOffset":8392,"count":0}],"isBlockCoverage":false},{"functionName":"_removeNode","ranges":[{"startOffset":8398,"endOffset":8658,"count":0}],"isBlockCoverage":false},{"functionName":"_clearFindCaches","ranges":[{"startOffset":8664,"endOffset":8717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":97,"endOffset":227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6525,"count":1}],"isBlockCoverage":true},{"functionName":"spliceConnection","ranges":[{"startOffset":295,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"BasePool","ranges":[{"startOffset":546,"endOffset":1002,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":1008,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":2361,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2942,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":3752,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":4534,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"_removeConnection","ranges":[{"startOffset":5101,"endOffset":5388,"count":0}],"isBlockCoverage":false},{"functionName":"_removeIdleTimeoutConnections","ranges":[{"startOffset":5394,"endOffset":6041,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6047,"endOffset":6238,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":6244,"endOffset":6416,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":6422,"endOffset":6490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":138,"endOffset":299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1749,"count":1}],"isBlockCoverage":true},{"functionName":"BasePoolConnection","ranges":[{"startOffset":124,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":684,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":886,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1251,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"_removeFromPool","ranges":[{"startOffset":1324,"endOffset":1505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29529,"count":1}],"isBlockCoverage":true},{"functionName":"BaseConnection","ranges":[{"startOffset":1473,"endOffset":6168,"count":1},{"startOffset":1923,"endOffset":1993,"count":0},{"startOffset":2581,"endOffset":2743,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2212,"endOffset":2312,"count":1}],"isBlockCoverage":true},{"functionName":"onEviction","ranges":[{"startOffset":3019,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3644,"endOffset":3688,"count":134}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3719,"endOffset":3908,"count":28},{"startOffset":3763,"endOffset":3861,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3938,"endOffset":4061,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4093,"endOffset":4616,"count":1},{"startOffset":4234,"endOffset":4615,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4795,"endOffset":5385,"count":1},{"startOffset":5159,"endOffset":5190,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5424,"endOffset":5507,"count":0}],"isBlockCoverage":false},{"functionName":"_addCommandClosedState","ranges":[{"startOffset":6174,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFatalError","ranges":[{"startOffset":6444,"endOffset":6785,"count":0}],"isBlockCoverage":false},{"functionName":"_handleNetworkError","ranges":[{"startOffset":6791,"endOffset":7131,"count":0}],"isBlockCoverage":false},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":7137,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"_notifyError","ranges":[{"startOffset":7654,"endOffset":9264,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9270,"endOffset":9486,"count":28},{"startOffset":9439,"endOffset":9481,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9332,"endOffset":9416,"count":28},{"startOffset":9359,"endOffset":9409,"count":0}],"isBlockCoverage":true},{"functionName":"_resetSequenceId","ranges":[{"startOffset":9806,"endOffset":9893,"count":28}],"isBlockCoverage":true},{"functionName":"_bumpCompressedSequenceId","ranges":[{"startOffset":9899,"endOffset":10028,"count":0}],"isBlockCoverage":false},{"functionName":"_bumpSequenceId","ranges":[{"startOffset":10034,"endOffset":10133,"count":162}],"isBlockCoverage":true},{"functionName":"writePacket","ranges":[{"startOffset":10139,"endOffset":11819,"count":28},{"startOffset":10384,"endOffset":10735,"count":0},{"startOffset":10808,"endOffset":11814,"count":0}],"isBlockCoverage":true},{"functionName":"startTLS","ranges":[{"startOffset":11849,"endOffset":13850,"count":0}],"isBlockCoverage":false},{"functionName":"protocolError","ranges":[{"startOffset":13856,"endOffset":14296,"count":0}],"isBlockCoverage":false},{"functionName":"get fatalError","ranges":[{"startOffset":14302,"endOffset":14355,"count":0}],"isBlockCoverage":false},{"functionName":"handlePacket","ranges":[{"startOffset":14361,"endOffset":16802,"count":162},{"startOffset":14407,"endOffset":14472,"count":0},{"startOffset":14501,"endOffset":15142,"count":0},{"startOffset":15168,"endOffset":15684,"count":0},{"startOffset":15702,"endOffset":16284,"count":134},{"startOffset":15900,"endOffset":16229,"count":0},{"startOffset":16325,"endOffset":16422,"count":0},{"startOffset":16497,"endOffset":16703,"count":28},{"startOffset":16576,"endOffset":16694,"count":0},{"startOffset":16711,"endOffset":16797,"count":0}],"isBlockCoverage":true},{"functionName":"addCommand","ranges":[{"startOffset":16808,"endOffset":17228,"count":28},{"startOffset":16922,"endOffset":17069,"count":0},{"startOffset":17159,"endOffset":17206,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":17234,"endOffset":17708,"count":26},{"startOffset":17312,"endOffset":17451,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":17714,"endOffset":17800,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":17806,"endOffset":17874,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":17880,"endOffset":17927,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveNamedPlaceholders","ranges":[{"startOffset":17933,"endOffset":18603,"count":52},{"startOffset":18057,"endOffset":18598,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":18609,"endOffset":19061,"count":26},{"startOffset":18698,"endOffset":18729,"count":0},{"startOffset":18958,"endOffset":18975,"count":23},{"startOffset":18976,"endOffset":18980,"count":3}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":19067,"endOffset":19133,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":19139,"endOffset":19433,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":19478,"endOffset":19651,"count":0}],"isBlockCoverage":false},{"functionName":"unprepare","ranges":[{"startOffset":19657,"endOffset":20006,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":20012,"endOffset":22540,"count":0}],"isBlockCoverage":false},{"functionName":"changeUser","ranges":[{"startOffset":22546,"endOffset":23903,"count":0}],"isBlockCoverage":false},{"functionName":"beginTransaction","ranges":[{"startOffset":23935,"endOffset":24011,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":24017,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":24078,"endOffset":24137,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":24143,"endOffset":24210,"count":0}],"isBlockCoverage":false},{"functionName":"_registerSlave","ranges":[{"startOffset":24216,"endOffset":24314,"count":0}],"isBlockCoverage":false},{"functionName":"_binlogDump","ranges":[{"startOffset":24320,"endOffset":24412,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":24454,"endOffset":24489,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":24495,"endOffset":24735,"count":0}],"isBlockCoverage":false},{"functionName":"createBinlogStream","ranges":[{"startOffset":24741,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":25458,"endOffset":26109,"count":0}],"isBlockCoverage":false},{"functionName":"writeColumns","ranges":[{"startOffset":26240,"endOffset":26522,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextRow","ranges":[{"startOffset":26568,"endOffset":26695,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryRow","ranges":[{"startOffset":26701,"endOffset":26832,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextResult","ranges":[{"startOffset":26838,"endOffset":27229,"count":0}],"isBlockCoverage":false},{"functionName":"writeEof","ranges":[{"startOffset":27235,"endOffset":27341,"count":0}],"isBlockCoverage":false},{"functionName":"writeOk","ranges":[{"startOffset":27347,"endOffset":27505,"count":0}],"isBlockCoverage":false},{"functionName":"writeError","ranges":[{"startOffset":27511,"endOffset":27762,"count":0}],"isBlockCoverage":false},{"functionName":"serverHandshake","ranges":[{"startOffset":27768,"endOffset":27984,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28060,"endOffset":28518,"count":1},{"startOffset":28107,"endOffset":28307,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28201,"endOffset":28275,"count":0}],"isBlockCoverage":false},{"functionName":"createQuery","ranges":[{"startOffset":28531,"endOffset":29344,"count":26},{"startOffset":28729,"endOffset":29035,"count":0},{"startOffset":29075,"endOffset":29189,"count":3},{"startOffset":29189,"endOffset":29294,"count":23}],"isBlockCoverage":true},{"functionName":"statementKey","ranges":[{"startOffset":29357,"endOffset":29488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/denque/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12978,"count":1}],"isBlockCoverage":true},{"functionName":"Denque","ranges":[{"startOffset":78,"endOffset":366,"count":2},{"startOffset":253,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"peekAt","ranges":[{"startOffset":780,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1177,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1339,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"peekFront","ranges":[{"startOffset":1527,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"peekBack","ranges":[{"startOffset":1713,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":1904,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":2077,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":2376,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2983,"endOffset":3307,"count":28},{"startOffset":3073,"endOffset":3225,"count":0},{"startOffset":3226,"endOffset":3266,"count":0},{"startOffset":3268,"endOffset":3306,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3405,"endOffset":3860,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":4008,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"removeOne","ranges":[{"startOffset":4551,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":5688,"endOffset":7877,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":8240,"endOffset":10045,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10127,"endOffset":10232,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":10350,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":10514,"endOffset":10571,"count":0}],"isBlockCoverage":false},{"functionName":"_fromArray","ranges":[{"startOffset":10786,"endOffset":11058,"count":0}],"isBlockCoverage":false},{"functionName":"_copyArray","ranges":[{"startOffset":11258,"endOffset":11943,"count":0}],"isBlockCoverage":false},{"functionName":"_growArray","ranges":[{"startOffset":12035,"endOffset":12470,"count":0}],"isBlockCoverage":false},{"functionName":"_shrinkArray","ranges":[{"startOffset":12567,"endOffset":12654,"count":0}],"isBlockCoverage":false},{"functionName":"_nextPowerOf2","ranges":[{"startOffset":12803,"endOffset":12948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packet_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":true},{"functionName":"readPacketLength","ranges":[{"startOffset":106,"endOffset":302,"count":134},{"startOffset":260,"endOffset":301,"count":0}],"isBlockCoverage":true},{"functionName":"PacketParser","ranges":[{"startOffset":330,"endOffset":1203,"count":1},{"startOffset":1137,"endOffset":1162,"count":0}],"isBlockCoverage":true},{"functionName":"_flushLargePacket4","ranges":[{"startOffset":1209,"endOffset":1612,"count":0}],"isBlockCoverage":false},{"functionName":"_flushLargePacket7","ranges":[{"startOffset":1618,"endOffset":2030,"count":0}],"isBlockCoverage":false},{"functionName":"executeStart","ranges":[{"startOffset":2036,"endOffset":3929,"count":28},{"startOffset":2139,"endOffset":3483,"count":134},{"startOffset":2685,"endOffset":3180,"count":0},{"startOffset":3246,"endOffset":3476,"count":0},{"startOffset":3510,"endOffset":3924,"count":0}],"isBlockCoverage":true},{"functionName":"executePayload","ranges":[{"startOffset":3935,"endOffset":5669,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader2","ranges":[{"startOffset":5675,"endOffset":6008,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader3","ranges":[{"startOffset":6014,"endOffset":6186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/packet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26145,"count":1}],"isBlockCoverage":true},{"functionName":"leftPad","ranges":[{"startOffset":692,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"Packet","ranges":[{"startOffset":1873,"endOffset":2263,"count":164}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":2357,"endOffset":2406,"count":3}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":2412,"endOffset":2462,"count":50}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":2468,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":2541,"endOffset":2772,"count":0}],"isBlockCoverage":false},{"functionName":"haveMoreData","ranges":[{"startOffset":2778,"endOffset":2835,"count":1}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2841,"endOffset":2882,"count":54}],"isBlockCoverage":true},{"functionName":"readInt8","ranges":[{"startOffset":2888,"endOffset":2945,"count":116}],"isBlockCoverage":true},{"functionName":"readInt16","ranges":[{"startOffset":2951,"endOffset":3047,"count":122}],"isBlockCoverage":true},{"functionName":"readInt24","ranges":[{"startOffset":3053,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32","ranges":[{"startOffset":3133,"endOffset":3229,"count":48}],"isBlockCoverage":true},{"functionName":"readSInt8","ranges":[{"startOffset":3235,"endOffset":3302,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt16","ranges":[{"startOffset":3308,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt32","ranges":[{"startOffset":3410,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64JSNumber","ranges":[{"startOffset":3512,"endOffset":3683,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64JSNumber","ranges":[{"startOffset":3689,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64String","ranges":[{"startOffset":3952,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64String","ranges":[{"startOffset":4131,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64","ranges":[{"startOffset":4312,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64","ranges":[{"startOffset":4621,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"isEOF","ranges":[{"startOffset":4932,"endOffset":5015,"count":59},{"startOffset":4988,"endOffset":5009,"count":22}],"isBlockCoverage":true},{"functionName":"eofStatusFlags","ranges":[{"startOffset":5021,"endOffset":5098,"count":11}],"isBlockCoverage":true},{"functionName":"eofWarningCount","ranges":[{"startOffset":5104,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedNumber","ranges":[{"startOffset":5188,"endOffset":5417,"count":514},{"startOffset":5307,"endOffset":5336,"count":499},{"startOffset":5336,"endOffset":5416,"count":15}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberSigned","ranges":[{"startOffset":5423,"endOffset":5539,"count":12}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberExt","ranges":[{"startOffset":5545,"endOffset":6718,"count":15},{"startOffset":5691,"endOffset":6717,"count":0}],"isBlockCoverage":true},{"functionName":"readFloat","ranges":[{"startOffset":6724,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"readDouble","ranges":[{"startOffset":6843,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"readBuffer","ranges":[{"startOffset":6964,"endOffset":7157,"count":5},{"startOffset":7019,"endOffset":7064,"count":0}],"isBlockCoverage":true},{"functionName":"readDateTime","ranges":[{"startOffset":7198,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"readDateTimeString","ranges":[{"startOffset":8578,"endOffset":9625,"count":0}],"isBlockCoverage":false},{"functionName":"readTimeString","ranges":[{"startOffset":9679,"endOffset":10651,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedString","ranges":[{"startOffset":10657,"endOffset":11137,"count":160},{"startOffset":10840,"endOffset":10868,"count":15},{"startOffset":10868,"endOffset":11136,"count":145}],"isBlockCoverage":true},{"functionName":"readLengthCodedBuffer","ranges":[{"startOffset":11143,"endOffset":11306,"count":0}],"isBlockCoverage":false},{"functionName":"readNullTerminatedString","ranges":[{"startOffset":11312,"endOffset":11596,"count":2},{"startOffset":11439,"endOffset":11495,"count":27}],"isBlockCoverage":true},{"functionName":"readString","ranges":[{"startOffset":11620,"endOffset":12008,"count":13},{"startOffset":11681,"endOffset":11715,"count":0},{"startOffset":11717,"endOffset":11772,"count":0}],"isBlockCoverage":true},{"functionName":"parseInt","ranges":[{"startOffset":12014,"endOffset":13549,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntNoBigCheck","ranges":[{"startOffset":13885,"endOffset":14459,"count":37},{"startOffset":13934,"endOffset":13962,"count":0},{"startOffset":14059,"endOffset":14112,"count":0},{"startOffset":14158,"endOffset":14206,"count":0},{"startOffset":14251,"endOffset":14296,"count":0},{"startOffset":14328,"endOffset":14427,"count":60}],"isBlockCoverage":true},{"functionName":"parseGeometryValue","ranges":[{"startOffset":14555,"endOffset":17530,"count":0}],"isBlockCoverage":false},{"functionName":"parseVector","ranges":[{"startOffset":17536,"endOffset":17805,"count":0}],"isBlockCoverage":false},{"functionName":"parseDate","ranges":[{"startOffset":17811,"endOffset":18545,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTime","ranges":[{"startOffset":18551,"endOffset":18813,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloat","ranges":[{"startOffset":18819,"endOffset":19892,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntNoBigCheck","ranges":[{"startOffset":19898,"endOffset":20003,"count":37}],"isBlockCoverage":true},{"functionName":"parseLengthCodedInt","ranges":[{"startOffset":20009,"endOffset":20130,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntString","ranges":[{"startOffset":20136,"endOffset":20220,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedFloat","ranges":[{"startOffset":20226,"endOffset":20315,"count":0}],"isBlockCoverage":false},{"functionName":"peekByte","ranges":[{"startOffset":20321,"endOffset":20376,"count":135}],"isBlockCoverage":true},{"functionName":"isAlt","ranges":[{"startOffset":20498,"endOffset":20550,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":20556,"endOffset":20610,"count":134}],"isBlockCoverage":true},{"functionName":"asError","ranges":[{"startOffset":20616,"endOffset":21129,"count":3}],"isBlockCoverage":true},{"functionName":"writeInt32","ranges":[{"startOffset":21135,"endOffset":21226,"count":4}],"isBlockCoverage":true},{"functionName":"writeInt24","ranges":[{"startOffset":21232,"endOffset":21313,"count":28}],"isBlockCoverage":true},{"functionName":"writeInt16","ranges":[{"startOffset":21319,"endOffset":21410,"count":28}],"isBlockCoverage":true},{"functionName":"writeInt8","ranges":[{"startOffset":21416,"endOffset":21500,"count":102}],"isBlockCoverage":true},{"functionName":"writeDouble","ranges":[{"startOffset":21506,"endOffset":21598,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":21604,"endOffset":21694,"count":28}],"isBlockCoverage":true},{"functionName":"writeNull","ranges":[{"startOffset":21700,"endOffset":21776,"count":0}],"isBlockCoverage":false},{"functionName":"writeNullTerminatedString","ranges":[{"startOffset":21820,"endOffset":22035,"count":6},{"startOffset":21936,"endOffset":21973,"count":3}],"isBlockCoverage":true},{"functionName":"writeString","ranges":[{"startOffset":22041,"endOffset":22481,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedString","ranges":[{"startOffset":22487,"endOffset":22721,"count":8},{"startOffset":22646,"endOffset":22683,"count":4}],"isBlockCoverage":true},{"functionName":"writeLengthCodedBuffer","ranges":[{"startOffset":22727,"endOffset":22872,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedNumber","ranges":[{"startOffset":22878,"endOffset":23476,"count":12},{"startOffset":22966,"endOffset":23475,"count":0}],"isBlockCoverage":true},{"functionName":"writeDate","ranges":[{"startOffset":23482,"endOffset":24909,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeader","ranges":[{"startOffset":24915,"endOffset":25106,"count":28}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":25112,"endOffset":25202,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":25208,"endOffset":25461,"count":0}],"isBlockCoverage":false},{"functionName":"lengthCodedNumberLength","ranges":[{"startOffset":25474,"endOffset":25663,"count":8},{"startOffset":25547,"endOffset":25662,"count":0}],"isBlockCoverage":true},{"functionName":"lengthCodedStringLength","ranges":[{"startOffset":25676,"endOffset":25861,"count":8}],"isBlockCoverage":true},{"functionName":"MockBuffer","ranges":[{"startOffset":25874,"endOffset":26112,"count":1},{"startOffset":26004,"endOffset":26090,"count":95},{"startOffset":26048,"endOffset":26083,"count":93}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":25907,"endOffset":25922,"count":12}],"isBlockCoverage":true}]},{"scriptId":"688","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":184592,"count":1}],"isBlockCoverage":true}]},{"scriptId":"689","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/long/umd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45554,"count":1},{"startOffset":45405,"endOffset":45418,"count":0},{"startOffset":45420,"endOffset":45460,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45,"endOffset":45364,"count":1},{"startOffset":2325,"endOffset":2362,"count":0},{"startOffset":45351,"endOffset":45360,"count":0}],"isBlockCoverage":true},{"functionName":"Long","ranges":[{"startOffset":2912,"endOffset":3290,"count":9}],"isBlockCoverage":true},{"functionName":"isLong","ranges":[{"startOffset":4669,"endOffset":4745,"count":0}],"isBlockCoverage":false},{"functionName":"ctz32","ranges":[{"startOffset":4854,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"fromInt","ranges":[{"startOffset":5533,"endOffset":6206,"count":6},{"startOffset":5624,"endOffset":5901,"count":2},{"startOffset":5763,"endOffset":5780,"count":0},{"startOffset":5901,"endOffset":6201,"count":4},{"startOffset":5981,"endOffset":6072,"count":3},{"startOffset":6046,"endOffset":6063,"count":0},{"startOffset":6116,"endOffset":6120,"count":1},{"startOffset":6121,"endOffset":6124,"count":3},{"startOffset":6152,"endOffset":6175,"count":3}],"isBlockCoverage":true},{"functionName":"fromNumber","ranges":[{"startOffset":6644,"endOffset":7155,"count":0}],"isBlockCoverage":false},{"functionName":"fromBits","ranges":[{"startOffset":7675,"endOffset":7779,"count":9}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":8563,"endOffset":9939,"count":0}],"isBlockCoverage":false},{"functionName":"fromValue","ranges":[{"startOffset":10590,"endOffset":10925,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":13831,"endOffset":13909,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":14117,"endOffset":14288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14580,"endOffset":15893,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBits","ranges":[{"startOffset":16058,"endOffset":16110,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBitsUnsigned","ranges":[{"startOffset":16288,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBits","ranges":[{"startOffset":16516,"endOffset":16566,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBitsUnsigned","ranges":[{"startOffset":16741,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"getNumBitsAbs","ranges":[{"startOffset":16989,"endOffset":17338,"count":0}],"isBlockCoverage":false},{"functionName":"isZero","ranges":[{"startOffset":17479,"endOffset":17550,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":17870,"endOffset":17943,"count":0}],"isBlockCoverage":false},{"functionName":"isPositive","ranges":[{"startOffset":18096,"endOffset":18169,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":18304,"endOffset":18361,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":18498,"endOffset":18556,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":18761,"endOffset":19015,"count":0}],"isBlockCoverage":false},{"functionName":"notEquals","ranges":[{"startOffset":19483,"endOffset":19571,"count":0}],"isBlockCoverage":false},{"functionName":"lessThan","ranges":[{"startOffset":20317,"endOffset":20409,"count":0}],"isBlockCoverage":false},{"functionName":"lessThanOrEqual","ranges":[{"startOffset":20902,"endOffset":21002,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThan","ranges":[{"startOffset":21796,"endOffset":21891,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThanOrEqual","ranges":[{"startOffset":22399,"endOffset":22502,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":23389,"endOffset":23959,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":24444,"endOffset":24566,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":24952,"endOffset":25773,"count":0}],"isBlockCoverage":false},{"functionName":"subtract","ranges":[{"startOffset":25997,"endOffset":26139,"count":0}],"isBlockCoverage":false},{"functionName":"multiply","ranges":[{"startOffset":26633,"endOffset":28679,"count":0}],"isBlockCoverage":false},{"functionName":"divide","ranges":[{"startOffset":29241,"endOffset":33222,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":33675,"endOffset":34058,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":34692,"endOffset":34773,"count":0}],"isBlockCoverage":false},{"functionName":"countLeadingZeros","ranges":[{"startOffset":34927,"endOffset":35037,"count":0}],"isBlockCoverage":false},{"functionName":"countTrailingZeros","ranges":[{"startOffset":35416,"endOffset":35516,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":35946,"endOffset":36106,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":36308,"endOffset":36467,"count":0}],"isBlockCoverage":false},{"functionName":"xor","ranges":[{"startOffset":36671,"endOffset":36831,"count":0}],"isBlockCoverage":false},{"functionName":"shiftLeft","ranges":[{"startOffset":37066,"endOffset":37388,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRight","ranges":[{"startOffset":37928,"endOffset":38275,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRightUnsigned","ranges":[{"startOffset":38836,"endOffset":39244,"count":0}],"isBlockCoverage":false},{"functionName":"rotateLeft","ranges":[{"startOffset":40117,"endOffset":40680,"count":0}],"isBlockCoverage":false},{"functionName":"rotateRight","ranges":[{"startOffset":41209,"endOffset":41773,"count":0}],"isBlockCoverage":false},{"functionName":"toSigned","ranges":[{"startOffset":42210,"endOffset":42324,"count":0}],"isBlockCoverage":false},{"functionName":"toUnsigned","ranges":[{"startOffset":42473,"endOffset":42587,"count":0}],"isBlockCoverage":false},{"functionName":"toBytes","ranges":[{"startOffset":42844,"endOffset":42925,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesLE","ranges":[{"startOffset":43132,"endOffset":43336,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesBE","ranges":[{"startOffset":43537,"endOffset":43741,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytes","ranges":[{"startOffset":44101,"endOffset":44235,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesLE","ranges":[{"startOffset":44545,"endOffset":44741,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesBE","ranges":[{"startOffset":45045,"endOffset":45241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45431,"endOffset":45458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1398,"count":1}],"isBlockCoverage":true},{"functionName":"exports.decode","ranges":[{"startOffset":171,"endOffset":1035,"count":301},{"startOffset":258,"endOffset":315,"count":300},{"startOffset":315,"endOffset":593,"count":1},{"startOffset":593,"endOffset":903,"count":0},{"startOffset":903,"endOffset":1012,"count":1},{"startOffset":1012,"endOffset":1025,"count":0},{"startOffset":1026,"endOffset":1031,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":1057,"endOffset":1395,"count":48},{"startOffset":1181,"endOffset":1243,"count":0},{"startOffset":1336,"endOffset":1355,"count":0},{"startOffset":1356,"endOffset":1385,"count":0},{"startOffset":1386,"endOffset":1391,"count":0}],"isBlockCoverage":true}]},{"scriptId":"692","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6498,"count":1},{"startOffset":5869,"endOffset":5881,"count":0},{"startOffset":5983,"endOffset":6294,"count":0},{"startOffset":6319,"endOffset":6496,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":456,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":776,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1401,"endOffset":1546,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1794,"endOffset":3550,"count":1},{"startOffset":2193,"endOffset":3547,"count":2},{"startOffset":2277,"endOffset":2290,"count":0},{"startOffset":2390,"endOffset":2496,"count":0},{"startOffset":2512,"endOffset":2849,"count":1},{"startOffset":2630,"endOffset":2664,"count":2},{"startOffset":2865,"endOffset":3399,"count":1},{"startOffset":2969,"endOffset":3001,"count":0},{"startOffset":3415,"endOffset":3529,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3584,"endOffset":3770,"count":1}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3793,"endOffset":4077,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4100,"endOffset":4397,"count":1},{"startOffset":4277,"endOffset":4306,"count":0}],"isBlockCoverage":true},{"functionName":"enableStreamingAPI","ranges":[{"startOffset":4844,"endOffset":5679,"count":1},{"startOffset":4930,"endOffset":4937,"count":0}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":5320,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":5494,"endOffset":5639,"count":0}],"isBlockCoverage":false},{"functionName":"iconv.encodeStream.iconv.decodeStream","ranges":[{"startOffset":6138,"endOffset":6290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":84,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":227,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":413,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":587,"endOffset":722,"count":1}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":760,"endOffset":1074,"count":1},{"startOffset":853,"endOffset":864,"count":0},{"startOffset":896,"endOffset":1029,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1110,"endOffset":1157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3489,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":256,"endOffset":3486,"count":1}],"isBlockCoverage":true},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":419,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":873,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1292,"endOffset":1508,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1559,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":1916,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2344,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2811,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3109,"endOffset":3345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2857,"count":1}],"isBlockCoverage":true}]},{"scriptId":"696","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1875,"endOffset":2242,"count":19},{"startOffset":2011,"endOffset":2239,"count":0}],"isBlockCoverage":true},{"functionName":"ctor.toPacket","ranges":[{"startOffset":2126,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2354,"endOffset":3185,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3260,"endOffset":3683,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3736,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":4185,"endOffset":4769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_next_factor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":952,"count":1}],"isBlockCoverage":true},{"functionName":"AuthNextFactor","ranges":[{"startOffset":147,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":257,"endOffset":638,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":651,"endOffset":911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1093,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequest","ranges":[{"startOffset":203,"endOffset":307,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":313,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":732,"endOffset":1049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_request_more_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequestMoreData","ranges":[{"startOffset":211,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":264,"endOffset":534,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":547,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"verifyMarker","ranges":[{"startOffset":707,"endOffset":774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchResponse","ranges":[{"startOffset":204,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":332,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":586,"endOffset":692,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/binary_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3368,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryRow","ranges":[{"startOffset":172,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":247,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":1582,"endOffset":2020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogDump","ranges":[{"startOffset":329,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":520,"endOffset":980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":783,"count":1}],"isBlockCoverage":true}]},{"scriptId":"704","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3403,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":410,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"serializeToBuffer","ranges":[{"startOffset":1302,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2910,"endOffset":3366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2492,"count":1}],"isBlockCoverage":true}]},{"scriptId":"706","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/auth_41.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2424,"count":1}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":747,"endOffset":963,"count":3},{"startOffset":857,"endOffset":887,"count":1},{"startOffset":903,"endOffset":933,"count":1}],"isBlockCoverage":true},{"functionName":"xor","ranges":[{"startOffset":967,"endOffset":1131,"count":1},{"startOffset":1074,"endOffset":1110,"count":20}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":1157,"endOffset":1375,"count":1},{"startOffset":1224,"endOffset":1259,"count":0}],"isBlockCoverage":true},{"functionName":"exports.calculateTokenFromPasswordSha","ranges":[{"startOffset":1419,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"exports.verifyToken","ranges":[{"startOffset":1849,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"exports.doubleSha1","ranges":[{"startOffset":2104,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"xorRotating","ranges":[{"startOffset":2164,"endOffset":2386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/charset_encodings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3771,"count":1}],"isBlockCoverage":true}]},{"scriptId":"708","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":475,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":147,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":228,"endOffset":434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/column_definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10204,"count":1}],"isBlockCoverage":true},{"functionName":"ColumnDefinition","ranges":[{"startOffset":957,"endOffset":2525,"count":47},{"startOffset":2223,"endOffset":2245,"count":11},{"startOffset":2246,"endOffset":2261,"count":36}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":2531,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2944,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":8464,"endOffset":9354,"count":0}],"isBlockCoverage":false},{"functionName":"get db","ranges":[{"startOffset":9415,"endOffset":9455,"count":0}],"isBlockCoverage":false},{"functionName":"addString","ranges":[{"startOffset":9480,"endOffset":10048,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9568,"endOffset":10038,"count":94},{"startOffset":9772,"endOffset":9794,"count":22},{"startOffset":9795,"endOffset":9810,"count":72}],"isBlockCoverage":true}]},{"scriptId":"710","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6732,"count":1}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":292,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"toParameter","ranges":[{"startOffset":598,"endOffset":2237,"count":0}],"isBlockCoverage":false},{"functionName":"Execute","ranges":[{"startOffset":2260,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":2472,"endOffset":4372,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":4378,"endOffset":6698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true}]},{"scriptId":"712","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4026,"count":1}],"isBlockCoverage":true},{"functionName":"Handshake","ranges":[{"startOffset":248,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"setScrambleData","ranges":[{"startOffset":700,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":969,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":2102,"endOffset":3990,"count":1},{"startOffset":2990,"endOffset":3071,"count":0},{"startOffset":3102,"endOffset":3185,"count":0},{"startOffset":3418,"endOffset":3596,"count":0}],"isBlockCoverage":true}]},{"scriptId":"713","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/handshake_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5198,"count":1}],"isBlockCoverage":true},{"functionName":"HandshakeResponse","ranges":[{"startOffset":274,"endOffset":1284,"count":1},{"startOffset":331,"endOffset":336,"count":0},{"startOffset":378,"endOffset":383,"count":0},{"startOffset":425,"endOffset":430,"count":0},{"startOffset":756,"endOffset":920,"count":0}],"isBlockCoverage":true},{"functionName":"serializeResponse","ranges":[{"startOffset":1290,"endOffset":3167,"count":2},{"startOffset":1918,"endOffset":2140,"count":0},{"startOffset":2491,"endOffset":2496,"count":0},{"startOffset":2628,"endOffset":2848,"count":4},{"startOffset":2945,"endOffset":3135,"count":4}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":1337,"endOffset":1385,"count":8}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":3173,"endOffset":3623,"count":1},{"startOffset":3226,"endOffset":3312,"count":0},{"startOffset":3357,"endOffset":3447,"count":0}],"isBlockCoverage":true},{"functionName":"fromPacket","ranges":[{"startOffset":3634,"endOffset":5154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/prepare_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":827,"count":1}],"isBlockCoverage":true},{"functionName":"PrepareStatement","ranges":[{"startOffset":277,"endOffset":434,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":440,"endOffset":784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/prepared_statement_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":391,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementHeader","ranges":[{"startOffset":52,"endOffset":320,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":271,"endOffset":428,"count":26}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":434,"endOffset":770,"count":26}],"isBlockCoverage":true}]},{"scriptId":"717","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1675,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":321,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":679,"endOffset":1635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/resultset_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4693,"count":1}],"isBlockCoverage":true},{"functionName":"ResultSetHeader","ranges":[{"startOffset":453,"endOffset":4034,"count":23},{"startOffset":800,"endOffset":995,"count":11},{"startOffset":896,"endOffset":973,"count":0},{"startOffset":995,"endOffset":1357,"count":12},{"startOffset":1357,"endOffset":1445,"count":0},{"startOffset":1445,"endOffset":1537,"count":12},{"startOffset":1539,"endOffset":3709,"count":2},{"startOffset":1888,"endOffset":1920,"count":0},{"startOffset":2024,"endOffset":2199,"count":0},{"startOffset":2237,"endOffset":3693,"count":0},{"startOffset":3709,"endOffset":3782,"count":10},{"startOffset":3782,"endOffset":3806,"count":12},{"startOffset":3806,"endOffset":3855,"count":0},{"startOffset":3855,"endOffset":3932,"count":12},{"startOffset":3932,"endOffset":3986,"count":2},{"startOffset":3986,"endOffset":4029,"count":10}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":685,"endOffset":753,"count":24}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":4145,"endOffset":4651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/server_status.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1580,"count":1}],"isBlockCoverage":true}]},{"scriptId":"720","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/encoding_charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":735,"count":1}],"isBlockCoverage":true}]},{"scriptId":"721","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/session_track.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/ssl_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":658,"count":1}],"isBlockCoverage":true},{"functionName":"SSLRequest","ranges":[{"startOffset":144,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":266,"endOffset":621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/text_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1243,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":84,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":159,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":410,"endOffset":1209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":723,"count":1}],"isBlockCoverage":true}]},{"scriptId":"725","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/client_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8760,"count":1}],"isBlockCoverage":true},{"functionName":"flagNames","ranges":[{"startOffset":760,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHandshake","ranges":[{"startOffset":1013,"endOffset":1159,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1165,"endOffset":1232,"count":1}],"isBlockCoverage":true},{"functionName":"sendSSLRequest","ranges":[{"startOffset":1238,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"sendCredentials","ranges":[{"startOffset":1449,"endOffset":2997,"count":1},{"startOffset":1513,"endOffset":1713,"count":0}],"isBlockCoverage":true},{"functionName":"calculateNativePasswordAuthToken","ranges":[{"startOffset":3003,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeInit","ranges":[{"startOffset":3646,"endOffset":6282,"count":1},{"startOffset":3897,"endOffset":4131,"count":0},{"startOffset":4944,"endOffset":5011,"count":0},{"startOffset":5116,"endOffset":5985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3709,"endOffset":3795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5624,"endOffset":5976,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeResult","ranges":[{"startOffset":6288,"endOffset":8720,"count":1},{"startOffset":6529,"endOffset":7885,"count":0},{"startOffset":7909,"endOffset":8244,"count":0},{"startOffset":8476,"endOffset":8629,"count":0},{"startOffset":8661,"endOffset":8697,"count":0}],"isBlockCoverage":true}]},{"scriptId":"726","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1319,"count":1}],"isBlockCoverage":true},{"functionName":"Command","ranges":[{"startOffset":148,"endOffset":205,"count":28}],"isBlockCoverage":true},{"functionName":"stateName","ranges":[{"startOffset":234,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":428,"endOffset":1285,"count":162},{"startOffset":479,"endOffset":556,"count":28},{"startOffset":573,"endOffset":592,"count":134},{"startOffset":594,"endOffset":1020,"count":3},{"startOffset":684,"endOffset":697,"count":0},{"startOffset":729,"endOffset":823,"count":0},{"startOffset":916,"endOffset":993,"count":0},{"startOffset":1020,"endOffset":1203,"count":159},{"startOffset":1203,"endOffset":1232,"count":134},{"startOffset":1232,"endOffset":1284,"count":25}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/server_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6738,"count":1}],"isBlockCoverage":true},{"functionName":"ServerHandshake","ranges":[{"startOffset":264,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":648,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"readClientReply","ranges":[{"startOffset":1091,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"_isStatement","ranges":[{"startOffset":2314,"endOffset":2436,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchCommands","ranges":[{"startOffset":2442,"endOffset":5952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10439,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":522,"endOffset":1163,"count":26}],"isBlockCoverage":true},{"functionName":"Query._unpipeStream","ranges":[{"startOffset":1056,"endOffset":1071,"count":23}],"isBlockCoverage":true},{"functionName":"then","ranges":[{"startOffset":1169,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1892,"endOffset":2414,"count":26},{"startOffset":1955,"endOffset":2065,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":2420,"endOffset":3216,"count":23},{"startOffset":2529,"endOffset":2550,"count":0},{"startOffset":2552,"endOffset":2580,"count":0},{"startOffset":2634,"endOffset":2722,"count":0},{"startOffset":2886,"endOffset":2962,"count":0},{"startOffset":2982,"endOffset":3085,"count":11},{"startOffset":3085,"endOffset":3186,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3010,"endOffset":3074,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3119,"endOffset":3175,"count":12}],"isBlockCoverage":true},{"functionName":"doneInsert","ranges":[{"startOffset":3222,"endOffset":3751,"count":12},{"startOffset":3272,"endOffset":3458,"count":0},{"startOffset":3649,"endOffset":3721,"count":0}],"isBlockCoverage":true},{"functionName":"resultsetHeader","ranges":[{"startOffset":3757,"endOffset":4416,"count":23},{"startOffset":3933,"endOffset":4105,"count":0},{"startOffset":4139,"endOffset":4182,"count":12},{"startOffset":4182,"endOffset":4219,"count":11},{"startOffset":4219,"endOffset":4293,"count":0},{"startOffset":4293,"endOffset":4415,"count":11}],"isBlockCoverage":true},{"functionName":"_streamLocalInfile","ranges":[{"startOffset":4422,"endOffset":6289,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":6295,"endOffset":7711,"count":47},{"startOffset":7024,"endOffset":7339,"count":0},{"startOffset":7432,"endOffset":7667,"count":11},{"startOffset":7667,"endOffset":7710,"count":36}],"isBlockCoverage":true},{"functionName":"fieldsEOF","ranges":[{"startOffset":7717,"endOffset":7891,"count":11},{"startOffset":7793,"endOffset":7864,"count":0}],"isBlockCoverage":true},{"functionName":"row","ranges":[{"startOffset":7970,"endOffset":8733,"count":48},{"startOffset":8022,"endOffset":8295,"count":11},{"startOffset":8172,"endOffset":8261,"count":0},{"startOffset":8295,"endOffset":8454,"count":37},{"startOffset":8454,"endOffset":8548,"count":0},{"startOffset":8548,"endOffset":8629,"count":37},{"startOffset":8629,"endOffset":8695,"count":0},{"startOffset":8695,"endOffset":8732,"count":37}],"isBlockCoverage":true},{"functionName":"infileOk","ranges":[{"startOffset":8739,"endOffset":8872,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":8878,"endOffset":9692,"count":0}],"isBlockCoverage":false},{"functionName":"_setTimeout","ranges":[{"startOffset":9698,"endOffset":9920,"count":26},{"startOffset":9737,"endOffset":9915,"count":0}],"isBlockCoverage":true},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":9926,"endOffset":10358,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/text_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7145,"count":1},{"startOffset":307,"endOffset":339,"count":57}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":343,"endOffset":2722,"count":23},{"startOffset":654,"endOffset":672,"count":0},{"startOffset":766,"endOffset":782,"count":0},{"startOffset":788,"endOffset":805,"count":0},{"startOffset":811,"endOffset":827,"count":5},{"startOffset":833,"endOffset":850,"count":5},{"startOffset":856,"endOffset":928,"count":5},{"startOffset":934,"endOffset":1135,"count":0},{"startOffset":1141,"endOffset":1158,"count":0},{"startOffset":1164,"endOffset":1230,"count":0},{"startOffset":1236,"endOffset":1300,"count":0},{"startOffset":1306,"endOffset":1325,"count":0},{"startOffset":1331,"endOffset":1503,"count":0},{"startOffset":1509,"endOffset":1715,"count":0},{"startOffset":1721,"endOffset":1741,"count":0},{"startOffset":1747,"endOffset":1962,"count":0},{"startOffset":1968,"endOffset":2039,"count":0},{"startOffset":2045,"endOffset":2110,"count":0},{"startOffset":2116,"endOffset":2172,"count":0},{"startOffset":2180,"endOffset":2536,"count":1},{"startOffset":2442,"endOffset":2482,"count":0},{"startOffset":2542,"endOffset":2714,"count":17},{"startOffset":2591,"endOffset":2651,"count":0}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":2726,"endOffset":6977,"count":5},{"startOffset":2884,"endOffset":2930,"count":0},{"startOffset":2936,"endOffset":2983,"count":0},{"startOffset":4397,"endOffset":4577,"count":0},{"startOffset":4730,"endOffset":4798,"count":0},{"startOffset":4947,"endOffset":5245,"count":0},{"startOffset":5357,"endOffset":6623,"count":23},{"startOffset":5537,"endOffset":5650,"count":0},{"startOffset":5689,"endOffset":5884,"count":0},{"startOffset":5915,"endOffset":5968,"count":0},{"startOffset":6060,"endOffset":6132,"count":0},{"startOffset":6413,"endOffset":6548,"count":0},{"startOffset":6725,"endOffset":6844,"count":0},{"startOffset":6892,"endOffset":6941,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":2989,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"getTextParser","ranges":[{"startOffset":6981,"endOffset":7108,"count":11}],"isBlockCoverage":true}]},{"scriptId":"730","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/charsets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10826,"count":1}],"isBlockCoverage":true}]},{"scriptId":"731","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2270,"count":1}],"isBlockCoverage":true},{"functionName":"srcEscape","ranges":[{"startOffset":504,"endOffset":594,"count":23}],"isBlockCoverage":true},{"functionName":"highlightFn","ranges":[{"startOffset":963,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"printDebugWithCode","ranges":[{"startOffset":1298,"endOffset":1500,"count":0}],"isBlockCoverage":false},{"functionName":"typeMatch","ranges":[{"startOffset":1613,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"fieldEscape","ranges":[{"startOffset":2022,"endOffset":2229,"count":23},{"startOffset":2073,"endOffset":2196,"count":0}],"isBlockCoverage":true}]},{"scriptId":"732","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/generate-function/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3391,"count":1},{"startOffset":899,"endOffset":939,"count":50}],"isBlockCoverage":true},{"functionName":"isVariable","ranges":[{"startOffset":960,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":1071,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":1116,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":1169,"endOffset":1217,"count":0}],"isBlockCoverage":false},{"functionName":"genfun","ranges":[{"startOffset":1237,"endOffset":3336,"count":5},{"startOffset":3289,"endOffset":3316,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1319,"endOffset":1441,"count":78},{"startOffset":1394,"endOffset":1408,"count":164}],"isBlockCoverage":true},{"functionName":"pushLine","ranges":[{"startOffset":1462,"endOffset":1863,"count":78},{"startOffset":1520,"endOffset":1561,"count":20},{"startOffset":1563,"endOffset":1635,"count":0},{"startOffset":1685,"endOffset":1741,"count":20},{"startOffset":1741,"endOffset":1784,"count":58},{"startOffset":1784,"endOffset":1840,"count":20},{"startOffset":1840,"endOffset":1862,"count":38}],"isBlockCoverage":true},{"functionName":"line","ranges":[{"startOffset":1880,"endOffset":2216,"count":78},{"startOffset":1911,"endOffset":1922,"count":0},{"startOffset":1984,"endOffset":2126,"count":0}],"isBlockCoverage":true},{"functionName":"line.sym","ranges":[{"startOffset":2280,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"line.property","ranges":[{"startOffset":2450,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"line.toString","ranges":[{"startOffset":2746,"endOffset":2792,"count":5}],"isBlockCoverage":true},{"functionName":"line.toFunction","ranges":[{"startOffset":2816,"endOffset":3261,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2949,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3068,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3137,"endOffset":3184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-property/is-property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11018,"count":1}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":14,"endOffset":10989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/prepare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4196,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementInfo","ranges":[{"startOffset":242,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":482,"endOffset":566,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":572,"endOffset":833,"count":0}],"isBlockCoverage":false},{"functionName":"Prepare","ranges":[{"startOffset":875,"endOffset":1151,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1157,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"prepareHeader","ranges":[{"startOffset":1730,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"readParameter","ranges":[{"startOffset":2169,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":2964,"endOffset":3330,"count":0}],"isBlockCoverage":false},{"functionName":"parametersEOF","ranges":[{"startOffset":3336,"endOffset":3622,"count":0}],"isBlockCoverage":false},{"functionName":"fieldsEOF","ranges":[{"startOffset":3628,"endOffset":3817,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDone","ranges":[{"startOffset":3823,"endOffset":4162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":379,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":149,"endOffset":204,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":210,"endOffset":338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3824,"count":1}],"isBlockCoverage":true},{"functionName":"Execute","ranges":[{"startOffset":250,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"buildParserFromFields","ranges":[{"startOffset":923,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1047,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":1924,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"fieldsEOF","ranges":[{"startOffset":2895,"endOffset":3207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/binary_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7743,"count":1},{"startOffset":365,"endOffset":397,"count":57}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":401,"endOffset":3198,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":3202,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryParser","ranges":[{"startOffset":7573,"endOffset":7704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/field_flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":943,"count":1}],"isBlockCoverage":true}]},{"scriptId":"739","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/ping.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"Ping","ranges":[{"startOffset":316,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":395,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"pingResponse","ranges":[{"startOffset":628,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":139,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":247,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"registerResponse","ranges":[{"startOffset":452,"endOffset":579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3029,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogEventHeader","ranges":[{"startOffset":155,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"BinlogDump","ranges":[{"startOffset":469,"endOffset":564,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":570,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"binlogData","ranges":[{"startOffset":763,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"RotateEvent","ranges":[{"startOffset":1404,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"FormatDescriptionEvent","ranges":[{"startOffset":1663,"endOffset":2050,"count":0}],"isBlockCoverage":false},{"functionName":"QueryEvent","ranges":[{"startOffset":2079,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"XidEvent","ranges":[{"startOffset":2716,"endOffset":2853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2757,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":659,"endOffset":1199,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1203,"endOffset":2512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/quit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":604,"count":1}],"isBlockCoverage":true},{"functionName":"Quit","ranges":[{"startOffset":200,"endOffset":273,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":279,"endOffset":573,"count":1}],"isBlockCoverage":true}]},{"scriptId":"744","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/connection_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9749,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionConfig","ranges":[{"startOffset":1714,"endOffset":7081,"count":1},{"startOffset":1775,"endOffset":1836,"count":0},{"startOffset":1870,"endOffset":2149,"count":0},{"startOffset":2182,"endOffset":2675,"count":5},{"startOffset":2248,"endOffset":2257,"count":0},{"startOffset":2294,"endOffset":2668,"count":0},{"startOffset":2780,"endOffset":2794,"count":0},{"startOffset":2847,"endOffset":2875,"count":0},{"startOffset":2891,"endOffset":2898,"count":0},{"startOffset":3020,"endOffset":3032,"count":0},{"startOffset":3259,"endOffset":3279,"count":0},{"startOffset":3280,"endOffset":3292,"count":0},{"startOffset":3584,"endOffset":3608,"count":0},{"startOffset":4286,"endOffset":4350,"count":0},{"startOffset":4358,"endOffset":4899,"count":0},{"startOffset":5119,"endOffset":5164,"count":0},{"startOffset":5461,"endOffset":5481,"count":0},{"startOffset":5542,"endOffset":5560,"count":0},{"startOffset":5597,"endOffset":5789,"count":0},{"startOffset":5809,"endOffset":6110,"count":0},{"startOffset":6189,"endOffset":6241,"count":0}],"isBlockCoverage":true},{"functionName":"mergeFlags","ranges":[{"startOffset":7094,"endOffset":7861,"count":1},{"startOffset":7387,"endOffset":7543,"count":18},{"startOffset":7449,"endOffset":7478,"count":0},{"startOffset":7529,"endOffset":7535,"count":0},{"startOffset":7662,"endOffset":7691,"count":0},{"startOffset":7746,"endOffset":7775,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultFlags","ranges":[{"startOffset":7874,"endOffset":8531,"count":1},{"startOffset":8347,"endOffset":8401,"count":0}],"isBlockCoverage":true},{"functionName":"getCharsetNumber","ranges":[{"startOffset":8544,"endOffset":8740,"count":0}],"isBlockCoverage":false},{"functionName":"getSSLProfile","ranges":[{"startOffset":8753,"endOffset":9023,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":9036,"endOffset":9706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"PoolConfig","ranges":[{"startOffset":102,"endOffset":853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":121,"endOffset":269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":270,"count":1}],"isBlockCoverage":true},{"functionName":"createConnection","ranges":[{"startOffset":128,"endOffset":230,"count":1}],"isBlockCoverage":true}]},{"scriptId":"748","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":104,"endOffset":192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"createPoolCluster","ranges":[{"startOffset":70,"endOffset":144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5874,"count":1}],"isBlockCoverage":true},{"functionName":"PromiseConnection","ranges":[{"startOffset":365,"endOffset":631,"count":1},{"startOffset":485,"endOffset":495,"count":0}],"isBlockCoverage":true},{"functionName":"release","ranges":[{"startOffset":637,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":691,"endOffset":1186,"count":26},{"startOffset":820,"endOffset":931,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":961,"endOffset":1179,"count":26},{"startOffset":1076,"endOffset":1125,"count":23},{"startOffset":1125,"endOffset":1172,"count":3}],"isBlockCoverage":true},{"functionName":"execute","ranges":[{"startOffset":1192,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1699,"endOffset":1801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1736,"endOffset":1794,"count":1}],"isBlockCoverage":true},{"functionName":"beginTransaction","ranges":[{"startOffset":1807,"endOffset":2052,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":2058,"endOffset":2283,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":2289,"endOffset":2518,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":2524,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":3024,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":3538,"endOffset":4250,"count":0}],"isBlockCoverage":false},{"functionName":"changeUser","ranges":[{"startOffset":4256,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"get config","ranges":[{"startOffset":4780,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":4841,"endOffset":4900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5100,"endOffset":5653,"count":1},{"startOffset":5164,"endOffset":5193,"count":11},{"startOffset":5200,"endOffset":5650,"count":10},{"startOffset":5312,"endOffset":5369,"count":9},{"startOffset":5377,"endOffset":5645,"count":9},{"startOffset":5650,"endOffset":5652,"count":10}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":5423,"endOffset":5630,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5468,"endOffset":5620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/prepared_statement_info.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":726,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePreparedStatementInfo","ranges":[{"startOffset":109,"endOffset":217,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":223,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":555,"endOffset":671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/make_done_cb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1}],"isBlockCoverage":true},{"functionName":"makeDoneCb","ranges":[{"startOffset":17,"endOffset":433,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76,"endOffset":429,"count":26},{"startOffset":121,"endOffset":378,"count":3},{"startOffset":378,"endOffset":424,"count":23}],"isBlockCoverage":true}]},{"scriptId":"753","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/inherit_events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":781,"count":1}],"isBlockCoverage":true},{"functionName":"inheritEvents","ranges":[{"startOffset":17,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":494,"count":1},{"startOffset":184,"endOffset":219,"count":0},{"startOffset":221,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"source.on.listeners.<computed>","ranges":[{"startOffset":300,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":523,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3088,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePool","ranges":[{"startOffset":332,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":535,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":875,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":993,"endOffset":1489,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":1495,"endOffset":1983,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1989,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2493,"endOffset":2976,"count":1},{"startOffset":2557,"endOffset":2586,"count":4},{"startOffset":2593,"endOffset":2975,"count":3}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":2798,"endOffset":2953,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2843,"endOffset":2943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePoolConnection","ranges":[{"startOffset":200,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":286,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9724,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2806,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3168,"endOffset":3698,"count":1},{"startOffset":3219,"endOffset":3305,"count":0},{"startOffset":3590,"endOffset":3611,"count":0},{"startOffset":3613,"endOffset":3695,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":3808,"endOffset":6951,"count":1},{"startOffset":4086,"endOffset":4134,"count":0},{"startOffset":4173,"endOffset":4303,"count":0},{"startOffset":4367,"endOffset":4533,"count":0},{"startOffset":4784,"endOffset":5107,"count":0},{"startOffset":5262,"endOffset":5395,"count":0},{"startOffset":5429,"endOffset":5564,"count":0},{"startOffset":5590,"endOffset":5806,"count":0},{"startOffset":5872,"endOffset":6096,"count":0},{"startOffset":6258,"endOffset":6268,"count":0},{"startOffset":6342,"endOffset":6383,"count":0},{"startOffset":6419,"endOffset":6460,"count":0},{"startOffset":6557,"endOffset":6660,"count":0},{"startOffset":6688,"endOffset":6933,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":7103,"endOffset":7461,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":7467,"endOffset":8298,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":8457,"endOffset":8762,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9577,"endOffset":9710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2889,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":661,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1136,"endOffset":2092,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1172,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2361,"endOffset":2848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1},{"startOffset":586,"endOffset":754,"count":9},{"startOffset":656,"endOffset":751,"count":416}],"isBlockCoverage":true}]},{"scriptId":"759","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6505,"count":1},{"startOffset":1630,"endOffset":1674,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":595,"endOffset":1222,"count":1},{"startOffset":771,"endOffset":808,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1660,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1680,"endOffset":1775,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.write","ranges":[{"startOffset":1813,"endOffset":1944,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.end","ranges":[{"startOffset":1980,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder","ranges":[{"startOffset":2147,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":2257,"endOffset":2315,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2351,"endOffset":2366,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2510,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2629,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2904,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":3094,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":3187,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":4065,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":4220,"endOffset":4395,"count":1}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4438,"endOffset":6342,"count":1},{"startOffset":4595,"endOffset":6247,"count":6},{"startOffset":4718,"endOffset":4843,"count":0},{"startOffset":4969,"endOffset":5376,"count":0},{"startOffset":5387,"endOffset":6240,"count":0}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":6383,"endOffset":6503,"count":1},{"startOffset":6452,"endOffset":6483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"760","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10301,"count":1}],"isBlockCoverage":true},{"functionName":"Utf32Codec","ranges":[{"startOffset":184,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder","ranges":[{"startOffset":610,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.write","ranges":[{"startOffset":745,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.end","ranges":[{"startOffset":2669,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder","ranges":[{"startOffset":3053,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.write","ranges":[{"startOffset":3250,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"_writeCodepoint","ranges":[{"startOffset":4928,"endOffset":5719,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.end","ranges":[{"startOffset":5753,"endOffset":5799,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoCodec","ranges":[{"startOffset":6291,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder","ranges":[{"startOffset":6492,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.write","ranges":[{"startOffset":6774,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.end","ranges":[{"startOffset":6867,"endOffset":6914,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder","ranges":[{"startOffset":6937,"endOffset":7133,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.write","ranges":[{"startOffset":7172,"endOffset":7982,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.end","ranges":[{"startOffset":8020,"endOffset":8591,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":8596,"endOffset":10299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5699,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":262,"endOffset":290,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":457,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":524,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":751,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":790,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":886,"endOffset":1391,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1426,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":2024,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2227,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2470,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2558,"endOffset":2605,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2629,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2858,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3708,"endOffset":4277,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":4281,"endOffset":5693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9573,"count":1},{"startOffset":1392,"endOffset":1450,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":319,"endOffset":388,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":604,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":710,"endOffset":1094,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1126,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1165,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1592,"endOffset":3459,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3491,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4296,"endOffset":4369,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4542,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4755,"endOffset":6480,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6516,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":7014,"endOffset":7146,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7274,"endOffset":9280,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":9316,"endOffset":9567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2263,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":255,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1330,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1444,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1653,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1674,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1788,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2246,"endOffset":2261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4628,"count":1}],"isBlockCoverage":true}]},{"scriptId":"765","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19315,"count":1}],"isBlockCoverage":true}]},{"scriptId":"766","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23662,"count":1},{"startOffset":539,"endOffset":571,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":635,"endOffset":6320,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":6475,"endOffset":7274,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":7318,"endOffset":9593,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":9656,"endOffset":9929,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":9970,"endOffset":10328,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":10373,"endOffset":11587,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":11630,"endOffset":12759,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":12851,"endOffset":13178,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":13212,"endOffset":18267,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":18299,"endOffset":19234,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":19391,"endOffset":19711,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":19745,"endOffset":22720,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":22752,"endOffset":23253,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":23333,"endOffset":23658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9574,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2605,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3111,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4082,"endOffset":4134,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4297,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4836,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4951,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5395,"endOffset":5447,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7976,"endOffset":8028,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8232,"endOffset":8328,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/eventRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7593,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":315,"endOffset":7589,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":588,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":658,"endOffset":2537,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":720,"endOffset":845,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":887,"endOffset":1077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1141,"endOffset":1393,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":1173,"endOffset":1222,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1433,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":1688,"endOffset":1737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":2061,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":2244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2308,"endOffset":2530,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2340,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2564,"endOffset":7584,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2623,"endOffset":2748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2801,"endOffset":3107,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3161,"endOffset":3471,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3510,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3940,"endOffset":4351,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":3972,"endOffset":4021,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4391,"endOffset":4506,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4571,"endOffset":4788,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":4603,"endOffset":4652,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4829,"endOffset":4959,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5013,"endOffset":5135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5190,"endOffset":5313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5378,"endOffset":5597,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":5410,"endOffset":5459,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5645,"endOffset":5978,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6026,"endOffset":6366,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6421,"endOffset":6741,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6797,"endOffset":7219,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":6829,"endOffset":6878,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7259,"endOffset":7392,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7451,"endOffset":7577,"count":1}],"isBlockCoverage":true}]},{"scriptId":"769","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/eventRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7013,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":148,"endOffset":811,"count":3},{"startOffset":308,"endOffset":388,"count":1},{"startOffset":388,"endOffset":497,"count":2},{"startOffset":497,"endOffset":680,"count":0},{"startOffset":680,"endOffset":808,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":860,"endOffset":1115,"count":2},{"startOffset":952,"endOffset":1112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1150,"endOffset":1715,"count":3},{"startOffset":1228,"endOffset":1299,"count":1},{"startOffset":1299,"endOffset":1393,"count":2},{"startOffset":1393,"endOffset":1506,"count":1},{"startOffset":1506,"endOffset":1582,"count":0},{"startOffset":1582,"endOffset":1712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1781,"endOffset":3210,"count":5},{"startOffset":1983,"endOffset":1998,"count":4},{"startOffset":1999,"endOffset":2011,"count":4},{"startOffset":2012,"endOffset":2023,"count":4},{"startOffset":2024,"endOffset":2038,"count":4},{"startOffset":2039,"endOffset":2072,"count":4},{"startOffset":2073,"endOffset":2095,"count":4},{"startOffset":2097,"endOffset":2195,"count":2},{"startOffset":2195,"endOffset":2426,"count":3},{"startOffset":2426,"endOffset":2526,"count":1},{"startOffset":2526,"endOffset":2761,"count":2},{"startOffset":2761,"endOffset":2991,"count":1},{"startOffset":2984,"endOffset":2991,"count":0},{"startOffset":2991,"endOffset":3077,"count":0},{"startOffset":3077,"endOffset":3207,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3238,"endOffset":4120,"count":2},{"startOffset":3955,"endOffset":4117,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4155,"endOffset":4579,"count":2},{"startOffset":4304,"endOffset":4576,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4613,"endOffset":5543,"count":4},{"startOffset":4691,"endOffset":5271,"count":2},{"startOffset":5271,"endOffset":5378,"count":1},{"startOffset":5378,"endOffset":5410,"count":0},{"startOffset":5410,"endOffset":5540,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5577,"endOffset":6981,"count":4},{"startOffset":6038,"endOffset":6141,"count":1},{"startOffset":6141,"endOffset":6391,"count":3},{"startOffset":6391,"endOffset":6544,"count":2},{"startOffset":6544,"endOffset":6781,"count":1},{"startOffset":6765,"endOffset":6781,"count":0},{"startOffset":6781,"endOffset":6848,"count":1},{"startOffset":6848,"endOffset":6978,"count":2}],"isBlockCoverage":true}]},{"scriptId":"770","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/notificationRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2316,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":350,"endOffset":2312,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":441,"endOffset":791,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":830,"endOffset":1182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":887,"endOffset":1175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1731,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1293,"endOffset":1724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1661,"endOffset":1715,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1777,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1835,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2111,"endOffset":2300,"count":1}],"isBlockCoverage":true}]},{"scriptId":"771","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/notificationRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":372,"endOffset":418,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":484,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":537,"endOffset":567,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":694,"endOffset":1010,"count":2},{"startOffset":834,"endOffset":1007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":794,"endOffset":810,"count":2}],"isBlockCoverage":true}]},{"scriptId":"772","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/profileRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3399,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":436,"endOffset":3395,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":458,"endOffset":563,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":653,"endOffset":1179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1989,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2048,"endOffset":2490,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2523,"endOffset":3390,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2583,"endOffset":2766,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2816,"endOffset":3383,"count":1}],"isBlockCoverage":true}]},{"scriptId":"773","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/profileRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3931,"count":1}],"isBlockCoverage":true},{"functionName":"isValidDate","ranges":[{"startOffset":214,"endOffset":289,"count":6}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":339,"endOffset":545,"count":8},{"startOffset":416,"endOffset":444,"count":7},{"startOffset":446,"endOffset":514,"count":1},{"startOffset":514,"endOffset":544,"count":7}],"isBlockCoverage":true},{"functionName":"validateProfile","ranges":[{"startOffset":600,"endOffset":3174,"count":4},{"startOffset":882,"endOffset":913,"count":3},{"startOffset":915,"endOffset":991,"count":1},{"startOffset":991,"endOffset":1103,"count":3},{"startOffset":1030,"endOffset":1103,"count":0},{"startOffset":1219,"endOffset":1263,"count":1},{"startOffset":1321,"endOffset":1466,"count":0},{"startOffset":1560,"endOffset":1596,"count":0},{"startOffset":1836,"endOffset":1890,"count":1},{"startOffset":1986,"endOffset":2060,"count":0},{"startOffset":2111,"endOffset":2167,"count":1},{"startOffset":2225,"endOffset":2280,"count":1},{"startOffset":2280,"endOffset":2460,"count":3},{"startOffset":2522,"endOffset":2556,"count":3},{"startOffset":2558,"endOffset":2623,"count":1},{"startOffset":2722,"endOffset":2802,"count":0},{"startOffset":3082,"endOffset":3173,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2308,"endOffset":2453,"count":5},{"startOffset":2366,"endOffset":2446,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2836,"endOffset":3033,"count":6},{"startOffset":2914,"endOffset":3026,"count":1}],"isBlockCoverage":true},{"functionName":"saveProfile","ranges":[{"startOffset":3211,"endOffset":3274,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3346,"endOffset":3628,"count":4},{"startOffset":3452,"endOffset":3627,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3694,"endOffset":3842,"count":2},{"startOffset":3731,"endOffset":3839,"count":1}],"isBlockCoverage":true}]},{"scriptId":"774","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/userRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3351,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":301,"endOffset":3347,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434,"endOffset":902,"count":1},{"startOffset":837,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":933,"endOffset":1221,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":982,"endOffset":1214,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1161,"endOffset":1193,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1259,"endOffset":1960,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1306,"endOffset":1679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1758,"endOffset":1953,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2018,"endOffset":3096,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2062,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2164,"endOffset":2246,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2306,"endOffset":2680,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2401,"endOffset":2455,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":3089,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2828,"endOffset":2882,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3182,"endOffset":3342,"count":1}],"isBlockCoverage":true}]},{"scriptId":"775","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/userRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":458,"count":2},{"startOffset":297,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":522,"endOffset":862,"count":3},{"startOffset":648,"endOffset":723,"count":2},{"startOffset":723,"endOffset":859,"count":1}],"isBlockCoverage":true}]},{"scriptId":"776","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/volunteeraddRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":3049,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":499,"endOffset":777,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813,"endOffset":1146,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":867,"endOffset":1139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1188,"endOffset":2231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1248,"endOffset":1526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1589,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1941,"endOffset":2224,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2301,"endOffset":3044,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2363,"endOffset":2768,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2828,"endOffset":3037,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3061,"endOffset":3135,"count":1}],"isBlockCoverage":true}]},{"scriptId":"777","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/volunteeraddRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":382,"endOffset":425,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":519,"endOffset":1008,"count":4},{"startOffset":612,"endOffset":643,"count":3},{"startOffset":644,"endOffset":672,"count":3},{"startOffset":674,"endOffset":1007,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":849,"endOffset":922,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1144,"endOffset":1617,"count":2},{"startOffset":1420,"endOffset":1616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1321,"endOffset":1396,"count":5},{"startOffset":1358,"endOffset":1396,"count":1}],"isBlockCoverage":true}]},{"scriptId":"778","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":false}]},{"scriptId":"779","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10437,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1899,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3666,"endOffset":3741,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3745,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4576,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4823,"endOffset":5003,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5022,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6694,"endOffset":6759,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6784,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7270,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7450,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7571,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7706,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9316,"endOffset":9608,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9767,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9939,"endOffset":10045,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10151,"endOffset":10314,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10346,"endOffset":10434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3592,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":392,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1401,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2096,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2520,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2996,"endOffset":3589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":179,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":676,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1156,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":209,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":736,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":921,"endOffset":1153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1436,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":294,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1051,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1143,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1257,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1384,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":732,"count":1},{"startOffset":562,"endOffset":730,"count":8},{"startOffset":632,"endOffset":727,"count":408}],"isBlockCoverage":true}]},{"scriptId":"785","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6301,"count":1},{"startOffset":1630,"endOffset":1674,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":595,"endOffset":1222,"count":1},{"startOffset":771,"endOffset":808,"count":0},{"startOffset":845,"endOffset":1219,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1660,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1680,"endOffset":1767,"count":29}],"isBlockCoverage":true},{"functionName":"InternalEncoder","ranges":[{"startOffset":1943,"endOffset":2015,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":2053,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2147,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2306,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2425,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2700,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2890,"endOffset":2940,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":2983,"endOffset":3820,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3861,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":4016,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4234,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":6179,"endOffset":6299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5188,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":262,"endOffset":290,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":457,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":524,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":751,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":790,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":886,"endOffset":1391,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1426,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1995,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2198,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2441,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2529,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2600,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2831,"endOffset":3516,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3549,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":3966,"endOffset":5182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9505,"count":1},{"startOffset":1392,"endOffset":1450,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":319,"endOffset":388,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":604,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":710,"endOffset":1094,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1126,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1165,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1592,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3457,"endOffset":3708,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4262,"endOffset":4335,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4508,"endOffset":4683,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4721,"endOffset":6446,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6482,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6980,"endOffset":7112,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7240,"endOffset":9212,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":9248,"endOffset":9499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2263,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":255,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1330,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1444,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1653,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1674,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1788,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2246,"endOffset":2261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4358,"count":1}],"isBlockCoverage":true}]},{"scriptId":"790","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19315,"count":1}],"isBlockCoverage":true}]},{"scriptId":"791","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21970,"count":1},{"startOffset":539,"endOffset":571,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":635,"endOffset":5407,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":5562,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":6404,"endOffset":8679,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":8742,"endOffset":9015,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":9056,"endOffset":9414,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":9459,"endOffset":10673,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":10716,"endOffset":11303,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":11395,"endOffset":11722,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":11756,"endOffset":16574,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":16606,"endOffset":17541,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":17698,"endOffset":18029,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":18063,"endOffset":21055,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":21087,"endOffset":21554,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":21634,"endOffset":21966,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8464,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2605,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3111,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4082,"endOffset":4134,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4297,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4836,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4951,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5395,"endOffset":5447,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7976,"endOffset":8028,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8232,"endOffset":8328,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":517,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":7}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":510,"count":3}],"isBlockCoverage":true}]},{"scriptId":"794","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":379,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":366,"count":3}],"isBlockCoverage":true}]},{"scriptId":"795","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":762,"count":21}],"isBlockCoverage":true}]},{"scriptId":"796","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":447,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":433,"count":10}],"isBlockCoverage":true}]}],"timestamp":272801.794772,"source-map-cache":{"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/index.js":{"lineLengths":[26,14,1,47,14,4,41,20,24,29,4,4,46,20,24,33,4,4,46,20,24,28,4,4,55,20,24,37,4,4,46,20,24,28,4,4,53,20,24,35,4,4,50,20,24,36,4,4,44,20,24,25,4,4,45,20,24,27,4,4,49,20,24,31,4,4,47,20,24,30,4,4,47,20,24,30,4,4,49,20,24,32,4,4,47,20,24,30,4,4,42,20,24,25,4,4,49,20,24,34,4,4,52,20,24,36,4,4,56,20,24,40,4,4,48,20,24,32,4,4,48,20,24,32,4,4,56,20,24,37,4,4,56,20,24,37,4,4,1,24,4,26,55,24,2,1,4,26,41,24,2,1,4,26,31,24,2,1,4,26,31,24,2,1,4,26,39,24,2,1,4,26,29,24,2,1,4,26,31,24,2,1,4,26,33,24,2,1,4,26,34,24,2,1,4,26,34,24,2,1,4,26,34,24,2,1,4,26,38,24,2,1,4,26,36,24,2,1,4,26,32,24,2,1,4,26,32,24,2,1,124,1,24,3177,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/base.js":{"lineLengths":[26,14,1,47,14,4,27,1,24,19,1,19,28,1,26,46,30,26,1,8,28,86,37,1,41,26,20,6,1,28,21,1,27,22,33,38,15,21,15,22,8,64,1,1,43,43,60,60,35,35,24,41,1,33,70,6,1,27,30,24,28,92,61,22,18,31,77,1,75,1,68,49,21,37,32,11,81,78,80,64,78,51,64,77,23,80,79,75,80,79,72,78,60,1,1,43,128,1,32,158,23,34,15,32,10,53,50,1,26,73,50,10,1,28,1,23,59,61,76,10,1,70,1,37,51,46,20,82,81,58,78,65,1,1,78,66,17,69,10,1,83,1,69,70,110,17,45,1,47,87,12,1,38,87,12,10,8,1,20,90,87,87,47,1,1,20,25,33,80,31,12,1,35,20,12,15,12,13,81,36,1,19,22,10,8,6,5,1,28,1,26,67,35,1,68,15,41,25,33,24,28,52,10,9,13,15,41,25,20,24,28,34,10,9,6,5,1,28,1,26,88,35,35,34,40,25,1,118,16,16,21,6,1,23,33,28,50,9,6,1,30,19,5,1,28,1,26,41,35,51,13,102,6,5,1,28,1,26,45,18,1,45,22,28,8,6,1,16,5,1,28,1,26,41,18,5,1,28,1,26,39,28,5,1,28,1,26,31,27,4,3,1,83,75,31,23,21,1,26,36,53,44,35,4,1,24,24,40,18,18,1,56,46,1,30,49,71,48,48,68,12,44,15,88,8,1,48,1,30,35,8,13,86,114,90,64,1,64,48,65,40,8,6,79,84,45,1,1,53,1,163,64,22,4,1,21,2,27109,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","Math","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","Date","now","bestPath","oldPos","lastComponent","newPos","extractCommon","join","count","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","buildValues","useLongestToken","exec","ret","path","added","removed","oldPosInc","last","previousComponent","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","push","split","chars","components","nextComponent","reverse","componentPos","componentLen","component","slice","map","oldValue","tmp","finalComponent","pop"],"mappings":";;;;;;;;;AAAe,SAASA,IAAT,GAAgB,CAAE;;AAEjCA,IAAI,CAACC,SAAL,GAAiB;AAAA;;AAAA;AACfC,EAAAA,IADe,gBACVC,SADU,EACCC,SADD,EAC0B;AAAA;AAAA;;AAAA;AAAA;AAAdC,IAAAA,OAAc,uEAAJ,EAAI;AACvC,QAAIC,QAAQ,GAAGD,OAAO,CAACC,QAAvB;;AACA,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,SAAKA,OAAL,GAAeA,OAAf;AAEA,QAAIE,IAAI,GAAG,IAAX;;AAEA,aAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,UAAIH,QAAJ,EAAc;AACZI,QAAAA,UAAU,CAAC,YAAW;AAAEJ,UAAAA,QAAQ,CAACK,SAAD,EAAYF,KAAZ,CAAR;AAA6B,SAA3C,EAA6C,CAA7C,CAAV;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAOA,KAAP;AACD;AACF,KAjBsC,CAmBvC;;;AACAN,IAAAA,SAAS,GAAG,KAAKS,SAAL,CAAeT,SAAf,CAAZ;AACAC,IAAAA,SAAS,GAAG,KAAKQ,SAAL,CAAeR,SAAf,CAAZ;AAEAD,IAAAA,SAAS,GAAG,KAAKU,WAAL,CAAiB,KAAKC,QAAL,CAAcX,SAAd,CAAjB,CAAZ;AACAC,IAAAA,SAAS,GAAG,KAAKS,WAAL,CAAiB,KAAKC,QAAL,CAAcV,SAAd,CAAjB,CAAZ;AAEA,QAAIW,MAAM,GAAGX,SAAS,CAACY,MAAvB;AAAA,QAA+BC,MAAM,GAAGd,SAAS,CAACa,MAAlD;AACA,QAAIE,UAAU,GAAG,CAAjB;AACA,QAAIC,aAAa,GAAGJ,MAAM,GAAGE,MAA7B;;AACA,QAAGZ,OAAO,CAACc,aAAX,EAA0B;AACxBA,MAAAA,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASF,aAAT,EAAwBd,OAAO,CAACc,aAAhC,CAAhB;AACD;;AACD,QAAMG,gBAAgB;AAAA;AAAA;AAAA;AAAGjB,IAAAA,OAAO,CAACkB,OAAX,+DAAsBC,QAA5C;AACA,QAAMC,mBAAmB,GAAGC,IAAI,CAACC,GAAL,KAAaL,gBAAzC;AAEA,QAAIM,QAAQ,GAAG,CAAC;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAAX;AAAcC,MAAAA,aAAa,EAAEnB;AAA7B,KAAD,CAAf,CAnCuC,CAqCvC;;AACA,QAAIoB,MAAM,GAAG,KAAKC,aAAL,CAAmBJ,QAAQ,CAAC,CAAD,CAA3B,EAAgCxB,SAAhC,EAA2CD,SAA3C,EAAsD,CAAtD,CAAb;;AACA,QAAIyB,QAAQ,CAAC,CAAD,CAAR,CAAYC,MAAZ,GAAqB,CAArB,IAA0BZ,MAA1B,IAAoCc,MAAM,GAAG,CAAT,IAAchB,MAAtD,EAA8D;AAC5D;AACA,aAAOP,IAAI,CAAC,CAAC;AAACC,QAAAA,KAAK,EAAE,KAAKwB,IAAL,CAAU7B,SAAV,CAAR;AAA8B8B,QAAAA,KAAK,EAAE9B,SAAS,CAACY;AAA/C,OAAD,CAAD,CAAX;AACD,KA1CsC,CA4CvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAImB,qBAAqB,GAAG,CAACX,QAA7B;AAAA,QAAuCY,qBAAqB,GAAGZ,QAA/D,CA7DuC,CA+DvC;;AACA,aAASa,cAAT,GAA0B;AACxB,WACE,IAAIC,YAAY,GAAGlB,IAAI,CAACmB,GAAL,CAASJ,qBAAT,EAAgC,CAACjB,UAAjC,CADrB,EAEEoB,YAAY,IAAIlB,IAAI,CAACC,GAAL,CAASe,qBAAT,EAAgClB,UAAhC,CAFlB,EAGEoB,YAAY,IAAI,CAHlB,EAIE;AACA,YAAIE,QAAQ;AAAA;AAAA;AAAZ;AAAA;AACA,YAAIC,UAAU,GAAGb,QAAQ,CAACU,YAAY,GAAG,CAAhB,CAAzB;AAAA,YACII,OAAO,GAAGd,QAAQ,CAACU,YAAY,GAAG,CAAhB,CADtB;;AAEA,YAAIG,UAAJ,EAAgB;AACd;AACAb,UAAAA,QAAQ,CAACU,YAAY,GAAG,CAAhB,CAAR,GAA6B3B,SAA7B;AACD;;AAED,YAAIgC,MAAM,GAAG,KAAb;;AACA,YAAID,OAAJ,EAAa;AACX;AACA,cAAME,aAAa,GAAGF,OAAO,CAACb,MAAR,GAAiBS,YAAvC;AACAK,UAAAA,MAAM,GAAGD,OAAO,IAAI,KAAKE,aAAhB,IAAiCA,aAAa,GAAG7B,MAA1D;AACD;;AAED,YAAI8B,SAAS,GAAGJ,UAAU,IAAIA,UAAU,CAACZ,MAAX,GAAoB,CAApB,GAAwBZ,MAAtD;;AACA,YAAI,CAAC0B,MAAD,IAAW,CAACE,SAAhB,EAA2B;AACzB;AACAjB,UAAAA,QAAQ,CAACU,YAAD,CAAR,GAAyB3B,SAAzB;AACA;AACD,SArBD,CAuBA;AACA;AACA;AACA;AACA;;;AACA,YAAI,CAACkC,SAAD,IAAeF,MAAM,IAAIF,UAAU,CAACZ,MAAX,GAAoB,CAApB,GAAwBa,OAAO,CAACb,MAA7D,EAAsE;AACpEW,UAAAA,QAAQ,GAAGjC,IAAI,CAACuC,SAAL,CAAeJ,OAAf,EAAwB,IAAxB,EAA8B/B,SAA9B,EAAyC,CAAzC,CAAX;AACD,SAFD,MAEO;AACL6B,UAAAA,QAAQ,GAAGjC,IAAI,CAACuC,SAAL,CAAeL,UAAf,EAA2B9B,SAA3B,EAAsC,IAAtC,EAA4C,CAA5C,CAAX;AACD;;AAEDoB,QAAAA,MAAM,GAAGxB,IAAI,CAACyB,aAAL,CAAmBQ,QAAnB,EAA6BpC,SAA7B,EAAwCD,SAAxC,EAAmDmC,YAAnD,CAAT;;AAEA,YAAIE,QAAQ,CAACX,MAAT,GAAkB,CAAlB,IAAuBZ,MAAvB,IAAiCc,MAAM,GAAG,CAAT,IAAchB,MAAnD,EAA2D;AACzD;AACA,iBAAOP,IAAI,CAACuC,WAAW,CAACxC,IAAD,EAAOiC,QAAQ,CAACV,aAAhB,EAA+B1B,SAA/B,EAA0CD,SAA1C,EAAqDI,IAAI,CAACyC,eAA1D,CAAZ,CAAX;AACD,SAHD,MAGO;AACLpB,UAAAA,QAAQ,CAACU,YAAD,CAAR,GAAyBE,QAAzB;;AACA,cAAIA,QAAQ,CAACX,MAAT,GAAkB,CAAlB,IAAuBZ,MAA3B,EAAmC;AACjCmB,YAAAA,qBAAqB,GAAGhB,IAAI,CAACC,GAAL,CAASe,qBAAT,EAAgCE,YAAY,GAAG,CAA/C,CAAxB;AACD;;AACD,cAAIP,MAAM,GAAG,CAAT,IAAchB,MAAlB,EAA0B;AACxBoB,YAAAA,qBAAqB,GAAGf,IAAI,CAACmB,GAAL,CAASJ,qBAAT,EAAgCG,YAAY,GAAG,CAA/C,CAAxB;AACD;AACF;AACF;;AAEDpB,MAAAA,UAAU;AACX,KAxHsC,CA0HvC;AACA;AACA;AACA;;;AACA,QAAIZ,QAAJ,EAAc;AACX,gBAAS2C,IAAT,GAAgB;AACfvC,QAAAA,UAAU,CAAC,YAAW;AACpB,cAAIQ,UAAU,GAAGC,aAAb,IAA8BO,IAAI,CAACC,GAAL,KAAaF,mBAA/C,EAAoE;AAClE,mBAAOnB,QAAQ,EAAf;AACD;;AAED,cAAI,CAAC+B,cAAc,EAAnB,EAAuB;AACrBY,YAAAA,IAAI;AACL;AACF,SARS,EAQP,CARO,CAAV;AASD,OAVA,GAAD;AAWD,KAZD,MAYO;AACL,aAAO/B,UAAU,IAAIC,aAAd,IAA+BO,IAAI,CAACC,GAAL,MAAcF,mBAApD,EAAyE;AACvE,YAAIyB,GAAG,GAAGb,cAAc,EAAxB;;AACA,YAAIa,GAAJ,EAAS;AACP,iBAAOA,GAAP;AACD;AACF;AACF;AACF,GAnJc;;AAAA;;AAAA;AAqJfJ,EAAAA,SArJe,qBAqJLK,IArJK,EAqJCC,KArJD,EAqJQC,OArJR,EAqJiBC,SArJjB,EAqJ4B;AACzC,QAAIC,IAAI,GAAGJ,IAAI,CAACrB,aAAhB;;AACA,QAAIyB,IAAI,IAAIA,IAAI,CAACH,KAAL,KAAeA,KAAvB,IAAgCG,IAAI,CAACF,OAAL,KAAiBA,OAArD,EAA8D;AAC5D,aAAO;AACLxB,QAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAAL,GAAcyB,SADjB;AAELxB,QAAAA,aAAa,EAAE;AAACI,UAAAA,KAAK,EAAEqB,IAAI,CAACrB,KAAL,GAAa,CAArB;AAAwBkB,UAAAA,KAAK,EAAEA,KAA/B;AAAsCC,UAAAA,OAAO,EAAEA,OAA/C;AAAwDG,UAAAA,iBAAiB,EAAED,IAAI,CAACC;AAAhF;AAFV,OAAP;AAID,KALD,MAKO;AACL,aAAO;AACL3B,QAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAAL,GAAcyB,SADjB;AAELxB,QAAAA,aAAa,EAAE;AAACI,UAAAA,KAAK,EAAE,CAAR;AAAWkB,UAAAA,KAAK,EAAEA,KAAlB;AAAyBC,UAAAA,OAAO,EAAEA,OAAlC;AAA2CG,UAAAA,iBAAiB,EAAED;AAA9D;AAFV,OAAP;AAID;AACF,GAlKc;;AAAA;;AAAA;AAmKfvB,EAAAA,aAnKe,yBAmKDQ,QAnKC,EAmKSpC,SAnKT,EAmKoBD,SAnKpB,EAmK+BmC,YAnK/B,EAmK6C;AAC1D,QAAIvB,MAAM,GAAGX,SAAS,CAACY,MAAvB;AAAA,QACIC,MAAM,GAAGd,SAAS,CAACa,MADvB;AAAA,QAEIa,MAAM,GAAGW,QAAQ,CAACX,MAFtB;AAAA,QAGIE,MAAM,GAAGF,MAAM,GAAGS,YAHtB;AAAA,QAKImB,WAAW,GAAG,CALlB;;AAMA,WAAO1B,MAAM,GAAG,CAAT,GAAahB,MAAb,IAAuBc,MAAM,GAAG,CAAT,GAAaZ,MAApC,IAA8C,KAAKyC,MAAL,CAAYtD,SAAS,CAAC2B,MAAM,GAAG,CAAV,CAArB,EAAmC5B,SAAS,CAAC0B,MAAM,GAAG,CAAV,CAA5C,CAArD,EAAgH;AAC9GE,MAAAA,MAAM;AACNF,MAAAA,MAAM;AACN4B,MAAAA,WAAW;AACZ;;AAED,QAAIA,WAAJ,EAAiB;AACfjB,MAAAA,QAAQ,CAACV,aAAT,GAAyB;AAACI,QAAAA,KAAK,EAAEuB,WAAR;AAAqBD,QAAAA,iBAAiB,EAAEhB,QAAQ,CAACV;AAAjD,OAAzB;AACD;;AAEDU,IAAAA,QAAQ,CAACX,MAAT,GAAkBA,MAAlB;AACA,WAAOE,MAAP;AACD,GAtLc;;AAAA;;AAAA;AAwLf2B,EAAAA,MAxLe,kBAwLRC,IAxLQ,EAwLFC,KAxLE,EAwLK;AAClB,QAAI,KAAKvD,OAAL,CAAawD,UAAjB,EAA6B;AAC3B,aAAO,KAAKxD,OAAL,CAAawD,UAAb,CAAwBF,IAAxB,EAA8BC,KAA9B,CAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,KAAKC,KAAT,IACD,KAAKvD,OAAL,CAAayD,UAAb,IAA2BH,IAAI,CAACI,WAAL,OAAuBH,KAAK,CAACG,WAAN,EADxD;AAED;AACF,GA/Lc;;AAAA;;AAAA;AAgMflD,EAAAA,WAhMe,uBAgMHmD,KAhMG,EAgMI;AACjB,QAAId,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAAChD,MAA1B,EAAkCiD,CAAC,EAAnC,EAAuC;AACrC,UAAID,KAAK,CAACC,CAAD,CAAT,EAAc;AACZf,QAAAA,GAAG,CAACgB,IAAJ,CAASF,KAAK,CAACC,CAAD,CAAd;AACD;AACF;;AACD,WAAOf,GAAP;AACD,GAxMc;;AAAA;;AAAA;AAyMftC,EAAAA,SAzMe,qBAyMLH,KAzMK,EAyME;AACf,WAAOA,KAAP;AACD,GA3Mc;;AAAA;;AAAA;AA4MfK,EAAAA,QA5Me,oBA4MNL,KA5MM,EA4MC;AACd,WAAOA,KAAK,CAAC0D,KAAN,CAAY,EAAZ,CAAP;AACD,GA9Mc;;AAAA;;AAAA;AA+MflC,EAAAA,IA/Me,gBA+MVmC,KA/MU,EA+MH;AACV,WAAOA,KAAK,CAACnC,IAAN,CAAW,EAAX,CAAP;AACD;AAjNc,CAAjB;;AAoNA,SAASc,WAAT,CAAqB7C,IAArB,EAA2B4B,aAA3B,EAA0C1B,SAA1C,EAAqDD,SAArD,EAAgE6C,eAAhE,EAAiF;AAC/E;AACA;AACA,MAAMqB,UAAU,GAAG,EAAnB;AACA,MAAIC,aAAJ;;AACA,SAAOxC,aAAP,EAAsB;AACpBuC,IAAAA,UAAU,CAACH,IAAX,CAAgBpC,aAAhB;AACAwC,IAAAA,aAAa,GAAGxC,aAAa,CAAC0B,iBAA9B;AACA,WAAO1B,aAAa,CAAC0B,iBAArB;AACA1B,IAAAA,aAAa,GAAGwC,aAAhB;AACD;;AACDD,EAAAA,UAAU,CAACE,OAAX;AAEA,MAAIC,YAAY,GAAG,CAAnB;AAAA,MACIC,YAAY,GAAGJ,UAAU,CAACrD,MAD9B;AAAA,MAEIe,MAAM,GAAG,CAFb;AAAA,MAGIF,MAAM,GAAG,CAHb;;AAKA,SAAO2C,YAAY,GAAGC,YAAtB,EAAoCD,YAAY,EAAhD,EAAoD;AAClD,QAAIE,SAAS,GAAGL,UAAU,CAACG,YAAD,CAA1B;;AACA,QAAI,CAACE,SAAS,CAACrB,OAAf,EAAwB;AACtB,UAAI,CAACqB,SAAS,CAACtB,KAAX,IAAoBJ,eAAxB,EAAyC;AACvC,YAAIvC,KAAK,GAAGL,SAAS,CAACuE,KAAV,CAAgB5C,MAAhB,EAAwBA,MAAM,GAAG2C,SAAS,CAACxC,KAA3C,CAAZ;AACAzB,QAAAA,KAAK,GAAGA,KAAK,CAACmE,GAAN,CAAU,UAASnE,KAAT,EAAgBwD,CAAhB,EAAmB;AACnC,cAAIY,QAAQ,GAAG1E,SAAS,CAAC0B,MAAM,GAAGoC,CAAV,CAAxB;AACA,iBAAOY,QAAQ,CAAC7D,MAAT,GAAkBP,KAAK,CAACO,MAAxB,GAAiC6D,QAAjC,GAA4CpE,KAAnD;AACD,SAHO,CAAR;AAKAiE,QAAAA,SAAS,CAACjE,KAAV,GAAkBP,IAAI,CAAC+B,IAAL,CAAUxB,KAAV,CAAlB;AACD,OARD,MAQO;AACLiE,QAAAA,SAAS,CAACjE,KAAV,GAAkBP,IAAI,CAAC+B,IAAL,CAAU7B,SAAS,CAACuE,KAAV,CAAgB5C,MAAhB,EAAwBA,MAAM,GAAG2C,SAAS,CAACxC,KAA3C,CAAV,CAAlB;AACD;;AACDH,MAAAA,MAAM,IAAI2C,SAAS,CAACxC,KAApB,CAZsB,CActB;;AACA,UAAI,CAACwC,SAAS,CAACtB,KAAf,EAAsB;AACpBvB,QAAAA,MAAM,IAAI6C,SAAS,CAACxC,KAApB;AACD;AACF,KAlBD,MAkBO;AACLwC,MAAAA,SAAS,CAACjE,KAAV,GAAkBP,IAAI,CAAC+B,IAAL,CAAU9B,SAAS,CAACwE,KAAV,CAAgB9C,MAAhB,EAAwBA,MAAM,GAAG6C,SAAS,CAACxC,KAA3C,CAAV,CAAlB;AACAL,MAAAA,MAAM,IAAI6C,SAAS,CAACxC,KAApB,CAFK,CAIL;AACA;AACA;;AACA,UAAIsC,YAAY,IAAIH,UAAU,CAACG,YAAY,GAAG,CAAhB,CAAV,CAA6BpB,KAAjD,EAAwD;AACtD,YAAI0B,GAAG,GAAGT,UAAU,CAACG,YAAY,GAAG,CAAhB,CAApB;AACAH,QAAAA,UAAU,CAACG,YAAY,GAAG,CAAhB,CAAV,GAA+BH,UAAU,CAACG,YAAD,CAAzC;AACAH,QAAAA,UAAU,CAACG,YAAD,CAAV,GAA2BM,GAA3B;AACD;AACF;AACF,GAnD8E,CAqD/E;AACA;AACA;;;AACA,MAAIC,cAAc,GAAGV,UAAU,CAACI,YAAY,GAAG,CAAhB,CAA/B;;AACA,MAAIA,YAAY,GAAG,CAAf,IACG,OAAOM,cAAc,CAACtE,KAAtB,KAAgC,QADnC,KAEIsE,cAAc,CAAC3B,KAAf,IAAwB2B,cAAc,CAAC1B,OAF3C,KAGGnD,IAAI,CAACwD,MAAL,CAAY,EAAZ,EAAgBqB,cAAc,CAACtE,KAA/B,CAHP,EAG8C;AAC5C4D,IAAAA,UAAU,CAACI,YAAY,GAAG,CAAhB,CAAV,CAA6BhE,KAA7B,IAAsCsE,cAAc,CAACtE,KAArD;AACA4D,IAAAA,UAAU,CAACW,GAAX;AACD;;AAED,SAAOX,UAAP;AACD","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/character.js":{"lineLengths":[26,14,1,47,14,4,31,32,1,24,4,26,50,24,2,1,124,1,24,24,26,6,24,2,26,10,24,5,1,26,39,1,24,46,54,2,881,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/word.js":{"lineLengths":[26,14,1,47,14,4,31,49,27,1,24,4,26,50,24,2,1,4,26,36,24,2,1,124,1,24,66,3,26,33,36,30,31,31,29,39,30,30,34,35,31,36,44,40,89,25,19,26,6,24,2,26,10,24,5,1,26,29,1,24,43,33,31,33,4,1,115,3,1,39,98,185,1,48,104,121,34,31,11,6,4,1,17,3,1,46,12,28,6,26,1,28,10,26,4,28,19,26,14,27,6,49,2,1,55,49,2,5825,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/params.js":{"lineLengths":[26,14,1,47,14,4,43,1,24,46,39,33,24,32,33,42,40,8,6,4,1,19,2,1249,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/line.js":{"lineLengths":[26,14,1,47,14,4,31,45,27,1,24,4,26,50,24,2,1,4,26,36,24,2,1,124,1,24,19,26,6,24,2,26,10,24,5,1,26,29,1,24,39,38,80,42,4,1,21,130,1,56,28,64,1,1,54,36,1,49,45,13,43,28,8,1,27,6,4,1,19,3,1,47,50,2,1,54,16,28,6,26,1,28,10,26,4,28,19,26,15,27,6,49,2,4161,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","options","stripTrailingCr","replace","retLines","linesAndNewlines","split","length","pop","i","line","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAG,KAAKC,OAAL,CAAaC,eAAhB,EAAiC;AAC/B;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,OAAd,EAAuB,IAAvB,CAAR;AACD;;AAED,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAY,WAAZ,CADvB,CANkC,CASlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAZiC,CAclC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKR,OAAL,CAAaU,cAA3B,EAA2C;AACzCP,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKT,OAAL,CAAaW,gBAAjB,EAAmC;AACjCF,QAAAA,IAAI,GAAGA,IAAI,CAACG,IAAL,EAAP;AACD;;AACDT,MAAAA,QAAQ,CAACU,IAAT,CAAcJ,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CA7BD;;AA+BO,SAASW,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOrB,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIjB,OAAO;AAAG;AAAA;AAAA;;AAAAoB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOf,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BhB,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[26,14,1,47,14,4,39,31,1,24,4,26,50,24,2,1,124,1,24,23,26,6,24,2,26,10,24,5,1,26,37,1,24,43,47,3,1,51,54,2,1197,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/css.js":{"lineLengths":[26,14,1,47,14,4,27,26,1,24,4,26,50,24,2,1,124,1,24,18,26,6,24,2,26,10,24,5,1,26,27,1,24,38,39,3,1,45,49,2,1129,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/json.js":{"lineLengths":[26,14,1,47,14,4,29,37,27,1,24,4,26,50,24,2,1,4,26,26,24,2,1,124,1,379,1,24,57,19,26,6,24,2,26,10,24,98,106,1,26,29,1,24,33,20,26,6,24,2,26,9,24,11,1,40,28,22,26,16,65,63,77,28,4,13,30,58,7,29,138,3,1,43,11,30,10,28,6,30,14,28,107,5,3,1,45,49,99,96,1,1,69,23,45,1,18,30,4,1,9,1,42,28,34,6,4,1,24,1,64,21,46,45,1,42,90,6,1,17,28,29,4,1,27,24,4,1,7,28,11,26,39,21,27,45,1,25,14,1,24,33,38,31,8,6,1,23,1,49,28,97,6,1,17,28,11,28,4,1,27,2,8577,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":"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","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/array.js":{"lineLengths":[26,14,1,47,14,4,33,28,1,24,4,26,50,24,2,1,124,1,24,20,26,6,24,2,26,10,24,5,1,26,31,1,24,40,24,3,1,60,16,3,1,48,51,2,1377,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/apply.js":{"lineLengths":[26,14,1,47,14,4,33,37,1,24,4,26,28,24,2,1,4,26,81,24,2,1,124,1,24,39,28,6,26,84,1,37,14,30,8,28,1,30,11,28,6,30,16,28,15,4,1,32,30,69,6,1,26,35,1,1,51,63,29,96,28,4,13,30,28,7,5,22,44,19,18,19,16,6,62,6,1,1,35,50,32,55,61,1,52,32,73,24,1,41,26,12,10,1,17,8,6,1,17,72,1,1,43,25,48,25,44,19,30,8,28,1,30,22,28,6,30,14,28,33,1,66,49,45,15,8,6,1,37,20,81,40,1,1,59,25,1,1,22,1,46,27,65,1,51,1,51,33,55,61,79,1,31,18,38,33,38,35,38,42,49,18,39,83,1,41,30,48,27,10,8,6,38,1,1,21,39,19,24,6,25,20,27,4,1,50,44,4,1,25,64,1,1,42,37,14,30,8,28,1,30,11,28,6,30,16,28,15,4,1,24,1,28,41,1,18,33,6,1,51,17,38,8,1,61,62,19,40,10,1,24,10,8,4,1,18,2,14289,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":"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","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/parse.js":{"lineLengths":[26,14,1,47,14,4,33,1,24,31,28,6,26,84,54,64,17,13,1,26,20,45,1,33,77,1,48,15,22,1,1,74,1,20,33,8,1,11,81,80,1,1,28,43,1,22,1,33,30,1,58,15,38,39,44,59,82,15,13,8,6,67,19,1,1,36,63,1,22,63,47,53,1,37,60,8,1,48,60,11,6,21,54,1,1,25,30,40,91,17,33,77,33,77,17,25,61,60,65,1,31,26,6,1,31,26,6,1,22,25,1,38,85,89,150,15,8,1,95,1,95,37,57,1,33,22,40,25,40,22,25,10,15,15,8,43,1,1,44,25,6,1,47,25,42,1,1,26,40,102,8,1,43,104,8,6,1,17,4,1,31,18,4,1,15,2,13177,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":"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","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[26,14,1,47,14,4,31,1,24,64,66,48,9,26,9,24,28,26,33,32,23,31,44,31,23,15,29,80,72,1,1,44,28,8,1,31,6,1,30,31,28,83,32,1,1,44,31,8,1,32,25,81,52,1,5,2,3157,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/merge.js":{"lineLengths":[26,14,1,47,14,4,39,23,1,24,4,26,30,24,2,1,4,26,28,24,2,1,4,26,34,24,2,1,180,1,191,1,417,1,131,1,92,1,184,1,24,31,28,29,26,35,48,48,1,32,30,11,26,4,1,32,30,11,26,4,2,1,37,32,36,99,84,35,1,36,44,4,1,48,34,88,64,64,58,58,43,52,42,42,38,38,13,39,80,80,74,74,6,4,1,18,21,23,22,24,1,79,49,25,7,55,25,7,1,50,66,58,19,67,57,66,62,21,69,13,39,25,74,21,102,21,18,9,116,21,19,34,6,4,1,14,2,1,34,35,56,15,34,12,32,1,34,15,32,10,34,20,32,19,9,6,1,17,75,6,1,13,32,10,30,1,32,14,30,8,32,23,30,42,7,4,1,16,2,1,34,71,2,1,44,25,17,11,27,13,18,21,7,4,2,1,35,91,2,1,35,11,29,29,38,29,22,5,2,1,76,92,75,15,24,22,13,5,16,25,23,13,35,1,36,119,1,79,46,49,1,118,27,39,68,32,23,1,30,23,1,32,1,30,1,32,21,30,30,32,18,30,8,32,26,30,29,68,32,24,1,30,25,1,32,1,30,1,32,22,30,30,32,19,30,8,32,26,30,30,68,32,34,68,33,40,47,26,36,20,21,13,26,65,6,47,1,1,30,31,23,2,1,43,39,43,1,59,73,9,30,8,28,1,30,11,28,6,30,21,28,113,32,24,1,30,1,32,1,30,1,32,22,30,30,32,19,30,8,32,26,30,19,1,14,16,30,8,28,1,30,11,28,6,30,21,28,115,32,24,1,30,1,32,1,30,1,32,22,30,30,32,19,30,8,32,26,30,22,1,14,6,14,28,6,26,1,28,9,26,4,28,14,26,31,30,22,1,28,1,30,1,28,1,30,20,28,28,30,17,28,6,30,24,28,17,1,12,4,1,43,2,1,44,39,55,1,29,30,22,1,28,1,30,1,28,1,30,20,28,28,30,17,28,6,30,24,28,27,11,86,4,2,1,39,24,20,20,16,18,6,2,1,46,79,45,27,21,4,2,1,40,47,45,27,4,2,1,32,16,47,1,45,146,1,48,23,6,1,33,22,21,13,13,6,4,1,14,2,1,47,20,19,22,30,26,1,81,43,86,1,28,13,6,1,58,24,87,51,1,29,25,1,34,30,45,8,6,1,48,28,21,13,25,6,4,1,71,23,4,1,20,20,4,1,45,45,4,1,11,20,21,5,2,1,31,50,38,12,2,1,59,36,83,1,64,20,6,4,1,24,15,2,1,38,20,20,34,36,52,57,1,36,56,40,17,32,10,8,1,36,56,40,17,32,10,8,13,76,20,8,1,76,20,8,6,6,11,24,23,5,2,34589,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/create.js":{"lineLengths":[26,14,1,47,14,4,43,35,51,35,1,24,4,26,32,24,2,1,180,1,191,1,417,1,131,1,92,1,184,1,24,100,18,18,4,1,48,25,4,1,13,28,6,26,1,28,8,26,4,28,13,26,29,1,15,12,4,1,14,15,14,54,1,33,40,26,8,4,1,18,25,25,21,19,19,1,28,30,26,7,27,79,27,1,44,32,21,1,30,54,28,32,33,33,1,20,98,44,44,10,30,1,1,32,1,30,1,32,19,30,28,32,16,30,8,32,26,30,35,52,47,1,1,27,33,15,33,8,13,53,27,77,74,36,26,1,34,25,1,36,1,34,1,36,24,34,32,36,21,34,12,36,30,34,33,17,36,26,1,34,38,69,1,36,1,34,1,36,24,34,32,36,21,34,12,36,30,34,55,1,23,37,61,37,61,28,13,1,73,39,52,52,87,1,73,100,81,81,14,1,71,61,14,12,1,28,29,29,25,10,8,1,31,31,6,5,1,42,30,11,28,8,4,1,11,30,30,26,26,17,5,2,1,29,29,45,4,1,16,1,46,44,4,1,83,110,110,1,48,84,60,65,1,31,26,6,1,31,26,6,1,113,37,4,1,32,2,1,104,112,2,1,80,97,2,15625,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","Array","isArray","join","ret","apply","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/array.js":{"lineLengths":[26,14,1,47,14,4,33,43,1,24,28,31,18,4,1,32,2,1,41,37,18,4,1,43,33,20,6,4,1,15,2,1477,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/reverse.js":{"lineLengths":[26,14,1,47,14,4,37,1,342,1,535,1,210,1,24,41,40,56,4,1,11,30,36,28,28,48,44,48,44,57,17,35,35,35,35,47,47,37,23,42,28,40,28,17,14,1,37,23,42,28,40,28,17,14,1,22,13,11,9,7,5,2,3001,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/reverse.js"],"names":["reversePatch","structuredPatch","Array","isArray","map","reverse","oldFileName","newFileName","oldHeader","newHeader","hunks","hunk","oldLines","newLines","oldStart","newStart","linedelimiters","lines","l","startsWith","slice"],"mappings":";;;;;;;;;;;;;;;AAAO,SAASA,YAAT,CAAsBC,eAAtB,EAAuC;AAC5C,MAAIC,KAAK,CAACC,OAAN,CAAcF,eAAd,CAAJ,EAAoC;AAClC,WAAOA,eAAe,CAACG,GAAhB,CAAoBJ,YAApB,EAAkCK,OAAlC,EAAP;AACD;;AAED;AAAA;AAAA;AAAA;AACKJ,IAAAA,eADL;AAEEK,MAAAA,WAAW,EAAEL,eAAe,CAACM,WAF/B;AAGEC,MAAAA,SAAS,EAAEP,eAAe,CAACQ,SAH7B;AAIEF,MAAAA,WAAW,EAAEN,eAAe,CAACK,WAJ/B;AAKEG,MAAAA,SAAS,EAAER,eAAe,CAACO,SAL7B;AAMEE,MAAAA,KAAK,EAAET,eAAe,CAACS,KAAhB,CAAsBN,GAAtB,CAA0B,UAAAO,IAAI,EAAI;AACvC,eAAO;AACLC,UAAAA,QAAQ,EAAED,IAAI,CAACE,QADV;AAELC,UAAAA,QAAQ,EAAEH,IAAI,CAACI,QAFV;AAGLF,UAAAA,QAAQ,EAAEF,IAAI,CAACC,QAHV;AAILG,UAAAA,QAAQ,EAAEJ,IAAI,CAACG,QAJV;AAKLE,UAAAA,cAAc,EAAEL,IAAI,CAACK,cALhB;AAMLC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWb,GAAX,CAAe,UAAAc,CAAC,EAAI;AACzB,gBAAIA,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,gBAAIF,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,mBAAOF,CAAP;AACD,WAJM;AANF,SAAP;AAYD,OAbM;AANT;AAAA;AAqBD","sourcesContent":["export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[26,14,1,47,14,4,51,1,24,66,40,16,14,17,1,45,25,1,24,21,33,22,13,21,6,1,41,4,1,14,2,1645,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/xml.js":{"lineLengths":[26,14,1,47,14,4,51,1,24,40,16,1,45,29,1,24,25,33,25,6,1,40,1,24,26,33,26,6,4,1,23,2,1,25,13,32,31,31,33,12,2,2565,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/index.js":{"lineLengths":[14,63,203,41,33,29,43,35,42,40,50,40,113,117,38,107,48,120,42,113,49,62,2,45,58,2,43,60,2,46,56,2,50,63,2,46,59,2,66,37,70,39,47,27,4,41,28,30,4,38,17,14,24,16,28,20,36,17,30,21,38,26,39,32,36,4,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAqDA,wCAKC;AAsBD,gCAKC;AAqBD,4BAKC;AAkDD,0CAKC;AAqBD,kCAKC;AAhMD,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAEzC,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AAQzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AACjB,yCAAoC;AAA3B,mGAAA,MAAM,OAAA;AAyBf,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,222,71,72,38,44,48,50,64,41,59,22,6,53,3,31,57,46,78,59,40,29,71,3,43,29,49,3,36,70,78,29,73,24,62,70,43,47,41,14,22,29,61,3,50,44,14,22,29,61,3,44,44,62,3,41,41,62,3,36,27,58,3,39,27,63,3,22,64,42,23,55,25,16,15,26,25,3,21,77,37,42,47,33,50,22,33,27,61,64,46,62,35,46,48,94,25,43,52,28,71,34,6,36,81,30,60,49,51,14,39,67,14,11,42,34,54,56,14,33,53,70,14,11,76,72,84,65,84,94,94,23,36,8,3,29,47,20,22,20,31,36,44,3,34,22,18,49,64,61,61,64,40,26,6,52,3,35,53,42,51,69,69,62,67,3,75,73,70,63,84,25,43,49,48,42,45,28,6,17,3,23,41,32,45,75,18,13,9,13,26,14,12,13,11,29,13,13,15,12,15,14,24,12,41,68,33,32,32,61,52,36,84,41,61,10,74,28,29,44,30,28,42,45,34,53,45,53,27,29,23,40,21,6,17,65,25,10,42,42,46,33,14,10,22,6,20,13,38,38,54,63,33,20,10,24,31,20,10,45,28,33,57,29,62,10,48,72,43,71,61,49,11,76,77,75,72,56,50,28,53,61,54,45,35,63,43,55,29,88,18,36,76,18,14,48,12,39,63,61,52,30,56,39,35,35,52,48,46,32,18,14,10,44,6,62,63,62,65,44,28,66,39,57,64,52,47,22,18,14,10,56,38,69,62,63,10,43,64,58,10,15,59,67,10,26,6,45,43,40,25,64,28,48,25,18,32,46,18,14,26,12,6,55,34,40,50,50,54,32,18,37,82,35,36,22,18,32,28,20,54,12,6,34,37,44,10,34,13,34,48,49,61,40,54,64,34,49,45,44,29,22,18,40,42,61,41,33,18,14,51,24,64,41,66,41,45,29,18,14,32,50,6,46,35,36,54,22,7,69,69,71,58,7,87,40,43,33,7,74,68,38,34,13,34,95,43,29,68,34,54,65,31,22,76,56,36,56,22,46,45,46,39,34,30,37,38,31,38,39,34,22,41,65,41,50,38,43,26,18,52,53,65,44,58,68,38,53,49,48,33,26,22,44,46,65,45,37,22,18,55,28,68,45,70,45,76,60,59,48,44,33,22,18,14,32,26,6,43,59,51,57,7,64,56,39,57,61,108,31,39,44,27,18,14,10,50,6,45,20,20,25,24,49,35,60,22,22,14,78,36,22,14,78,36,22,14,38,25,64,34,35,34,29,36,22,22,14,38,25,64,34,35,34,29,36,22,22,14,19,30,14,10,71,42,48,6,20,27,20,38,28,30,80,30,28,10,26,56,30,6,52,46,60,56,24,47,38,69,76,31,30,88,42,34,34,35,43,97,48,37,37,38,50,46,65,71,70,60,61,39,37,54,22,42,48,22,18,14,10,69,77,56,38,52,10,57,61,106,41,33,30,39,37,53,34,31,30,14,33,42,57,24,58,31,31,31,25,66,73,42,71,46,19,52,33,32,51,37,36,54,52,50,51,29,33,33,49,67,46,64,43,75,44,44,48,49,74,42,22,33,18,68,34,46,86,74,85,80,42,37,22,27,59,74,49,50,77,80,35,26,64,80,30,22,18,39,84,38,31,39,83,37,37,22,18,37,30,14,39,61,66,21,41,31,55,14,19,33,56,14,22,30,10,61,61,52,59,61,64,61,66,38,50,73,38,65,29,25,10,30,60,62,36,28,10,30,57,65,62,37,53,34,10,15,38,37,10,29,6,20,69,6,21,68,38,21,30,37,28,23,64,67,15,29,43,61,10,54,39,30,46,43,30,40,45,10,50,39,30,42,39,30,36,38,10,55,75,10,51,36,10,79,50,56,69,10,19,6,15,50,32,60,37,11,65,66,52,30,27,33,32,10,38,43,19,26,29,32,60,43,59,79,58,71,44,21,30,42,43,55,38,18,45,38,45,43,34,16,35,40,40,75,28,18,42,75,74,22,27,41,22,18,47,67,18,54,79,50,18,16,69,11,24,72,76,72,37,57,44,57,25,39,14,63,34,10,21,36,33,10,29,28,6,20,60,70,55,51,44,33,10,60,51,44,10,15,35,10,6,39,46,55,26,28,26,10,26,29,10,36,25,10,38,41,30,41,10,54,39,47,67,68,44,48,30,46,83,42,25,68,34,14,10,47,36,27,61,35,14,63,23,42,33,18,37,14,10,68,39,34,26,10,28,6,27,58,6,2,31,22,36,104,42,113,46,119,21,38,41,47,53,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js":{"lineLengths":[14,63,37,38,42,39,48,6,47,52,6,3,49,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AAC7B,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA;AAVY,QAAA,kBAAkB,sBAU9B","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js":{"lineLengths":[14,31,63,22,66,48,50,43,66,65,43,72,54,30,72,70,70,45,59,39,47,75,33,22,33,27,75,39,34,74,60,12,10,11,15,20,17,13,18,11,25,14,15,55,44,23,46,26,43,18,35,31,63,77,66,53,35,75,6,21,30,42,35,29,39,39,26,38,48,10,81,31,6,32,17,42,35,26,80,10,15,37,84,10,6,18,30,33,57,30,25,29,49,25,33,15,41,32,26,82,23,32,25,90,51,46,56,77,26,45,51,22,18,24,32,14,10,21,6,21,33,26,26,34,86,55,14,33,33,10,6,15,39,85,64,42,29,28,36,75,26,10,20,6,16,33,25,59,38,26,37,25,82,32,54,36,59,30,14,10,21,6,14,33,25,40,25,36,26,24,42,51,30,66,29,45,6,19,38,29,13,41,6,20,46,39,25,10,18,6,43,30,29,29,30,33,66,25,26,37,43,76,43,46,42,30,30,18,31,48,54,45,26,22,81,41,22,30,30,18,38,36,36,38,30,30,18,79,35,30,49,57,35,30,18,26,14,27,22,10,49,32,25,39,26,22,33,39,72,39,42,38,26,26,14,27,44,50,41,22,18,77,37,18,26,26,14,34,32,32,34,26,26,14,61,32,26,46,32,53,26,14,29,32,26,34,43,26,14,29,61,42,18,32,26,42,26,14,22,10,30,75,42,25,35,47,18,6,45,55,49,20,6,73,22,20,41,30,33,45,29,38,67,72,76,47,37,30,37,50,60,25,25,10,78,61,22,25,12,6,20,30,6,74,74,78,75,74,77,73,63,7,44,33,61,44,51,15,33,17,7,72,29,54,35,67,44,51,15,53,22,7,79,80,80,20,7,77,65,70,33,67,50,57,7,76,69,7,75,42,7,79,80,7,23,52,49,76,7,82,79,75,43,7,78,73,47,7,32,75,74,76,31,53,33,30,26,60,36,28,71,65,50,61,52,27,15,27,28,34,58,84,68,85,68,101,43,53,79,45,44,80,59,75,81,77,82,84,69,87,93,22,18,14,74,26,32,42,46,35,14,45,21,23,50,53,29,15,10,74,74,45,65,32,63,45,76,80,40,39,31,30,40,84,10,44,73,17,41,39,33,10,30,57,10,63,24,51,78,10,15,44,68,27,82,31,28,36,26,40,31,62,34,66,39,51,42,10,17,19,47,49,25,11,6,26,27,24,60,34,41,65,14,33,78,69,48,23,11,67,24,6,57,30,21,27,48,38,28,34,59,26,14,30,45,34,18,23,37,18,26,14,29,107,32,31,48,39,50,30,18,14,29,45,39,21,32,33,26,14,29,29,33,26,14,35,10,75,6,2,19,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js":{"lineLengths":[14,73,41,63,29,63,23,49,42,51,39,36,36,47,36,35,35,50,36,55,40,3,64,20,59,38,75,61,52,64,67,68,42,66,30,41,26,26,36,54,6,25,23,21,21,26,23,26,24,22,25,37,34,57,27,17,22,10,50,28,19,10,25,26,29,33,21,26,14,71,10,38,73,80,47,68,38,71,22,37,29,41,25,43,40,36,18,14,10,57,26,26,67,32,34,77,14,41,45,14,29,17,22,10,46,71,44,47,20,22,10,43,28,20,22,10,61,37,13,6,22,63,56,38,6,69,71,42,55,6,78,75,78,75,29,31,36,19,76,62,6,78,74,46,44,24,22,21,46,3,33,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js":{"lineLengths":[14,63,27,4,65,3,73,78,73,67,3,71,34,3,78,17,4,66,32,44,86,3,29,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;;;;;;GAaG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA;AATY,QAAA,QAAQ,YASpB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js":{"lineLengths":[14,63,25,4,50,3,74,76,75,76,74,4,64,61,65,59,32,42,45,3,25,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACI,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA;AAZY,QAAA,MAAM,UAYlB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/glob.js":{"lineLengths":[14,63,23,42,40,46,46,44,45,49,56,15,44,21,15,4,55,4,13,14,9,10,9,17,12,12,19,10,15,14,13,12,11,11,16,13,14,14,12,10,12,26,19,25,8,48,8,10,8,61,8,14,8,66,7,62,7,63,72,38,7,72,14,8,33,30,19,58,29,51,35,37,31,47,35,33,25,27,10,78,64,10,35,31,51,39,35,41,39,71,45,43,24,74,33,35,65,75,10,43,33,10,36,43,44,27,41,63,10,30,35,72,14,77,10,32,58,58,27,39,45,54,85,14,10,15,85,78,68,52,49,37,29,16,10,42,71,67,70,43,89,22,48,21,27,39,35,33,29,29,31,28,34,37,61,38,11,78,63,35,41,24,22,51,36,34,20,59,33,71,12,6,19,75,74,80,47,17,83,30,55,60,32,41,37,63,24,11,6,17,17,76,30,55,60,32,41,37,63,27,11,6,15,76,26,51,56,28,37,33,59,21,6,19,76,26,51,56,28,37,33,59,25,6,8,65,34,8,20,53,6,26,35,6,8,72,34,8,16,54,6,31,31,6,2,21,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/dist/commonjs/index.js":{"lineLengths":[14,98,34,54,89,69,6,40,30,34,18,5,97,73,22,22,4,67,43,21,142,37,19,3,63,254,42,42,40,28,51,47,58,47,48,40,20,31,27,35,37,18,16,33,37,39,39,7,3,59,98,14,8,22,21,20,35,42,11,7,40,49,96,48,28,58,22,22,22,22,22,22,23,21,28,28,65,41,34,39,67,34,58,65,33,75,30,38,39,38,49,35,44,30,37,44,44,44,45,39,32,34,27,37,11,18,35,30,14,3,40,33,43,11,18,42,36,14,3,4,66,13,4,50,20,29,6,2,37,73,80,74,80,79,78,76,77,3,79,71,4,42,13,4,51,39,16,21,33,48,12,6,2,39,48,4,49,79,3,79,75,76,20,3,76,76,17,4,17,8,33,7,74,75,81,75,46,8,10,8,54,7,17,8,10,8,60,7,17,8,11,8,80,7,17,8,12,8,72,17,8,12,8,74,54,8,19,37,9,20,10,16,26,6,11,17,27,6,12,18,28,6,10,16,26,6,10,16,26,6,11,17,27,6,14,20,30,6,10,16,26,6,11,17,27,6,13,19,29,6,14,20,30,6,14,20,30,6,14,20,30,6,18,24,34,6,12,18,28,6,12,18,28,6,12,18,28,6,16,22,32,6,16,12,15,20,15,20,11,15,17,15,8,70,70,77,28,8,23,49,6,8,78,78,8,17,32,6,8,80,68,7,17,8,77,26,76,38,30,28,34,35,40,40,50,35,27,40,10,15,46,10,6,8,59,7,66,8,14,39,32,26,38,56,6,8,17,8,22,31,6,8,82,8,20,21,25,10,51,53,51,34,59,44,23,6,30,22,39,31,10,18,6,8,78,81,80,15,7,17,8,17,49,22,27,10,64,44,39,25,6,8,70,7,79,15,7,76,62,7,37,7,17,8,28,51,25,10,33,40,10,26,42,84,36,41,26,14,10,72,68,35,47,85,58,21,26,22,12,34,36,10,79,80,31,23,6,8,77,69,8,17,24,23,44,35,10,32,31,18,49,10,33,63,6,8,70,45,74,58,8,22,30,36,24,23,47,40,32,31,18,65,10,38,58,6,8,58,8,17,44,35,10,32,31,18,49,10,33,60,38,6,8,71,7,78,22,8,22,47,40,30,60,28,59,40,59,14,19,50,14,10,31,40,72,44,6,8,39,7,81,77,46,8,18,48,6,19,36,6,16,45,47,41,61,49,75,71,87,54,29,6,8,35,8,15,46,6,8,32,8,20,46,6,8,39,8,26,46,6,8,35,8,22,46,6,8,32,8,15,46,6,8,29,8,17,47,6,8,36,8,23,47,6,8,73,28,7,75,48,8,20,61,6,8,76,52,7,81,75,49,8,23,33,6,8,76,57,7,81,75,49,8,23,31,6,8,77,59,7,76,75,68,8,22,42,56,6,8,78,58,7,77,56,8,20,30,25,26,26,50,40,57,40,34,6,8,78,62,8,22,48,6,8,81,75,72,8,17,40,6,8,81,51,7,76,78,57,7,74,17,8,17,30,45,54,6,8,78,7,81,40,7,80,8,23,41,22,27,10,35,30,10,30,73,28,30,10,29,14,76,78,30,56,14,10,21,41,30,10,6,8,45,8,21,41,22,27,10,35,30,10,30,73,28,30,10,29,14,65,74,30,56,14,10,21,41,30,10,6,32,46,38,61,71,35,19,33,10,6,20,38,33,20,59,36,6,28,57,42,34,36,29,10,6,25,35,29,6,64,21,66,67,67,47,30,34,20,29,28,63,55,34,31,34,36,6,30,61,54,33,10,38,32,10,15,45,10,6,28,71,30,34,58,35,30,10,38,33,32,10,6,31,30,28,31,27,70,55,78,30,33,10,26,73,63,30,49,40,10,29,6,29,56,45,6,32,62,35,69,41,68,36,10,26,25,22,6,38,57,33,84,46,26,14,63,10,6,43,26,60,59,64,26,29,70,72,39,40,25,17,36,26,10,25,18,6,8,79,19,7,79,72,75,7,80,82,17,7,76,16,8,20,43,18,81,29,14,25,42,14,10,6,8,42,8,18,43,18,70,29,14,25,42,14,10,6,21,158,29,33,37,41,33,31,29,33,25,25,25,27,29,33,29,27,27,25,36,52,72,68,35,10,6,23,32,33,41,47,38,47,6,8,80,7,80,20,7,76,16,7,77,77,64,82,77,75,8,40,34,28,30,17,52,20,10,42,36,63,28,29,17,51,20,10,58,36,39,20,10,40,53,55,42,79,22,44,42,14,19,69,29,43,56,18,48,14,76,20,12,6,27,8,47,7,80,20,7,76,16,8,22,34,23,10,42,36,60,10,53,55,42,42,46,10,15,34,37,33,78,18,76,41,22,56,18,48,14,25,44,42,14,52,23,10,56,6,8,44,8,20,34,23,10,42,36,60,10,53,55,42,14,61,37,18,52,14,44,10,21,40,38,10,56,6,19,35,26,40,76,30,71,26,10,29,21,6,35,50,40,31,48,6,8,64,23,7,75,7,80,42,8,23,28,35,63,30,14,74,56,10,20,37,10,6,8,36,8,21,28,35,63,30,14,63,56,10,20,37,10,6,8,67,42,7,17,8,25,29,20,30,27,37,21,22,32,28,45,45,26,27,10,45,20,51,37,42,26,10,6,2,29,4,36,3,80,44,4,35,8,46,8,16,8,43,8,26,8,80,68,7,17,8,77,64,6,8,17,8,48,106,6,8,17,8,26,51,6,8,17,8,24,55,43,30,10,71,68,52,54,14,10,48,82,6,8,17,8,51,68,78,34,28,27,34,46,37,6,2,31,4,41,3,37,4,35,8,42,8,20,8,45,8,15,8,80,68,7,17,8,77,64,6,8,17,8,26,48,6,8,17,8,25,26,6,8,17,8,48,106,6,2,31,4,79,41,3,79,78,37,4,23,8,76,8,10,8,79,8,14,8,69,8,11,8,84,8,9,19,24,15,8,52,7,69,8,12,9,8,55,7,77,7,17,8,119,37,63,54,10,62,56,47,42,53,49,54,63,74,71,47,25,10,30,36,87,10,29,30,44,47,30,36,38,33,30,36,29,38,65,66,69,16,29,10,25,6,8,60,8,29,40,43,10,29,6,8,76,54,7,17,8,22,31,6,8,61,7,50,7,79,72,18,8,24,72,73,20,54,32,33,26,37,38,23,14,10,50,36,27,10,55,43,23,6,8,72,73,63,7,50,7,79,72,18,8,29,72,73,20,54,32,33,26,37,38,23,14,10,55,36,27,10,60,48,23,6,8,80,8,33,41,45,10,33,6,8,74,62,8,38,41,45,10,38,6,8,66,8,33,41,45,10,27,6,8,65,8,32,41,45,10,51,6,45,29,9,41,45,10,49,26,30,10,40,35,23,10,15,45,59,10,6,43,29,9,41,45,10,49,26,30,10,47,35,23,10,34,40,10,15,57,10,6,8,71,43,7,79,72,75,7,80,82,17,7,76,16,8,36,41,45,10,30,6,8,48,8,34,41,45,10,34,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,46,41,45,10,49,26,30,10,84,28,40,68,10,32,36,27,45,38,26,35,18,37,42,26,33,37,39,30,22,19,43,48,72,22,56,37,73,98,22,27,62,43,26,31,36,26,22,18,37,11,29,43,32,38,24,36,37,30,16,12,6,44,41,45,10,49,26,30,10,84,28,40,68,10,39,34,47,39,44,68,18,27,42,61,34,39,39,18,54,33,18,14,10,24,6,8,31,7,48,7,76,81,77,8,31,31,6,46,77,82,82,41,45,10,49,29,30,10,68,6,8,64,7,52,8,26,35,6,48,41,45,10,49,26,30,10,84,40,60,10,39,34,47,39,44,60,18,27,42,61,34,39,39,18,54,33,18,14,10,6,42,41,45,10,49,26,30,10,84,71,40,69,10,32,31,28,32,32,30,43,28,42,39,28,18,30,31,75,42,28,58,41,51,45,51,54,48,48,83,30,26,47,94,36,26,22,47,59,84,47,30,26,22,34,47,59,62,43,26,22,54,56,22,38,35,22,19,37,33,48,30,14,11,19,24,6,46,41,45,10,49,26,30,10,84,71,32,40,69,10,31,28,32,32,30,43,28,42,39,28,18,30,31,51,43,48,80,43,26,22,18,30,43,31,46,65,38,43,43,22,58,39,22,18,14,44,48,11,19,24,6,29,33,77,36,6,2,41,4,52,3,76,39,4,47,8,45,8,16,50,40,66,30,50,36,10,6,8,17,8,25,81,74,59,64,6,8,17,8,18,118,6,8,67,8,20,87,6,2,43,4,82,3,77,3,44,4,47,8,45,8,15,50,41,65,30,6,8,17,8,26,20,6,8,17,8,18,118,6,8,67,8,20,34,6,2,43,4,69,3,73,12,3,44,4,49,50,40,41,6,2,45,4,69,3,74,4,69,4,75,3,75,66,4,68,55,27,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.js":{"lineLengths":[14,4,20,4,63,27,48,19,42,18,12,26,22,75,22,47,46,51,54,3,37,33,22,33,17,29,17,23,16,25,34,36,10,7,17,33,24,30,10,27,24,37,24,25,41,25,40,25,53,28,14,43,10,7,83,35,37,20,40,79,68,72,76,82,82,134,7,2,21,48,29,74,22,41,71,72,72,73,56,28,57,45,11,28,21,33,26,37,30,49,32,28,21,32,24,21,22,6,2,14,10,12,27,34,25,43,22,23,36,43,37,18,6,32,30,36,76,10,29,38,25,6,14,38,6,12,41,6,2,4,62,3,75,73,39,3,58,3,72,77,79,3,78,4,17,55,10,14,14,19,18,17,8,40,8,9,8,50,8,19,8,49,8,18,8,51,8,20,8,51,8,20,8,47,8,16,8,51,8,20,8,48,8,17,8,49,8,18,8,52,8,21,8,61,8,30,8,55,8,24,8,59,8,28,8,63,8,32,8,53,8,22,27,11,21,13,14,14,11,11,11,11,11,15,12,13,11,17,21,22,8,62,66,66,7,46,7,17,8,38,17,26,31,27,29,31,33,33,27,27,25,32,15,25,32,15,27,23,63,109,57,55,57,51,11,6,35,8,52,8,16,26,6,8,56,8,20,30,6,8,65,8,27,37,6,8,59,8,17,27,6,8,60,8,24,34,6,23,33,6,8,56,8,20,30,6,8,61,8,25,35,6,27,361,43,77,10,59,26,58,10,25,33,59,48,36,56,107,14,62,76,14,10,40,48,77,10,39,41,49,80,10,41,46,34,56,56,41,41,24,24,40,24,34,45,37,10,50,47,33,10,15,44,40,10,44,54,48,42,68,72,64,52,58,39,39,48,92,18,14,48,93,14,44,10,40,56,48,48,29,59,32,21,44,29,24,39,84,14,43,10,52,72,85,10,66,48,36,34,87,63,75,14,10,6,8,80,82,8,27,53,6,31,47,49,27,31,65,51,31,50,45,48,70,22,29,58,38,31,31,18,37,14,11,41,64,11,47,31,41,45,37,36,28,34,38,52,48,49,14,11,67,40,27,31,34,42,31,81,50,38,31,31,18,37,14,22,11,40,49,39,26,14,37,41,34,33,14,57,30,11,35,37,35,66,11,6,56,32,28,29,25,28,32,48,34,29,42,50,30,11,63,56,67,46,26,14,35,39,65,83,22,50,43,105,22,18,23,92,83,49,18,14,25,11,55,33,33,62,57,39,18,14,50,26,41,67,14,11,6,33,41,56,39,101,10,18,7,55,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,56,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,27,39,63,6,8,57,64,8,17,43,50,50,62,60,14,10,6,8,57,7,57,64,8,18,44,50,50,62,60,14,10,6,8,58,64,8,14,43,40,35,62,25,14,10,6,8,54,7,58,64,8,15,44,40,35,62,25,14,10,6,8,60,64,8,16,43,40,35,62,40,14,10,6,8,56,7,60,64,8,17,44,40,35,62,40,14,10,6,8,66,32,8,26,31,6,8,73,63,36,8,39,8,77,75,8,32,43,40,53,41,21,37,26,53,63,14,10,6,8,80,45,7,50,7,80,75,7,76,8,32,43,40,53,41,21,37,26,59,10,6,8,75,79,8,33,44,40,53,41,21,37,26,59,10,6,8,71,24,8,19,29,64,36,58,32,14,10,24,6,8,78,79,7,82,81,75,7,79,81,20,8,16,41,29,30,36,49,37,17,33,30,33,42,39,43,32,59,36,42,14,10,27,41,10,22,6,8,76,41,7,77,60,7,64,57,7,78,29,8,13,24,63,42,40,53,41,21,58,26,37,46,43,74,77,58,60,14,31,45,14,39,10,20,6,8,77,7,81,32,7,78,73,8,16,22,42,31,76,78,78,32,19,77,54,48,14,47,10,6,8,33,7,74,31,7,77,75,41,7,70,71,73,28,7,66,73,70,64,19,7,72,71,27,7,45,7,62,70,8,33,31,28,25,10,141,61,85,54,54,61,26,37,52,14,67,36,25,10,72,35,24,38,29,42,39,47,45,39,38,38,40,44,44,32,26,52,24,36,33,10,15,22,37,49,32,79,75,64,62,48,58,26,53,65,26,22,18,44,44,59,22,49,66,22,18,45,56,42,30,44,79,54,34,48,52,18,14,31,39,14,10,40,43,10,26,32,53,14,24,48,10,74,39,22,43,47,14,10,21,6,8,66,38,8,12,14,33,55,35,52,52,57,22,18,46,32,18,14,10,18,59,43,26,47,51,18,14,10,6,19,33,39,39,66,61,10,62,36,48,14,41,55,14,10,36,68,20,45,45,35,10,32,41,35,10,15,43,10,32,22,21,6,8,76,77,21,7,71,81,59,7,82,78,58,7,39,59,8,30,77,43,35,44,46,56,30,14,41,38,48,18,30,40,52,18,29,14,31,38,48,14,10,27,33,10,22,6,8,76,14,7,56,55,8,32,62,43,35,53,20,10,40,77,72,6,51,74,42,22,10,29,36,66,75,31,12,28,31,21,21,11,49,43,77,34,47,56,66,37,65,18,23,57,18,14,59,52,14,82,26,46,39,51,72,22,27,50,22,18,23,40,60,55,18,14,22,11,29,34,53,48,14,34,11,36,43,81,88,77,26,46,86,87,80,27,46,18,47,73,73,72,74,68,18,14,30,79,57,18,48,14,45,26,14,11,38,62,49,74,14,59,59,44,56,49,54,36,70,58,48,22,18,16,11,28,51,51,38,35,37,35,12,35,46,74,41,10,15,39,10,19,6,28,35,26,21,23,36,56,48,6,40,17,23,123,23,145,35,289,37,24,38,33,28,32,36,24,16,10,26,24,28,32,17,28,18,29,25,38,40,36,30,20,20,11,41,35,24,39,73,39,10,15,48,44,46,82,30,47,31,53,18,76,14,80,77,50,45,28,42,41,38,48,18,28,52,26,14,78,34,73,67,53,26,62,41,49,14,75,10,6,45,53,29,59,18,6,32,45,27,70,10,67,40,46,22,38,21,21,12,34,19,6,8,75,20,7,63,8,30,154,43,35,48,61,24,48,40,28,42,68,33,47,51,22,46,53,59,18,23,34,38,68,53,22,80,18,14,19,28,40,81,82,83,85,54,32,55,18,41,38,48,18,30,14,10,27,33,10,6,21,27,27,6,25,42,45,16,70,51,30,30,24,36,40,48,14,19,69,14,46,32,10,6,8,39,7,61,8,16,42,6,25,29,32,47,39,32,40,41,18,23,49,52,54,73,22,74,48,59,26,53,66,26,22,44,54,54,48,56,22,53,56,22,27,54,60,54,60,22,34,44,18,14,10,63,39,22,43,47,14,10,24,6,8,59,8,14,38,6,21,68,44,46,65,14,19,48,40,51,18,45,58,18,14,10,30,39,39,42,32,34,10,27,33,10,24,24,31,34,24,55,39,22,43,47,14,10,6,2,29,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoerOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown>\n  implements Map<K, V>\n{\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRLUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,88,52,14,8,22,22,7,46,63,62,4,79,41,4,31,29,30,46,38,37,29,4,68,4,33,29,47,36,70,62,33,4,68,4,33,29,47,37,33,33,27,47,42,44,46,33,29,31,41,37,35,35,33,33,33,31,45,41,43,41,43,39,43,31,37,35,37,31,31,35,33,47,39,50,30,80,61,12,33,25,48,28,79,4,63,3,13,4,13,9,10,10,13,35,24,26,26,44,45,6,15,57,6,35,26,25,25,12,23,27,29,6,2,4,68,23,3,13,4,37,15,60,24,6,35,32,57,43,6,2,51,91,4,35,3,59,3,76,56,3,68,42,4,52,23,22,18,19,18,16,13,15,19,27,28,22,28,24,25,14,23,25,25,8,41,8,21,8,38,8,21,8,70,71,52,64,8,27,36,17,17,74,85,10,44,37,35,10,47,47,38,10,15,38,35,10,39,39,70,20,64,61,80,10,64,60,78,10,36,22,35,34,31,14,19,71,14,10,6,8,67,7,63,78,56,74,16,8,25,35,6,8,56,8,21,31,6,8,50,8,25,71,6,8,68,8,24,71,6,8,44,8,23,33,6,8,50,8,26,73,6,8,39,8,22,28,6,8,46,7,79,75,35,8,23,42,6,58,16,30,50,44,6,8,44,8,20,30,6,8,79,35,8,23,33,27,26,23,48,31,142,25,10,46,27,31,10,23,31,50,68,72,43,64,60,44,59,87,14,49,59,44,14,50,89,14,10,59,63,32,33,34,59,35,33,31,42,17,41,42,39,20,24,34,10,57,56,29,42,39,20,24,34,10,71,62,41,65,74,53,50,10,56,53,48,10,74,55,31,27,38,13,37,38,35,16,20,30,6,8,39,7,75,18,7,71,78,67,7,73,32,8,14,29,25,33,40,23,45,36,25,10,30,22,60,80,41,29,32,44,72,15,10,60,32,20,6,23,30,33,15,29,46,37,46,46,39,41,14,19,49,42,41,14,10,34,48,32,22,6,31,43,24,31,10,46,27,31,10,33,41,16,34,26,31,67,38,66,64,44,36,21,6,52,17,29,20,59,36,10,30,30,29,33,27,28,36,13,32,6,8,62,7,80,78,79,77,42,8,15,31,6,8,24,8,14,31,29,33,6,8,54,8,22,32,6,8,72,47,8,20,30,6,8,57,8,19,29,6,26,30,37,13,48,34,6,22,30,37,13,58,37,6,31,63,34,60,32,6,26,34,30,6,8,75,7,34,8,23,29,25,33,41,27,58,30,13,43,47,51,21,26,28,10,15,79,77,47,45,58,29,45,17,32,10,21,6,8,48,7,75,74,74,53,8,19,58,17,44,66,43,18,34,14,17,63,24,10,6,8,37,8,31,37,6,8,65,72,7,69,7,81,58,7,76,79,27,7,78,80,17,8,22,43,29,37,35,57,32,14,10,66,36,10,54,28,41,10,58,31,29,64,17,51,10,20,6,8,38,8,34,38,6,8,46,7,74,77,74,53,8,23,44,74,75,65,29,65,45,36,39,39,14,10,20,6,8,61,7,81,77,80,15,8,29,50,49,37,59,39,14,10,20,6,8,48,8,23,34,6,25,35,34,32,41,25,39,30,36,33,30,36,40,10,6,8,67,72,7,74,73,19,7,75,75,76,72,20,7,73,64,7,80,75,72,7,75,67,8,24,30,75,30,30,32,31,26,10,34,46,24,30,64,44,10,33,36,10,35,33,58,56,30,45,46,24,10,35,40,37,72,44,25,36,24,10,36,46,36,24,10,58,40,41,24,10,36,45,32,20,6,23,39,46,30,10,72,32,20,6,18,31,26,34,31,27,52,32,6,19,29,46,24,47,40,18,38,46,14,10,39,21,10,39,40,20,6,8,75,24,8,22,40,27,12,31,32,61,40,34,31,25,35,44,12,17,20,6,8,79,29,7,42,8,21,32,60,10,42,31,27,51,6,8,65,8,22,50,77,48,45,12,6,8,46,7,75,8,31,71,23,33,29,35,26,28,53,11,29,25,31,37,30,69,27,31,25,24,36,42,40,48,24,28,15,40,42,40,48,30,55,15,34,42,42,48,24,59,15,74,47,30,31,49,43,41,43,16,11,17,18,25,26,39,29,15,11,6,8,39,7,76,45,8,26,71,23,33,29,29,26,35,39,35,28,53,11,29,25,31,39,69,11,32,32,36,17,18,25,26,34,29,15,11,6,8,80,7,71,20,7,77,31,7,71,22,8,18,31,20,40,17,38,25,10,32,32,63,33,32,25,61,24,16,36,62,13,34,21,6,8,34,7,71,7,19,8,28,33,6,2,29,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/src/index.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,IAAI,GACR,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO;IACpC,CAAC,CAAC,OAAO;IACT,CAAC,CAAC;QACE,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;KACb,CAAA;AACP,6CAA0C;AAC1C,8DAAgC;AAChC,6DAAmD;AASnD;;;GAGG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAM,EACsC,EAAE,CAC9C,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,KAAK,QAAQ;IACrB,CAAC,CAAC,YAAY,QAAQ;QACpB,CAAC,YAAY,qBAAM;QACnB,IAAA,kBAAU,EAAC,CAAC,CAAC;QACb,IAAA,kBAAU,EAAC,CAAC,CAAC,CAAC,CAAA;AARL,QAAA,QAAQ,YAQH;AAElB;;GAEG;AACI,MAAM,UAAU,GAAG,CAAC,CAAM,EAA0B,EAAE,CAC3D,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,KAAK,QAAQ;IACrB,CAAC,YAAY,0BAAY;IACzB,OAAQ,CAAuB,CAAC,IAAI,KAAK,UAAU;IACnD,iEAAiE;IAChE,CAAuB,CAAC,IAAI,KAAK,qBAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAA;AANrD,QAAA,UAAU,cAM2C;AAElE;;GAEG;AACI,MAAM,UAAU,GAAG,CAAC,CAAM,EAA0B,EAAE,CAC3D,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,KAAK,QAAQ;IACrB,CAAC,YAAY,0BAAY;IACzB,OAAQ,CAAuB,CAAC,KAAK,KAAK,UAAU;IACpD,OAAQ,CAAuB,CAAC,GAAG,KAAK,UAAU,CAAA;AALvC,QAAA,UAAU,cAK6B;AAEpD,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;AACzB,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,CAAA;AAC7C,MAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAA;AACxC,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAA;AAC1C,MAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAA;AAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/B,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;AAC3B,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAC7B,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAA;AACvC,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;AACnC,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;AACjC,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/B,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAC7B,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAA;AAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAA;AACvC,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAA;AACzC,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAA;AACvC,0CAA0C;AAC1C,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAA;AACrC,0CAA0C;AAC1C,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAC7B,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;AACnC,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;AACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;AACnC,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAC7B,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/B,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAA;AAC7C,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAA;AAErC,MAAM,KAAK,GAAG,CAAC,EAAwB,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AACtE,MAAM,OAAO,GAAG,CAAC,EAAwB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAA;AAMlD,MAAM,QAAQ,GAAG,CAAC,EAAO,EAAqB,EAAE,CAC9C,EAAE,KAAK,KAAK,IAAI,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,WAAW,CAAA;AAEvD,MAAM,iBAAiB,GAAG,CAAC,CAAM,EAAwB,EAAE,CACzD,CAAC,YAAY,WAAW;IACxB,CAAC,CAAC,CAAC,CAAC;QACF,OAAO,CAAC,KAAK,QAAQ;QACrB,CAAC,CAAC,WAAW;QACb,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa;QACpC,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAA;AAEtB,MAAM,iBAAiB,GAAG,CAAC,CAAM,EAAwB,EAAE,CACzD,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAgB9C;;;;GAIG;AACH,MAAM,IAAI;IACR,GAAG,CAAa;IAChB,IAAI,CAAkB;IACtB,IAAI,CAAa;IACjB,OAAO,CAAW;IAClB,YACE,GAAgB,EAChB,IAAuB,EACvB,IAAiB;QAEjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,IAAwB,CAAA;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAA;QAClC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;IACrC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;IACjD,CAAC;IACD,8BAA8B;IAC9B,qBAAqB;IACrB,WAAW,CAAC,GAAQ,IAAG,CAAC;IACxB,oBAAoB;IACpB,GAAG;QACD,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG;YAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;IACpC,CAAC;CACF;AAED;;;;;GAKG;AACH,MAAM,eAAmB,SAAQ,IAAO;IACtC,MAAM;QACJ,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA;QAClD,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;IACD,YACE,GAAgB,EAChB,IAAuB,EACvB,IAAiB;QAEjB,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;QAC/C,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA;IACnC,CAAC;CACF;AA6ID,MAAM,mBAAmB,GAAG,CAC1B,CAAyB,EACQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAA;AAEpD,MAAM,iBAAiB,GAAG,CACxB,CAAyB,EACM,EAAE,CACjC,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAA;AAE1D;;;;;;;;;;GAUG;AACH,MAAa,QAOX,SAAQ,0BAAY;IAGpB,CAAC,OAAO,CAAC,GAAY,KAAK,CAAC;IAC3B,CAAC,MAAM,CAAC,GAAY,KAAK,CAAC;IAC1B,CAAC,KAAK,CAAC,GAAkB,EAAE,CAAC;IAC5B,CAAC,MAAM,CAAC,GAAY,EAAE,CAAC;IACvB,CAAC,UAAU,CAAC,CAAU;IACtB,CAAC,QAAQ,CAAC,CAAwB;IAClC,CAAC,KAAK,CAAC,CAAU;IACjB,CAAC,OAAO,CAAC,CAAY;IACrB,CAAC,GAAG,CAAC,GAAY,KAAK,CAAC;IACvB,CAAC,WAAW,CAAC,GAAY,KAAK,CAAC;IAC/B,CAAC,YAAY,CAAC,GAAY,KAAK,CAAC;IAChC,CAAC,MAAM,CAAC,GAAY,KAAK,CAAC;IAC1B,CAAC,aAAa,CAAC,GAAY,IAAI,CAAC;IAChC,CAAC,YAAY,CAAC,GAAW,CAAC,CAAC;IAC3B,CAAC,SAAS,CAAC,GAAY,KAAK,CAAC;IAC7B,CAAC,MAAM,CAAC,CAAe;IACvB,CAAC,OAAO,CAAC,GAAY,KAAK,CAAC;IAC3B,CAAC,aAAa,CAAC,GAAW,CAAC,CAAC;IAC5B,CAAC,SAAS,CAAC,GAAY,KAAK,CAAA;IAE5B;;OAEG;IACH,QAAQ,GAAY,IAAI,CAAA;IACxB;;OAEG;IACH,QAAQ,GAAY,IAAI,CAAA;IAExB;;;;;OAKG;IACH,YACE,GAAG,IAI+B;QAElC,MAAM,OAAO,GAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/C,EAAE,CAA4B,CAAA;QAChC,KAAK,EAAE,CAAA;QACP,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC/D,MAAM,IAAI,SAAS,CACjB,kDAAkD,CACnD,CAAA;QACH,CAAC;QACD,IAAI,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAA;YACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAA;QACvB,CAAC;aAAM,IAAI,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAA;YACjC,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAA;QAC1B,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAA;YACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAA;QACvB,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAA;QAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5B,CAAC,CAAE,IAAI,mCAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAQ;YAC3C,CAAC,CAAC,IAAI,CAAA;QAER,uDAAuD;QACvD,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB,KAAK,IAAI,EAAE,CAAC;YAClD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QACpE,CAAC;QACD,uDAAuD;QACvD,IAAI,OAAO,IAAI,OAAO,CAAC,gBAAgB,KAAK,IAAI,EAAE,CAAC;YACjD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QAClE,CAAC;QAED,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAA;QAC1B,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAA;YACrB,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAA;YACf,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;YACvD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;;;;;OAQG;IACH,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,YAAY,CAAC,CAAA;IAC3B,CAAC;IAED;;OAEG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAA;IACvB,CAAC;IAED;;OAEG;IACH,IAAI,QAAQ,CAAC,IAAI;QACf,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;IAC/D,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,IAAuB;QACjC,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;IAC/D,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,CAAA;IACzB,CAAC;IAED;;OAEG;IACH,IAAI,UAAU,CAAC,GAAG;QAChB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAA;IACjE,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,OAAO,CAAC;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAA;IACpB,CAAC;IACD;;;;;;OAMG;IACH,IAAI,CAAC,OAAO,CAAC,CAAC,CAAU;QACtB,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAClC,CAAC;IAED,qDAAqD;IACrD,CAAC,KAAK,CAAC;QACL,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAA;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAA;IACpC,CAAC;IAED;;OAEG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;IACtB,CAAC;IACD;;;OAGG;IACH,IAAI,OAAO,CAAC,CAAC,IAAG,CAAC;IA0BjB,KAAK,CACH,KAAY,EACZ,QAA2C,EAC3C,EAAe;QAEf,IAAI,IAAI,CAAC,OAAO,CAAC;YAAE,OAAO,KAAK,CAAA;QAC/B,IAAI,IAAI,CAAC,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAEjD,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CACP,OAAO,EACP,MAAM,CAAC,MAAM,CACX,IAAI,KAAK,CAAC,gDAAgD,CAAC,EAC3D,EAAE,IAAI,EAAE,sBAAsB,EAAE,CACjC,CACF,CAAA;YACD,OAAO,IAAI,CAAA;QACb,CAAC;QAED,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,CAAC;YACnC,EAAE,GAAG,QAAQ,CAAA;YACb,QAAQ,GAAG,MAAM,CAAA;QACnB,CAAC;QAED,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,MAAM,CAAA;QAEhC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAA;QAExC,2DAA2D;QAC3D,+DAA+D;QAC/D,kCAAkC;QAClC,uDAAuD;QACvD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACjD,IAAI,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC7B,0CAA0C;gBAC1C,KAAK,GAAG,MAAM,CAAC,IAAI,CACjB,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,UAAU,CACjB,CAAA;YACH,CAAC;iBAAM,IAAI,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpC,0CAA0C;gBAC1C,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAC5B,CAAC;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;gBACrC,MAAM,IAAI,KAAK,CACb,sDAAsD,CACvD,CAAA;YACH,CAAC;QACH,CAAC;QAED,kDAAkD;QAClD,sDAAsD;QACtD,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACrB,oBAAoB;YACpB,qBAAqB;YACrB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAA;YAChE,oBAAoB;YAEpB,IAAI,IAAI,CAAC,OAAO,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAyB,CAAC,CAAA;;gBAC1D,IAAI,CAAC,UAAU,CAAC,CAAC,KAAyB,CAAC,CAAA;YAEhD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YAEnD,IAAI,EAAE;gBAAE,EAAE,CAAC,EAAE,CAAC,CAAA;YAEd,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;QACtB,CAAC;QAED,gDAAgD;QAChD,+CAA+C;QAC/C,IAAI,CAAE,KAAiC,CAAC,MAAM,EAAE,CAAC;YAC/C,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YACnD,IAAI,EAAE;gBAAE,EAAE,CAAC,EAAE,CAAC,CAAA;YACd,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;QACtB,CAAC;QAED,8DAA8D;QAC9D,qDAAqD;QACrD,IACE,OAAO,KAAK,KAAK,QAAQ;YACzB,oDAAoD;YACpD,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,EAC1D,CAAC;YACD,wCAAwC;YACxC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACtC,CAAC;QAED,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7C,wCAAwC;YACxC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACpC,CAAC;QAED,iEAAiE;QACjE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAA;QAEhE,IAAI,IAAI,CAAC,OAAO,CAAC;YAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAyB,CAAC,CAAA;;YAC1D,IAAI,CAAC,UAAU,CAAC,CAAC,KAAyB,CAAC,CAAA;QAEhD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QAEnD,IAAI,EAAE;YAAE,EAAE,CAAC,EAAE,CAAC,CAAA;QAEd,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;IACtB,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,IAAI,CAAC,CAAiB;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC;YAAE,OAAO,IAAI,CAAA;QAChC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;QAEvB,IACE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxB,CAAC,KAAK,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAC7B,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;YACtB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,IAAI,IAAI,CAAC,UAAU,CAAC;YAAE,CAAC,GAAG,IAAI,CAAA;QAE9B,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACjD,mEAAmE;YACnE,4BAA4B;YAC5B,IAAI,CAAC,MAAM,CAAC,GAAG;gBACb,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACb,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;oBACvB,CAAC,CAAC,MAAM,CAAC,MAAM,CACX,IAAI,CAAC,MAAM,CAAa,EACxB,IAAI,CAAC,YAAY,CAAC,CACnB,CAAU;aAChB,CAAA;QACH,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAU,CAAC,CAAA;QAC3D,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;QACtB,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,KAAY;QACnC,IAAI,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAA;aACpC,CAAC;YACJ,MAAM,CAAC,GAAG,KAAgC,CAAA;YAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI;gBAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAA;iBAChD,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAU,CAAA;gBACrC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAU,CAAA;gBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;YACzB,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAU,CAAA;gBACxC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAU,CAAA;gBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;YACzB,CAAC;QACH,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAExB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAE1D,OAAO,KAAK,CAAA;IACd,CAAC;IAUD,GAAG,CACD,KAA4B,EAC5B,QAA2C,EAC3C,EAAe;QAEf,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE,CAAC;YAChC,EAAE,GAAG,KAAmB,CAAA;YACxB,KAAK,GAAG,SAAS,CAAA;QACnB,CAAC;QACD,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,CAAC;YACnC,EAAE,GAAG,QAAQ,CAAA;YACb,QAAQ,GAAG,MAAM,CAAA;QACnB,CAAC;QACD,IAAI,KAAK,KAAK,SAAS;YAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACpD,IAAI,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;QAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;QAErB,0DAA0D;QAC1D,6BAA6B;QAC7B,yDAAyD;QACzD,uDAAuD;QACvD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;QAC1D,OAAO,IAAI,CAAA;IACb,CAAC;IAED,+CAA+C;IAC/C,CAAC,MAAM,CAAC;QACN,IAAI,IAAI,CAAC,SAAS,CAAC;YAAE,OAAM;QAE3B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;QACxB,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAA;QACpB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;QACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACnB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM;YAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAA;aACjC,IAAI,IAAI,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACzB,CAAC;IAED;;;;;;;;OAQG;IACH,MAAM;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;IACvB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAA;QACrB,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;QACnB,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;IACzB,CAAC;IAED;;OAEG;IACH,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,CAAA;IACxB,CAAC;IAED;;;OAGG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;IACtB,CAAC;IAED;;OAEG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,CAAA;IACrB,CAAC;IAED,CAAC,UAAU,CAAC,CAAC,KAAY;QACvB,IAAI,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;;YACxC,IAAI,CAAC,YAAY,CAAC,IAAK,KAAiC,CAAC,MAAM,CAAA;QACpE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC1B,CAAC;IAED,CAAC,WAAW,CAAC;QACX,IAAI,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;;YAE3C,IAAI,CAAC,YAAY,CAAC,IAChB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CACf,CAAC,MAAM,CAAA;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAW,CAAA;IACtC,CAAC;IAED,CAAC,KAAK,CAAC,CAAC,UAAmB,KAAK;QAC9B,GAAG,CAAC,CAAA,CAAC,QACH,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EACpB;QAED,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACxE,CAAC;IAED,CAAC,UAAU,CAAC,CAAC,KAAY;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA;IACtB,CAAC;IAED;;;;OAIG;IACH,IAAI,CAA8B,IAAO,EAAE,IAAkB;QAC3D,IAAI,IAAI,CAAC,SAAS,CAAC;YAAE,OAAO,IAAI,CAAA;QAChC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;QAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA;QAC/B,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;QACjB,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAA;;YAC7D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,KAAK,KAAK,CAAA;QAClC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAA;QAErC,0CAA0C;QAC1C,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,IAAI,CAAC,GAAG;gBAAE,IAAI,CAAC,GAAG,EAAE,CAAA;QAC1B,CAAC;aAAM,CAAC;YACN,kEAAkE;YAClE,gEAAgE;YAChE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CACd,CAAC,IAAI,CAAC,WAAW;gBACf,CAAC,CAAC,IAAI,IAAI,CAAQ,IAAuB,EAAE,IAAI,EAAE,IAAI,CAAC;gBACtD,CAAC,CAAC,IAAI,eAAe,CAAQ,IAAuB,EAAE,IAAI,EAAE,IAAI,CAAC,CACpE,CAAA;YACD,IAAI,IAAI,CAAC,KAAK,CAAC;gBAAE,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;;gBACvC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;QACrB,CAAC;QAED,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CAA8B,IAAO;QACzC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC;YACN,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAA;gBACvB,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;YAClB,CAAC;;gBAAM,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACpD,CAAC,CAAC,MAAM,EAAE,CAAA;QACZ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,WAAW,CACT,EAAS,EACT,OAAwC;QAExC,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;IAC7B,CAAC;IAED;;;;;;;;;;;;;;;;OAgBG;IACH,EAAE,CACA,EAAS,EACT,OAAwC;QAExC,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAClB,EAAqB,EACrB,OAA+B,CAChC,CAAA;QACD,IAAI,EAAE,KAAK,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;YACvB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAA;YACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;YAChB,CAAC;QACH,CAAC;aAAM,IAAI,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;YACzD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QACxB,CAAC;aAAM,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YAC7C,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YACd,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAA;QAC7B,CAAC;aAAM,IAAI,EAAE,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YACjD,MAAM,CAAC,GAAG,OAAyC,CAAA;YACnD,IAAI,IAAI,CAAC,KAAK,CAAC;gBAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;;gBAC1D,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAA;QACxC,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC;IAED;;OAEG;IACH,cAAc,CACZ,EAAS,EACT,OAAwC;QAExC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;IAC9B,CAAC;IAED;;;;;;;OAOG;IACH,GAAG,CACD,EAAS,EACT,OAAwC;QAExC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CACnB,EAAqB,EACrB,OAA+B,CAChC,CAAA;QACD,iEAAiE;QACjE,kEAAkE;QAClE,wDAAwD;QACxD,IAAI,EAAE,KAAK,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;YACnD,IACE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;gBACzB,CAAC,IAAI,CAAC,SAAS,CAAC;gBAChB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EACnB,CAAC;gBACD,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAA;YACvB,CAAC;QACH,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC;IAED;;;;;;;OAOG;IACH,kBAAkB,CAA6B,EAAU;QACvD,MAAM,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAC,EAAiC,CAAC,CAAA;QACvE,IAAI,EAAE,KAAK,MAAM,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;YACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAA;YACvB,CAAC;QACH,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,CAAA;IAC1B,CAAC;IAED,CAAC,cAAc,CAAC;QACd,IACE,CAAC,IAAI,CAAC,YAAY,CAAC;YACnB,CAAC,IAAI,CAAC,WAAW,CAAC;YAClB,CAAC,IAAI,CAAC,SAAS,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,EACT,CAAC;YACD,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAA;YACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAChB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACnB,IAAI,IAAI,CAAC,MAAM,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YACpC,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAA;QAC5B,CAAC;IACH,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;OAuBG;IACH,IAAI,CACF,EAAS,EACT,GAAG,IAAmB;QAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACpB,kEAAkE;QAClE,IACE,EAAE,KAAK,OAAO;YACd,EAAE,KAAK,OAAO;YACd,EAAE,KAAK,SAAS;YAChB,IAAI,CAAC,SAAS,CAAC,EACf,CAAC;YACD,OAAO,KAAK,CAAA;QACd,CAAC;aAAM,IAAI,EAAE,KAAK,MAAM,EAAE,CAAC;YACzB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;gBAC/B,CAAC,CAAC,KAAK;gBACP,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;oBACb,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAa,CAAC,CAAC,EAAE,IAAI,CAAC;oBACpD,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAa,CAAC,CAAA;QACnC,CAAC;aAAM,IAAI,EAAE,KAAK,KAAK,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAA;QACxB,CAAC;aAAM,IAAI,EAAE,KAAK,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;YACnB,6CAA6C;YAC7C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAAE,OAAO,KAAK,CAAA;YACxD,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YAC/B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAA;YAChC,OAAO,GAAG,CAAA;QACZ,CAAC;aAAM,IAAI,EAAE,KAAK,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAA;YAC1B,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YACvB,MAAM,GAAG,GACP,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM;gBAC7C,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;gBAC3B,CAAC,CAAC,KAAK,CAAA;YACX,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;YACtB,OAAO,GAAG,CAAA;QACZ,CAAC;aAAM,IAAI,EAAE,KAAK,QAAQ,EAAE,CAAC;YAC3B,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YAChC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;YACtB,OAAO,GAAG,CAAA;QACZ,CAAC;aAAM,IAAI,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,WAAW,EAAE,CAAC;YACjD,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC1B,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAA;YAC3B,OAAO,GAAG,CAAA;QACZ,CAAC;QAED,2BAA2B;QAC3B,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,EAAY,EAAE,GAAG,IAAI,CAAC,CAAA;QAC7C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;QACtB,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,QAAQ,CAAC,CAAC,IAAW;QACpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAa,CAAC,KAAK,KAAK;gBAAE,IAAI,CAAC,KAAK,EAAE,CAAA;QACzD,CAAC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QAC9D,IAAI,CAAC,cAAc,CAAC,EAAE,CAAA;QACtB,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,OAAO,CAAC;QACP,IAAI,IAAI,CAAC,WAAW,CAAC;YAAE,OAAO,KAAK,CAAA;QAEnC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAA;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC;YAChB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;YACvC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAA;IACtB,CAAC;IAED,CAAC,QAAQ,CAAC;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;YAChC,IAAI,IAAI,EAAE,CAAC;gBACT,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC5B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAa,CAAC,CAAA;gBAC7B,CAAC;gBACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBAAE,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;YAChD,CAAC;QACH,CAAC;QAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,CAAC,CAAC,GAAG,EAAE,CAAA;QACT,CAAC;QACD,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC7B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;QAC9B,OAAO,GAAG,CAAA;IACZ,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAO;QACX,MAAM,GAAG,GAAqC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YAC9D,UAAU,EAAE,CAAC;SACd,CAAC,CAAA;QACF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,GAAG,CAAC,UAAU,GAAG,CAAC,CAAA;QACzC,oDAAoD;QACpD,+BAA+B;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;QACxB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;YAClB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACX,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,GAAG,CAAC,UAAU,IAAK,CAA6B,CAAC,MAAM,CAAA;QAC3D,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,CAAA;QACP,OAAO,GAAG,CAAA;IACZ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,MAAM;QACV,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;QAChD,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAA;QAChC,OAAO,CACL,IAAI,CAAC,QAAQ,CAAC;YACZ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACd,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAe,EAAE,GAAG,CAAC,UAAU,CAAC,CAC1C,CAAA;IACZ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;YAC/D,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;YAClC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;;;OAIG;IACH,CAAC,MAAM,CAAC,aAAa,CAAC;QACpB,8DAA8D;QAC9D,cAAc;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;QACvB,IAAI,OAAO,GAAG,KAAK,CAAA;QACnB,MAAM,IAAI,GAAG,KAAK,IAAyC,EAAE;YAC3D,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,OAAO,GAAG,IAAI,CAAA;YACd,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAA;QACzC,CAAC,CAAA;QACD,MAAM,IAAI,GAAG,GAAyC,EAAE;YACtD,IAAI,OAAO;gBAAE,OAAO,IAAI,EAAE,CAAA;YAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;YACvB,IAAI,GAAG,KAAK,IAAI;gBAAE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;YAErE,IAAI,IAAI,CAAC,GAAG,CAAC;gBAAE,OAAO,IAAI,EAAE,CAAA;YAE5B,IAAI,OAA8C,CAAA;YAClD,IAAI,MAA8B,CAAA;YAClC,MAAM,KAAK,GAAG,CAAC,EAAW,EAAE,EAAE;gBAC5B,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;gBACtB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;gBAC9B,IAAI,EAAE,CAAA;gBACN,MAAM,CAAC,EAAE,CAAC,CAAA;YACZ,CAAC,CAAA;YACD,MAAM,MAAM,GAAG,CAAC,KAAY,EAAE,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;gBACtB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;gBAC9B,IAAI,CAAC,KAAK,EAAE,CAAA;gBACZ,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACvC,CAAC,CAAA;YACD,MAAM,KAAK,GAAG,GAAG,EAAE;gBACjB,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;gBACxB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;gBACxB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;gBAC9B,IAAI,EAAE,CAAA;gBACN,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAA;YAC3C,CAAC,CAAA;YACD,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAA;YAC5D,OAAO,IAAI,OAAO,CAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACrD,MAAM,GAAG,GAAG,CAAA;gBACZ,OAAO,GAAG,GAAG,CAAA;gBACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;gBAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;gBACzB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;gBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;YAC3B,CAAC,CAAC,CAAA;QACJ,CAAC,CAAA;QAED,OAAO;YACL,IAAI;YACJ,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,IAAI;YACZ,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAA;YACb,CAAC;SACF,CAAA;IACH,CAAC;IAED;;;;;OAKG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,8DAA8D;QAC9D,cAAc;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;QACvB,IAAI,OAAO,GAAG,KAAK,CAAA;QACnB,MAAM,IAAI,GAAG,GAA+B,EAAE;YAC5C,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YACrB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;YACzB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YACrB,OAAO,GAAG,IAAI,CAAA;YACd,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAA;QACzC,CAAC,CAAA;QAED,MAAM,IAAI,GAAG,GAAgC,EAAE;YAC7C,IAAI,OAAO;gBAAE,OAAO,IAAI,EAAE,CAAA;YAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;YACzB,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAA;QACzD,CAAC,CAAA;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QAE1B,OAAO;YACL,IAAI;YACJ,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,IAAI;YACZ,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACf,OAAO,IAAI,CAAA;YACb,CAAC;SACF,CAAA;IACH,CAAC;IAED;;;;;;;;;;;OAWG;IACH,OAAO,CAAC,EAAY;QAClB,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACpB,IAAI,EAAE;gBAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;;gBACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACzB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;QAEtB,sDAAsD;QACtD,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;QAEtB,MAAM,EAAE,GAAG,IAEV,CAAA;QACD,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAAE,EAAE,CAAC,KAAK,EAAE,CAAA;QAE/D,IAAI,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;QAC9B,qDAAqD;;YAChD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QAEzB,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;;OAMG;IACH,MAAM,KAAK,QAAQ;QACjB,OAAO,gBAAQ,CAAA;IACjB,CAAC;CACF;AAn/BD,4BAm/BC","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/pattern.js":{"lineLengths":[14,74,63,26,42,46,43,4,68,11,4,16,18,15,12,12,15,11,17,14,12,17,28,58,43,55,10,37,52,10,54,82,10,42,49,55,10,41,35,29,35,76,33,29,30,36,49,50,56,36,26,32,46,70,67,39,33,35,35,18,58,58,51,48,56,14,60,58,55,39,33,35,35,18,36,36,51,48,56,14,10,6,8,54,8,16,47,6,8,45,8,17,67,6,8,45,8,19,72,6,8,42,8,17,65,6,8,64,8,19,35,32,37,40,78,51,69,6,8,59,8,16,46,6,8,75,8,13,38,31,29,40,102,51,41,45,27,6,8,63,8,14,38,43,24,29,46,41,36,36,49,31,49,30,6,27,27,72,75,50,8,65,8,16,38,45,26,31,46,41,39,49,46,6,43,55,57,8,57,8,19,38,48,29,34,51,38,35,6,8,54,8,13,40,83,14,18,6,8,73,24,8,28,38,34,36,6,8,75,8,27,78,26,38,21,6,2,27,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/walker.js":{"lineLengths":[14,63,69,4,75,12,3,11,4,40,44,50,105,67,18,4,62,4,17,10,14,10,22,20,21,20,13,10,12,14,25,40,34,26,26,75,71,56,64,45,58,85,36,14,10,70,28,30,51,29,27,39,58,43,16,10,6,21,71,6,29,56,6,30,14,28,6,15,30,34,20,29,29,28,64,18,10,6,19,34,20,30,28,18,10,15,33,37,10,6,68,45,33,38,30,17,34,62,22,34,21,10,58,50,74,47,34,68,38,14,33,10,46,6,31,21,74,42,54,33,37,39,55,33,14,25,6,31,38,30,17,34,58,22,34,21,10,58,48,74,45,69,36,14,10,46,6,31,30,20,70,62,51,35,10,86,26,73,37,39,31,10,24,76,40,10,15,76,85,32,22,66,10,6,38,51,15,43,6,36,49,15,43,6,35,30,34,18,29,85,6,47,43,25,34,18,27,80,20,10,53,78,69,66,23,29,31,22,11,74,34,26,21,63,10,54,76,26,14,21,54,35,66,19,94,14,10,16,6,46,62,23,29,31,22,11,74,34,26,21,63,10,73,21,69,10,16,6,39,30,34,18,29,89,6,51,43,25,34,18,27,84,20,10,53,78,69,66,23,29,31,22,11,74,34,26,48,10,54,76,26,14,21,46,60,10,16,6,50,62,23,29,31,22,11,74,34,26,48,10,73,21,73,10,16,6,2,29,36,25,40,37,6,19,29,6,19,34,38,37,37,10,42,58,44,45,18,23,39,18,16,12,29,6,17,34,38,37,35,10,69,58,38,42,12,29,6,2,33,36,13,40,37,49,33,30,12,55,56,6,19,31,35,26,6,15,34,34,40,78,16,10,15,74,10,29,6,19,37,35,10,77,29,6,2,33,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/ignore.js":{"lineLengths":[14,55,35,67,46,63,25,42,46,56,15,44,21,15,4,42,4,15,14,22,14,22,14,12,96,28,28,36,36,34,24,23,21,20,19,24,34,22,29,28,11,35,27,6,15,76,73,76,48,76,78,32,80,77,30,79,49,64,50,38,47,34,41,59,14,45,62,64,32,35,14,33,85,78,71,45,26,39,17,39,28,30,51,21,51,14,10,6,17,39,42,46,42,41,57,29,10,41,57,29,10,22,6,25,45,54,49,35,29,10,49,35,29,10,22,6,2,25,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/processor.js":{"lineLengths":[14,70,63,94,42,4,66,4,23,11,37,28,6,13,56,6,33,77,6,35,44,49,20,46,13,71,6,2,41,4,67,73,67,4,20,23,35,56,48,73,6,30,16,62,18,23,23,12,6,2,35,4,72,21,4,17,23,27,36,20,10,45,20,76,36,14,10,13,47,6,18,45,30,21,64,10,29,21,6,16,61,6,13,67,6,2,29,4,55,3,67,36,4,18,20,33,31,14,12,9,10,40,26,37,31,30,75,6,40,34,62,73,48,50,57,41,83,47,24,77,35,29,45,29,54,30,18,23,36,18,14,30,26,19,22,33,66,43,40,23,32,32,14,35,35,27,63,30,61,14,68,50,63,41,68,44,67,65,26,14,51,57,61,73,77,81,43,35,53,51,18,44,44,70,70,66,76,18,23,39,81,81,46,50,45,36,66,78,58,26,22,18,14,44,47,14,10,21,6,23,37,6,14,62,6,63,46,50,32,37,52,66,38,35,46,55,45,45,50,70,18,48,62,18,23,62,18,14,10,24,6,47,51,38,54,14,34,76,81,80,82,72,58,51,18,47,65,52,22,61,55,22,18,14,10,63,21,20,39,42,55,31,29,30,63,14,36,38,42,37,45,14,45,63,14,10,6,39,29,20,21,50,10,15,40,10,6,39,32,27,20,21,50,10,15,40,10,6,2,31,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/has-magic.js":{"lineLengths":[14,63,27,42,4,75,31,3,79,78,75,79,79,78,4,46,35,29,6,31,62,25,6,18,3,29,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.js":{"lineLengths":[14,70,70,3,59,52,47,45,209,6,56,69,35,52,55,36,57,55,76,6,3,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/index.js":{"lineLengths":[14,1,4,24,4,1,8,9,20,34,32,30,26,30,30,26,30,34,39,42,46,40,54,35,48,41,8,8,24,40,8,9,9,11,32,14,35,56,4,1,15,32,47,4,43,2,26,26,1,4,21,4,1,27,1,4,29,4,1,36,1,4,9,4,1,19,1,4,22,4,1,29,1,4,28,4,1,14,75,10,1,4,17,4,1,22,17,19,18,3,1,4,30,3,64,38,10,3,4,1,22,53,36,3,1,4,20,3,64,24,10,3,4,1,38,1,4,53,40,3,52,4,21,1,4,73,3,36,16,4,34,23,41,5,22,34,5,2,1,4,65,3,26,30,15,4,1,32,21,50,72,23,25,24,18,22,24,23,45,21,16,20,72,27,31,28,50,2,1,4,63,24,4,32,49,1,4,28,3,17,3,10,36,14,21,3,36,18,21,7,3,18,3,10,30,36,19,21,7,3,27,34,15,4,1,44,51,83,4,56,15,3,1,4,69,42,3,10,43,71,21,7,3,32,3,10,43,35,21,7,3,25,45,34,34,15,4,1,61,14,22,69,6,27,39,12,26,9,6,36,42,69,40,34,46,39,10,43,30,6,48,4,15,3,47,25,37,42,38,25,73,38,16,8,28,20,8,4,25,3,1,4,76,81,3,29,24,15,4,1,45,50,23,15,3,1,4,63,3,28,22,15,4,1,47,51,25,15,3,1,4,71,3,13,3,26,23,27,26,3,26,24,28,26,3,26,36,28,26,3,24,34,15,4,1,43,83,3,1,4,65,3,13,3,52,3,30,26,26,3,30,38,26,3,26,34,15,4,1,45,77,3,1,4,27,3,13,3,27,25,33,3,30,34,15,4,1,45,35,29,11,35,4,15,3,1,4,48,3,31,28,21,15,4,1,54,35,30,32,4,41,3,1,4,38,3,26,27,20,15,4,1,54,32,22,14,46,3,63,37,16,82,93,6,20,26,31,34,46,41,53,68,30,18,10,37,10,51,80,55,13,33,47,6,6,17,3,1,4,31,3,27,34,15,4,1,46,34,15,3,1,4,20,3,32,34,16,4,1,47,34,14,77,4,45,1,14,37,1,43,38,16,81,70,1,54,58,38,27,57,1,17,59,1,18,23,4,1,23,32,38,27,57,1,20,25,1,18,23,4,1,26,26,23,19,25,1,45,22,1,14,18,27,18,16,26,21,24,37,28,15,3,1,4,57,3,13,3,33,30,19,44,3,24,26,102,34,15,4,1,58,41,51,57,20,15,4,18,16,20,7,4,68,51,3,1,4,59,3,32,34,15,4,1,41,19,15,3,1,4,60,3,33,34,15,4,1,42,20,15,3,1,4,81,3,33,34,15,4,1,42,60,26,40,11,22,4,15,3,1,4,56,3,33,34,15,4,1,43,21,15,3,1,4,47,76,3,34,15,4,1,50,32,15,3,1,4,30,3,29,16,4,1,39,42,33,22,8,42,22,31,8,17,20,31,6,33,18,36,4,8,19,12,33,1,24,74,34,8,13,11,45,1,26,50,24,45,1,27,60,19,23,4,1,39,31,12,15,13,116,17,30,32,36,8,19,19,39,30,30,15,25,28,8,1,21,63,21,35,28,8,30,6,4,1,13,32,27,23,31,25,27,27,29,41,31,33,151,1,71,27,65,4,96,40,4,1,22,119,1,13,39,10,8,12,1,22,24,35,55,4,28,24,1,19,28,24,6,29,43,60,59,31,67,47,43,62,52,31,26,6,1,10,38,43,4,40,45,4,35,72,4,1,17,22,42,15,54,64,57,104,13,45,6,4,14,3,1,4,44,27,3,22,25,16,4,1,53,39,26,4,1,107,37,23,75,22,16,10,38,52,19,62,10,36,53,8,20,19,69,6,4,1,66,30,16,26,4,24,59,1,50,69,53,31,4,18,3,1,4,36,3,35,38,16,4,48,92,3,1,4,54,34,3,24,34,15,4,1,59,39,28,43,28,26,4,26,25,34,90,7,4,35,19,3,1,4,60,3,16,4,1,48,39,43,35,3,40,18,41,25,85,4,26,1,20,31,15,3,39,116,25,10,8,12,10,11,12,23,1,10,47,23,36,55,78,64,74,47,59,8,45,6,1,22,52,102,6,4,1,14,41,32,65,38,48,6,22,14,6,36,80,35,48,44,49,45,20,1,16,49,34,6,34,24,49,14,6,1,20,34,23,6,31,58,46,6,31,42,208,21,6,19,26,72,23,30,46,40,23,35,38,97,40,38,36,37,35,55,33,52,35,27,37,41,72,23,8,6,1,73,64,21,6,32,34,18,58,66,30,80,37,53,68,36,61,49,36,39,30,35,38,10,10,6,18,12,67,69,35,48,31,57,20,12,1,87,39,41,41,12,34,29,76,42,28,44,45,68,44,27,41,20,18,16,27,43,44,68,43,27,40,20,18,16,14,30,68,12,12,22,28,16,8,6,20,1,18,19,56,49,68,30,51,26,10,14,6,1,26,33,32,34,8,51,49,55,24,49,8,6,30,37,35,51,20,45,59,30,30,29,26,16,14,10,29,7,21,5,37,64,44,39,47,44,50,52,28,6,25,56,38,6,41,1,21,5,1,79,35,18,19,43,31,32,67,38,8,6,1,46,44,60,71,56,40,49,8,53,8,38,63,11,19,4,3,1,62,42,58,46,18,4,1,89,47,98,18,4,1,23,75,3,1,4,89,3,88,86,3,71,3,26,43,37,11,4,57,45,30,27,7,52,45,11,39,4,15,3,55,63,15,3,1,30,32,52,50,13,26,23,2,30,23,49,33,39,43,38,17,19,6,16,51,30,15,29,8,6,30,21,5,2,1,4,51,3,24,21,15,4,1,24,33,23,46,26,55,65,2,1,59,57,85,26,42,58,46,98,2,1,4,66,3,24,21,16,4,1,24,33,23,43,2,1,4,50,3,24,21,16,4,1,28,56,2,92496],"data":{"version":3,"names":["format","require","Stream","https","http","fs","zlib","util","qs","mime","methods","FormData","formidable","debug","CookieJar","safeStringify","utils","RequestBase","http2","unzip","Response","mixin","hasOwn","request","method","url","exports","Request","end","arguments","length","module","agent","noop","define","protocols","serialize","stringify","parse","buffer","_initHeaders","request_","_header","header","call","_enableHttp2","Boolean","process","env","HTTP2_TEST","_agent","_formData","writable","_redirects","redirects","cookies","_query","qsRaw","_redirectList","_streamRequest","_lookup","undefined","once","clearTimeout","bind","inherits","prototype","bool","Error","attach","field","file","options","_data","o","filename","createReadStream","on","error","formData","_getFormData","emit","path","append","called","callback","abort","lookup","type","set","includes","getType","accept","query","value","push","Object","assign","write","data","encoding","pipe","stream","piped","_pipeContinue","req","res","isRedirect","statusCode","_maxRedirects","_redirect","_emitResponse","_aborted","_shouldUnzip","unzipObject","createUnzip","code","_buffer","headers","location","URL","href","resume","getHeaders","_headers","changesOrigin","host","cleanHeader","_endCalled","_emitRedirect","_callback","auth","user","pass","encoder","string","Buffer","from","toString","_auth","ca","cert","_ca","key","_key","pfx","isBuffer","_pfx","_passphrase","passphrase","_cert","disableTLSCerts","_disableTLSCerts","indices","strictNullHandling","_finalizeQueryString","err","urlString","retries","_retries","indexOf","protocol","pathname","search","test","split","socketPath","hostname","replace","_connectOverride","match","newHost","newPort","port","rejectUnauthorized","NODE_TLS_REJECT_UNAUTHORIZED","servername","_trustLocalhost","module_","setProtocol","setNoDelay","setHeader","response","username","password","temporaryJar","setCookies","cookie","getCookies","CookieAccessInfo","All","toValueString","_shouldRetry","_retry","fn","console","warn","_isResponseOK","message","STATUS_CODES","status","_maxRetries","listeners","_isHost","object","body","files","_end","_setTimeouts","_headerSent","contentType","getHeader","_serializer","isJSON","byteLength","_responseTimeoutTimer","max","toLowerCase","trim","multipart","redirect","responseType","_responseType","parser","_parser","image","form","isBinary","text","isText","_resBuffered","parserHandlesEnd","responseBytesLeft","_maxResponseSize","buf","destroy","timedout","Array","isArray","getProgressMonitor","lengthComputable","total","loaded","progress","Transform","_transform","chunk","direction","bufferToChunks","chunkSize","chunking","Readable","totalLength","remainder","cutoff","i","slice","remainderBuffer","getLength","connect","connectOverride","trustLocalhost","toggle","name","toUpperCase","send","parts","subtype","registry"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { format } = require('url');\nconst Stream = require('stream');\nconst https = require('https');\nconst http = require('http');\nconst fs = require('fs');\nconst zlib = require('zlib');\nconst util = require('util');\nconst qs = require('qs');\nconst mime = require('mime');\nlet methods = require('methods');\nconst FormData = require('form-data');\nconst formidable = require('formidable');\nconst debug = require('debug')('superagent');\nconst CookieJar = require('cookiejar');\nconst safeStringify = require('fast-safe-stringify');\n\nconst utils = require('../utils');\nconst RequestBase = require('../request-base');\nconst http2 = require('./http2wrapper');\nconst { unzip } = require('./unzip');\nconst Response = require('./response');\n\nconst { mixin, hasOwn } = utils;\n\nfunction request(method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nmodule.exports = request;\nexports = module.exports;\n\n/**\n * Expose `Request`.\n */\n\nexports.Request = Request;\n\n/**\n * Expose the agent function\n */\n\nexports.agent = require('./agent');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `Response`.\n */\n\nexports.Response = Response;\n\n/**\n * Define \"form\" mime type.\n */\n\nmime.define(\n  {\n    'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n  },\n  true\n);\n\n/**\n * Protocol map.\n */\n\nexports.protocols = {\n  'http:': http,\n  'https:': https,\n  'http2:': http2\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nexports.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(res, fn){\n *       fn(null, res);\n *     };\n *\n */\n\nexports.parse = require('./parsers');\n\n/**\n * Default buffering map. Can be used to set certain\n * response types to buffer/not buffer.\n *\n *     superagent.buffer['application/xml'] = true;\n */\nexports.buffer = {};\n\n/**\n * Initialize internal header tracking properties on a request instance.\n *\n * @param {Object} req the instance\n * @api private\n */\nfunction _initHeaders(request_) {\n  request_._header = {\n    // coerces header names to lowercase\n  };\n  request_.header = {\n    // preserves header name case\n  };\n}\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String|Object} url\n * @api public\n */\n\nfunction Request(method, url) {\n  Stream.call(this);\n  if (typeof url !== 'string') url = format(url);\n  this._enableHttp2 = Boolean(process.env.HTTP2_TEST); // internal only\n  this._agent = false;\n  this._formData = null;\n  this.method = method;\n  this.url = url;\n  _initHeaders(this);\n  this.writable = true;\n  this._redirects = 0;\n  this.redirects(method === 'HEAD' ? 0 : 5);\n  this.cookies = '';\n  this.qs = {};\n  this._query = [];\n  this.qsRaw = this._query; // Unused, for backwards compatibility only\n  this._redirectList = [];\n  this._streamRequest = false;\n  this._lookup = undefined;\n  this.once('end', this.clearTimeout.bind(this));\n}\n\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n * Mixin `RequestBase`.\n */\nutil.inherits(Request, Stream);\n\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Enable or Disable http2.\n *\n * Enable http2.\n *\n * ``` js\n * request.get('http://localhost/')\n *   .http2()\n *   .end(callback);\n *\n * request.get('http://localhost/')\n *   .http2(true)\n *   .end(callback);\n * ```\n *\n * Disable http2.\n *\n * ``` js\n * request = request.http2();\n * request.get('http://localhost/')\n *   .http2(false)\n *   .end(callback);\n * ```\n *\n * @param {Boolean} enable\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.http2 = function (bool) {\n  if (exports.protocols['http2:'] === undefined) {\n    throw new Error(\n      'superagent: this version of Node.js does not support http2'\n    );\n  }\n\n  this._enableHttp2 = bool === undefined ? true : bool;\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('field', Buffer.from('<b>Hello world</b>'), 'hello.html')\n *   .end(callback);\n * ```\n *\n * A filename may also be used:\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('files', 'image.jpg')\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {String|fs.ReadStream|Buffer} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    let o = options || {};\n    if (typeof options === 'string') {\n      o = { filename: options };\n    }\n\n    if (typeof file === 'string') {\n      if (!o.filename) o.filename = file;\n      debug('creating `fs.ReadStream` instance for file: %s', file);\n      file = fs.createReadStream(file);\n      file.on('error', (error) => {\n        const formData = this._getFormData();\n        formData.emit('error', error);\n      });\n    } else if (!o.filename && file.path) {\n      o.filename = file.path;\n    }\n\n    this._getFormData().append(field, file, o);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new FormData();\n    this._formData.on('error', (error) => {\n      debug('FormData error', error);\n      if (this.called) {\n        // The request has already finished and the callback was called.\n        // Silently ignore the error.\n        return;\n      }\n\n      this.callback(error);\n      this.abort();\n    });\n  }\n\n  return this._formData;\n};\n\n/**\n * Gets/sets the `Agent` to use for this HTTP request. The default (if this\n * function is not called) is to opt out of connection pooling (`agent: false`).\n *\n * @param {http.Agent} agent\n * @return {http.Agent}\n * @api public\n */\n\nRequest.prototype.agent = function (agent) {\n  if (arguments.length === 0) return this._agent;\n  this._agent = agent;\n  return this;\n};\n\n/**\n * Gets/sets the `lookup` function to use custom DNS resolver.\n *\n * @param {Function} lookup\n * @return {Function}\n * @api public\n */\n\nRequest.prototype.lookup = function (lookup) {\n  if (arguments.length === 0) return this._lookup;\n  this._lookup = lookup;\n  return this;\n};\n\n/**\n * Set _Content-Type_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  return this.set(\n    'Content-Type',\n    type.includes('/') ? type : mime.getType(type)\n  );\n};\n\n/**\n * Set _Accept_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  return this.set('Accept', type.includes('/') ? type : mime.getType(type));\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value === 'string') {\n    this._query.push(value);\n  } else {\n    Object.assign(this.qs, value);\n  }\n\n  return this;\n};\n\n/**\n * Write raw `data` / `encoding` to the socket.\n *\n * @param {Buffer|String} data\n * @param {String} encoding\n * @return {Boolean}\n * @api public\n */\n\nRequest.prototype.write = function (data, encoding) {\n  const request_ = this.request();\n  if (!this._streamRequest) {\n    this._streamRequest = true;\n  }\n\n  return request_.write(data, encoding);\n};\n\n/**\n * Pipe the request body to `stream`.\n *\n * @param {Stream} stream\n * @param {Object} options\n * @return {Stream}\n * @api public\n */\n\nRequest.prototype.pipe = function (stream, options) {\n  this.piped = true; // HACK...\n  this.buffer(false);\n  this.end();\n  return this._pipeContinue(stream, options);\n};\n\nRequest.prototype._pipeContinue = function (stream, options) {\n  this.req.once('response', (res) => {\n    // redirect\n    if (\n      isRedirect(res.statusCode) &&\n      this._redirects++ !== this._maxRedirects\n    ) {\n      return this._redirect(res) === this\n        ? this._pipeContinue(stream, options)\n        : undefined;\n    }\n\n    this.res = res;\n    this._emitResponse();\n    if (this._aborted) return;\n\n    if (this._shouldUnzip(res)) {\n      const unzipObject = zlib.createUnzip();\n      unzipObject.on('error', (error) => {\n        if (error && error.code === 'Z_BUF_ERROR') {\n          // unexpected end of file is ignored by browsers and curl\n          stream.emit('end');\n          return;\n        }\n\n        stream.emit('error', error);\n      });\n      res.pipe(unzipObject).pipe(stream, options);\n      // don't emit 'end' until unzipObject has completed writing all its data.\n      unzipObject.once('end', () => this.emit('end'));\n    } else {\n      res.pipe(stream, options);\n      res.once('end', () => this.emit('end'));\n    }\n  });\n  return stream;\n};\n\n/**\n * Enable / disable buffering.\n *\n * @return {Boolean} [val]\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.buffer = function (value) {\n  this._buffer = value !== false;\n  return this;\n};\n\n/**\n * Redirect to `url\n *\n * @param {IncomingMessage} res\n * @return {Request} for chaining\n * @api private\n */\n\nRequest.prototype._redirect = function (res) {\n  let url = res.headers.location;\n  if (!url) {\n    return this.callback(new Error('No location header for redirect'), res);\n  }\n\n  debug('redirect %s -> %s', this.url, url);\n\n  // location\n  url = new URL(url, this.url).href;\n\n  // ensure the response is being consumed\n  // this is required for Node v0.10+\n  res.resume();\n\n  let headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;\n\n  const changesOrigin = new URL(url).host !== new URL(this.url).host;\n\n  // implementation of 302 following defacto standard\n  if (res.statusCode === 301 || res.statusCode === 302) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force GET\n    this.method = this.method === 'HEAD' ? 'HEAD' : 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 303 is always GET\n  if (res.statusCode === 303) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force method\n    this.method = 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 307 preserves method\n  // 308 preserves method\n  delete headers.host;\n\n  delete this.req;\n  delete this._formData;\n\n  // remove all add header except User-Agent\n  _initHeaders(this);\n\n  // redirect\n  this.res = res;\n  this._endCalled = false;\n  this.url = url;\n  this.qs = {};\n  this._query.length = 0;\n  this.set(headers);\n  this._emitRedirect();\n  this._redirectList.push(this.url);\n  this.end(this._callback);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * Examples:\n *\n *   .auth('tobi', 'learnboost')\n *   .auth('tobi:learnboost')\n *   .auth('tobi')\n *   .auth(accessToken, { type: 'bearer' })\n *\n * @param {String} user\n * @param {String} [pass]\n * @param {Object} [options] options with authorization type 'basic' or 'bearer' ('basic' is default)\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = { type: 'basic' };\n  }\n\n  const encoder = (string) => Buffer.from(string).toString('base64');\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Set the certificate authority option for https request.\n *\n * @param {Buffer | Array} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.ca = function (cert) {\n  this._ca = cert;\n  return this;\n};\n\n/**\n * Set the client certificate key option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.key = function (cert) {\n  this._key = cert;\n  return this;\n};\n\n/**\n * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.pfx = function (cert) {\n  if (typeof cert === 'object' && !Buffer.isBuffer(cert)) {\n    this._pfx = cert.pfx;\n    this._passphrase = cert.passphrase;\n  } else {\n    this._pfx = cert;\n  }\n\n  return this;\n};\n\n/**\n * Set the client certificate option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.cert = function (cert) {\n  this._cert = cert;\n  return this;\n};\n\n/**\n * Do not reject expired or invalid TLS certs.\n * sets `rejectUnauthorized=true`. Be warned that this allows MITM attacks.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.disableTLSCerts = function () {\n  this._disableTLSCerts = true;\n  return this;\n};\n\n/**\n * Return an http[s] request.\n *\n * @return {OutgoingMessage}\n * @api private\n */\n\n// eslint-disable-next-line complexity\nRequest.prototype.request = function () {\n  if (this.req) return this.req;\n\n  const options = {};\n\n  try {\n    const query = qs.stringify(this.qs, {\n      indices: false,\n      strictNullHandling: true\n    });\n    if (query) {\n      this.qs = {};\n      this._query.push(query);\n    }\n\n    this._finalizeQueryString();\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  let { url: urlString } = this;\n  const retries = this._retries;\n\n  // default to http://\n  if (urlString.indexOf('http') !== 0) urlString = `http://${urlString}`;\n  const url = new URL(urlString);\n  let { protocol } = url;\n  let path = `${url.pathname}${url.search}`;\n\n  // support unix sockets\n  if (/^https?\\+unix:/.test(protocol) === true) {\n    // get the protocol\n    protocol = `${protocol.split('+')[0]}:`;\n\n    // get the socket path\n    options.socketPath = url.hostname.replace(/%2F/g, '/');\n    url.host = '';\n    url.hostname = '';\n  }\n\n  // Override IP address of a hostname\n  if (this._connectOverride) {\n    const { hostname } = url;\n    const match =\n      hostname in this._connectOverride\n        ? this._connectOverride[hostname]\n        : this._connectOverride['*'];\n    if (match) {\n      // backup the real host\n      if (!this._header.host) {\n        this.set('host', url.host);\n      }\n\n      let newHost;\n      let newPort;\n\n      if (typeof match === 'object') {\n        newHost = match.host;\n        newPort = match.port;\n      } else {\n        newHost = match;\n        newPort = url.port;\n      }\n\n      // wrap [ipv6]\n      url.host = /:/.test(newHost) ? `[${newHost}]` : newHost;\n      if (newPort) {\n        url.host += `:${newPort}`;\n        url.port = newPort;\n      }\n\n      url.hostname = newHost;\n    }\n  }\n\n  // options\n  options.method = this.method;\n  options.port = url.port;\n  options.path = path;\n  options.host = url.hostname;\n  options.ca = this._ca;\n  options.key = this._key;\n  options.pfx = this._pfx;\n  options.cert = this._cert;\n  options.passphrase = this._passphrase;\n  options.agent = this._agent;\n  options.lookup = this._lookup;\n  options.rejectUnauthorized =\n    typeof this._disableTLSCerts === 'boolean'\n      ? !this._disableTLSCerts\n      : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0';\n\n  // Allows request.get('https://1.2.3.4/').set('Host', 'example.com')\n  if (this._header.host) {\n    options.servername = this._header.host.replace(/:\\d+$/, '');\n  }\n\n  if (\n    this._trustLocalhost &&\n    /^(?:localhost|127\\.0\\.0\\.\\d+|(0*:)+:0*1)$/.test(url.hostname)\n  ) {\n    options.rejectUnauthorized = false;\n  }\n\n  // initiate request\n  const module_ = this._enableHttp2\n    ? exports.protocols['http2:'].setProtocol(protocol)\n    : exports.protocols[protocol];\n\n  // request\n  this.req = module_.request(options);\n  const { req } = this;\n\n  // set tcp no delay\n  req.setNoDelay(true);\n\n  if (options.method !== 'HEAD') {\n    req.setHeader('Accept-Encoding', 'gzip, deflate');\n  }\n\n  this.protocol = protocol;\n  this.host = url.host;\n\n  // expose events\n  req.once('drain', () => {\n    this.emit('drain');\n  });\n\n  req.on('error', (error) => {\n    // flag abortion here for out timeouts\n    // because node will emit a faux-error \"socket hang up\"\n    // when request is aborted before a connection is made\n    if (this._aborted) return;\n    // if not the same, we are in the **old** (cancelled) request,\n    // so need to continue (same as for above)\n    if (this._retries !== retries) return;\n    // if we've received a response then we don't want to let\n    // an error in the request blow up the response\n    if (this.response) return;\n    this.callback(error);\n  });\n\n  // auth\n  if (url.username || url.password) {\n    this.auth(url.username, url.password);\n  }\n\n  if (this.username && this.password) {\n    this.auth(this.username, this.password);\n  }\n\n  for (const key in this.header) {\n    if (hasOwn(this.header, key)) req.setHeader(key, this.header[key]);\n  }\n\n  // add cookies\n  if (this.cookies) {\n    if (hasOwn(this._header, 'cookie')) {\n      // merge\n      const temporaryJar = new CookieJar.CookieJar();\n      temporaryJar.setCookies(this._header.cookie.split('; '));\n      temporaryJar.setCookies(this.cookies.split('; '));\n      req.setHeader(\n        'Cookie',\n        temporaryJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString()\n      );\n    } else {\n      req.setHeader('Cookie', this.cookies);\n    }\n  }\n\n  return req;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  // Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.\n  const fn = this._callback || noop;\n  this.clearTimeout();\n  if (this.called) return console.warn('superagent: double callback bug');\n  this.called = true;\n\n  if (!error) {\n    try {\n      if (!this._isResponseOK(res)) {\n        let message = 'Unsuccessful HTTP response';\n        if (res) {\n          message = http.STATUS_CODES[res.status] || message;\n        }\n\n        error = new Error(message);\n        error.status = res ? res.status : undefined;\n      }\n    } catch (err) {\n      error = err;\n      error.status = error.status || (res ? res.status : undefined);\n    }\n  }\n\n  // It's important that the callback is called outside try/catch\n  // to avoid double callback\n  if (!error) {\n    return fn(null, res);\n  }\n\n  error.response = res;\n  if (this._maxRetries) error.retries = this._retries - 1;\n\n  // only emit error event if there is a listener\n  // otherwise we assume the callback to `.end()` will get the error\n  if (error && this.listeners('error').length > 0) {\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n\n/**\n * Check if `obj` is a host object,\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  return (\n    Buffer.isBuffer(object) ||\n    object instanceof Stream ||\n    object instanceof FormData\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(err, res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype._emitResponse = function (body, files) {\n  const response = new Response(this);\n  this.response = response;\n  response.redirects = this._redirectList;\n  if (undefined !== body) {\n    response.body = body;\n  }\n\n  response.files = files;\n  if (this._endCalled) {\n    response.pipe = function () {\n      throw new Error(\n        \"end() has already been called, so it's too late to start piping\"\n      );\n    };\n  }\n\n  this.emit('response', response);\n  return response;\n};\n\n/**\n * Emit `redirect` event, passing an instanceof `Response`.\n *\n * @api private\n */\n\nRequest.prototype._emitRedirect = function () {\n  const response = new Response(this);\n  response.redirects = this._redirectList;\n  this.emit('redirect', response);\n};\n\nRequest.prototype.end = function (fn) {\n  this.request();\n  debug('%s %s', this.method, this.url);\n\n  if (this._endCalled) {\n    throw new Error(\n      '.end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  this._end();\n};\n\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  let data = this._data;\n  const { req } = this;\n  const { method } = this;\n\n  this._setTimeouts();\n\n  // body\n  if (method !== 'HEAD' && !req._headerSent) {\n    // serialize stuff\n    if (typeof data !== 'string') {\n      let contentType = req.getHeader('Content-Type');\n      // Parse out just the content type from the header (ignore the charset)\n      if (contentType) contentType = contentType.split(';')[0];\n      let serialize = this._serializer || exports.serialize[contentType];\n      if (!serialize && isJSON(contentType)) {\n        serialize = exports.serialize['application/json'];\n      }\n\n      if (serialize) data = serialize(data);\n    }\n\n    // content-length\n    if (data && !req.getHeader('Content-Length')) {\n      req.setHeader(\n        'Content-Length',\n        Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)\n      );\n    }\n  }\n\n  // response\n  // eslint-disable-next-line complexity\n  req.once('response', (res) => {\n    debug('%s %s -> %s', this.method, this.url, res.statusCode);\n\n    if (this._responseTimeoutTimer) {\n      clearTimeout(this._responseTimeoutTimer);\n    }\n\n    if (this.piped) {\n      return;\n    }\n\n    const max = this._maxRedirects;\n    const mime = utils.type(res.headers['content-type'] || '') || 'text/plain';\n    let type = mime.split('/')[0];\n    if (type) type = type.toLowerCase().trim();\n    const multipart = type === 'multipart';\n    const redirect = isRedirect(res.statusCode);\n    const responseType = this._responseType;\n\n    this.res = res;\n\n    // redirect\n    if (redirect && this._redirects++ !== max) {\n      return this._redirect(res);\n    }\n\n    if (this.method === 'HEAD') {\n      this.emit('end');\n      this.callback(null, this._emitResponse());\n      return;\n    }\n\n    // zlib support\n    if (this._shouldUnzip(res)) {\n      unzip(req, res);\n    }\n\n    let buffer = this._buffer;\n    if (buffer === undefined && mime in exports.buffer) {\n      buffer = Boolean(exports.buffer[mime]);\n    }\n\n    let parser = this._parser;\n    if (undefined === buffer && parser) {\n      console.warn(\n        \"A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`\"\n      );\n      buffer = true;\n    }\n\n    if (!parser) {\n      if (responseType) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      } else if (multipart) {\n        const form = formidable.formidable();\n        parser = form.parse.bind(form);\n        buffer = true;\n      } else if (isBinary(mime)) {\n        parser = exports.parse.image;\n        buffer = true; // For backwards-compatibility buffering default is ad-hoc MIME-dependent\n      } else if (exports.parse[mime]) {\n        parser = exports.parse[mime];\n      } else if (type === 'text') {\n        parser = exports.parse.text;\n        buffer = buffer !== false;\n        // everyone wants their own white-labeled json\n      } else if (isJSON(mime)) {\n        parser = exports.parse['application/json'];\n        buffer = buffer !== false;\n      } else if (buffer) {\n        parser = exports.parse.text;\n      } else if (undefined === buffer) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      }\n    }\n\n    // by default only buffer text/*, json and messed up thing from hell\n    if ((undefined === buffer && isText(mime)) || isJSON(mime)) {\n      buffer = true;\n    }\n\n    this._resBuffered = buffer;\n    let parserHandlesEnd = false;\n    if (buffer) {\n      // Protectiona against zip bombs and other nuisance\n      let responseBytesLeft = this._maxResponseSize || 200000000;\n      res.on('data', (buf) => {\n        responseBytesLeft -= buf.byteLength || buf.length > 0 ? buf.length : 0;\n        if (responseBytesLeft < 0) {\n          // This will propagate through error event\n          const error = new Error('Maximum response size reached');\n          error.code = 'ETOOLARGE';\n          // Parsers aren't required to observe error event,\n          // so would incorrectly report success\n          parserHandlesEnd = false;\n          // Will not emit error event\n          res.destroy(error);\n          // so we do callback now\n          this.callback(error, null);\n        }\n      });\n    }\n\n    if (parser) {\n      try {\n        // Unbuffered parsers are supposed to emit response early,\n        // which is weird BTW, because response.body won't be there.\n        parserHandlesEnd = buffer;\n\n        parser(res, (error, object, files) => {\n          if (this.timedout) {\n            // Timeout has already handled all callbacks\n            return;\n          }\n\n          // Intentional (non-timeout) abort is supposed to preserve partial response,\n          // even if it doesn't parse.\n          if (error && !this._aborted) {\n            return this.callback(error);\n          }\n\n          if (parserHandlesEnd) {\n            if (multipart) {\n              // formidable v3 always returns an array with the value in it\n              // so we need to flatten it\n              if (object) {\n                for (const key in object) {\n                  const value = object[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    object[key] = value[0];\n                  } else {\n                    object[key] = value;\n                  }\n                }\n              }\n\n              if (files) {\n                for (const key in files) {\n                  const value = files[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    files[key] = value[0];\n                  } else {\n                    files[key] = value;\n                  }\n                }\n              }\n            }\n            this.emit('end');\n            this.callback(null, this._emitResponse(object, files));\n          }\n        });\n      } catch (err) {\n        this.callback(err);\n        return;\n      }\n    }\n\n    this.res = res;\n\n    // unbuffered\n    if (!buffer) {\n      debug('unbuffered %s %s', this.method, this.url);\n      this.callback(null, this._emitResponse());\n      if (multipart) return; // allow multipart to handle end event\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        this.emit('end');\n      });\n      return;\n    }\n\n    // terminating events\n    res.once('error', (error) => {\n      parserHandlesEnd = false;\n      this.callback(error, null);\n    });\n    if (!parserHandlesEnd)\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        // TODO: unless buffering emit earlier to stream\n        this.emit('end');\n        this.callback(null, this._emitResponse());\n      });\n  });\n\n  this.emit('request', this);\n\n  const getProgressMonitor = () => {\n    const lengthComputable = true;\n    const total = req.getHeader('Content-Length');\n    let loaded = 0;\n\n    const progress = new Stream.Transform();\n    progress._transform = (chunk, encoding, callback) => {\n      loaded += chunk.length;\n      this.emit('progress', {\n        direction: 'upload',\n        lengthComputable,\n        loaded,\n        total\n      });\n      callback(null, chunk);\n    };\n\n    return progress;\n  };\n\n  const bufferToChunks = (buffer) => {\n    const chunkSize = 16 * 1024; // default highWaterMark value\n    const chunking = new Stream.Readable();\n    const totalLength = buffer.length;\n    const remainder = totalLength % chunkSize;\n    const cutoff = totalLength - remainder;\n\n    for (let i = 0; i < cutoff; i += chunkSize) {\n      const chunk = buffer.slice(i, i + chunkSize);\n      chunking.push(chunk);\n    }\n\n    if (remainder > 0) {\n      const remainderBuffer = buffer.slice(-remainder);\n      chunking.push(remainderBuffer);\n    }\n\n    chunking.push(null); // no more data\n\n    return chunking;\n  };\n\n  // if a FormData instance got created, then we send that as the request body\n  const formData = this._formData;\n  if (formData) {\n    // set headers\n    const headers = formData.getHeaders();\n    for (const i in headers) {\n      if (hasOwn(headers, i)) {\n        debug('setting FormData header: \"%s: %s\"', i, headers[i]);\n        req.setHeader(i, headers[i]);\n      }\n    }\n\n    // attempt to get \"Content-Length\" header\n    formData.getLength((error, length) => {\n      // TODO: Add chunked encoding when no length (if err)\n      if (error) debug('formData.getLength had error', error, length);\n\n      debug('got FormData Content-Length: %s', length);\n      if (typeof length === 'number') {\n        req.setHeader('Content-Length', length);\n      }\n\n      formData.pipe(getProgressMonitor()).pipe(req);\n    });\n  } else if (Buffer.isBuffer(data)) {\n    bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);\n  } else {\n    req.end(data);\n  }\n};\n\n// Check whether response has a non-0-sized gzip-encoded body\nRequest.prototype._shouldUnzip = (res) => {\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    // These aren't supposed to have any body\n    return false;\n  }\n\n  // header content is a string, and distinction between 0 and no information is crucial\n  if (res.headers['content-length'] === '0') {\n    // We know that the body is empty (unfortunately, this check does not cover chunked encoding)\n    return false;\n  }\n\n  // console.log(res);\n  return /^\\s*(?:deflate|gzip)\\s*$/.test(res.headers['content-encoding']);\n};\n\n/**\n * Overrides DNS for selected hostnames. Takes object mapping hostnames to IP addresses.\n *\n * When making a request to a URL with a hostname exactly matching a key in the object,\n * use the given IP address to connect, instead of using DNS to resolve the hostname.\n *\n * A special host `*` matches every hostname (keep redirects in mind!)\n *\n *      request.connect({\n *        'test.example.com': '127.0.0.1',\n *        'ipv6.example.com': '::1',\n *      })\n */\nRequest.prototype.connect = function (connectOverride) {\n  if (typeof connectOverride === 'string') {\n    this._connectOverride = { '*': connectOverride };\n  } else if (typeof connectOverride === 'object') {\n    this._connectOverride = connectOverride;\n  } else {\n    this._connectOverride = undefined;\n  }\n\n  return this;\n};\n\nRequest.prototype.trustLocalhost = function (toggle) {\n  this._trustLocalhost = toggle === undefined ? true : toggle;\n  return this;\n};\n\n// generate HTTP verb methods\nif (!methods.includes('del')) {\n  // create a copy so we don't cause conflicts with\n  // other packages using the methods package and\n  // npm 3.x\n  methods = [...methods];\n  methods.push('del');\n}\n\nfor (let method of methods) {\n  const name = method;\n  method = method === 'del' ? 'delete' : method;\n\n  method = method.toUpperCase();\n  request[name] = (url, data, fn) => {\n    const request_ = request(method, url);\n    if (typeof data === 'function') {\n      fn = data;\n      data = null;\n    }\n\n    if (data) {\n      if (method === 'GET' || method === 'HEAD') {\n        request_.query(data);\n      } else {\n        request_.send(data);\n      }\n    }\n\n    if (fn) request_.end(fn);\n    return request_;\n  };\n}\n\n/**\n * Check if `mime` is text and should be buffered.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api public\n */\n\nfunction isText(mime) {\n  const parts = mime.split('/');\n  let type = parts[0];\n  if (type) type = type.toLowerCase().trim();\n  let subtype = parts[1];\n  if (subtype) subtype = subtype.toLowerCase().trim();\n\n  return type === 'text' || subtype === 'x-www-form-urlencoded';\n}\n\n// This is not a catchall, but a start. It might be useful\n// in the long run to have file that includes all binary\n// content types from https://www.iana.org/assignments/media-types/media-types.xhtml\nfunction isBinary(mime) {\n  let [registry, name] = mime.split('/');\n  if (registry) registry = registry.toLowerCase().trim();\n  if (name) name = name.toLowerCase().trim();\n  return (\n    ['audio', 'font', 'image', 'video'].includes(registry) ||\n    ['gz', 'gzip'].includes(name)\n  );\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Check if we should follow the redirect `code`.\n *\n * @param {Number} code\n * @return {Boolean}\n * @api private\n */\n\nfunction isRedirect(code) {\n  return [301, 302, 303, 305, 307, 308].includes(code);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/utils.js":{"lineLengths":[14,1,4,45,3,23,20,16,4,1,58,1,4,35,3,23,20,16,4,1,28,21,48,42,31,33,43,4,17,3,1,4,29,3,23,20,16,4,1,32,21,48,42,39,57,23,4,17,3,1,4,47,3,26,27,16,4,1,51,33,35,38,22,14,23,33,26,4,17,3,1,4,32,3,26,21,16,4,31,56,3,1,4,36,3,64,16,4,64,24,71,4,77,3,38,30,39,33,6,4,3,6320],"data":{"version":3,"names":["exports","type","string_","split","shift","params","value","object","parts","key","parseLinks","url","slice","rel","cleanHeader","header","changesOrigin","host","authorization","cookie","isObject","hasOwn","Object","property","TypeError","prototype","hasOwnProperty","call","mixin","target","source"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/utils.js"],"sourcesContent":["/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (string_) => string_.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *; */)) {\n    const parts = string_.split(/ *= */);\n    const key = parts.shift();\n    const value = parts.shift();\n\n    if (key && value) object[key] = value;\n  }\n\n  return object;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *, */)) {\n    const parts = string_.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    object[rel] = url;\n  }\n\n  return object;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\nexports.isObject = (object) => {\n  return object !== null && typeof object === 'object';\n};\n\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\nexports.hasOwn =\n  Object.hasOwn ||\n  function (object, property) {\n    if (object == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    return Object.prototype.hasOwnProperty.call(new Object(object), property);\n  };\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/request-base.js":{"lineLengths":[14,1,4,68,4,8,12,9,24,1,4,25,4,1,30,1,4,35,3,15,4,1,26,1,4,27,3,34,15,4,1,51,29,44,42,22,37,35,15,3,1,4,41,3,75,3,21,15,4,1,46,21,15,3,1,4,39,58,52,3,40,3,13,3,21,32,26,3,23,34,15,4,1,56,30,15,3,1,4,44,3,94,3,21,15,4,1,50,25,15,3,1,4,17,3,134,170,121,3,41,3,53,34,15,4,1,53,49,29,31,29,17,4,34,35,24,25,44,17,25,52,17,23,48,17,17,58,8,6,4,15,3,1,4,42,3,80,3,25,26,34,15,4,1,53,45,59,29,28,21,28,15,3,1,3,82,56,3,79,90,98,3,3,47,3,138,82,1,111,82,1,4,45,59,3,31,36,51,4,61,66,18,4,29,10,56,42,44,42,20,26,6,4,1,113,5,7,16,23,48,4,18,5,70,15,64,26,69,40,4,16,3,1,4,17,3,34,16,4,1,45,23,1,10,18,21,31,4,25,25,29,22,3,1,4,19,3,29,30,21,4,1,58,34,23,27,150,6,65,31,68,18,10,51,38,18,10,44,32,36,36,30,23,10,33,52,10,8,4,56,3,52,41,3,1,4,23,4,1,44,12,15,3,49,76,31,15,3,55,14,18,4,26,34,4,48,3,1,4,31,21,3,25,20,15,4,1,47,44,3,1,4,46,65,3,72,3,25,20,16,15,4,1,61,1,4,68,21,3,13,3,21,45,38,26,3,21,70,26,3,32,23,34,15,4,1,54,25,31,57,6,17,4,45,30,15,3,1,4,26,21,3,12,3,21,31,26,3,36,4,49,44,29,15,3,1,4,72,45,3,10,27,26,21,3,27,40,21,7,3,45,69,54,34,15,4,64,50,45,64,4,20,120,4,24,30,57,6,17,4,30,29,56,6,17,4,1,31,47,63,4,36,27,4,1,57,110,15,3,1,4,51,3,29,15,4,44,23,17,4,24,45,18,30,4,23,22,15,3,78,26,18,78,13,17,28,28,13,19,63,51,13,13,13,4,15,3,1,4,58,3,53,56,56,14,60,34,15,4,1,56,61,35,30,15,3,1,4,77,3,21,34,15,4,1,49,26,15,3,1,4,79,18,3,37,34,4,55,31,45,4,29,15,3,1,4,80,70,25,3,69,15,4,1,45,11,25,19,22,26,5,3,1,4,76,23,3,13,3,24,31,25,34,26,3,22,31,33,26,3,41,31,25,28,26,3,39,31,25,33,26,3,46,30,29,34,25,3,31,34,15,4,1,39,47,36,43,24,133,4,34,31,23,38,23,6,63,53,4,1,11,43,30,119,58,6,128,40,34,41,48,56,64,13,46,6,11,23,4,42,17,4,1,21,32,15,3,1,4,43,3,3,13,3,26,30,31,34,24,26,3,37,30,31,34,38,41,14,26,3,3,26,34,15,4,1,52,70,58,15,3,1,4,44,3,16,4,59,39,15,62,4,55,1,20,41,22,63,46,37,15,27,8,72,6,4,3,1,29,51,31,3,1,4,39,3,16,4,1,74,23,12,4,61,27,31,23,24,30,16,24,3,51,21,1,14,39,37,65,23,4,1,22,62,52,86,31,4,3,46028],"data":{"version":3,"names":["isObject","hasOwn","require","module","exports","RequestBase","prototype","clearTimeout","_timer","_responseTimeoutTimer","_uploadTimeoutTimer","parse","fn","_parser","responseType","value","_responseType","serialize","_serializer","timeout","options","_timeout","_responseTimeout","_uploadTimeout","option","deadline","response","upload","console","warn","retry","count","arguments","length","_maxRetries","_retries","_retryCallback","ERROR_CODES","Set","STATUS_CODES","_shouldRetry","error","res","override","err","status","has","code","crossDomain","_retry","req","request","_aborted","timedout","timedoutError","_end","then","resolve","reject","_fullfilledPromise","self","_endCalled","Promise","on","Error","method","url","end","catch","callback","undefined","use","ok","_okCallback","_isResponseOK","get","field","_header","toLowerCase","getHeader","set","key","header","unset","name","_data","Array","isArray","i","String","_getFormData","append","abort","xhr","emit","_auth","user","pass","base64Encoder","type","username","password","withCredentials","_withCredentials","redirects","n","_maxRedirects","maxResponseSize","TypeError","_maxResponseSize","toJSON","data","headers","send","isObject_","_formData","_isHost","trim","sortQuery","sort","_sort","_finalizeQueryString","query","_query","join","includes","index","indexOf","queryArray","slice","split","_appendQueryString","_timeoutError","reason","errno","_setTimeouts","setTimeout"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/request-base.js"],"sourcesContent":["/**\n * Module of mixed-in functions shared between node and client code\n */\nconst { isObject, hasOwn } = require('./utils');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase() {}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (hasOwn(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\n//\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\nconst ERROR_CODES = new Set([\n  'ETIMEDOUT',\n  'ECONNRESET',\n  'EADDRINUSE',\n  'ECONNREFUSED',\n  'EPIPE',\n  'ENOTFOUND',\n  'ENETUNREACH',\n  'EAI_AGAIN'\n]);\n\nconst STATUS_CODES = new Set([\n  408, 413, 429, 500, 502, 503, 504, 521, 522, 524\n]);\n\n// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function (error, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(error, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n  if (error) {\n    if (error.code && ERROR_CODES.has(error.code)) return true;\n    // Superagent timeout\n    if (error.timeout && error.code === 'ECONNABORTED') return true;\n    if (error.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        if (this._maxRetries && this._maxRetries > this._retries) {\n          return;\n        }\n\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const error = new Error('Aborted');\n        error.code = 'ABORTED';\n        error.status = this.status;\n        error.method = this.method;\n        error.url = this.url;\n        reject(error);\n      });\n      self.end((error, res) => {\n        if (error) reject(error);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (callback) {\n  return this.then(undefined, callback);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (callback) {\n  if (typeof callback !== 'function') throw new Error('Callback required');\n  this._okCallback = callback;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (hasOwn(field, key)) this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @param {String} options extra options, e.g. 'blob'\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function (name, value, options) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\n      \".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (hasOwn(name, key)) this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      if (hasOwn(value, i)) this.field(name, value[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (value === null || undefined === value) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  // fix https://github.com/ladjs/superagent/issues/1680\n  if (options) this._getFormData().append(name, value, options);\n  else this._getFormData().append(name, value);\n\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) {\n    this.req.abort(); // node\n  }\n\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n * @param {Boolean} [on=true] - Set 'withCredentials' state\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function (data) {\n  const isObject_ = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\n      \".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObject_ && isObject(this._data)) {\n    for (const key in data) {\n      if (typeof data[key] == 'bigint' && !data[key].toJSON)\n        throw new Error('Cannot serialize BigInt value to json');\n      if (hasOwn(data, key)) this._data[key] = data[key];\n    }\n  }\n  else if (typeof data === 'bigint') throw new Error(\"Cannot send value of type BigInt\");\n  else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type) type = type.toLowerCase().trim();\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArray = this.url.slice(index + 1).split('&');\n      if (typeof this._sort === 'function') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArray.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const error = new Error(`${reason + timeout}ms exceeded`);\n  error.timeout = timeout;\n  error.code = 'ECONNABORTED';\n  error.errno = errno;\n  this.timedout = true;\n  this.timedoutError = error;\n  this.abort();\n  this.callback(error);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Response timeout of ',\n        self._responseTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._responseTimeout);\n  }\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/http2wrapper.js":{"lineLengths":[14,1,32,34,28,28,8,21,23,23,26,21,27,17,21,33,11,23,45,6,5,2,31,35,13,58,37,46,46,25,25,34,30,30,22,27,25,29,17,7,30,54,78,6,24,83,47,61,28,4,45,29,20,48,21,40,40,38,57,15,64,6,4,21,46,83,76,4,15,22,25,6,21,38,41,7,56,46,49,49,47,31,55,39,36,8,29,51,59,51,24,18,4,29,39,29,28,32,31,21,38,58,17,17,17,8,33,6,25,4,30,39,29,28,32,31,21,32,40,86,17,17,17,8,33,6,25,4,27,47,4,20,46,4,26,35,40,4,26,35,40,4,14,35,21,4,16,35,33,28,4,2,35,14072],"data":{"version":3,"names":["http2","require","Stream","net","tls","HTTP2_HEADER_PATH","HTTP2_HEADER_STATUS","HTTP2_HEADER_METHOD","HTTP2_HEADER_AUTHORITY","HTTP2_HEADER_HOST","HTTP2_HEADER_SET_COOKIE","NGHTTP2_CANCEL","constants","setProtocol","protocol","request","options","Request","constructor","defaultPort","defaultHost","port","host","method","path","sessionOptions","socketPath","createConnection","createUnixConnection","bind","_headers","session","connect","setHeader","on","error","emit","authority","ALPNProtocols","servername","allowHalfOpen","Error","setNoDelay","bool","getFrame","frame","headers","mapToHttp2Header","Object","assign","once","flags","mapToHttpHeader","statusCode","status","_headerSent","close","keys","http2Headers","key","value","toLowerCase","Array","isArray","test","URL","name","getHeader","write","data","encoding","pipe","stream","end","abort","destroy","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/http2wrapper.js"],"sourcesContent":["const http2 = require('http2');\nconst Stream = require('stream');\nconst net = require('net');\nconst tls = require('tls');\n\nconst {\n  HTTP2_HEADER_PATH,\n  HTTP2_HEADER_STATUS,\n  HTTP2_HEADER_METHOD,\n  HTTP2_HEADER_AUTHORITY,\n  HTTP2_HEADER_HOST,\n  HTTP2_HEADER_SET_COOKIE,\n  NGHTTP2_CANCEL\n} = http2.constants;\n\nfunction setProtocol(protocol) {\n  return {\n    request(options) {\n      return new Request(protocol, options);\n    }\n  };\n}\n\nclass Request extends Stream {\n  constructor(protocol, options) {\n    super();\n    const defaultPort = protocol === 'https:' ? 443 : 80;\n    const defaultHost = 'localhost';\n    const port = options.port || defaultPort;\n    const host = options.host || defaultHost;\n\n    delete options.port;\n    delete options.host;\n\n    this.method = options.method;\n    this.path = options.path;\n    this.protocol = protocol;\n    this.host = host;\n\n    delete options.method;\n    delete options.path;\n\n    const sessionOptions = { ...options };\n    if (options.socketPath) {\n      sessionOptions.socketPath = options.socketPath;\n      sessionOptions.createConnection = this.createUnixConnection.bind(this);\n    }\n\n    this._headers = {};\n\n    const session = http2.connect(\n      `${protocol}//${host}:${port}`,\n      sessionOptions\n    );\n    this.setHeader('host', `${host}:${port}`);\n\n    session.on('error', (error) => this.emit('error', error));\n\n    this.session = session;\n  }\n\n  createUnixConnection(authority, options) {\n    switch (this.protocol) {\n      case 'http:':\n        return net.connect(options.socketPath);\n      case 'https:':\n        options.ALPNProtocols = ['h2'];\n        options.servername = this.host;\n        options.allowHalfOpen = true;\n        return tls.connect(options.socketPath, options);\n      default:\n        throw new Error('Unsupported protocol', this.protocol);\n    }\n  }\n\n  setNoDelay(bool) {\n    // We can not use setNoDelay with HTTP/2.\n    // Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.\n    // See also https://nodejs.org/api/http2.html#http2_http2session_socket\n  }\n\n  getFrame() {\n    if (this.frame) {\n      return this.frame;\n    }\n\n    const method = {\n      [HTTP2_HEADER_PATH]: this.path,\n      [HTTP2_HEADER_METHOD]: this.method\n    };\n\n    let headers = this.mapToHttp2Header(this._headers);\n\n    headers = Object.assign(headers, method);\n\n    const frame = this.session.request(headers);\n\n    frame.once('response', (headers, flags) => {\n      headers = this.mapToHttpHeader(headers);\n      frame.headers = headers;\n      frame.statusCode = headers[HTTP2_HEADER_STATUS];\n      frame.status = frame.statusCode;\n      this.emit('response', frame);\n    });\n\n    this._headerSent = true;\n\n    frame.once('drain', () => this.emit('drain'));\n    frame.on('error', (error) => this.emit('error', error));\n    frame.on('close', () => this.session.close());\n\n    this.frame = frame;\n    return frame;\n  }\n\n  mapToHttpHeader(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_SET_COOKIE:\n          value = Array.isArray(value) ? value : [value];\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  mapToHttp2Header(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_HOST:\n          key = HTTP2_HEADER_AUTHORITY;\n          value = /^http:\\/\\/|^https:\\/\\//.test(value)\n            ? new URL(value).host\n            : value;\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  setHeader(name, value) {\n    this._headers[name.toLowerCase()] = value;\n  }\n\n  getHeader(name) {\n    return this._headers[name.toLowerCase()];\n  }\n\n  write(data, encoding) {\n    const frame = this.getFrame();\n    return frame.write(data, encoding);\n  }\n\n  pipe(stream, options) {\n    const frame = this.getFrame();\n    return frame.pipe(stream, options);\n  }\n\n  end(data) {\n    const frame = this.getFrame();\n    frame.end(data);\n  }\n\n  abort(data) {\n    const frame = this.getFrame();\n    frame.close(NGHTTP2_CANCEL);\n    this.session.destroy();\n  }\n}\n\nexports.setProtocol = setProtocol;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/unzip.js":{"lineLengths":[14,1,4,24,4,1,8,16,31,34,30,1,4,68,3,24,25,16,4,1,36,36,31,15,1,37,24,31,49,64,26,14,6,33,6,1,19,19,1,48,30,39,5,1,54,28,19,42,60,13,32,6,6,26,24,6,1,45,22,33,45,37,35,37,31,13,31,6,17,5,3,4944],"data":{"version":3,"names":["StringDecoder","require","Stream","zlib","exports","unzip","request","res","createUnzip","stream","decoder","req","on","error","code","emit","pipe","setEncoding","type","buf","string_","write","length","_on","fn","bind","call"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/unzip.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { StringDecoder } = require('string_decoder');\nconst Stream = require('stream');\nconst zlib = require('zlib');\n\n/**\n * Buffers response data events and re-emits when they're unzipped.\n *\n * @param {Request} req\n * @param {Response} res\n * @api private\n */\n\nexports.unzip = (request, res) => {\n  const unzip = zlib.createUnzip();\n  const stream = new Stream();\n  let decoder;\n\n  // make node responseOnEnd() happy\n  stream.req = request;\n\n  unzip.on('error', (error) => {\n    if (error && error.code === 'Z_BUF_ERROR') {\n      // unexpected end of file is ignored by browsers and curl\n      stream.emit('end');\n      return;\n    }\n\n    stream.emit('error', error);\n  });\n\n  // pipe to unzip\n  res.pipe(unzip);\n\n  // override `setEncoding` to capture encoding\n  res.setEncoding = (type) => {\n    decoder = new StringDecoder(type);\n  };\n\n  // decode upon decompressing with captured encoding\n  unzip.on('data', (buf) => {\n    if (decoder) {\n      const string_ = decoder.write(buf);\n      if (string_.length > 0) stream.emit('data', string_);\n    } else {\n      stream.emit('data', buf);\n    }\n  });\n\n  unzip.on('end', () => {\n    stream.emit('end');\n  });\n\n  // override `on` to capture data listeners\n  const _on = res.on;\n  res.on = function (type, fn) {\n    if (type === 'data' || type === 'end') {\n      stream.on(type, fn.bind(res));\n    } else if (type === 'error') {\n      stream.on(type, fn.bind(res));\n      _on.call(res, type, fn);\n    } else {\n      _on.call(res, type, fn);\n    }\n\n    return this;\n  };\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACnD,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,OAAO,CAACC,KAAK,GAAG,CAACC,OAAO,EAAEC,GAAG,KAAK;EAChC,MAAMF,KAAK,GAAGF,IAAI,CAACK,WAAW,CAAC,CAAC;EAChC,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;EAC3B,IAAIQ,OAAO;;EAEX;EACAD,MAAM,CAACE,GAAG,GAAGL,OAAO;EAEpBD,KAAK,CAACO,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAK;IAC3B,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,aAAa,EAAE;MACzC;MACAL,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;MAClB;IACF;IAEAN,MAAM,CAACM,IAAI,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC7B,CAAC,CAAC;;EAEF;EACAN,GAAG,CAACS,IAAI,CAACX,KAAK,CAAC;;EAEf;EACAE,GAAG,CAACU,WAAW,GAAIC,IAAI,IAAK;IAC1BR,OAAO,GAAG,IAAIV,aAAa,CAACkB,IAAI,CAAC;EACnC,CAAC;;EAED;EACAb,KAAK,CAACO,EAAE,CAAC,MAAM,EAAGO,GAAG,IAAK;IACxB,IAAIT,OAAO,EAAE;MACX,MAAMU,OAAO,GAAGV,OAAO,CAACW,KAAK,CAACF,GAAG,CAAC;MAClC,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAEb,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEK,OAAO,CAAC;IACtD,CAAC,MAAM;MACLX,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEI,GAAG,CAAC;IAC1B;EACF,CAAC,CAAC;EAEFd,KAAK,CAACO,EAAE,CAAC,KAAK,EAAE,MAAM;IACpBH,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;EACpB,CAAC,CAAC;;EAEF;EACA,MAAMQ,GAAG,GAAGhB,GAAG,CAACK,EAAE;EAClBL,GAAG,CAACK,EAAE,GAAG,UAAUM,IAAI,EAAEM,EAAE,EAAE;IAC3B,IAAIN,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,KAAK,EAAE;MACrCT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIW,IAAI,KAAK,OAAO,EAAE;MAC3BT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;MAC7BgB,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB,CAAC,MAAM;MACLD,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB;IAEA,OAAO,IAAI;EACb,CAAC;AACH,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/response.js":{"lineLengths":[14,1,4,24,4,1,30,34,50,8,8,25,1,4,22,4,1,27,1,4,53,3,35,19,3,24,27,16,21,32,16,4,1,29,21,26,10,8,12,26,26,24,32,40,30,30,45,42,48,48,46,50,50,2,1,25,68,52,10,101,5,15,24,4,4,1,4,26,4,1,33,51,1,4,44,4,1,48,27,3,1,4,10,4,1,41,20,3,1,4,11,4,1,42,21,3,1,4,54,3,19,15,4,1,43,10,8,12,10,11,11,10,9,11,63,36,30,26,25,21,16,3,61,77,44,3,1,4,12,3,20,15,4,1,42,11,32,25,25,20,5,3,8864],"data":{"version":3,"names":["util","require","Stream","ResponseBase","mixin","module","exports","Response","request","call","res","req","text","files","buffered","_resBuffered","headers","header","_setStatusProperties","statusCode","_setHeaderProperties","setEncoding","bind","on","emit","Object","defineProperty","prototype","get","_body","undefined","body","set","value","inherits","destroy","error","pause","resume","toError","method","path","message","status","Error","setStatusProperties","console","warn","toJSON"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/response.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst Stream = require('stream');\nconst ResponseBase = require('../response-base');\nconst { mixin } = require('../utils');\n\n/**\n * Expose `Response`.\n */\n\nmodule.exports = Response;\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(request) {\n  Stream.call(this);\n  this.res = request.res;\n  const { res } = this;\n  this.request = request;\n  this.req = request.req;\n  this.text = res.text;\n  this.files = res.files || {};\n  this.buffered = request._resBuffered;\n  this.headers = res.headers;\n  this.header = this.headers;\n  this._setStatusProperties(res.statusCode);\n  this._setHeaderProperties(this.header);\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n\n// Lazy access res.body.\n// https://github.com/nodejs/node/pull/39520#issuecomment-889697136\nObject.defineProperty(Response.prototype, 'body', {\n  get() {\n    return this._body !== undefined\n      ? this._body\n      : this.res.body !== undefined\n      ? this.res.body\n      : {};\n  },\n  set(value) {\n    this._body = value;\n  }\n});\n\n/**\n * Inherit from `Stream`.\n */\n\nutil.inherits(Response, Stream);\n\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function (error) {\n  this.res.destroy(error);\n};\n\n/**\n * Pause.\n */\n\nResponse.prototype.pause = function () {\n  this.res.pause();\n};\n\n/**\n * Resume.\n */\n\nResponse.prototype.resume = function () {\n  this.res.resume();\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { path } = req;\n\n  const message = `cannot ${method} ${path} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.text = this.text;\n  error.method = method;\n  error.path = path;\n\n  return error;\n};\n\nResponse.prototype.setStatusProperties = function (status) {\n  console.warn('In superagent 2.x setStatusProperties is a private method');\n  return this._setStatusProperties(status);\n};\n\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\nResponse.prototype.toJSON = function () {\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/response-base.js":{"lineLengths":[14,1,4,24,4,1,34,1,4,26,4,1,31,1,4,36,3,15,4,1,27,1,4,39,3,25,20,15,4,1,48,43,3,1,4,34,3,47,3,59,52,3,26,16,4,1,66,17,28,1,18,43,30,1,12,39,34,92,4,19,1,11,8,23,50,6,18,14,4,3,1,4,46,3,64,68,67,71,52,3,78,3,18,19,21,22,17,3,26,16,4,1,66,41,1,20,28,33,26,1,12,26,24,30,33,33,66,1,11,33,34,35,36,38,39,35,34,45,3,7372],"data":{"version":3,"names":["utils","require","module","exports","ResponseBase","prototype","get","field","header","toLowerCase","_setHeaderProperties","ct","type","parameters","params","key","Object","hasOwnProperty","call","links","link","parseLinks","err","_setStatusProperties","status","Math","trunc","statusCode","statusType","info","ok","redirect","clientError","serverError","error","toError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/response-base.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase() {}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct);\n\n  // params\n  const parameters = utils.params(ct);\n  for (const key in parameters) {\n    if (Object.prototype.hasOwnProperty.call(parameters, key))\n      this[key] = parameters[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch (err) {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = Math.trunc(status / 100);\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAYA,CAAA,EAAG,CAAC;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,YAAY,CAACC,SAAS,CAACC,GAAG,GAAG,UAAUC,KAAK,EAAE;EAC5C,OAAO,IAAI,CAACC,MAAM,CAACD,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,YAAY,CAACC,SAAS,CAACK,oBAAoB,GAAG,UAAUF,MAAM,EAAE;EAC9D;EACA;;EAEA;EACA,MAAMG,EAAE,GAAGH,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE;EACvC,IAAI,CAACI,IAAI,GAAGZ,KAAK,CAACY,IAAI,CAACD,EAAE,CAAC;;EAE1B;EACA,MAAME,UAAU,GAAGb,KAAK,CAACc,MAAM,CAACH,EAAE,CAAC;EACnC,KAAK,MAAMI,GAAG,IAAIF,UAAU,EAAE;IAC5B,IAAIG,MAAM,CAACX,SAAS,CAACY,cAAc,CAACC,IAAI,CAACL,UAAU,EAAEE,GAAG,CAAC,EACvD,IAAI,CAACA,GAAG,CAAC,GAAGF,UAAU,CAACE,GAAG,CAAC;EAC/B;EAEA,IAAI,CAACI,KAAK,GAAG,CAAC,CAAC;;EAEf;EACA,IAAI;IACF,IAAIX,MAAM,CAACY,IAAI,EAAE;MACf,IAAI,CAACD,KAAK,GAAGnB,KAAK,CAACqB,UAAU,CAACb,MAAM,CAACY,IAAI,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlB,YAAY,CAACC,SAAS,CAACkB,oBAAoB,GAAG,UAAUC,MAAM,EAAE;EAC9D,MAAMZ,IAAI,GAAGa,IAAI,CAACC,KAAK,CAACF,MAAM,GAAG,GAAG,CAAC;;EAErC;EACA,IAAI,CAACG,UAAU,GAAGH,MAAM;EACxB,IAAI,CAACA,MAAM,GAAG,IAAI,CAACG,UAAU;EAC7B,IAAI,CAACC,UAAU,GAAGhB,IAAI;;EAEtB;EACA,IAAI,CAACiB,IAAI,GAAGjB,IAAI,KAAK,CAAC;EACtB,IAAI,CAACkB,EAAE,GAAGlB,IAAI,KAAK,CAAC;EACpB,IAAI,CAACmB,QAAQ,GAAGnB,IAAI,KAAK,CAAC;EAC1B,IAAI,CAACoB,WAAW,GAAGpB,IAAI,KAAK,CAAC;EAC7B,IAAI,CAACqB,WAAW,GAAGrB,IAAI,KAAK,CAAC;EAC7B,IAAI,CAACsB,KAAK,GAAGtB,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,CAAC,GAAG,IAAI,CAACuB,OAAO,CAAC,CAAC,GAAG,KAAK;;EAE9D;EACA,IAAI,CAACC,OAAO,GAAGZ,MAAM,KAAK,GAAG;EAC7B,IAAI,CAACa,QAAQ,GAAGb,MAAM,KAAK,GAAG;EAC9B,IAAI,CAACc,SAAS,GAAGd,MAAM,KAAK,GAAG;EAC/B,IAAI,CAACe,UAAU,GAAGf,MAAM,KAAK,GAAG;EAChC,IAAI,CAACgB,YAAY,GAAGhB,MAAM,KAAK,GAAG;EAClC,IAAI,CAACiB,aAAa,GAAGjB,MAAM,KAAK,GAAG;EACnC,IAAI,CAACkB,SAAS,GAAGlB,MAAM,KAAK,GAAG;EAC/B,IAAI,CAACmB,QAAQ,GAAGnB,MAAM,KAAK,GAAG;EAC9B,IAAI,CAACoB,mBAAmB,GAAGpB,MAAM,KAAK,GAAG;AAC3C,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/agent.js":{"lineLengths":[14,1,4,24,4,1,8,12,26,8,19,26,36,34,44,1,4,29,3,15,4,1,32,25,13,32,19,24,29,8,25,31,8,25,31,8,26,33,8,50,32,8,6,4,1,6,44,45,5,27,18,6,22,47,19,24,129,64,6,4,1,6,55,5,26,18,6,29,39,96,65,32,4,2,30,37,47,55,59,59,71,33,35,14,24,6,21,5,2,46,1,79,45,38,42,41,4,4,29,7708],"data":{"version":3,"names":["CookieJar","require","CookieAccessInfo","methods","request","AgentBase","Agent","constructor","options","jar","ca","key","pfx","cert","rejectUnauthorized","disableTLSCerts","_saveCookies","res","cookies","headers","_res$request","url","URL","setCookies","hostname","pathname","_attachCookies","request_","access","protocol","getCookies","toValueString","name","method","toUpperCase","prototype","fn","Request","on","bind","_setDefaults","end","del","delete","proxyAgent","Proxy","apply","target","thisArg","argumentsList","module","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/agent.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { CookieJar } = require('cookiejar');\nconst { CookieAccessInfo } = require('cookiejar');\nconst methods = require('methods');\nconst request = require('../..');\nconst AgentBase = require('../agent-base');\n\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nclass Agent extends AgentBase {\n  constructor (options) {\n    super();\n\n    this.jar = new CookieJar();\n\n    if (options) {\n      if (options.ca) {\n        this.ca(options.ca);\n      }\n\n      if (options.key) {\n        this.key(options.key);\n      }\n\n      if (options.pfx) {\n        this.pfx(options.pfx);\n      }\n\n      if (options.cert) {\n        this.cert(options.cert);\n      }\n\n      if (options.rejectUnauthorized === false) {\n        this.disableTLSCerts();\n      }\n    }\n  }\n\n  /**\n   * Save the cookies in the given `res` to\n   * the agent's cookie jar for persistence.\n   *\n   * @param {Response} res\n   * @api private\n   */\n  _saveCookies (res) {\n    const cookies = res.headers['set-cookie'];\n    if (cookies) {\n      const url = new URL(res.request?.url || '');\n      this.jar.setCookies(cookies, url.hostname, url.pathname);\n    }\n  }\n\n  /**\n   * Attach cookies when available to the given `req`.\n   *\n   * @param {Request} req\n   * @api private\n   */\n  _attachCookies (request_) {\n    const url = new URL(request_.url);\n    const access = new CookieAccessInfo(\n      url.hostname,\n      url.pathname,\n      url.protocol === 'https:'\n    );\n    const cookies = this.jar.getCookies(access).toValueString();\n    request_.cookies = cookies;\n  }\n}\n\nfor (const name of methods) {\n  const method = name.toUpperCase();\n  Agent.prototype[name] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n\n    request_.on('response', this._saveCookies.bind(this));\n    request_.on('redirect', this._saveCookies.bind(this));\n    request_.on('redirect', this._attachCookies.bind(this, request_));\n    this._setDefaults(request_);\n    this._attachCookies(request_);\n\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n\n// create a Proxy that can instantiate a new Agent without using `new` keyword\n// (for backward compatibility and chaining)\nconst proxyAgent = new Proxy(Agent, {\n  apply (target, thisArg, argumentsList) {\n    return new target(...argumentsList);\n  }\n});\n\nmodule.exports = proxyAgent;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/agent-base.js":{"lineLengths":[14,1,232,14,18,25,4,26,40,36,6,4,2,29,54,38,95,36,6,26,10,11,8,17,5,2,24,2580],"data":{"version":3,"names":["defaults","Agent","constructor","_defaults","_setDefaults","request","def","fn","args","prototype","_len","arguments","length","Array","_key","push","module","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/agent-base.js"],"sourcesContent":["const defaults = [\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n]\n\nclass Agent {\n  constructor () {\n    this._defaults = [];\n  }\n\n  _setDefaults (request) {\n    for (const def of this._defaults) {\n      request[def.fn](...def.args);\n    }\n  }\n}\n\nfor (const fn of defaults) {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n}\n\n\nmodule.exports = Agent;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,CACf,KAAK,EACL,IAAI,EACJ,MAAM,EACN,KAAK,EACL,OAAO,EACP,MAAM,EACN,QAAQ,EACR,MAAM,EACN,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,IAAI,EACJ,WAAW,EACX,SAAS,EACT,QAAQ,EACR,WAAW,EACX,OAAO,EACP,IAAI,EACJ,KAAK,EACL,KAAK,EACL,MAAM,EACN,iBAAiB,CAClB;AAED,MAAMC,KAAK,CAAC;EACVC,WAAWA,CAAA,EAAI;IACb,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,YAAYA,CAAEC,OAAO,EAAE;IACrB,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACH,SAAS,EAAE;MAChCE,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC,CAAC,GAAGD,GAAG,CAACE,IAAI,CAAC;IAC9B;EACF;AACF;AAEA,KAAK,MAAMD,EAAE,IAAIP,QAAQ,EAAE;EACzB;EACAC,KAAK,CAACQ,SAAS,CAACF,EAAE,CAAC,GAAG,YAAmB;IAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANJ,IAAI,OAAAK,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAJN,IAAI,CAAAM,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IACrC,IAAI,CAACX,SAAS,CAACY,IAAI,CAAC;MAAER,EAAE;MAAEC;IAAK,CAAC,CAAC;IACjC,OAAO,IAAI;EACb,CAAC;AACH;AAGAQ,MAAM,CAACC,OAAO,GAAGhB,KAAK","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/index.js":{"lineLengths":[14,1,72,49,34,48,35,46,37,24,1256],"data":{"version":3,"names":["exports","require","text","binary","image"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/index.js"],"sourcesContent":["exports['application/x-www-form-urlencoded'] = require('./urlencoded');\nexports['application/json'] = require('./json');\nexports.text = require('./text');\n\nexports['application/json-seq'] = exports.text;\n\nconst binary = require('./image');\n\nexports['application/octet-stream'] = binary;\nexports['application/pdf'] = binary;\nexports.image = binary;\n"],"mappings":";;AAAAA,OAAO,CAAC,mCAAmC,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AACtED,OAAO,CAAC,kBAAkB,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/CD,OAAO,CAACE,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhCD,OAAO,CAAC,sBAAsB,CAAC,GAAGA,OAAO,CAACE,IAAI;AAE9C,MAAMC,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEjCD,OAAO,CAAC,0BAA0B,CAAC,GAAGG,MAAM;AAC5CH,OAAO,CAAC,iBAAiB,CAAC,GAAGG,MAAM;AACnCH,OAAO,CAACI,KAAK,GAAGD,MAAM","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/urlencoded.js":{"lineLengths":[14,1,4,24,4,1,26,32,17,28,28,23,6,24,10,36,20,15,6,6,3,1476],"data":{"version":3,"names":["qs","require","module","exports","res","fn","text","setEncoding","on","chunk","parse","err"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/urlencoded.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst qs = require('qs');\n\nmodule.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('ascii');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    try {\n      fn(null, qs.parse(res.text));\n    } catch (err) {\n      fn(err);\n    }\n  });\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExBC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,OAAO,CAAC;EACxBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAI;MACFH,EAAE,CAAC,IAAI,EAAEL,EAAE,CAACU,KAAK,CAACN,GAAG,CAACE,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZN,EAAE,CAACM,GAAG,CAAC;IACT;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/json.js":{"lineLengths":[14,1,38,17,27,28,23,6,24,14,15,10,47,20,19,75,44,79,41,16,23,6,6,3,2056],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk","body","error","JSON","parse","err","rawResponse","statusCode"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/json.js"],"sourcesContent":["module.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    let body;\n    let error;\n    try {\n      body = res.text && JSON.parse(res.text);\n    } catch (err) {\n      error = err;\n      // issue #675: return the raw response if the response parsing fails\n      error.rawResponse = res.text || null;\n      // issue #876: return the http status code if the response parsing fails\n      error.statusCode = res.statusCode;\n    } finally {\n      fn(error, body);\n    }\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAEC,EAAE,EAAE;EAClCD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAIE,IAAI;IACR,IAAIC,KAAK;IACT,IAAI;MACFD,IAAI,GAAGN,GAAG,CAACE,IAAI,IAAIM,IAAI,CAACC,KAAK,CAACT,GAAG,CAACE,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZH,KAAK,GAAGG,GAAG;MACX;MACAH,KAAK,CAACI,WAAW,GAAGX,GAAG,CAACE,IAAI,IAAI,IAAI;MACpC;MACAK,KAAK,CAACK,UAAU,GAAGZ,GAAG,CAACY,UAAU;IACnC,CAAC,SAAS;MACRX,EAAE,CAACM,KAAK,EAAED,IAAI,CAAC;IACjB;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/text.js":{"lineLengths":[14,1,32,17,27,28,23,6,21,3,916],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/text.js"],"sourcesContent":["module.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', fn);\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAEH,EAAE,CAAC;AACnB,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/image.js":{"lineLengths":[14,1,32,55,1,28,22,6,24,35,6,3,1068],"data":{"version":3,"names":["module","exports","res","fn","data","on","chunk","push","Buffer","concat"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/image.js"],"sourcesContent":["module.exports = (res, fn) => {\n  const data = []; // Binary data needs binary storage\n\n  res.on('data', (chunk) => {\n    data.push(chunk);\n  });\n  res.on('end', () => {\n    fn(null, Buffer.concat(data));\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5B,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;;EAEjBF,GAAG,CAACG,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBF,IAAI,CAACG,IAAI,CAACD,KAAK,CAAC;EAClB,CAAC,CAAC;EACFJ,GAAG,CAACG,EAAE,CAAC,KAAK,EAAE,MAAM;IAClBF,EAAE,CAAC,IAAI,EAAEK,MAAM,CAACC,MAAM,CAACL,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null}}}