{"result":[{"scriptId":"3","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9489,"endOffset":9562,"count":511}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9568,"endOffset":9619,"count":1038}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9625,"endOffset":9672,"count":482}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11353,"count":496}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12035,"endOffset":12063,"count":886}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12377,"endOffset":12405,"count":425}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12843,"endOffset":12899,"count":4}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13059,"endOffset":13097,"count":98}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13253,"endOffset":13295,"count":150}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13813,"endOffset":14094,"count":25}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13961,"endOffset":14088,"count":25}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13992,"endOffset":14041,"count":25}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15452,"endOffset":16024,"count":27}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15488,"endOffset":16023,"count":27}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15889,"endOffset":16001,"count":54}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16376,"endOffset":16842,"count":57}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16412,"endOffset":16841,"count":57}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16547,"endOffset":16628,"count":60}],"isBlockCoverage":false}]},{"scriptId":"6","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4823,"endOffset":5688,"count":1}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":6187,"endOffset":6456,"count":116}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6735,"endOffset":6893,"count":106}],"isBlockCoverage":false},{"functionName":"allowRequireByUsers","ranges":[{"startOffset":8714,"endOffset":9085,"count":1}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":9722,"endOffset":9778,"count":53}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9791,"endOffset":9868,"count":531}],"isBlockCoverage":false},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9881,"endOffset":9977,"count":3196}],"isBlockCoverage":false},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9990,"endOffset":10346,"count":2283}],"isBlockCoverage":false},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10619,"endOffset":10730,"count":1}],"isBlockCoverage":false},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10895,"endOffset":11572,"count":257}],"isBlockCoverage":false},{"functionName":"getESMFacade","ranges":[{"startOffset":11578,"endOffset":12230,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11959,"endOffset":12065,"count":1}],"isBlockCoverage":false},{"functionName":"syncExports","ranges":[{"startOffset":12532,"endOffset":12886,"count":1}],"isBlockCoverage":false},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12892,"endOffset":13740,"count":1452}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13946,"endOffset":14321,"count":1199}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/errors","functions":[{"functionName":"defaultPrepareStackTrace","ranges":[{"startOffset":2416,"endOffset":2899,"count":40}],"isBlockCoverage":false},{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2903,"endOffset":2996,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTraceCallback","ranges":[{"startOffset":3838,"endOffset":4995,"count":64}],"isBlockCoverage":false},{"functionName":"ErrorPrepareStackTrace","ranges":[{"startOffset":5065,"endOffset":5166,"count":40}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":15211,"endOffset":15519,"count":18}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15245,"endOffset":15458,"count":9001}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":135,"endOffset":290,"count":1945}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1836}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8774,"endOffset":8940,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9045,"endOffset":9249,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14756,"endOffset":14794,"count":1483}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15700,"endOffset":15737,"count":962}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":6053,"endOffset":6401,"count":547}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":6511,"endOffset":7587,"count":130}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":8003,"endOffset":8149,"count":60}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":8375,"endOffset":8688,"count":71}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9286,"endOffset":9475,"count":417}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":10122,"endOffset":10293,"count":126}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":10297,"endOffset":10469,"count":126}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":11662,"endOffset":12422,"count":130}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":12426,"endOffset":12692,"count":4}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":13309,"endOffset":13523,"count":72}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":13527,"endOffset":13600,"count":80}],"isBlockCoverage":false},{"functionName":"processImmediate","ranges":[{"startOffset":13922,"endOffset":16073,"count":417}],"isBlockCoverage":false},{"functionName":"processTimers","ranges":[{"startOffset":16081,"endOffset":16589,"count":3}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":16595,"endOffset":19578,"count":3}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":19669,"endOffset":20005,"count":417}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":20011,"endOffset":20287,"count":417}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":2414}],"isBlockCoverage":false},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":15041,"endOffset":15237,"count":60}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":2414}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":303}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":3524}],"isBlockCoverage":false},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":2287}],"isBlockCoverage":false},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":2414}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":2413}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":2287}],"isBlockCoverage":false},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":2287}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":31}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":2287}],"isBlockCoverage":false},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":2287}],"isBlockCoverage":false}]},{"scriptId":"12","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1130,"endOffset":1191,"count":683}],"isBlockCoverage":false},{"functionName":"parseFileMode","ranges":[{"startOffset":1950,"endOffset":2272,"count":26}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2531,"endOffset":2919,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3177,"endOffset":3651,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3894,"endOffset":4339,"count":26}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4541,"endOffset":4656,"count":3019}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4910,"endOffset":5367,"count":557}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5566,"endOffset":5908,"count":63}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6114,"endOffset":6231,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6834,"endOffset":7882,"count":151}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11606,"endOffset":11842,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11953,"endOffset":12273,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12584,"endOffset":12954,"count":121}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13567,"endOffset":13686,"count":3037}],"isBlockCoverage":false}]},{"scriptId":"13","url":"node:internal/util","functions":[{"functionName":"isError","ranges":[{"startOffset":2100,"endOffset":2355,"count":17}],"isBlockCoverage":false},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2520,"endOffset":3295,"count":29}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2621,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4068,"endOffset":5155,"count":29}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4444,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5439,"endOffset":5516,"count":5}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5859,"endOffset":5993,"count":1500}],"isBlockCoverage":false},{"functionName":"slowCases","ranges":[{"startOffset":5997,"endOffset":7849,"count":178}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":8856,"endOffset":9019,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8909,"endOffset":9015,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":12053,"endOffset":14167,"count":22}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":12815,"endOffset":13548,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":14267,"endOffset":14601,"count":8}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":14746,"endOffset":14877,"count":251}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":16033,"endOffset":16382,"count":60}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16160,"endOffset":16378,"count":120}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16958,"endOffset":17186,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17708,"endOffset":18679,"count":2}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17933,"endOffset":18082,"count":10}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18190,"endOffset":18393,"count":10}],"isBlockCoverage":false},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18683,"endOffset":19624,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18902,"endOffset":19148,"count":6}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":19260,"endOffset":19334,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":19628,"endOffset":19730,"count":2}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20972,"endOffset":21170,"count":1279}],"isBlockCoverage":false},{"functionName":"getInternalGlobal","ranges":[{"startOffset":21195,"endOffset":21477,"count":397}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":21481,"endOffset":21697,"count":396}],"isBlockCoverage":false},{"functionName":"getCrossRealmRegex","ranges":[{"startOffset":21747,"endOffset":22561,"count":90}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":22565,"endOffset":22722,"count":90}],"isBlockCoverage":false},{"functionName":"getLazy","ranges":[{"startOffset":23088,"endOffset":23310,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23172,"endOffset":23306,"count":3012}],"isBlockCoverage":false},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":23439,"endOffset":24133,"count":1}],"isBlockCoverage":false},{"functionName":"guessHandleType","ranges":[{"startOffset":24210,"endOffset":24310,"count":2}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24334,"endOffset":24951,"count":26}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":24456,"endOffset":24525,"count":26}],"isBlockCoverage":false},{"functionName":"incRef","ranges":[{"startOffset":24531,"endOffset":24758,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24764,"endOffset":24898,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24904,"endOffset":24948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":513,"endOffset":602,"count":3015}],"isBlockCoverage":false},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":606,"endOffset":693,"count":1}],"isBlockCoverage":false},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":697,"endOffset":794,"count":6}],"isBlockCoverage":false},{"functionName":"refreshOptions","ranges":[{"startOffset":798,"endOffset":856,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":860,"endOffset":950,"count":3425}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1369}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":14}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":6}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":259}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":130}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":66}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":71}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":6}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1022,"endOffset":1708,"count":4}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1714,"endOffset":2220,"count":71}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2226,"endOffset":2568,"count":69}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2574,"endOffset":2737,"count":3}],"isBlockCoverage":false}]},{"scriptId":"18","url":"node:internal/util/inspect","functions":[{"functionName":"pathToFileUrlHref","ranges":[{"startOffset":3667,"endOffset":3804,"count":17}],"isBlockCoverage":false},{"functionName":"isUndetectableObject","ranges":[{"startOffset":4232,"endOffset":4282,"count":41}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":9769,"endOffset":11851,"count":18}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14037,"endOffset":14079,"count":973}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":15239,"endOffset":15405,"count":32}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":15703,"endOffset":17920,"count":32}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":17924,"endOffset":18198,"count":1531}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":18202,"endOffset":18250,"count":62}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":18332,"endOffset":18381,"count":8}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":18385,"endOffset":18509,"count":17}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":19260,"endOffset":21070,"count":17}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":23152,"endOffset":23551,"count":17}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":23591,"endOffset":24608,"count":17}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":24443,"endOffset":24499,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":25538,"endOffset":28414,"count":58}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":28418,"endOffset":39775,"count":17}],"isBlockCoverage":false},{"functionName":"getStackString","ranges":[{"startOffset":43742,"endOffset":43854,"count":17}],"isBlockCoverage":false},{"functionName":"getStackFrames","ranges":[{"startOffset":43858,"endOffset":44774,"count":17}],"isBlockCoverage":false},{"functionName":"improveStack","ranges":[{"startOffset":44778,"endOffset":45997,"count":17}],"isBlockCoverage":false},{"functionName":"removeDuplicateErrorKeys","ranges":[{"startOffset":46001,"endOffset":46434,"count":17}],"isBlockCoverage":false},{"functionName":"markNodeModules","ranges":[{"startOffset":46438,"endOffset":46922,"count":504}],"isBlockCoverage":false},{"functionName":"markCwd","ranges":[{"startOffset":46926,"endOffset":47927,"count":530}],"isBlockCoverage":false},{"functionName":"safeGetCWD","ranges":[{"startOffset":47931,"endOffset":48089,"count":17}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":48093,"endOffset":50554,"count":17}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":56132,"endOffset":56946,"count":70}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":57176,"endOffset":58615,"count":41}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57982,"endOffset":58021,"count":6}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":68195,"endOffset":70832,"count":40}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":70836,"endOffset":71816,"count":8}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":71820,"endOffset":74782,"count":8}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":76693,"endOffset":76776,"count":91}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":76780,"endOffset":76975,"count":143}],"isBlockCoverage":false},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":76979,"endOffset":77167,"count":62}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":77363,"endOffset":81511,"count":234}],"isBlockCoverage":false}]},{"scriptId":"19","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":863,"endOffset":1348,"count":1}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1238,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1328,"endOffset":1339,"count":15}],"isBlockCoverage":false},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":1426,"endOffset":1772,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1789,"endOffset":1797,"count":3012}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1926,"endOffset":2506,"count":13}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2120,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2732,"endOffset":3798,"count":16}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2764,"endOffset":2863,"count":14}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2879,"endOffset":3285,"count":13}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3317,"endOffset":3390,"count":1}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3350,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3410,"endOffset":3611,"count":13}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3685,"endOffset":3721,"count":1}],"isBlockCoverage":false},{"functionName":"ensureTimerFlagsAreUpdated","ranges":[{"startOffset":10044,"endOffset":10203,"count":3121}],"isBlockCoverage":false},{"functionName":"internalStartTimer","ranges":[{"startOffset":10248,"endOffset":10572,"count":1560}],"isBlockCoverage":false},{"functionName":"internalEndTimer","ranges":[{"startOffset":10615,"endOffset":10959,"count":1561}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":11371,"endOffset":11888,"count":1}],"isBlockCoverage":false},{"functionName":"startTimer","ranges":[{"startOffset":11952,"endOffset":12107,"count":1}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/async_context_frame","functions":[{"functionName":"current","ranges":[{"startOffset":1282,"endOffset":1294,"count":2423}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1305,"endOffset":1318,"count":2287}],"isBlockCoverage":false},{"functionName":"exchange","ranges":[{"startOffset":1329,"endOffset":1347,"count":2287}],"isBlockCoverage":false}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6807,"endOffset":6878,"count":679}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8382,"endOffset":8462,"count":3025}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8575,"endOffset":8625,"count":716}],"isBlockCoverage":false},{"functionName":"hasEventListener","ranges":[{"startOffset":8749,"endOffset":8932,"count":1325}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10513,"endOffset":11183,"count":679}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":11188,"endOffset":11767,"count":240}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11487,"endOffset":11701,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12606,"endOffset":12725,"count":1}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12730,"endOffset":12883,"count":715}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":14082,"endOffset":16453,"count":2896}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16458,"endOffset":18429,"count":3025}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18615,"endOffset":18709,"count":3025}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":19118,"endOffset":19390,"count":545}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19394,"endOffset":19641,"count":869}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":19840,"endOffset":19971,"count":869}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":20605,"endOffset":21917,"count":1215}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":22249,"endOffset":23694,"count":34}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":23699,"endOffset":24043,"count":76}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":24241,"endOffset":24310,"count":76}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":25285,"endOffset":26020,"count":750}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":26283,"endOffset":26767,"count":430}],"isBlockCoverage":false}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4116,"endOffset":4310,"count":5}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4329,"endOffset":4457,"count":181}],"isBlockCoverage":false},{"functionName":"copyImpl","ranges":[{"startOffset":5854,"endOffset":7180,"count":48}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":7184,"endOffset":7636,"count":47}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8685,"endOffset":8713,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8982,"endOffset":9979,"count":161}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11862,"endOffset":12141,"count":88}],"isBlockCoverage":false},{"functionName":"allocUnsafe","ranges":[{"startOffset":12326,"endOffset":12431,"count":43}],"isBlockCoverage":false},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12679,"endOffset":12798,"count":42}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":13131,"endOffset":13476,"count":43}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":13480,"endOffset":14157,"count":154}],"isBlockCoverage":false},{"functionName":"createFromString","ranges":[{"startOffset":14161,"endOffset":14410,"count":17}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":14414,"endOffset":14785,"count":154}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14789,"endOffset":15478,"count":6}],"isBlockCoverage":false},{"functionName":"fromArrayLike","ranges":[{"startOffset":15482,"endOffset":15889,"count":1}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":15893,"endOffset":16210,"count":1}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":16253,"endOffset":16309,"count":381}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16695,"endOffset":16849,"count":1413}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":18109,"endOffset":18386,"count":30}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18528,"endOffset":18592,"count":114}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18606,"endOffset":18652,"count":498}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19676,"endOffset":19742,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20057,"endOffset":20122,"count":4}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":20136,"endOffset":20183,"count":1}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20518,"endOffset":20569,"count":30}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20583,"endOffset":20649,"count":33}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":21642,"endOffset":21705,"count":1}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":22006,"endOffset":23878,"count":539}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":23882,"endOffset":24639,"count":64}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24806,"endOffset":24904,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25007,"endOffset":25109,"count":1}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":25146,"endOffset":25284,"count":48}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":25571,"endOffset":26216,"count":539}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":35544,"endOffset":35993,"count":30}],"isBlockCoverage":false},{"functionName":"subarray","ranges":[{"startOffset":36025,"endOffset":36334,"count":15}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":36364,"endOffset":36432,"count":13}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41034,"endOffset":41069,"count":1}],"isBlockCoverage":false}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"checkBounds","ranges":[{"startOffset":1247,"endOffset":1467,"count":43}],"isBlockCoverage":false},{"functionName":"checkInt","ranges":[{"startOffset":1471,"endOffset":2110,"count":43}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5974,"endOffset":6311,"count":50}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6615,"endOffset":6883,"count":143}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":11447,"endOffset":11762,"count":12}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":19514,"endOffset":19833,"count":2}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19837,"endOffset":19945,"count":2}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":20222,"endOffset":20425,"count":41}],"isBlockCoverage":false},{"functionName":"writeUInt16LE","ranges":[{"startOffset":20429,"endOffset":20533,"count":41}],"isBlockCoverage":false},{"functionName":"writeU_Int8","ranges":[{"startOffset":20537,"endOffset":20961,"count":131}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20965,"endOffset":21061,"count":131}],"isBlockCoverage":false},{"functionName":"FastBuffer","ranges":[{"startOffset":27342,"endOffset":27444,"count":440}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30449,"endOffset":30764,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30867,"endOffset":31183,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31268,"endOffset":31582,"count":114}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":31746,"endOffset":31999,"count":5}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":32601,"endOffset":32744,"count":47}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":33005,"endOffset":33079,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"markTransferMode","ranges":[{"startOffset":2840,"endOffset":3245,"count":1271}],"isBlockCoverage":false}]},{"scriptId":"28","url":"node:internal/process/per_thread","functions":[{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8194,"endOffset":12467,"count":1}],"isBlockCoverage":false},{"functionName":"isAccepted","ranges":[{"startOffset":8849,"endOffset":9262,"count":32}],"isBlockCoverage":false},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9783,"endOffset":9845,"count":257}],"isBlockCoverage":false},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":10163,"endOffset":10242,"count":1}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":10250,"endOffset":10322,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10330,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10414,"endOffset":10468,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10476,"endOffset":11308,"count":1}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11316,"endOffset":11485,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11493,"endOffset":11675,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11683,"endOffset":11746,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11754,"endOffset":11921,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12663,"endOffset":12953,"count":1}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1251,"endOffset":1339,"count":1452}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1653,"endOffset":2814,"count":467}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":2962,"endOffset":3924,"count":1836}],"isBlockCoverage":false}]},{"scriptId":"30","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1388,"endOffset":1504,"count":6}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4321,"endOffset":4413,"count":476}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":4846,"endOffset":5551,"count":18}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":7034,"endOffset":7304,"count":9}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":7347,"endOffset":7943,"count":9}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":11845,"endOffset":12412,"count":1}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12590,"endOffset":14148,"count":467}],"isBlockCoverage":false}]},{"scriptId":"31","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3197,"endOffset":3251,"count":3510}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":3257,"endOffset":3326,"count":1836}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3332,"endOffset":3422,"count":1836}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3428,"endOffset":3650,"count":2468}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3778,"endOffset":3827,"count":2468}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3833,"endOffset":4104,"count":1836}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":4110,"endOffset":4374,"count":2468}],"isBlockCoverage":false}]},{"scriptId":"32","url":"node:async_hooks","functions":[{"functionName":"AsyncResource","ranges":[{"startOffset":4836,"endOffset":6131,"count":31}],"isBlockCoverage":false},{"functionName":"runInAsyncScope","ranges":[{"startOffset":6137,"endOffset":6581,"count":31}],"isBlockCoverage":false}]},{"scriptId":"33","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1974,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2283,"endOffset":3502,"count":126}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4231,"endOffset":4928,"count":66}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5239,"endOffset":5610,"count":691}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":5859,"endOffset":6558,"count":60}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":6662,"endOffset":6965,"count":60}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7639,"endOffset":8228,"count":417}],"isBlockCoverage":false}]},{"scriptId":"34","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":983,"endOffset":1322,"count":1}],"isBlockCoverage":false}]},{"scriptId":"35","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":2027,"endOffset":2133,"count":3811}],"isBlockCoverage":false},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":2220,"endOffset":2393,"count":3019}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":2459,"endOffset":4469,"count":106}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5667,"endOffset":10592,"count":2968}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":10664,"endOffset":14693,"count":537}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":14766,"endOffset":15195,"count":1368}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":15270,"endOffset":17480,"count":14}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":17787,"endOffset":22842,"count":2}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":22914,"endOffset":24053,"count":3687}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":24125,"endOffset":26760,"count":1767}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":26863,"endOffset":29721,"count":648}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":29793,"endOffset":31928,"count":12}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":32164,"endOffset":37070,"count":2}],"isBlockCoverage":false}]},{"scriptId":"36","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3730,"endOffset":4543,"count":1246}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4311,"endOffset":4378,"count":60}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4384,"endOffset":4461,"count":626}],"isBlockCoverage":false},{"functionName":"get hasHash","ranges":[{"startOffset":4467,"endOffset":4540,"count":566}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":22601,"endOffset":22728,"count":1720}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23227,"endOffset":35062,"count":1246}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":23353,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23862,"endOffset":24795,"count":1246}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":24808,"endOffset":25056,"count":198}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25062,"endOffset":25807,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":25813,"endOffset":26153,"count":122}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":26159,"endOffset":26273,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":26279,"endOffset":26725,"count":1689}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":26980,"endOffset":28668,"count":1261}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":28674,"endOffset":28863,"count":541}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":28869,"endOffset":29058,"count":1026}],"isBlockCoverage":false},{"functionName":"set href","ranges":[{"startOffset":29064,"endOffset":29288,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":29309,"endOffset":30207,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":30213,"endOffset":30319,"count":1046}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":30325,"endOffset":30503,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":30509,"endOffset":30741,"count":60}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":30747,"endOffset":30925,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":30931,"endOffset":31159,"count":60}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":31165,"endOffset":31343,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":31349,"endOffset":31791,"count":60}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":31797,"endOffset":31967,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":31973,"endOffset":32262,"count":150}],"isBlockCoverage":false},{"functionName":"set hostname","ranges":[{"startOffset":32268,"endOffset":32446,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":32452,"endOffset":32565,"count":60}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":32571,"endOffset":32741,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":32747,"endOffset":33047,"count":504}],"isBlockCoverage":false},{"functionName":"set pathname","ranges":[{"startOffset":33053,"endOffset":33231,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":33237,"endOffset":33438,"count":122}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":33444,"endOffset":33653,"count":62}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":33674,"endOffset":34040,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":34046,"endOffset":34266,"count":62}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":34272,"endOffset":34442,"count":62}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":34448,"endOffset":34635,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":34648,"endOffset":35059,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":43139,"endOffset":44669,"count":90}],"isBlockCoverage":false},{"functionName":"fileURLToPath","ranges":[{"startOffset":45214,"endOffset":45635,"count":335}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":45639,"endOffset":47415,"count":279}],"isBlockCoverage":false},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":47419,"endOffset":47560,"count":1315}],"isBlockCoverage":false}]},{"scriptId":"39","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":false},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2}],"isBlockCoverage":false},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":2}],"isBlockCoverage":false}]},{"scriptId":"41","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":731,"endOffset":862,"count":1}],"isBlockCoverage":false},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1655,"endOffset":1720,"count":72}],"isBlockCoverage":false},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1813,"endOffset":2332,"count":1}],"isBlockCoverage":false},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2660,"endOffset":3276,"count":72}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":4738,"endOffset":6330,"count":72}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":7415,"endOffset":7851,"count":72}],"isBlockCoverage":false},{"functionName":"lineLengths","ranges":[{"startOffset":8046,"endOffset":8860,"count":57}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":9019,"endOffset":9309,"count":39}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":9407,"endOffset":10097,"count":33}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":10375,"endOffset":10791,"count":72}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10454,"endOffset":10643,"count":255}],"isBlockCoverage":false}]},{"scriptId":"42","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1381,"endOffset":1408,"count":1}],"isBlockCoverage":false},{"functionName":"toRealPath","ranges":[{"startOffset":1892,"endOffset":2028,"count":868}],"isBlockCoverage":false},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":2151,"endOffset":2656,"count":1}],"isBlockCoverage":false},{"functionName":"getCjsConditions","ranges":[{"startOffset":2728,"endOffset":2860,"count":77}],"isBlockCoverage":false},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":3094,"endOffset":3484,"count":257}],"isBlockCoverage":false},{"functionName":"lazyModule","ranges":[{"startOffset":3584,"endOffset":3679,"count":627}],"isBlockCoverage":false},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3909,"endOffset":5029,"count":627}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":4111,"endOffset":4171,"count":1552}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4359,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4661,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":5249,"endOffset":5409,"count":11}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":7964,"endOffset":8486,"count":81}],"isBlockCoverage":false},{"functionName":"urlToFilename","ranges":[{"startOffset":8563,"endOffset":8706,"count":8}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":11432,"endOffset":11551,"count":36}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":12043,"endOffset":12478,"count":36}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":12732,"endOffset":13005,"count":26}],"isBlockCoverage":false},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":13346,"endOffset":13422,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":13427,"endOffset":13506,"count":627}],"isBlockCoverage":false},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":13511,"endOffset":13587,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":13592,"endOffset":13671,"count":9}],"isBlockCoverage":false}]},{"scriptId":"43","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5354,"endOffset":5621,"count":3552}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":7633,"endOffset":7783,"count":2}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10421,"endOffset":10629,"count":1}],"isBlockCoverage":false},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10633,"endOffset":10957,"count":1}],"isBlockCoverage":false},{"functionName":"tryReadSync","ranges":[{"startOffset":10961,"endOffset":11226,"count":1}],"isBlockCoverage":false},{"functionName":"readFileSync","ranges":[{"startOffset":11461,"endOffset":13128,"count":683}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":13672,"endOffset":13721,"count":1}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":14680,"endOffset":14848,"count":1}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":18547,"endOffset":19644,"count":1}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":41215,"endOffset":41712,"count":5}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":45788,"endOffset":46095,"count":62}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":72046,"endOffset":72144,"count":396}],"isBlockCoverage":false},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":72395,"endOffset":72690,"count":396}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":72818,"endOffset":73086,"count":446}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":73372,"endOffset":77191,"count":538}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":85379,"endOffset":85576,"count":5}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":88867,"endOffset":88938,"count":2}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":89001,"endOffset":89074,"count":1}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":89274,"endOffset":89353,"count":1}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":89424,"endOffset":89505,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":90231,"endOffset":90330,"count":1}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/encoding","functions":[{"functionName":"validateEncoder","ranges":[{"startOffset":1418,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1550,"endOffset":1678,"count":18}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9738,"endOffset":9921,"count":2}],"isBlockCoverage":false},{"functionName":"TextEncoder","ranges":[{"startOffset":9948,"endOffset":9996,"count":2}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":10078,"endOffset":10173,"count":1}],"isBlockCoverage":false},{"functionName":"TextDecoder","ranges":[{"startOffset":11543,"endOffset":12533,"count":2}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12820,"endOffset":13538,"count":18}],"isBlockCoverage":false}]},{"scriptId":"48","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":8427,"endOffset":9084,"count":73}],"isBlockCoverage":false}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3714,"endOffset":3919,"count":1220}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7714,"endOffset":8361,"count":1251}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":9734,"endOffset":10053,"count":14}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10091,"endOffset":10150,"count":11}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10184,"endOffset":10243,"count":12}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10868,"endOffset":10952,"count":56}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":13831,"endOffset":14230,"count":14}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14433,"endOffset":14669,"count":23}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14794,"endOffset":15896,"count":14}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":16318,"endOffset":17614,"count":708}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18632,"endOffset":19106,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19714,"endOffset":20446,"count":1315}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20493,"endOffset":20632,"count":777}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20677,"endOffset":20806,"count":1}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1735,"endOffset":1838,"count":143}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5761,"endOffset":6363,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5978,"endOffset":6044,"count":378}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6057,"endOffset":6087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6223,"endOffset":6289,"count":51}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6302,"endOffset":6332,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7918,"endOffset":9428,"count":143}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9528,"endOffset":9953,"count":143}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10051,"endOffset":10235,"count":126}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10333,"endOffset":10517,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10681,"endOffset":11515,"count":143}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11792,"endOffset":11881,"count":126}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11890,"endOffset":11980,"count":17}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":19558,"endOffset":20577,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20467,"endOffset":20572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13898,"endOffset":14122,"count":1}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":30913,"endOffset":32424,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31076,"endOffset":31215,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31320,"endOffset":32178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1477,"endOffset":3141,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2943,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3787,"endOffset":3882,"count":2}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3886,"endOffset":4598,"count":14}],"isBlockCoverage":false},{"functionName":"cleanupStdout","ranges":[{"startOffset":4255,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4602,"endOffset":5312,"count":144}],"isBlockCoverage":false},{"functionName":"cleanupStderr","ranges":[{"startOffset":4969,"endOffset":5152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":8}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":6}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":6}],"isBlockCoverage":false}]},{"scriptId":"62","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":2245,"endOffset":2534,"count":82}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3583,"endOffset":4205,"count":6}],"isBlockCoverage":false},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4209,"endOffset":4438,"count":4}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5277,"endOffset":15684,"count":6}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":15718,"endOffset":16686,"count":4}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":17766,"endOffset":18494,"count":6}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":20480,"endOffset":22943,"count":10}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":22948,"endOffset":23049,"count":2}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23077,"endOffset":23180,"count":2}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":23365,"endOffset":32454,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24109,"endOffset":24227,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":32485,"endOffset":32769,"count":4}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":32995,"endOffset":33113,"count":9}],"isBlockCoverage":false}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4884,"endOffset":4927,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5626,"endOffset":5688,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5780,"endOffset":5818,"count":1}],"isBlockCoverage":false},{"functionName":"wrapModuleLoad","ranges":[{"startOffset":6066,"endOffset":6508,"count":1561}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":6652,"endOffset":7134,"count":3931}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":7645,"endOffset":7852,"count":1312}],"isBlockCoverage":false},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7975,"endOffset":8135,"count":2182}],"isBlockCoverage":false},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":8326,"endOffset":8569,"count":76}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8514,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8667,"endOffset":8939,"count":639}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10975,"endOffset":11002,"count":1}],"isBlockCoverage":false},{"functionName":"initializeCJS","ranges":[{"startOffset":11746,"endOffset":12680,"count":1}],"isBlockCoverage":false},{"functionName":"tryPackage","ranges":[{"startOffset":13596,"endOffset":14828,"count":264}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":15197,"endOffset":15467,"count":1742}],"isBlockCoverage":false},{"functionName":"tryExtensions","ranges":[{"startOffset":15740,"endOffset":15969,"count":860}],"isBlockCoverage":false},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":16159,"endOffset":16647,"count":639}],"isBlockCoverage":false},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16776,"endOffset":17081,"count":1022}],"isBlockCoverage":false},{"functionName":"trySelf","ranges":[{"startOffset":17296,"endOffset":18270,"count":1022}],"isBlockCoverage":false},{"functionName":"resolveExports","ranges":[{"startOffset":18632,"endOffset":19470,"count":932}],"isBlockCoverage":false},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":19535,"endOffset":20725,"count":649}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19984,"endOffset":20124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20302,"endOffset":20381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20648,"endOffset":20720,"count":2596}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21027,"endOffset":25105,"count":1022}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25449,"endOffset":27060,"count":72}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28613,"endOffset":29941,"count":1022}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":31439,"endOffset":32464,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33143,"endOffset":37133,"count":1561}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37606,"endOffset":40835,"count":1261}],"isBlockCoverage":false},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":41272,"endOffset":41867,"count":77}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42538,"endOffset":43429,"count":639}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43640,"endOffset":43953,"count":1552}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":49656,"endOffset":51713,"count":627}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52123,"endOffset":53467,"count":627}],"isBlockCoverage":false},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":53729,"endOffset":54146,"count":627}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56673,"endOffset":58306,"count":627}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58495,"endOffset":58751,"count":11}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58940,"endOffset":59080,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60840,"endOffset":61833,"count":1}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"deserializePackageJSON","ranges":[{"startOffset":499,"endOffset":2028,"count":2470}],"isBlockCoverage":false},{"functionName":"requiresJSONParse","ranges":[{"startOffset":1310,"endOffset":1384,"count":1414}],"isBlockCoverage":false},{"functionName":"get imports","ranges":[{"startOffset":1573,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":1799,"endOffset":2018,"count":1414}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2316,"endOffset":2752,"count":707}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2973,"endOffset":3109,"count":673}],"isBlockCoverage":false},{"functionName":"getNearestParentPackageJSON","ranges":[{"startOffset":3442,"endOffset":3953,"count":1628}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":4188,"endOffset":4603,"count":135}],"isBlockCoverage":false}]},{"scriptId":"66","url":"node:diagnostics_channel","functions":[{"functionName":"set","ranges":[{"startOffset":972,"endOffset":1092,"count":26}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1098,"endOffset":1148,"count":26}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":4249,"endOffset":4396,"count":26}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4890,"endOffset":4936,"count":3020}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":5094,"endOffset":5369,"count":26}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5958,"endOffset":6497,"count":15}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":6527,"endOffset":6808,"count":3}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6814,"endOffset":7035,"count":1690}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7554,"endOffset":8085,"count":1561}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7771,"endOffset":8078,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":8091,"endOffset":9317,"count":9}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":8301,"endOffset":8567,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8575,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8846,"endOffset":9310,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":10463,"endOffset":10553,"count":3}],"isBlockCoverage":false}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1338,"endOffset":1447,"count":64}],"isBlockCoverage":false},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1584,"endOffset":1702,"count":63}],"isBlockCoverage":false},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1858,"endOffset":2376,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":2452,"endOffset":2820,"count":63}],"isBlockCoverage":false},{"functionName":"defaultImportModuleDynamicallyForScript","ranges":[{"startOffset":8096,"endOffset":8408,"count":9}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":9052,"endOffset":10556,"count":9}],"isBlockCoverage":false},{"functionName":"initializeESM","ranges":[{"startOffset":10877,"endOffset":11270,"count":1}],"isBlockCoverage":false},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":11405,"endOffset":11470,"count":1}],"isBlockCoverage":false},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":13059,"endOffset":13532,"count":18}],"isBlockCoverage":false}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1108,"endOffset":1298,"count":1}],"isBlockCoverage":false},{"functionName":"prepareExecution","ranges":[{"startOffset":2516,"endOffset":4682,"count":1}],"isBlockCoverage":false},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4686,"endOffset":5444,"count":1}],"isBlockCoverage":false},{"functionName":"setupUserModules","ranges":[{"startOffset":5448,"endOffset":6216,"count":1}],"isBlockCoverage":false},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6220,"endOffset":6278,"count":1}],"isBlockCoverage":false},{"functionName":"patchProcessObject","ranges":[{"startOffset":6714,"endOffset":9106,"count":1}],"isBlockCoverage":false},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9110,"endOffset":9402,"count":13}],"isBlockCoverage":false},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9406,"endOffset":9944,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9822,"endOffset":9927,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10023,"endOffset":10364,"count":1}],"isBlockCoverage":false},{"functionName":"setupEventsource","ranges":[{"startOffset":10435,"endOffset":10564,"count":1}],"isBlockCoverage":false},{"functionName":"setupNavigator","ranges":[{"startOffset":10672,"endOffset":11082,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":11190,"endOffset":12173,"count":1}],"isBlockCoverage":false},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11528,"endOffset":11708,"count":2}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":12018,"endOffset":12119,"count":0}],"isBlockCoverage":false},{"functionName":"setupSQLite","ranges":[{"startOffset":12177,"endOffset":12391,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebStorage","ranges":[{"startOffset":12395,"endOffset":12811,"count":1}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":12815,"endOffset":13347,"count":1}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":13457,"endOffset":13741,"count":1}],"isBlockCoverage":false},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":13745,"endOffset":13978,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReport","ranges":[{"startOffset":13982,"endOffset":14241,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14132,"endOffset":14230,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":14245,"endOffset":14481,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":14546,"endOffset":14739,"count":1}],"isBlockCoverage":false},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":14743,"endOffset":15500,"count":1}],"isBlockCoverage":false},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":15061,"endOffset":15218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15416,"endOffset":15490,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":15504,"endOffset":15767,"count":1}],"isBlockCoverage":false},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":15771,"endOffset":16366,"count":1}],"isBlockCoverage":false},{"functionName":"setupNetworkInspection","ranges":[{"startOffset":16370,"endOffset":16691,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDeprecations","ranges":[{"startOffset":16891,"endOffset":18851,"count":1}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":18855,"endOffset":19387,"count":1}],"isBlockCoverage":false},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":19391,"endOffset":19668,"count":1}],"isBlockCoverage":false},{"functionName":"initializePermission","ranges":[{"startOffset":19672,"endOffset":21639,"count":1}],"isBlockCoverage":false},{"functionName":"binding","ranges":[{"startOffset":19804,"endOffset":19893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21477,"endOffset":21629,"count":6}],"isBlockCoverage":false},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21643,"endOffset":21767,"count":1}],"isBlockCoverage":false},{"functionName":"initializeESMLoader","ranges":[{"startOffset":21771,"endOffset":22369,"count":1}],"isBlockCoverage":false},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22373,"endOffset":22576,"count":1}],"isBlockCoverage":false},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22580,"endOffset":22772,"count":1}],"isBlockCoverage":false},{"functionName":"loadPreloadModules","ranges":[{"startOffset":22885,"endOffset":23244,"count":1}],"isBlockCoverage":false},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23248,"endOffset":23344,"count":1}],"isBlockCoverage":false}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":745,"endOffset":1878,"count":1}],"isBlockCoverage":false},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":2045,"endOffset":3601,"count":1}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":6029,"endOffset":7169,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6916,"endOffset":7159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":613,"endOffset":705,"count":2}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":973,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"validateTries","ranges":[{"startOffset":1128,"endOffset":1267,"count":1}],"isBlockCoverage":false},{"functionName":"ResolverBase","ranges":[{"startOffset":1673,"endOffset":2031,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2037,"endOffset":2176,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDns","ranges":[{"startOffset":5669,"endOffset":6167,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6104,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6448,"endOffset":6736,"count":1}],"isBlockCoverage":false},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6817,"endOffset":7044,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6952,"endOffset":7039,"count":15}],"isBlockCoverage":false},{"functionName":"validateHints","ranges":[{"startOffset":7048,"endOffset":7272,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultResultOrder","ranges":[{"startOffset":7832,"endOffset":7889,"count":1}],"isBlockCoverage":false},{"functionName":"createResolverClass","ranges":[{"startOffset":7893,"endOffset":9024,"count":1}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1067,"endOffset":1345,"count":124}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1349,"endOffset":1627,"count":2}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1631,"endOffset":1721,"count":124}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3870,"endOffset":3977,"count":53}],"isBlockCoverage":false}]},{"scriptId":"74","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1404,"count":1}],"isBlockCoverage":false}]},{"scriptId":"75","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13389,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2488,"endOffset":2615,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2662,"endOffset":4161,"count":1},{"startOffset":2767,"endOffset":2815,"count":0},{"startOffset":3326,"endOffset":3391,"count":0},{"startOffset":4014,"endOffset":4085,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4167,"endOffset":4468,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4474,"endOffset":4869,"count":1},{"startOffset":4692,"endOffset":4730,"count":0},{"startOffset":4732,"endOffset":4806,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4875,"endOffset":5049,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5056,"endOffset":5280,"count":1},{"startOffset":5142,"endOffset":5277,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5284,"endOffset":5992,"count":1},{"startOffset":5489,"endOffset":5556,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5996,"endOffset":7090,"count":2},{"startOffset":6056,"endOffset":6066,"count":0},{"startOffset":6400,"endOffset":6463,"count":0},{"startOffset":6516,"endOffset":6948,"count":0},{"startOffset":6998,"endOffset":7061,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7128,"endOffset":8568,"count":2},{"startOffset":7276,"endOffset":7596,"count":1},{"startOffset":7596,"endOffset":7637,"count":0},{"startOffset":7637,"endOffset":7680,"count":1},{"startOffset":7680,"endOffset":7737,"count":0},{"startOffset":7737,"endOffset":7820,"count":1},{"startOffset":7820,"endOffset":8007,"count":0},{"startOffset":8007,"endOffset":8567,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8572,"endOffset":8650,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8808,"endOffset":9283,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9287,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9701,"endOffset":10060,"count":1},{"startOffset":9794,"endOffset":9838,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":10064,"endOffset":10255,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10259,"endOffset":11935,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12224,"endOffset":12808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"77","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/bin/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4009,"count":1},{"startOffset":1592,"endOffset":1658,"count":0},{"startOffset":2098,"endOffset":2188,"count":0},{"startOffset":2268,"endOffset":3913,"count":0}],"isBlockCoverage":true},{"functionName":"disableTimeouts","ranges":[{"startOffset":831,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"trimV8Option","ranges":[{"startOffset":1183,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1340,"endOffset":1467,"count":10},{"startOffset":1372,"endOffset":1422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1537,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2057,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2454,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3155,"endOffset":3909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9689,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2082,"endOffset":2212,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2138,"endOffset":2203,"count":2},{"startOffset":2188,"endOffset":2191,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2301,"endOffset":2389,"count":33}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2350,"endOffset":2387,"count":7},{"startOffset":2373,"endOffset":2382,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2770,"endOffset":2814,"count":20}],"isBlockCoverage":true},{"functionName":"createErrorForNumericPositionalArg","ranges":[{"startOffset":3210,"endOffset":4051,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4351,"endOffset":5900,"count":3},{"startOffset":4800,"endOffset":4806,"count":2},{"startOffset":4807,"endOffset":4824,"count":1},{"startOffset":5454,"endOffset":5543,"count":0},{"startOffset":5647,"endOffset":5760,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4860,"endOffset":5103,"count":1},{"startOffset":4966,"endOffset":5083,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5410,"endOffset":5425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5595,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5820,"endOffset":5873,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":6284,"endOffset":6430,"count":1},{"startOffset":6398,"endOffset":6418,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":6866,"endOffset":7980,"count":1},{"startOffset":6927,"endOffset":6951,"count":0},{"startOffset":7140,"endOffset":7524,"count":0},{"startOffset":7598,"endOffset":7704,"count":0},{"startOffset":7776,"endOffset":7957,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":8697,"endOffset":9586,"count":1},{"startOffset":8923,"endOffset":8945,"count":0},{"startOffset":9347,"endOffset":9352,"count":0},{"startOffset":9368,"endOffset":9373,"count":0},{"startOffset":9444,"endOffset":9510,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8867,"endOffset":8899,"count":6}],"isBlockCoverage":true}]},{"scriptId":"79","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"hasColor","ranges":[{"startOffset":382,"endOffset":495,"count":1},{"startOffset":477,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":513,"endOffset":5843,"count":1}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":634,"endOffset":1300,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":857,"endOffset":1277,"count":4},{"startOffset":912,"endOffset":955,"count":0},{"startOffset":1214,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1318,"endOffset":1434,"count":4},{"startOffset":1386,"endOffset":1400,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1453,"endOffset":1899,"count":4},{"startOffset":1512,"endOffset":1522,"count":0},{"startOffset":1557,"endOffset":1570,"count":0},{"startOffset":1605,"endOffset":1615,"count":0},{"startOffset":1745,"endOffset":1813,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1919,"endOffset":2460,"count":42},{"startOffset":2026,"endOffset":2053,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2176,"endOffset":2231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2239,"endOffset":2448,"count":4},{"startOffset":2383,"endOffset":2408,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2267,"endOffset":2301,"count":4}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4300,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4448,"endOffset":5212,"count":2},{"startOffset":4506,"endOffset":4521,"count":0},{"startOffset":4566,"endOffset":4677,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4922,"endOffset":4977,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4985,"endOffset":5200,"count":2},{"startOffset":5129,"endOffset":5158,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":5013,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5232,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5467,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5662,"endOffset":5672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1618,"count":1},{"startOffset":1191,"endOffset":1196,"count":0},{"startOffset":1228,"endOffset":1233,"count":0},{"startOffset":1345,"endOffset":1352,"count":0}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42622,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2558,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3733,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5018,"endOffset":6126,"count":32},{"startOffset":5118,"endOffset":5137,"count":0},{"startOffset":5220,"endOffset":5231,"count":25},{"startOffset":5231,"endOffset":5287,"count":7},{"startOffset":5287,"endOffset":5658,"count":0},{"startOffset":5658,"endOffset":6123,"count":7},{"startOffset":5701,"endOffset":6123,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7304,"endOffset":8038,"count":32},{"startOffset":7509,"endOffset":7520,"count":0},{"startOffset":7725,"endOffset":7758,"count":18},{"startOffset":7751,"endOffset":7758,"count":0},{"startOffset":7759,"endOffset":7763,"count":14}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":8836,"endOffset":10645,"count":62},{"startOffset":8973,"endOffset":9234,"count":0},{"startOffset":9301,"endOffset":9432,"count":0},{"startOffset":9573,"endOffset":9605,"count":0},{"startOffset":9678,"endOffset":9876,"count":0},{"startOffset":9899,"endOffset":10290,"count":0},{"startOffset":10544,"endOffset":10549,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":11068,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11688,"endOffset":11887,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12536,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13392,"endOffset":13780,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15158,"endOffset":17976,"count":79},{"startOffset":15339,"endOffset":15350,"count":2},{"startOffset":15351,"endOffset":15387,"count":0},{"startOffset":15389,"endOffset":15475,"count":0},{"startOffset":15527,"endOffset":16084,"count":0},{"startOffset":16178,"endOffset":16802,"count":0},{"startOffset":17027,"endOffset":17113,"count":0},{"startOffset":17139,"endOffset":17159,"count":77},{"startOffset":17159,"endOffset":17229,"count":2},{"startOffset":17229,"endOffset":17798,"count":0},{"startOffset":17798,"endOffset":17933,"count":2},{"startOffset":17933,"endOffset":17975,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15852,"endOffset":15865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16391,"endOffset":16404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16540,"endOffset":16553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17297,"endOffset":17310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17541,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17905,"endOffset":17918,"count":2}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":18175,"endOffset":18323,"count":88},{"startOffset":18273,"endOffset":18319,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":19133,"endOffset":21417,"count":129},{"startOffset":19328,"endOffset":19486,"count":79},{"startOffset":19486,"endOffset":21297,"count":50},{"startOffset":19518,"endOffset":20365,"count":8},{"startOffset":19550,"endOffset":19578,"count":0},{"startOffset":19908,"endOffset":20062,"count":0},{"startOffset":20103,"endOffset":20132,"count":0},{"startOffset":20168,"endOffset":20228,"count":0},{"startOffset":20264,"endOffset":20365,"count":0},{"startOffset":20365,"endOffset":21297,"count":42},{"startOffset":20520,"endOffset":20755,"count":88},{"startOffset":20580,"endOffset":20748,"count":0},{"startOffset":20799,"endOffset":21218,"count":79},{"startOffset":20858,"endOffset":20880,"count":64},{"startOffset":20882,"endOffset":21211,"count":42},{"startOffset":21158,"endOffset":21171,"count":0},{"startOffset":21218,"endOffset":21297,"count":0},{"startOffset":21297,"endOffset":21416,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21709,"endOffset":22673,"count":79},{"startOffset":21842,"endOffset":21858,"count":0},{"startOffset":21915,"endOffset":21932,"count":0},{"startOffset":22077,"endOffset":22640,"count":687},{"startOffset":22190,"endOffset":22249,"count":79},{"startOffset":22249,"endOffset":22635,"count":608},{"startOffset":22305,"endOffset":22635,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23181,"endOffset":25827,"count":79},{"startOffset":23388,"endOffset":23427,"count":6},{"startOffset":23492,"endOffset":23547,"count":77},{"startOffset":23548,"endOffset":23603,"count":77},{"startOffset":23605,"endOffset":23950,"count":77},{"startOffset":23840,"endOffset":23916,"count":0},{"startOffset":23950,"endOffset":24094,"count":2},{"startOffset":24094,"endOffset":25310,"count":222},{"startOffset":24211,"endOffset":24343,"count":6},{"startOffset":24345,"endOffset":25305,"count":2},{"startOffset":24657,"endOffset":24796,"count":0},{"startOffset":25310,"endOffset":25758,"count":2},{"startOffset":25650,"endOffset":25726,"count":0},{"startOffset":25758,"endOffset":25826,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26210,"endOffset":26777,"count":2},{"startOffset":26411,"endOffset":26430,"count":0},{"startOffset":26473,"endOffset":26483,"count":0},{"startOffset":26533,"endOffset":26547,"count":0},{"startOffset":26589,"endOffset":26776,"count":0}],"isBlockCoverage":true},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27275,"endOffset":29808,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":29980,"endOffset":31070,"count":34},{"startOffset":30175,"endOffset":30411,"count":0},{"startOffset":30459,"endOffset":30475,"count":33},{"startOffset":30476,"endOffset":30528,"count":1},{"startOffset":30705,"endOffset":30742,"count":0},{"startOffset":30771,"endOffset":30893,"count":0},{"startOffset":30951,"endOffset":30955,"count":33},{"startOffset":30956,"endOffset":31010,"count":1}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31403,"endOffset":33480,"count":35},{"startOffset":31569,"endOffset":31617,"count":1},{"startOffset":31617,"endOffset":32109,"count":34},{"startOffset":31875,"endOffset":31912,"count":0},{"startOffset":31914,"endOffset":32104,"count":0},{"startOffset":32109,"endOffset":32286,"count":34},{"startOffset":32286,"endOffset":33348,"count":70},{"startOffset":32515,"endOffset":32799,"count":36},{"startOffset":32594,"endOffset":32632,"count":0},{"startOffset":32799,"endOffset":32984,"count":34},{"startOffset":32984,"endOffset":33104,"count":2},{"startOffset":33104,"endOffset":33253,"count":32},{"startOffset":33253,"endOffset":33348,"count":0},{"startOffset":33348,"endOffset":33479,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33597,"endOffset":33709,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33834,"endOffset":34121,"count":126},{"startOffset":33905,"endOffset":34101,"count":38},{"startOffset":33964,"endOffset":33980,"count":0},{"startOffset":34101,"endOffset":34120,"count":88}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34276,"endOffset":34471,"count":126},{"startOffset":34363,"endOffset":34380,"count":0},{"startOffset":34410,"endOffset":34426,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34843,"endOffset":36159,"count":63},{"startOffset":35036,"endOffset":35056,"count":0},{"startOffset":35276,"endOffset":35508,"count":19},{"startOffset":35340,"endOffset":35503,"count":0},{"startOffset":35508,"endOffset":36025,"count":44},{"startOffset":35564,"endOffset":35638,"count":0},{"startOffset":35702,"endOffset":36020,"count":35},{"startOffset":35736,"endOffset":35791,"count":0},{"startOffset":35793,"endOffset":35950,"count":0},{"startOffset":36064,"endOffset":36092,"count":1},{"startOffset":36092,"endOffset":36158,"count":62}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36367,"endOffset":38240,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":38386,"endOffset":38666,"count":63},{"startOffset":38464,"endOffset":38517,"count":0},{"startOffset":38555,"endOffset":38575,"count":0},{"startOffset":38577,"endOffset":38663,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":39182,"endOffset":41418,"count":63},{"startOffset":39497,"endOffset":39555,"count":19},{"startOffset":39555,"endOffset":39602,"count":44},{"startOffset":39628,"endOffset":39835,"count":28},{"startOffset":39769,"endOffset":39830,"count":0},{"startOffset":39860,"endOffset":39870,"count":0},{"startOffset":39901,"endOffset":39948,"count":0},{"startOffset":40011,"endOffset":40528,"count":0},{"startOffset":40693,"endOffset":40715,"count":0},{"startOffset":40749,"endOffset":41183,"count":0}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":41689,"endOffset":42314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9752,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":881,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"detectModuleFormat","ranges":[{"startOffset":1088,"endOffset":1333,"count":58},{"startOffset":1147,"endOffset":1191,"count":51},{"startOffset":1176,"endOffset":1188,"count":0},{"startOffset":1191,"endOffset":1214,"count":7},{"startOffset":1214,"endOffset":1236,"count":0},{"startOffset":1236,"endOffset":1306,"count":7},{"startOffset":1306,"endOffset":1316,"count":0},{"startOffset":1317,"endOffset":1329,"count":7}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1400,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1910,"endOffset":2281,"count":101},{"startOffset":2012,"endOffset":2264,"count":303},{"startOffset":2076,"endOffset":2112,"count":0},{"startOffset":2122,"endOffset":2252,"count":101},{"startOffset":2211,"endOffset":2215,"count":0},{"startOffset":2264,"endOffset":2280,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2519,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"warnTypelessPackageJsonFile","ranges":[{"startOffset":2790,"endOffset":3428,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":3577,"endOffset":8860,"count":101},{"startOffset":3885,"endOffset":3920,"count":43},{"startOffset":3920,"endOffset":4057,"count":58},{"startOffset":4057,"endOffset":4420,"count":0},{"startOffset":4428,"endOffset":4553,"count":0},{"startOffset":4561,"endOffset":5351,"count":58},{"startOffset":5014,"endOffset":5033,"count":0},{"startOffset":5035,"endOffset":5318,"count":0},{"startOffset":5363,"endOffset":5432,"count":0},{"startOffset":5434,"endOffset":8859,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":9012,"endOffset":9253,"count":95},{"startOffset":9168,"endOffset":9192,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":9405,"endOffset":9634,"count":7},{"startOffset":9548,"endOffset":9572,"count":0}],"isBlockCoverage":true}]},{"scriptId":"83","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2016,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":875,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1601,"endOffset":1915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42891,"count":1},{"startOffset":41288,"endOffset":41332,"count":0},{"startOffset":41414,"endOffset":41422,"count":0},{"startOffset":41469,"endOffset":41477,"count":0},{"startOffset":41520,"endOffset":41643,"count":0},{"startOffset":41756,"endOffset":41954,"count":0},{"startOffset":41991,"endOffset":41995,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":21},{"startOffset":172,"endOffset":200,"count":0},{"startOffset":297,"endOffset":323,"count":0},{"startOffset":325,"endOffset":352,"count":0},{"startOffset":511,"endOffset":537,"count":0},{"startOffset":564,"endOffset":946,"count":267},{"startOffset":633,"endOffset":727,"count":24},{"startOffset":752,"endOffset":783,"count":246},{"startOffset":768,"endOffset":782,"count":222},{"startOffset":785,"endOffset":837,"count":24},{"startOffset":837,"endOffset":936,"count":243}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":18},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":206},{"startOffset":1289,"endOffset":1297,"count":21},{"startOffset":1299,"endOffset":1377,"count":21},{"startOffset":1377,"endOffset":1441,"count":185}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":17},{"startOffset":1552,"endOffset":1565,"count":0},{"startOffset":1605,"endOffset":1617,"count":2},{"startOffset":1617,"endOffset":1660,"count":15},{"startOffset":1660,"endOffset":1672,"count":0},{"startOffset":1672,"endOffset":1707,"count":15},{"startOffset":1707,"endOffset":1720,"count":0},{"startOffset":1720,"endOffset":1785,"count":15}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":5},{"startOffset":1862,"endOffset":1940,"count":4},{"startOffset":1940,"endOffset":2125,"count":1},{"startOffset":2125,"endOffset":2554,"count":0},{"startOffset":2554,"endOffset":2572,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39582,"count":5},{"startOffset":4702,"endOffset":4707,"count":0},{"startOffset":4855,"endOffset":4861,"count":2},{"startOffset":4862,"endOffset":4867,"count":3},{"startOffset":4991,"endOffset":5006,"count":3},{"startOffset":5665,"endOffset":5670,"count":0},{"startOffset":6308,"endOffset":6313,"count":0},{"startOffset":6469,"endOffset":6474,"count":0},{"startOffset":6632,"endOffset":6637,"count":0},{"startOffset":6794,"endOffset":6799,"count":3},{"startOffset":6959,"endOffset":6964,"count":3},{"startOffset":7431,"endOffset":7687,"count":3},{"startOffset":7736,"endOffset":8310,"count":2},{"startOffset":7817,"endOffset":7979,"count":0},{"startOffset":8807,"endOffset":16076,"count":0},{"startOffset":16361,"endOffset":16386,"count":0},{"startOffset":16564,"endOffset":16582,"count":2},{"startOffset":16596,"endOffset":16620,"count":0},{"startOffset":16767,"endOffset":16799,"count":2},{"startOffset":16801,"endOffset":16958,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5696,"endOffset":6274,"count":40},{"startOffset":5761,"endOffset":5770,"count":0},{"startOffset":6130,"endOffset":6192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5830,"endOffset":6077,"count":340}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6339,"endOffset":6436,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6500,"endOffset":6599,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6663,"endOffset":6762,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6825,"endOffset":6923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6990,"endOffset":7091,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7185,"endOffset":7373,"count":74}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7481,"endOffset":7675,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7882,"endOffset":7963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8088,"endOffset":8284,"count":1},{"startOffset":8159,"endOffset":8189,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8419,"endOffset":8576,"count":17},{"startOffset":8468,"endOffset":8473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8483,"endOffset":8564,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16429,"endOffset":16534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16646,"endOffset":16714,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16840,"endOffset":16880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16890,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17055,"endOffset":17070,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17081,"endOffset":17333,"count":96},{"startOffset":17150,"endOffset":17172,"count":27},{"startOffset":17174,"endOffset":17283,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17229,"endOffset":17252,"count":1}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":17354,"endOffset":17625,"count":0}],"isBlockCoverage":false},{"functionName":"eatNargs","ranges":[{"startOffset":17634,"endOffset":19255,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19264,"endOffset":21069,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":21078,"endOffset":22995,"count":20},{"startOffset":21171,"endOffset":21211,"count":2},{"startOffset":21213,"endOffset":21410,"count":2},{"startOffset":21604,"endOffset":21809,"count":11},{"startOffset":21846,"endOffset":21878,"count":0},{"startOffset":21880,"endOffset":22357,"count":0},{"startOffset":22412,"endOffset":22450,"count":1},{"startOffset":22452,"endOffset":22985,"count":1},{"startOffset":22515,"endOffset":22520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21264,"endOffset":21343,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21649,"endOffset":21793,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21941,"endOffset":22341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22552,"endOffset":22969,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22696,"endOffset":22769,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":22795,"endOffset":22927,"count":8},{"startOffset":22868,"endOffset":22892,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":23004,"endOffset":23349,"count":3},{"startOffset":23076,"endOffset":23104,"count":1},{"startOffset":23107,"endOffset":23210,"count":2},{"startOffset":23250,"endOffset":23280,"count":2},{"startOffset":23283,"endOffset":23339,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":23358,"endOffset":24356,"count":20},{"startOffset":23446,"endOffset":23501,"count":0},{"startOffset":23552,"endOffset":23589,"count":19},{"startOffset":23591,"endOffset":23693,"count":1},{"startOffset":23658,"endOffset":23679,"count":0},{"startOffset":23753,"endOffset":23814,"count":4},{"startOffset":23831,"endOffset":23860,"count":16},{"startOffset":23913,"endOffset":23966,"count":0},{"startOffset":23968,"endOffset":24020,"count":0},{"startOffset":24075,"endOffset":24112,"count":1},{"startOffset":24114,"endOffset":24320,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23763,"endOffset":23813,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24192,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24365,"endOffset":25009,"count":35},{"startOffset":24465,"endOffset":24479,"count":24},{"startOffset":24497,"endOffset":24510,"count":0},{"startOffset":24564,"endOffset":24601,"count":21},{"startOffset":24602,"endOffset":24626,"count":19},{"startOffset":24628,"endOffset":24973,"count":17},{"startOffset":24696,"endOffset":24729,"count":2},{"startOffset":24730,"endOffset":24791,"count":2},{"startOffset":24832,"endOffset":24895,"count":15},{"startOffset":24897,"endOffset":24959,"count":2}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":25018,"endOffset":26653,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25222,"endOffset":26641,"count":1},{"startOffset":25356,"endOffset":26627,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26662,"endOffset":27338,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26743,"endOffset":27326,"count":24},{"startOffset":26840,"endOffset":26858,"count":0},{"startOffset":26912,"endOffset":26929,"count":8},{"startOffset":26930,"endOffset":26954,"count":8},{"startOffset":26955,"endOffset":26987,"count":0},{"startOffset":26989,"endOffset":27061,"count":0},{"startOffset":27143,"endOffset":27221,"count":4},{"startOffset":27186,"endOffset":27220,"count":0},{"startOffset":27223,"endOffset":27294,"count":20}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":27347,"endOffset":27591,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27471,"endOffset":27565,"count":6}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":27600,"endOffset":28476,"count":10},{"startOffset":27715,"endOffset":27784,"count":0},{"startOffset":27785,"endOffset":27789,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27865,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28485,"endOffset":29332,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28618,"endOffset":29320,"count":47},{"startOffset":28674,"endOffset":29306,"count":42},{"startOffset":28798,"endOffset":29288,"count":9},{"startOffset":28973,"endOffset":28978,"count":1},{"startOffset":29186,"endOffset":29266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28994,"endOffset":29133,"count":14}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29341,"endOffset":29633,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29642,"endOffset":30259,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29759,"endOffset":30247,"count":58},{"startOffset":29826,"endOffset":30233,"count":26},{"startOffset":29948,"endOffset":29970,"count":9},{"startOffset":30005,"endOffset":30010,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30020,"endOffset":30213,"count":18},{"startOffset":30118,"endOffset":30125,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":30268,"endOffset":30693,"count":100},{"startOffset":30620,"endOffset":30633,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30449,"endOffset":30515,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30702,"endOffset":33151,"count":71},{"startOffset":31801,"endOffset":31837,"count":0},{"startOffset":31839,"endOffset":32083,"count":0},{"startOffset":32123,"endOffset":32182,"count":0},{"startOffset":32227,"endOffset":32721,"count":0},{"startOffset":32780,"endOffset":32852,"count":12},{"startOffset":32828,"endOffset":32837,"count":0},{"startOffset":32852,"endOffset":33141,"count":59},{"startOffset":32910,"endOffset":32963,"count":0},{"startOffset":32964,"endOffset":33016,"count":0},{"startOffset":33019,"endOffset":33076,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30890,"endOffset":31505,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33160,"endOffset":34753,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33219,"endOffset":34741,"count":20},{"startOffset":33268,"endOffset":33273,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33283,"endOffset":34725,"count":188},{"startOffset":33368,"endOffset":33375,"count":64},{"startOffset":33375,"endOffset":33440,"count":124},{"startOffset":33440,"endOffset":33445,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33507,"endOffset":33934,"count":220},{"startOffset":33562,"endOffset":33602,"count":39},{"startOffset":33604,"endOffset":33912,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33996,"endOffset":34449,"count":238},{"startOffset":34052,"endOffset":34070,"count":162},{"startOffset":34071,"endOffset":34111,"count":18},{"startOffset":34113,"endOffset":34427,"count":18},{"startOffset":34215,"endOffset":34254,"count":1},{"startOffset":34256,"endOffset":34401,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34499,"endOffset":34705,"count":114}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34596,"endOffset":34680,"count":154}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34762,"endOffset":35047,"count":289},{"startOffset":34857,"endOffset":34862,"count":102},{"startOffset":35012,"endOffset":35028,"count":40},{"startOffset":35029,"endOffset":35036,"count":249}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34956,"endOffset":34981,"count":425}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35056,"endOffset":35354,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35363,"endOffset":35643,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35652,"endOffset":36498,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36507,"endOffset":36638,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOption","ranges":[{"startOffset":36647,"endOffset":37352,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37361,"endOffset":37688,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":37697,"endOffset":38033,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":38042,"endOffset":38602,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":38611,"endOffset":38686,"count":15}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":38695,"endOffset":39267,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38770,"endOffset":39255,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39585,"endOffset":40787,"count":5},{"startOffset":39925,"endOffset":40413,"count":84},{"startOffset":39991,"endOffset":40403,"count":802},{"startOffset":40184,"endOffset":40389,"count":0},{"startOffset":40403,"endOffset":40413,"count":802},{"startOffset":40413,"endOffset":40419,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39746,"endOffset":39824,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40049,"endOffset":40143,"count":1704}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40444,"endOffset":40762,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40507,"endOffset":40582,"count":180}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40788,"endOffset":40862,"count":71},{"startOffset":40845,"endOffset":40855,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":40863,"endOffset":40967,"count":71},{"startOffset":40928,"endOffset":40949,"count":0}],"isBlockCoverage":true},{"functionName":"stripQuotes","ranges":[{"startOffset":40968,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":42061,"endOffset":42094,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42192,"endOffset":42511,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":42536,"endOffset":42644,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42669,"endOffset":42739,"count":5}],"isBlockCoverage":true}]},{"scriptId":"85","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1647,"endOffset":1957,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1797,"endOffset":1939,"count":43},{"startOffset":1868,"endOffset":1873,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1895,"endOffset":1933,"count":23}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2168,"endOffset":2235,"count":10}],"isBlockCoverage":true},{"functionName":"exports.expectedTypeForFlag","ranges":[{"startOffset":2591,"endOffset":2968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1549,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":510,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1181,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1309,"endOffset":1351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38658,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2162,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2296,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2436,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2557,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2681,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2807,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":2950,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3082,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3195,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3313,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3712,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6154,"endOffset":8593,"count":1},{"startOffset":6914,"endOffset":6917,"count":0},{"startOffset":6971,"endOffset":7011,"count":0},{"startOffset":7387,"endOffset":7431,"count":0},{"startOffset":8439,"endOffset":8503,"count":0},{"startOffset":8508,"endOffset":8591,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7283,"endOffset":7352,"count":15},{"startOffset":7322,"endOffset":7348,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":8832,"endOffset":8901,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9246,"endOffset":9305,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":9882,"endOffset":11034,"count":1},{"startOffset":9967,"endOffset":10007,"count":0},{"startOffset":10047,"endOffset":10056,"count":0},{"startOffset":10297,"endOffset":10811,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11368,"endOffset":11875,"count":1},{"startOffset":11437,"endOffset":11466,"count":0},{"startOffset":11486,"endOffset":11494,"count":0},{"startOffset":11564,"endOffset":11726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11801,"endOffset":11855,"count":9}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12410,"endOffset":12746,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":13600,"endOffset":14041,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13761,"endOffset":13846,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13852,"endOffset":14016,"count":9}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":14255,"endOffset":14471,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":14913,"endOffset":15277,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":15632,"endOffset":15732,"count":1},{"startOffset":15683,"endOffset":15731,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":16873,"endOffset":17161,"count":1},{"startOffset":16915,"endOffset":17105,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":17432,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":17788,"endOffset":17878,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":18276,"endOffset":18398,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":18693,"endOffset":19028,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19291,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":19799,"endOffset":20014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19924,"endOffset":19995,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":20396,"endOffset":20471,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":20771,"endOffset":20864,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":21121,"endOffset":21193,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":21766,"endOffset":21830,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":22199,"endOffset":22263,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":22640,"endOffset":22701,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":22992,"endOffset":23079,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":23221,"endOffset":23289,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":23560,"endOffset":23659,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":23926,"endOffset":23990,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":24237,"endOffset":24315,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":24566,"endOffset":24650,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.passOnFailingTestSuite","ranges":[{"startOffset":24926,"endOffset":25050,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":25315,"endOffset":25405,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":25691,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":25957,"endOffset":26641,"count":1},{"startOffset":26014,"endOffset":26191,"count":0},{"startOffset":26298,"endOffset":26639,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":27663,"endOffset":29990,"count":1},{"startOffset":27783,"endOffset":27848,"count":0},{"startOffset":27898,"endOffset":27925,"count":0},{"startOffset":28591,"endOffset":28643,"count":0},{"startOffset":28743,"endOffset":28802,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":28930,"endOffset":29243,"count":1},{"startOffset":29072,"endOffset":29090,"count":0},{"startOffset":29104,"endOffset":29117,"count":0},{"startOffset":29164,"endOffset":29206,"count":0}],"isBlockCoverage":true},{"functionName":"runAsync","ranges":[{"startOffset":29265,"endOffset":29697,"count":1},{"startOffset":29381,"endOffset":29425,"count":0},{"startOffset":29606,"endOffset":29668,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":30150,"endOffset":30708,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":31389,"endOffset":32196,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":32625,"endOffset":32755,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":33047,"endOffset":33246,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":33550,"endOffset":33773,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":34246,"endOffset":34539,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":35016,"endOffset":35332,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":35606,"endOffset":35783,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":36011,"endOffset":36125,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":36362,"endOffset":36486,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":36646,"endOffset":36734,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":36902,"endOffset":37000,"count":1}],"isBlockCoverage":true}]},{"scriptId":"88","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"90","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12917,"count":1},{"startOffset":1078,"endOffset":1119,"count":0},{"startOffset":2421,"endOffset":2480,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":436,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2116,"endOffset":2265,"count":364},{"startOffset":2165,"endOffset":2194,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2668,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2747,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2832,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":2920,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":2995,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3198,"endOffset":3346,"count":46}],"isBlockCoverage":true},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3350,"endOffset":3555,"count":44},{"startOffset":3418,"endOffset":3450,"count":25},{"startOffset":3452,"endOffset":3553,"count":19}],"isBlockCoverage":true},{"functionName":"exports.generateDiff","ranges":[{"startOffset":3866,"endOffset":4645,"count":22},{"startOffset":4194,"endOffset":4224,"count":0},{"startOffset":4285,"endOffset":4413,"count":0},{"startOffset":4437,"endOffset":4643,"count":0}],"isBlockCoverage":true},{"functionName":"getFullErrorStack","ranges":[{"startOffset":4828,"endOffset":5757,"count":23},{"startOffset":4862,"endOffset":4878,"count":0},{"startOffset":4880,"endOffset":4943,"count":0},{"startOffset":5002,"endOffset":5041,"count":0},{"startOffset":5147,"endOffset":5176,"count":0},{"startOffset":5213,"endOffset":5223,"count":0},{"startOffset":5272,"endOffset":5276,"count":0},{"startOffset":5299,"endOffset":5323,"count":0},{"startOffset":5478,"endOffset":5702,"count":0}],"isBlockCoverage":true},{"functionName":"exports.list","ranges":[{"startOffset":5985,"endOffset":7454,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6080,"endOffset":7450,"count":23},{"startOffset":6317,"endOffset":6489,"count":0},{"startOffset":6623,"endOffset":6661,"count":0},{"startOffset":6734,"endOffset":7045,"count":22},{"startOffset":6967,"endOffset":6977,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7194,"endOffset":7387,"count":68},{"startOffset":7241,"endOffset":7282,"count":45},{"startOffset":7321,"endOffset":7357,"count":67}],"isBlockCoverage":true},{"functionName":"Base","ranges":[{"startOffset":7754,"endOffset":8837,"count":1},{"startOffset":7842,"endOffset":7899,"count":0},{"startOffset":7925,"endOffset":7930,"count":0},{"startOffset":8090,"endOffset":8132,"count":0},{"startOffset":8169,"endOffset":8202,"count":0},{"startOffset":8204,"endOffset":8259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8502,"count":37},{"startOffset":8345,"endOffset":8379,"count":5},{"startOffset":8379,"endOffset":8498,"count":32},{"startOffset":8422,"endOffset":8458,"count":9},{"startOffset":8458,"endOffset":8498,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8535,"endOffset":8833,"count":23},{"startOffset":8581,"endOffset":8618,"count":22},{"startOffset":8672,"endOffset":8695,"count":0},{"startOffset":8697,"endOffset":8769,"count":0}],"isBlockCoverage":true},{"functionName":"Base.epilogue","ranges":[{"startOffset":8982,"endOffset":9601,"count":1},{"startOffset":9210,"endOffset":9214,"count":0},{"startOffset":9282,"endOffset":9396,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":9727,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":10000,"endOffset":10558,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":10738,"endOffset":11540,"count":22}],"isBlockCoverage":true},{"functionName":"cleanUp","ranges":[{"startOffset":10806,"endOffset":11153,"count":110},{"startOffset":10856,"endOffset":10917,"count":22},{"startOffset":10917,"endOffset":10943,"count":88},{"startOffset":10943,"endOffset":11006,"count":22},{"startOffset":11006,"endOffset":11033,"count":66},{"startOffset":11033,"endOffset":11059,"count":0},{"startOffset":11059,"endOffset":11097,"count":66},{"startOffset":11097,"endOffset":11123,"count":44},{"startOffset":11123,"endOffset":11152,"count":22}],"isBlockCoverage":true},{"functionName":"notBlank","ranges":[{"startOffset":11156,"endOffset":11242,"count":110}],"isBlockCoverage":true},{"functionName":"errorDiff","ranges":[{"startOffset":11685,"endOffset":12037,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":12180,"endOffset":12325,"count":88}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12252,"endOffset":12305,"count":88}],"isBlockCoverage":true},{"functionName":"sameType","ranges":[{"startOffset":12538,"endOffset":12619,"count":46}],"isBlockCoverage":true}]},{"scriptId":"91","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7762,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":174,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":301,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":432,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":567,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":702,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":972,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1104,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1226,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1354,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1484,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1613,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1744,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1875,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1999,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2125,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2263,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2407,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2547,"endOffset":2599,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2679,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2819,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2964,"endOffset":3021,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4462,"endOffset":4559,"count":1},{"startOffset":4536,"endOffset":4556,"count":0}],"isBlockCoverage":true}]},{"scriptId":"92","url":"node:internal/source_map/source_map_cache_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3768,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":969,"endOffset":3672,"count":1}],"isBlockCoverage":false},{"functionName":"#cleanup","ranges":[{"startOffset":1407,"endOffset":1791,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2243,"endOffset":2563,"count":72}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2373,"endOffset":2419,"count":72}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2671,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":3065,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3126,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38478,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":158,"endOffset":176,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":260,"endOffset":6642,"count":22},{"startOffset":471,"endOffset":475,"count":0},{"startOffset":554,"endOffset":607,"count":0},{"startOffset":1299,"endOffset":1376,"count":0},{"startOffset":1548,"endOffset":1566,"count":0},{"startOffset":1906,"endOffset":1929,"count":0},{"startOffset":1931,"endOffset":2088,"count":0},{"startOffset":6165,"endOffset":6448,"count":0},{"startOffset":6497,"endOffset":6533,"count":44},{"startOffset":6535,"endOffset":6632,"count":44},{"startOffset":6591,"endOffset":6624,"count":22}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":663,"endOffset":865,"count":22},{"startOffset":706,"endOffset":822,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":727,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"execEditLength","ranges":[{"startOffset":3460,"endOffset":5839,"count":44},{"startOffset":3644,"endOffset":5812,"count":66},{"startOffset":3888,"endOffset":4022,"count":44},{"startOffset":4074,"endOffset":4281,"count":44},{"startOffset":4318,"endOffset":4351,"count":44},{"startOffset":4374,"endOffset":4387,"count":22},{"startOffset":4389,"endOffset":4517,"count":0},{"startOffset":4897,"endOffset":4948,"count":44},{"startOffset":4907,"endOffset":4948,"count":22},{"startOffset":4950,"endOffset":5027,"count":22},{"startOffset":5027,"endOffset":5113,"count":44},{"startOffset":5241,"endOffset":5264,"count":44},{"startOffset":5266,"endOffset":5457,"count":22},{"startOffset":5457,"endOffset":5804,"count":44},{"startOffset":5556,"endOffset":5656,"count":22},{"startOffset":5694,"endOffset":5794,"count":22},{"startOffset":5812,"endOffset":5838,"count":22}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":6174,"endOffset":6438,"count":0}],"isBlockCoverage":true},{"functionName":"addToPath","ranges":[{"startOffset":6713,"endOffset":7336,"count":66},{"startOffset":6816,"endOffset":6839,"count":22},{"startOffset":6840,"endOffset":6867,"count":0},{"startOffset":6869,"endOffset":7113,"count":0}],"isBlockCoverage":true},{"functionName":"extractCommon","ranges":[{"startOffset":7411,"endOffset":8032,"count":88},{"startOffset":7683,"endOffset":7705,"count":44},{"startOffset":7706,"endOffset":7766,"count":22},{"startOffset":7768,"endOffset":7828,"count":0},{"startOffset":7851,"endOffset":7978,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":8100,"endOffset":8341,"count":44},{"startOffset":8164,"endOffset":8222,"count":0},{"startOffset":8285,"endOffset":8330,"count":0}],"isBlockCoverage":true},{"functionName":"removeEmpty","ranges":[{"startOffset":8414,"endOffset":8592,"count":44}],"isBlockCoverage":true},{"functionName":"castInput","ranges":[{"startOffset":8663,"endOffset":8712,"count":44}],"isBlockCoverage":true},{"functionName":"tokenize","ranges":[{"startOffset":8782,"endOffset":8840,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":8906,"endOffset":8959,"count":44}],"isBlockCoverage":true},{"functionName":"buildValues","ranges":[{"startOffset":8964,"endOffset":11368,"count":22},{"startOffset":9222,"endOffset":9395,"count":44},{"startOffset":9576,"endOffset":10831,"count":44},{"startOffset":9653,"endOffset":10234,"count":22},{"startOffset":9682,"endOffset":9700,"count":0},{"startOffset":9702,"endOffset":10002,"count":0},{"startOffset":10184,"endOffset":10228,"count":0},{"startOffset":10234,"endOffset":10827,"count":22},{"startOffset":11184,"endOffset":11209,"count":0},{"startOffset":11253,"endOffset":11344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9801,"endOffset":9948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":424,"count":1},{"startOffset":401,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":688,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":464,"endOffset":561,"count":1},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1546,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1812,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2496,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2855,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":174,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6283,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":460,"endOffset":557,"count":1},{"startOffset":534,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":826,"endOffset":1648,"count":44},{"startOffset":881,"endOffset":1008,"count":0},{"startOffset":1216,"endOffset":1249,"count":0},{"startOffset":1417,"endOffset":1448,"count":0},{"startOffset":1450,"endOffset":1502,"count":0},{"startOffset":1551,"endOffset":1588,"count":0}],"isBlockCoverage":true},{"functionName":"diffLines","ranges":[{"startOffset":1651,"endOffset":1749,"count":22}],"isBlockCoverage":true},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1751,"endOffset":2121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":431,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":716,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":786,"endOffset":892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":317,"endOffset":414,"count":1},{"startOffset":391,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":679,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":741,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12937,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":537,"count":1},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":539,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1625,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2270,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2568,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2859,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":422,"count":1},{"startOffset":399,"endOffset":419,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":695,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":783,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":822,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20050,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":547,"count":1},{"startOffset":524,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":573,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":4904,"endOffset":5760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17908,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":164,"endOffset":4730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4641,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":340,"endOffset":1483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50907,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":482,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":637,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":829,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1247,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1379,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1472,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1681,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2137,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5018,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":5876,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":5984,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6174,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6303,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6504,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9251,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":11900,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":12610,"endOffset":12754,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":12756,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":12981,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13147,"endOffset":13641,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":13643,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":14912,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15046,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15362,"endOffset":16317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23969,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":410,"endOffset":563,"count":66},{"startOffset":476,"endOffset":500,"count":0},{"startOffset":501,"endOffset":536,"count":0},{"startOffset":537,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":565,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":757,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1175,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1307,"endOffset":1398,"count":66}],"isBlockCoverage":true},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1400,"endOffset":1583,"count":66},{"startOffset":1455,"endOffset":1474,"count":0},{"startOffset":1547,"endOffset":1568,"count":44}],"isBlockCoverage":true},{"functionName":"structuredPatch","ranges":[{"startOffset":1609,"endOffset":6844,"count":22},{"startOffset":2078,"endOffset":2095,"count":0},{"startOffset":6614,"endOffset":6696,"count":66}],"isBlockCoverage":true},{"functionName":"contextLines","ranges":[{"startOffset":2197,"endOffset":2305,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2249,"endOffset":2299,"count":0}],"isBlockCoverage":false},{"functionName":"_loop","ranges":[{"startOffset":2477,"endOffset":6571,"count":66},{"startOffset":2583,"endOffset":2630,"count":44},{"startOffset":2682,"endOffset":2700,"count":44},{"startOffset":2702,"endOffset":3821,"count":44},{"startOffset":2868,"endOffset":3192,"count":22},{"startOffset":2987,"endOffset":3184,"count":0},{"startOffset":3725,"endOffset":3815,"count":22},{"startOffset":3821,"endOffset":6567,"count":22},{"startOffset":4058,"endOffset":4626,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3580,"endOffset":3658,"count":44},{"startOffset":3629,"endOffset":3634,"count":22},{"startOffset":3635,"endOffset":3640,"count":22}],"isBlockCoverage":true},{"functionName":"formatPatch","ranges":[{"startOffset":6846,"endOffset":7944,"count":22},{"startOffset":6902,"endOffset":6952,"count":0},{"startOffset":7232,"endOffset":7255,"count":0},{"startOffset":7342,"endOffset":7365,"count":0},{"startOffset":7657,"endOffset":7690,"count":0},{"startOffset":7721,"endOffset":7754,"count":0}],"isBlockCoverage":true},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":7946,"endOffset":8163,"count":22}],"isBlockCoverage":true},{"functionName":"createPatch","ranges":[{"startOffset":8165,"endOffset":8343,"count":22}],"isBlockCoverage":true}]},{"scriptId":"107","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":207,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/reverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5555,"count":1}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":144,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":487,"endOffset":1021,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":1023,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"reversePatch","ranges":[{"startOffset":1258,"endOffset":2553,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2255,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":248,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3359,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":182,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":615,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":1},{"startOffset":524,"endOffset":541,"count":0},{"startOffset":543,"endOffset":571,"count":0},{"startOffset":643,"endOffset":657,"count":0},{"startOffset":678,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":1},{"startOffset":2167,"endOffset":2209,"count":0},{"startOffset":2228,"endOffset":2270,"count":0},{"startOffset":2289,"endOffset":2331,"count":0},{"startOffset":2392,"endOffset":2413,"count":0}],"isBlockCoverage":true},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18823,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":797,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1012,"endOffset":1064,"count":161}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1188,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1473,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2587,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3694,"endOffset":4087,"count":81},{"startOffset":3753,"endOffset":3782,"count":0},{"startOffset":3808,"endOffset":3832,"count":0},{"startOffset":3866,"endOffset":3892,"count":0},{"startOffset":3941,"endOffset":3975,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4710,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":5806,"endOffset":6851,"count":38},{"startOffset":5975,"endOffset":6196,"count":0},{"startOffset":6335,"endOffset":6363,"count":0},{"startOffset":6365,"endOffset":6523,"count":0},{"startOffset":6575,"endOffset":6850,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6404,"endOffset":6484,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":7012,"endOffset":9055,"count":38},{"startOffset":7156,"endOffset":7178,"count":0},{"startOffset":7244,"endOffset":7249,"count":0},{"startOffset":7250,"endOffset":7255,"count":0},{"startOffset":7291,"endOffset":7296,"count":0},{"startOffset":7297,"endOffset":7302,"count":0},{"startOffset":7363,"endOffset":7378,"count":0},{"startOffset":7385,"endOffset":7413,"count":0},{"startOffset":8638,"endOffset":9041,"count":0},{"startOffset":9042,"endOffset":9047,"count":0}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":7443,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7507,"endOffset":8612,"count":38},{"startOffset":7574,"endOffset":7586,"count":0},{"startOffset":7593,"endOffset":7656,"count":0},{"startOffset":7663,"endOffset":7676,"count":0},{"startOffset":7683,"endOffset":7765,"count":0},{"startOffset":7772,"endOffset":7787,"count":0},{"startOffset":7794,"endOffset":7808,"count":0},{"startOffset":7815,"endOffset":7829,"count":0},{"startOffset":7885,"endOffset":7909,"count":1},{"startOffset":7930,"endOffset":7936,"count":0},{"startOffset":7988,"endOffset":8053,"count":0},{"startOffset":8060,"endOffset":8205,"count":0},{"startOffset":8212,"endOffset":8439,"count":0},{"startOffset":8446,"endOffset":8576,"count":0}],"isBlockCoverage":true},{"functionName":"canonicalize","ranges":[{"startOffset":9957,"endOffset":11732,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":12103,"endOffset":13434,"count":1},{"startOffset":12217,"endOffset":12234,"count":0},{"startOffset":12324,"endOffset":12468,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12472,"endOffset":12680,"count":73},{"startOffset":12580,"endOffset":12622,"count":69},{"startOffset":12623,"endOffset":12669,"count":69}],"isBlockCoverage":true},{"functionName":"isNodeInternal","ranges":[{"startOffset":12684,"endOffset":12968,"count":69}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12979,"endOffset":13431,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13055,"endOffset":13391,"count":73},{"startOffset":13112,"endOffset":13142,"count":4},{"startOffset":13142,"endOffset":13185,"count":69},{"startOffset":13187,"endOffset":13217,"count":0},{"startOffset":13217,"endOffset":13288,"count":69},{"startOffset":13288,"endOffset":13342,"count":46},{"startOffset":13342,"endOffset":13390,"count":69}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":13579,"endOffset":13716,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":13954,"endOffset":14042,"count":104}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":14095,"endOffset":14109,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":15014,"endOffset":15149,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":15639,"endOffset":15852,"count":5},{"startOffset":15723,"endOffset":15802,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":15977,"endOffset":16019,"count":4}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":16169,"endOffset":16228,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":16733,"endOffset":17036,"count":5},{"startOffset":16788,"endOffset":16808,"count":0},{"startOffset":16831,"endOffset":16855,"count":0},{"startOffset":16946,"endOffset":16975,"count":0},{"startOffset":17016,"endOffset":17035,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":17388,"endOffset":17512,"count":104},{"startOffset":17442,"endOffset":17497,"count":2184}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":17542,"endOffset":17691,"count":104}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17639,"endOffset":17669,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":17830,"endOffset":17907,"count":0}],"isBlockCoverage":false},{"functionName":"exports.breakCircularDeps","ranges":[{"startOffset":18086,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isNumeric","ranges":[{"startOffset":18773,"endOffset":18821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61,"endOffset":100874,"count":1},{"startOffset":500,"endOffset":535,"count":0},{"startOffset":100447,"endOffset":100481,"count":0},{"startOffset":100482,"endOffset":100497,"count":0},{"startOffset":100501,"endOffset":100547,"count":0},{"startOffset":100689,"endOffset":100813,"count":0},{"startOffset":100816,"endOffset":100871,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92347,"endOffset":92434,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92453,"endOffset":92630,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92646,"endOffset":92997,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93093,"endOffset":94044,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94064,"endOffset":94149,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94169,"endOffset":94226,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94247,"endOffset":94311,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94409,"endOffset":97437,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97673,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":99934,"endOffset":100103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100512,"endOffset":100542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1354,"endOffset":1381,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1844,"endOffset":1847,"count":0},{"startOffset":1852,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"115","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9872,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2060,"endOffset":2315,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2120,"endOffset":2310,"count":1},{"startOffset":2219,"endOffset":2288,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2714,"endOffset":2727,"count":5}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2780,"endOffset":2790,"count":2}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2846,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2913,"endOffset":2926,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2976,"endOffset":3007,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3042,"endOffset":3060,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3096,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3152,"endOffset":3172,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3206,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3260,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3315,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3374,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3434,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3487,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3651,"endOffset":3754,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4051,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4535,"endOffset":4579,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4607,"endOffset":4625,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4662,"endOffset":4714,"count":2}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4746,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4805,"endOffset":5201,"count":1},{"startOffset":4880,"endOffset":4910,"count":0},{"startOffset":4911,"endOffset":4983,"count":0},{"startOffset":5046,"endOffset":5078,"count":0},{"startOffset":5080,"endOffset":5137,"count":0},{"startOffset":5162,"endOffset":5197,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5231,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5287,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5370,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5479,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5741,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6953,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7765,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8131,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8717,"endOffset":8954,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1585,"endOffset":1694,"count":30}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1698,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2342,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2570,"endOffset":3567,"count":2},{"startOffset":2641,"endOffset":2668,"count":0},{"startOffset":2707,"endOffset":2736,"count":0},{"startOffset":2822,"endOffset":2869,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3869,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4370,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4551,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4737,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4922,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5101,"endOffset":5153,"count":1}],"isBlockCoverage":true}]},{"scriptId":"117","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73397,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1688,"endOffset":1715,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4376,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4873,"endOffset":5111,"count":60},{"startOffset":4954,"endOffset":5004,"count":0},{"startOffset":5040,"endOffset":5091,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":5115,"endOffset":5514,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5520,"endOffset":5661,"count":245},{"startOffset":5616,"endOffset":5635,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5667,"endOffset":5752,"count":61},{"startOffset":5724,"endOffset":5748,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5965,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6309,"endOffset":6726,"count":61},{"startOffset":6543,"endOffset":6611,"count":0},{"startOffset":6636,"endOffset":6683,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6730,"endOffset":6807,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6811,"endOffset":6930,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6934,"endOffset":7039,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":7043,"endOffset":7238,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7744,"endOffset":8503,"count":121},{"startOffset":7815,"endOffset":7900,"count":0},{"startOffset":7981,"endOffset":7997,"count":60},{"startOffset":7999,"endOffset":8055,"count":60},{"startOffset":8055,"endOffset":8312,"count":61},{"startOffset":8083,"endOffset":8141,"count":0},{"startOffset":8236,"endOffset":8266,"count":1},{"startOffset":8268,"endOffset":8307,"count":1},{"startOffset":8390,"endOffset":8412,"count":61},{"startOffset":8412,"endOffset":8446,"count":60}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8579,"endOffset":9204,"count":184},{"startOffset":8751,"endOffset":9201,"count":123},{"startOffset":8946,"endOffset":9196,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":9208,"endOffset":9560,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9329,"endOffset":9550,"count":121},{"startOffset":9434,"endOffset":9543,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9820,"endOffset":14840,"count":123},{"startOffset":9881,"endOffset":9908,"count":0},{"startOffset":9937,"endOffset":10072,"count":0},{"startOffset":10142,"endOffset":10398,"count":0},{"startOffset":10461,"endOffset":10665,"count":0},{"startOffset":11246,"endOffset":11272,"count":0},{"startOffset":11691,"endOffset":11802,"count":62},{"startOffset":11802,"endOffset":13086,"count":61},{"startOffset":11838,"endOffset":13086,"count":0},{"startOffset":13176,"endOffset":13254,"count":0},{"startOffset":13255,"endOffset":13302,"count":0},{"startOffset":13304,"endOffset":13527,"count":0},{"startOffset":14047,"endOffset":14076,"count":62},{"startOffset":14078,"endOffset":14352,"count":62},{"startOffset":14112,"endOffset":14286,"count":0},{"startOffset":14318,"endOffset":14347,"count":60},{"startOffset":14378,"endOffset":14432,"count":0},{"startOffset":14618,"endOffset":14837,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":15018,"endOffset":15153,"count":589},{"startOffset":15123,"endOffset":15145,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":15278,"endOffset":15923,"count":121},{"startOffset":15397,"endOffset":15501,"count":0},{"startOffset":15531,"endOffset":15543,"count":0},{"startOffset":15832,"endOffset":15844,"count":0},{"startOffset":15873,"endOffset":15920,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15473,"endOffset":15494,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15928,"endOffset":16080,"count":121}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":16292,"endOffset":16820,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16907,"endOffset":17426,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":17463,"endOffset":17855,"count":61},{"startOffset":17591,"endOffset":17597,"count":0},{"startOffset":17633,"endOffset":17690,"count":0},{"startOffset":17757,"endOffset":17834,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17894,"endOffset":18526,"count":1},{"startOffset":18039,"endOffset":18151,"count":0},{"startOffset":18189,"endOffset":18213,"count":0},{"startOffset":18254,"endOffset":18351,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.address","ranges":[{"startOffset":18560,"endOffset":18606,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18697,"endOffset":18743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18828,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19004,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19425,"endOffset":19509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19602,"endOffset":19649,"count":102}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":19661,"endOffset":19918,"count":121},{"startOffset":19867,"endOffset":19915,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":20013,"endOffset":20345,"count":283},{"startOffset":20165,"endOffset":20181,"count":222},{"startOffset":20183,"endOffset":20278,"count":61},{"startOffset":20278,"endOffset":20342,"count":222},{"startOffset":20311,"endOffset":20342,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20252,"endOffset":20271,"count":61}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":20375,"endOffset":20535,"count":121}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":20575,"endOffset":20939,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20969,"endOffset":21296,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":21329,"endOffset":21519,"count":267},{"startOffset":21363,"endOffset":21382,"count":0},{"startOffset":21383,"endOffset":21398,"count":0},{"startOffset":21399,"endOffset":21430,"count":0},{"startOffset":21432,"endOffset":21463,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":21550,"endOffset":21742,"count":406},{"startOffset":21585,"endOffset":21604,"count":0},{"startOffset":21605,"endOffset":21620,"count":0},{"startOffset":21621,"endOffset":21652,"count":0},{"startOffset":21654,"endOffset":21685,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21793,"endOffset":21896,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21933,"endOffset":22088,"count":120},{"startOffset":22022,"endOffset":22037,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._destroy","ranges":[{"startOffset":22123,"endOffset":23689,"count":121},{"startOffset":22433,"endOffset":22439,"count":0},{"startOffset":22664,"endOffset":22917,"count":0},{"startOffset":22958,"endOffset":23198,"count":0},{"startOffset":23427,"endOffset":23501,"count":0},{"startOffset":23525,"endOffset":23686,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22741,"endOffset":22829,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23141,"endOffset":23189,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23720,"endOffset":23823,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23860,"endOffset":24167,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":24172,"endOffset":24361,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":24390,"endOffset":24483,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":24518,"endOffset":24586,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":24620,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24718,"endOffset":24780,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24820,"endOffset":25105,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":25140,"endOffset":25207,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":25240,"endOffset":25301,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":25334,"endOffset":25399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":25442,"endOffset":25491,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":25529,"endOffset":26475,"count":364},{"startOffset":25755,"endOffset":26111,"count":60},{"startOffset":26111,"endOffset":26196,"count":304},{"startOffset":26196,"endOffset":26255,"count":0},{"startOffset":26255,"endOffset":26315,"count":304},{"startOffset":26315,"endOffset":26351,"count":86},{"startOffset":26351,"endOffset":26410,"count":218},{"startOffset":26410,"endOffset":26434,"count":304},{"startOffset":26434,"endOffset":26472,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":25853,"endOffset":25970,"count":60}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":25978,"endOffset":26059,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":26509,"endOffset":26579,"count":86}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":26612,"endOffset":26695,"count":218}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26893,"endOffset":26999,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":27033,"endOffset":27996,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":28004,"endOffset":28821,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28827,"endOffset":31100,"count":61},{"startOffset":29091,"endOffset":29719,"count":0},{"startOffset":29958,"endOffset":29965,"count":0},{"startOffset":29997,"endOffset":30070,"count":0},{"startOffset":30386,"endOffset":30452,"count":0},{"startOffset":30457,"endOffset":30622,"count":0},{"startOffset":30637,"endOffset":30899,"count":0},{"startOffset":30973,"endOffset":31097,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":31106,"endOffset":34426,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":34457,"endOffset":36098,"count":61},{"startOffset":34874,"endOffset":34925,"count":0},{"startOffset":35011,"endOffset":35048,"count":60},{"startOffset":35145,"endOffset":35157,"count":0},{"startOffset":35159,"endOffset":35183,"count":0},{"startOffset":35271,"endOffset":35294,"count":0},{"startOffset":35301,"endOffset":35357,"count":0},{"startOffset":35411,"endOffset":35447,"count":0},{"startOffset":35473,"endOffset":35561,"count":0},{"startOffset":35698,"endOffset":35737,"count":0},{"startOffset":35880,"endOffset":36029,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":36143,"endOffset":36304,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":36309,"endOffset":36464,"count":1},{"startOffset":36372,"endOffset":36401,"count":0},{"startOffset":36407,"endOffset":36436,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":36468,"endOffset":40527,"count":61},{"startOffset":36588,"endOffset":36602,"count":0},{"startOffset":36703,"endOffset":36725,"count":0},{"startOffset":36727,"endOffset":36786,"count":0},{"startOffset":36807,"endOffset":36866,"count":0},{"startOffset":36941,"endOffset":36968,"count":60},{"startOffset":36970,"endOffset":37099,"count":0},{"startOffset":37181,"endOffset":37255,"count":0},{"startOffset":37366,"endOffset":37570,"count":0},{"startOffset":37766,"endOffset":38081,"count":60},{"startOffset":38081,"endOffset":38120,"count":1},{"startOffset":38120,"endOffset":38171,"count":0},{"startOffset":38171,"endOffset":38321,"count":1},{"startOffset":38349,"endOffset":38379,"count":0},{"startOffset":38380,"endOffset":38410,"count":0},{"startOffset":38411,"endOffset":38440,"count":0},{"startOffset":38442,"endOffset":38485,"count":0},{"startOffset":38485,"endOffset":38637,"count":1},{"startOffset":38669,"endOffset":38692,"count":1},{"startOffset":38693,"endOffset":38709,"count":1},{"startOffset":38710,"endOffset":38729,"count":1},{"startOffset":38731,"endOffset":39145,"count":1},{"startOffset":39145,"endOffset":40526,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37841,"endOffset":38061,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38853,"endOffset":39123,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39201,"endOffset":40522,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":40531,"endOffset":44700,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":40722,"endOffset":44695,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":40773,"endOffset":44688,"count":1},{"startOffset":41003,"endOffset":41030,"count":0},{"startOffset":41045,"endOffset":41427,"count":0},{"startOffset":42063,"endOffset":42094,"count":0},{"startOffset":42139,"endOffset":42159,"count":0},{"startOffset":42210,"endOffset":42226,"count":0},{"startOffset":42693,"endOffset":42721,"count":0},{"startOffset":42723,"endOffset":43303,"count":0},{"startOffset":43634,"endOffset":43710,"count":0},{"startOffset":44213,"endOffset":44687,"count":0}],"isBlockCoverage":true},{"functionName":"connectErrorNT","ranges":[{"startOffset":44704,"endOffset":44765,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":44794,"endOffset":44992,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":45024,"endOffset":45228,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":45235,"endOffset":46983,"count":61},{"startOffset":45409,"endOffset":45428,"count":0},{"startOffset":45603,"endOffset":45655,"count":0},{"startOffset":45693,"endOffset":45720,"count":0},{"startOffset":45881,"endOffset":45909,"count":0},{"startOffset":45911,"endOffset":45992,"count":0},{"startOffset":46271,"endOffset":46292,"count":0},{"startOffset":46294,"endOffset":46354,"count":0},{"startOffset":46359,"endOffset":46980,"count":0}],"isBlockCoverage":true},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46987,"endOffset":47414,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":47418,"endOffset":47957,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47961,"endOffset":49318,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":49322,"endOffset":49830,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":49834,"endOffset":50279,"count":60},{"startOffset":49944,"endOffset":50276,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":50055,"endOffset":50086,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":50283,"endOffset":52194,"count":60},{"startOffset":50369,"endOffset":50416,"count":0},{"startOffset":50487,"endOffset":50605,"count":0},{"startOffset":50749,"endOffset":50807,"count":0},{"startOffset":50812,"endOffset":50891,"count":0},{"startOffset":50953,"endOffset":51156,"count":0},{"startOffset":51210,"endOffset":51405,"count":0},{"startOffset":51643,"endOffset":51651,"count":0},{"startOffset":51972,"endOffset":52191,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":52310,"endOffset":52375,"count":120},{"startOffset":52365,"endOffset":52372,"count":0}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":52446,"endOffset":53990,"count":60},{"startOffset":52668,"endOffset":52678,"count":0},{"startOffset":52680,"endOffset":53005,"count":0},{"startOffset":53027,"endOffset":53048,"count":0},{"startOffset":53050,"endOffset":53308,"count":0},{"startOffset":53401,"endOffset":53408,"count":0},{"startOffset":53409,"endOffset":53417,"count":0},{"startOffset":53451,"endOffset":53459,"count":0},{"startOffset":53481,"endOffset":53755,"count":0},{"startOffset":53841,"endOffset":53903,"count":0},{"startOffset":53923,"endOffset":53967,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":53994,"endOffset":56771,"count":60},{"startOffset":54304,"endOffset":54366,"count":0},{"startOffset":54687,"endOffset":54783,"count":0},{"startOffset":54904,"endOffset":54969,"count":0},{"startOffset":55007,"endOffset":55285,"count":0},{"startOffset":55733,"endOffset":56226,"count":0},{"startOffset":56268,"endOffset":56331,"count":0},{"startOffset":56568,"endOffset":56581,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":56842,"endOffset":56906,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":56912,"endOffset":57031,"count":60}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":57037,"endOffset":58667,"count":60},{"startOffset":57226,"endOffset":57255,"count":1},{"startOffset":57283,"endOffset":57295,"count":0},{"startOffset":57547,"endOffset":58666,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":57878,"endOffset":58664,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":58699,"endOffset":63257,"count":60},{"startOffset":58846,"endOffset":58896,"count":0},{"startOffset":58938,"endOffset":59012,"count":0},{"startOffset":59035,"endOffset":59074,"count":0},{"startOffset":59196,"endOffset":59206,"count":0},{"startOffset":59241,"endOffset":59251,"count":0},{"startOffset":59560,"endOffset":59745,"count":0},{"startOffset":59898,"endOffset":59916,"count":0},{"startOffset":59918,"endOffset":60017,"count":0},{"startOffset":60382,"endOffset":60402,"count":0},{"startOffset":60437,"endOffset":60466,"count":0},{"startOffset":60695,"endOffset":60730,"count":0},{"startOffset":60871,"endOffset":60912,"count":0},{"startOffset":60984,"endOffset":61112,"count":0},{"startOffset":61399,"endOffset":61571,"count":0},{"startOffset":61573,"endOffset":63049,"count":0},{"startOffset":63052,"endOffset":63256,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6LinkLocal","ranges":[{"startOffset":63262,"endOffset":63915,"count":0}],"isBlockCoverage":false},{"functionName":"filterOnlyValidAddress","ranges":[{"startOffset":63919,"endOffset":64214,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":64218,"endOffset":64858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":64944,"endOffset":64989,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":65070,"endOffset":65360,"count":120},{"startOffset":65102,"endOffset":65115,"count":60},{"startOffset":65117,"endOffset":65281,"count":60},{"startOffset":65202,"endOffset":65259,"count":0},{"startOffset":65281,"endOffset":65341,"count":60},{"startOffset":65307,"endOffset":65341,"count":0},{"startOffset":65341,"endOffset":65359,"count":60}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":65365,"endOffset":67698,"count":60},{"startOffset":65512,"endOffset":65591,"count":0},{"startOffset":65629,"endOffset":65672,"count":0},{"startOffset":65674,"endOffset":66469,"count":0},{"startOffset":66492,"endOffset":66541,"count":0},{"startOffset":66543,"endOffset":66828,"count":0},{"startOffset":67261,"endOffset":67289,"count":0},{"startOffset":67291,"endOffset":67467,"count":0},{"startOffset":67627,"endOffset":67695,"count":0}],"isBlockCoverage":true},{"functionName":"Server.getConnections","ranges":[{"startOffset":67855,"endOffset":68643,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":68675,"endOffset":69603,"count":60},{"startOffset":68773,"endOffset":68880,"count":0},{"startOffset":69043,"endOffset":69537,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":68801,"endOffset":68871,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":69110,"endOffset":69224,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":69647,"endOffset":69772,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":69816,"endOffset":70215,"count":120},{"startOffset":69891,"endOffset":69911,"count":60},{"startOffset":69913,"endOffset":70214,"count":60}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":70222,"endOffset":70308,"count":60}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":70370,"endOffset":70542,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":70771,"endOffset":70807,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":70812,"endOffset":70853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":70938,"endOffset":70969,"count":3840}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":70974,"endOffset":71010,"count":244}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":71052,"endOffset":71300,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":71328,"endOffset":71433,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":71463,"endOffset":71569,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":71719,"endOffset":72408,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":72449,"endOffset":72697,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":72833,"endOffset":72938,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":72943,"endOffset":73068,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5247,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2619,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3301,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4521,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4659,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4801,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":5033,"endOffset":5244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10576,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1013,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1620,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4875,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5032,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5373,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5524,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5909,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6469,"endOffset":6586,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6593,"endOffset":8081,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8085,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8534,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8739,"endOffset":9072,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9076,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9650,"endOffset":10347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15785,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1828,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2111,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2488,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":3277,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":3549,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":4269,"endOffset":4683,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":4957,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":5529,"endOffset":5615,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":5653,"endOffset":5735,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":5741,"endOffset":5862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5868,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":6085,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":6332,"endOffset":6620,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":6713,"endOffset":8792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8798,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9586,"endOffset":9946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9952,"endOffset":10582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10588,"endOffset":10852,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10858,"endOffset":11321,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":11328,"endOffset":11430,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":11476,"endOffset":11484,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":11871,"endOffset":13180,"count":0}],"isBlockCoverage":false},{"functionName":"runAbort","ranges":[{"startOffset":13237,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13396,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":14260,"endOffset":14476,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":14553,"endOffset":14644,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":14745,"endOffset":15313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8811,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":930,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1043,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1056,"endOffset":7320,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7324,"endOffset":8264,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8268,"endOffset":8747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5768,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":619,"endOffset":5765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12932,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1104,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1555,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1893,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2192,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2349,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3453,"endOffset":4078,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4082,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4181,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10999,"endOffset":12882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7716,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":520,"endOffset":843,"count":482},{"startOffset":565,"endOffset":840,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":957,"endOffset":1873,"count":301},{"startOffset":1130,"endOffset":1134,"count":120},{"startOffset":1154,"endOffset":1187,"count":181},{"startOffset":1189,"endOffset":1234,"count":241},{"startOffset":1240,"endOffset":1323,"count":60},{"startOffset":1277,"endOffset":1298,"count":0},{"startOffset":1323,"endOffset":1515,"count":241},{"startOffset":1515,"endOffset":1551,"count":121},{"startOffset":1551,"endOffset":1699,"count":241},{"startOffset":1699,"endOffset":1810,"count":0},{"startOffset":1810,"endOffset":1872,"count":241}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1726,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1877,"endOffset":2537,"count":241},{"startOffset":2495,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1940,"endOffset":2436,"count":241},{"startOffset":1983,"endOffset":2006,"count":0},{"startOffset":2145,"endOffset":2182,"count":121},{"startOffset":2270,"endOffset":2294,"count":0},{"startOffset":2311,"endOffset":2373,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2541,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2635,"endOffset":2972,"count":241},{"startOffset":2744,"endOffset":2783,"count":121},{"startOffset":2852,"endOffset":2885,"count":121},{"startOffset":2938,"endOffset":2969,"count":120}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2976,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3346,"endOffset":4065,"count":184}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4069,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5250,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5693,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6473,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6575,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6641,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6802,"endOffset":7615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6732,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2378,"endOffset":4414,"count":123},{"startOffset":2444,"endOffset":2471,"count":0},{"startOffset":3184,"endOffset":3324,"count":0},{"startOffset":3364,"endOffset":3544,"count":0},{"startOffset":3599,"endOffset":3625,"count":0},{"startOffset":3681,"endOffset":3709,"count":0},{"startOffset":3766,"endOffset":3796,"count":0},{"startOffset":3854,"endOffset":3886,"count":0},{"startOffset":3942,"endOffset":3970,"count":0},{"startOffset":4030,"endOffset":4066,"count":0},{"startOffset":4101,"endOffset":4138,"count":0},{"startOffset":4143,"endOffset":4187,"count":0},{"startOffset":4255,"endOffset":4411,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4290,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5586,"endOffset":5804,"count":585},{"startOffset":5686,"endOffset":5719,"count":0},{"startOffset":5764,"endOffset":5796,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5811,"endOffset":6079,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6160,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6349,"endOffset":6471,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6491,"endOffset":6582,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6619,"endOffset":6729,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":483}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53046,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1934,"endOffset":1961,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2965,"endOffset":2973,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3899,"endOffset":4130,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3977,"endOffset":4021,"count":2231}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4028,"endOffset":4120,"count":1618},{"startOffset":4059,"endOffset":4079,"count":304},{"startOffset":4079,"endOffset":4113,"count":1314}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6349,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6446,"endOffset":6619,"count":184},{"startOffset":6477,"endOffset":6560,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6702,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6809,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7121,"endOffset":7211,"count":86},{"startOffset":7175,"endOffset":7196,"count":60},{"startOffset":7197,"endOffset":7203,"count":26}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7218,"endOffset":7391,"count":60},{"startOffset":7332,"endOffset":7384,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7467,"endOffset":7559,"count":26},{"startOffset":7522,"endOffset":7544,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7566,"endOffset":7742,"count":60},{"startOffset":7682,"endOffset":7735,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7817,"endOffset":7922,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7929,"endOffset":8205,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8223,"endOffset":10239,"count":243},{"startOffset":8621,"endOffset":8649,"count":0},{"startOffset":8668,"endOffset":8698,"count":123},{"startOffset":8705,"endOffset":8733,"count":0},{"startOffset":8986,"endOffset":9023,"count":0},{"startOffset":9222,"endOffset":9250,"count":123},{"startOffset":9376,"endOffset":9406,"count":0},{"startOffset":9691,"endOffset":9720,"count":0},{"startOffset":9721,"endOffset":9751,"count":0},{"startOffset":9802,"endOffset":9965,"count":0},{"startOffset":10134,"endOffset":10236,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10285,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10411,"endOffset":11487,"count":120},{"startOffset":10481,"endOffset":10510,"count":0},{"startOffset":11021,"endOffset":11047,"count":0},{"startOffset":11105,"endOffset":11137,"count":0},{"startOffset":11197,"endOffset":11233,"count":0},{"startOffset":11268,"endOffset":11305,"count":0},{"startOffset":11378,"endOffset":11484,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11413,"endOffset":11477,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11628,"endOffset":11662,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11715,"endOffset":11755,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11801,"endOffset":12064,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12299,"endOffset":12575,"count":308},{"startOffset":12504,"endOffset":12571,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12674,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12954,"endOffset":14043,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14047,"endOffset":14296,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14300,"endOffset":14642,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14646,"endOffset":16079,"count":308},{"startOffset":14741,"endOffset":14831,"count":121},{"startOffset":14831,"endOffset":14868,"count":187},{"startOffset":14868,"endOffset":15029,"count":0},{"startOffset":15029,"endOffset":15391,"count":187},{"startOffset":15090,"endOffset":15391,"count":0},{"startOffset":15391,"endOffset":15428,"count":187},{"startOffset":15430,"endOffset":15538,"count":0},{"startOffset":15538,"endOffset":15580,"count":187},{"startOffset":15580,"endOffset":15667,"count":0},{"startOffset":15667,"endOffset":15726,"count":187},{"startOffset":15726,"endOffset":15751,"count":0},{"startOffset":15751,"endOffset":15825,"count":187},{"startOffset":15825,"endOffset":15837,"count":60},{"startOffset":15839,"endOffset":16002,"count":60},{"startOffset":15918,"endOffset":15997,"count":0},{"startOffset":16002,"endOffset":16078,"count":187}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16083,"endOffset":16704,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16708,"endOffset":17044,"count":187},{"startOffset":17018,"endOffset":17039,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":17048,"endOffset":18021,"count":187},{"startOffset":17195,"endOffset":17216,"count":101},{"startOffset":17218,"endOffset":17544,"count":101},{"startOffset":17367,"endOffset":17415,"count":0},{"startOffset":17544,"endOffset":17985,"count":86},{"startOffset":17641,"endOffset":17644,"count":0},{"startOffset":17682,"endOffset":17854,"count":0},{"startOffset":17959,"endOffset":17980,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18055,"endOffset":18213,"count":61}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18280,"endOffset":18870,"count":60},{"startOffset":18662,"endOffset":18705,"count":0},{"startOffset":18790,"endOffset":18817,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18935,"endOffset":19301,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19418,"endOffset":19913,"count":919},{"startOffset":19467,"endOffset":19524,"count":421},{"startOffset":19490,"endOffset":19523,"count":335},{"startOffset":19531,"endOffset":19540,"count":686},{"startOffset":19540,"endOffset":19590,"count":233},{"startOffset":19590,"endOffset":19599,"count":0},{"startOffset":19599,"endOffset":19808,"count":233},{"startOffset":19731,"endOffset":19777,"count":86},{"startOffset":19777,"endOffset":19808,"count":147},{"startOffset":19808,"endOffset":19905,"count":0},{"startOffset":19906,"endOffset":19909,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":20013,"endOffset":24827,"count":919},{"startOffset":20201,"endOffset":20221,"count":421},{"startOffset":20221,"endOffset":20290,"count":498},{"startOffset":20252,"endOffset":20290,"count":0},{"startOffset":20461,"endOffset":20510,"count":0},{"startOffset":20534,"endOffset":20569,"count":421},{"startOffset":20760,"endOffset":20807,"count":498},{"startOffset":20808,"endOffset":20964,"count":162},{"startOffset":20893,"endOffset":20920,"count":0},{"startOffset":20966,"endOffset":21150,"count":0},{"startOffset":21264,"endOffset":21297,"count":833},{"startOffset":21299,"endOffset":21378,"count":377},{"startOffset":21337,"endOffset":21355,"count":317},{"startOffset":21378,"endOffset":22702,"count":542},{"startOffset":22702,"endOffset":22743,"count":112},{"startOffset":22745,"endOffset":23138,"count":542},{"startOffset":23138,"endOffset":23219,"count":294},{"startOffset":23219,"endOffset":23862,"count":248},{"startOffset":23412,"endOffset":23443,"count":222},{"startOffset":23538,"endOffset":23592,"count":0},{"startOffset":23825,"endOffset":23857,"count":0},{"startOffset":23862,"endOffset":23896,"count":542},{"startOffset":23896,"endOffset":23921,"count":86},{"startOffset":23921,"endOffset":23946,"count":456},{"startOffset":23946,"endOffset":23970,"count":542},{"startOffset":23970,"endOffset":24067,"count":456},{"startOffset":24046,"endOffset":24049,"count":0},{"startOffset":24067,"endOffset":24256,"count":86},{"startOffset":24150,"endOffset":24198,"count":0},{"startOffset":24256,"endOffset":24286,"count":542},{"startOffset":24286,"endOffset":24653,"count":516},{"startOffset":24457,"endOffset":24488,"count":456},{"startOffset":24588,"endOffset":24621,"count":233},{"startOffset":24630,"endOffset":24648,"count":60},{"startOffset":24653,"endOffset":24676,"count":542},{"startOffset":24676,"endOffset":24734,"count":86},{"startOffset":24736,"endOffset":24807,"count":86},{"startOffset":24807,"endOffset":24826,"count":542}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24832,"endOffset":25812,"count":121},{"startOffset":24932,"endOffset":24939,"count":0},{"startOffset":24992,"endOffset":25014,"count":60},{"startOffset":25015,"endOffset":25021,"count":61},{"startOffset":25039,"endOffset":25224,"count":60},{"startOffset":25099,"endOffset":25219,"count":0},{"startOffset":25293,"endOffset":25500,"count":94},{"startOffset":25500,"endOffset":25809,"count":27}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":26018,"endOffset":26358,"count":94}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":26362,"endOffset":27052,"count":121},{"startOffset":26968,"endOffset":27011,"count":0},{"startOffset":27012,"endOffset":27027,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":27411,"endOffset":27623,"count":187},{"startOffset":27524,"endOffset":27620,"count":101}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27627,"endOffset":29491,"count":101},{"startOffset":29195,"endOffset":29265,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":29768,"endOffset":29836,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29867,"endOffset":34535,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34540,"endOffset":35237,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35271,"endOffset":36003,"count":5},{"startOffset":35476,"endOffset":36002,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.on","ranges":[{"startOffset":36133,"endOffset":37171,"count":2491},{"startOffset":36269,"endOffset":36709,"count":327},{"startOffset":36503,"endOffset":36523,"count":0},{"startOffset":36709,"endOffset":37151,"count":2164},{"startOffset":36738,"endOffset":37151,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37269,"endOffset":37995,"count":969},{"startOffset":37475,"endOffset":37869,"count":0},{"startOffset":37893,"endOffset":37928,"count":86},{"startOffset":37930,"endOffset":37975,"count":86}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38101,"endOffset":38710,"count":34},{"startOffset":38296,"endOffset":38690,"count":0}],"isBlockCoverage":true},{"functionName":"updateReadableListening","ranges":[{"startOffset":38715,"endOffset":39437,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39441,"endOffset":39532,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39690,"endOffset":40213,"count":512},{"startOffset":39782,"endOffset":40132,"count":241},{"startOffset":40052,"endOffset":40101,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":40218,"endOffset":40396,"count":241}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":40400,"endOffset":40725,"count":241},{"startOffset":40529,"endOffset":40556,"count":181},{"startOffset":40707,"endOffset":40722,"count":94}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":40756,"endOffset":41079,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":41084,"endOffset":41239,"count":362},{"startOffset":41209,"endOffset":41234,"count":421},{"startOffset":41235,"endOffset":41236,"count":86}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":41428,"endOffset":42496,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42543,"endOffset":42597,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42632,"endOffset":42780,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42785,"endOffset":43042,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43046,"endOffset":44170,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44397,"endOffset":44794,"count":367},{"startOffset":44742,"endOffset":44760,"count":306},{"startOffset":44761,"endOffset":44786,"count":306}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":44801,"endOffset":44936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45024,"endOffset":45090,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45178,"endOffset":45392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45486,"endOffset":45554,"count":120}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45641,"endOffset":45703,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45791,"endOffset":45853,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45865,"endOffset":45978,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46060,"endOffset":46116,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46202,"endOffset":46292,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46376,"endOffset":46463,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46538,"endOffset":46624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46674,"endOffset":46760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46837,"endOffset":46926,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46933,"endOffset":47232,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47313,"endOffset":47403,"count":209},{"startOffset":47388,"endOffset":47395,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47553,"endOffset":47600,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47686,"endOffset":47746,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47753,"endOffset":47921,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48238,"endOffset":50788,"count":86},{"startOffset":48324,"endOffset":48336,"count":0},{"startOffset":48487,"endOffset":48538,"count":0},{"startOffset":48658,"endOffset":48773,"count":60},{"startOffset":48773,"endOffset":49149,"count":26},{"startOffset":48800,"endOffset":48838,"count":0},{"startOffset":48922,"endOffset":49149,"count":0},{"startOffset":49154,"endOffset":50549,"count":0},{"startOffset":50636,"endOffset":50768,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":50792,"endOffset":51026,"count":377}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":51030,"endOffset":51949,"count":377},{"startOffset":51220,"endOffset":51241,"count":121},{"startOffset":51243,"endOffset":51946,"count":121},{"startOffset":51332,"endOffset":51365,"count":1},{"startOffset":51367,"endOffset":51423,"count":1},{"startOffset":51423,"endOffset":51941,"count":120},{"startOffset":51659,"endOffset":51869,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":51953,"endOffset":52119,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":52139,"endOffset":52210,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52280,"endOffset":52448,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52471,"endOffset":52609,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52631,"endOffset":52769,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52790,"endOffset":53043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":588,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":789,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1153,"endOffset":1791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1491,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":409,"endOffset":579,"count":366},{"startOffset":508,"endOffset":531,"count":120},{"startOffset":532,"endOffset":575,"count":246},{"startOffset":569,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":583,"endOffset":715,"count":244},{"startOffset":651,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":719,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":941,"endOffset":1386,"count":366},{"startOffset":1090,"endOffset":1308,"count":242},{"startOffset":1135,"endOffset":1275,"count":0},{"startOffset":1308,"endOffset":1385,"count":124}],"isBlockCoverage":true}]},{"scriptId":"130","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":86},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":86}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":86},{"startOffset":3307,"endOffset":3318,"count":0},{"startOffset":3356,"endOffset":3509,"count":0},{"startOffset":3540,"endOffset":3596,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":86},{"startOffset":3998,"endOffset":4020,"count":0},{"startOffset":4075,"endOffset":4110,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4529,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34755,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2873,"endOffset":2890,"count":54}],"isBlockCoverage":true},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3979,"endOffset":4210,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4057,"endOffset":4101,"count":123}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4108,"endOffset":4200,"count":1840},{"startOffset":4139,"endOffset":4159,"count":184},{"startOffset":4159,"endOffset":4193,"count":1656}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7331,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7338,"endOffset":7511,"count":184},{"startOffset":7369,"endOffset":7452,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7587,"endOffset":7687,"count":1275},{"startOffset":7638,"endOffset":7672,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7694,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8059,"endOffset":8159,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8166,"endOffset":8403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8551,"endOffset":8628,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8635,"endOffset":8806,"count":608},{"startOffset":8702,"endOffset":8799,"count":304}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9001,"endOffset":9101,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9108,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9388,"endOffset":9466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9473,"endOffset":9647,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9665,"endOffset":12005,"count":123},{"startOffset":9939,"endOffset":9967,"count":0},{"startOffset":10023,"endOffset":10051,"count":0},{"startOffset":10348,"endOffset":10385,"count":0},{"startOffset":10441,"endOffset":10472,"count":0},{"startOffset":10736,"endOffset":10766,"count":0},{"startOffset":11028,"endOffset":11034,"count":0},{"startOffset":11067,"endOffset":11096,"count":0},{"startOffset":11097,"endOffset":11127,"count":0},{"startOffset":11178,"endOffset":11392,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":12009,"endOffset":12178,"count":243}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12218,"endOffset":12349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12449,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12614,"endOffset":12808,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12813,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":14049,"endOffset":14258,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14363,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14438,"endOffset":15885,"count":444},{"startOffset":14545,"endOffset":14572,"count":390},{"startOffset":14574,"endOffset":14595,"count":54},{"startOffset":14621,"endOffset":14668,"count":0},{"startOffset":14737,"endOffset":14842,"count":264},{"startOffset":14811,"endOffset":14834,"count":0},{"startOffset":14842,"endOffset":14964,"count":180},{"startOffset":14907,"endOffset":14964,"count":0},{"startOffset":15003,"endOffset":15150,"count":349},{"startOffset":15056,"endOffset":15143,"count":0},{"startOffset":15150,"endOffset":15478,"count":95},{"startOffset":15221,"endOffset":15478,"count":0},{"startOffset":15538,"endOffset":15589,"count":0},{"startOffset":15635,"endOffset":15687,"count":0},{"startOffset":15702,"endOffset":15797,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15916,"endOffset":16114,"count":444},{"startOffset":15972,"endOffset":16005,"count":364},{"startOffset":16007,"endOffset":16055,"count":184}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":16145,"endOffset":16248,"count":174}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":16281,"endOffset":16532,"count":234},{"startOffset":16355,"endOffset":16529,"count":174},{"startOffset":16404,"endOffset":16446,"count":120}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16577,"endOffset":16910,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":17105,"endOffset":18346,"count":444},{"startOffset":17223,"endOffset":17226,"count":0},{"startOffset":17361,"endOffset":17781,"count":260},{"startOffset":17407,"endOffset":17485,"count":120},{"startOffset":17597,"endOffset":17621,"count":120},{"startOffset":17623,"endOffset":17669,"count":120},{"startOffset":17712,"endOffset":17731,"count":174},{"startOffset":17733,"endOffset":17776,"count":120},{"startOffset":17781,"endOffset":18028,"count":184},{"startOffset":18081,"endOffset":18102,"count":0},{"startOffset":18119,"endOffset":18159,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18350,"endOffset":18800,"count":120},{"startOffset":18597,"endOffset":18646,"count":0},{"startOffset":18672,"endOffset":18709,"count":86},{"startOffset":18709,"endOffset":18769,"count":34}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":18804,"endOffset":19200,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19204,"endOffset":21886,"count":304},{"startOffset":19324,"endOffset":19401,"count":0},{"startOffset":19521,"endOffset":19526,"count":0},{"startOffset":19676,"endOffset":20310,"count":0},{"startOffset":20362,"endOffset":20405,"count":60},{"startOffset":20423,"endOffset":21823,"count":244},{"startOffset":20485,"endOffset":20506,"count":0},{"startOffset":20877,"endOffset":21238,"count":0},{"startOffset":21292,"endOffset":21354,"count":35},{"startOffset":21356,"endOffset":21416,"count":35},{"startOffset":21416,"endOffset":21816,"count":209},{"startOffset":21668,"endOffset":21816,"count":0},{"startOffset":21823,"endOffset":21878,"count":60}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21890,"endOffset":22081,"count":209}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":22085,"endOffset":22614,"count":269},{"startOffset":22266,"endOffset":22287,"count":0},{"startOffset":22307,"endOffset":22375,"count":0},{"startOffset":22401,"endOffset":22446,"count":304},{"startOffset":22492,"endOffset":22523,"count":0},{"startOffset":22566,"endOffset":22611,"count":60}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22689,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23327,"endOffset":25049,"count":234},{"startOffset":23499,"endOffset":23518,"count":114},{"startOffset":23518,"endOffset":23729,"count":120},{"startOffset":23729,"endOffset":23748,"count":0},{"startOffset":23748,"endOffset":23844,"count":120},{"startOffset":23844,"endOffset":23861,"count":86},{"startOffset":23863,"endOffset":24500,"count":86},{"startOffset":23966,"endOffset":23971,"count":0},{"startOffset":24269,"endOffset":24279,"count":0},{"startOffset":24280,"endOffset":24297,"count":0},{"startOffset":24500,"endOffset":25006,"count":34},{"startOffset":24635,"endOffset":24638,"count":0},{"startOffset":24759,"endOffset":24794,"count":0},{"startOffset":24866,"endOffset":25001,"count":0},{"startOffset":25006,"endOffset":25048,"count":120}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":23974,"endOffset":24087,"count":86},{"startOffset":24034,"endOffset":24080,"count":226}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":25081,"endOffset":25256,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25324,"endOffset":27024,"count":121},{"startOffset":25432,"endOffset":25496,"count":0},{"startOffset":25538,"endOffset":25586,"count":0},{"startOffset":25625,"endOffset":25737,"count":0},{"startOffset":25808,"endOffset":25857,"count":0},{"startOffset":25872,"endOffset":25900,"count":0},{"startOffset":26384,"endOffset":26582,"count":0},{"startOffset":26618,"endOffset":27003,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":27029,"endOffset":27472,"count":302}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":27476,"endOffset":28126,"count":121},{"startOffset":27561,"endOffset":27645,"count":0},{"startOffset":27680,"endOffset":27791,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":28130,"endOffset":28674,"count":181},{"startOffset":28228,"endOffset":28247,"count":60},{"startOffset":28247,"endOffset":28330,"count":121},{"startOffset":28332,"endOffset":28577,"count":121},{"startOffset":28483,"endOffset":28540,"count":0},{"startOffset":28577,"endOffset":28671,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28436,"endOffset":28473,"count":121}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":28678,"endOffset":29196,"count":181},{"startOffset":28813,"endOffset":29188,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28888,"endOffset":29056,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29200,"endOffset":29865,"count":121},{"startOffset":29764,"endOffset":29792,"count":120},{"startOffset":29824,"endOffset":29857,"count":1}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29869,"endOffset":30198,"count":121},{"startOffset":29977,"endOffset":30197,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30287,"endOffset":30392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30445,"endOffset":30553,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30560,"endOffset":30816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30868,"endOffset":31279,"count":723}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":31286,"endOffset":31425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31485,"endOffset":31606,"count":120},{"startOffset":31591,"endOffset":31598,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31668,"endOffset":31791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31849,"endOffset":31947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32004,"endOffset":32123,"count":1},{"startOffset":32108,"endOffset":32115,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32184,"endOffset":32340,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32405,"endOffset":32497,"count":228}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32555,"endOffset":32651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32709,"endOffset":32794,"count":60}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32869,"endOffset":32969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33033,"endOffset":33297,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33380,"endOffset":33670,"count":181},{"startOffset":33529,"endOffset":33566,"count":0},{"startOffset":33568,"endOffset":33617,"count":0}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":33761,"endOffset":33795,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33848,"endOffset":33888,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33958,"endOffset":34126,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":34149,"endOffset":34287,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34309,"endOffset":34418,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":34464,"endOffset":34752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7327,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7193,"endOffset":7324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":262,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1192,"endOffset":1403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7350,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1246,"endOffset":2134,"count":218},{"startOffset":1350,"endOffset":1523,"count":41},{"startOffset":1479,"endOffset":1497,"count":0},{"startOffset":1529,"endOffset":1543,"count":34},{"startOffset":1549,"endOffset":1614,"count":34},{"startOffset":1620,"endOffset":1632,"count":143},{"startOffset":1638,"endOffset":1700,"count":143},{"startOffset":1706,"endOffset":1769,"count":0},{"startOffset":1775,"endOffset":1787,"count":0},{"startOffset":1793,"endOffset":1806,"count":0},{"startOffset":1812,"endOffset":1827,"count":0},{"startOffset":1833,"endOffset":1898,"count":0},{"startOffset":1904,"endOffset":2126,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2138,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2756,"endOffset":3005,"count":304}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3009,"endOffset":3671,"count":86},{"startOffset":3174,"endOffset":3275,"count":0},{"startOffset":3369,"endOffset":3486,"count":226}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3675,"endOffset":3886,"count":218}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3890,"endOffset":4207,"count":304},{"startOffset":4062,"endOffset":4117,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4211,"endOffset":6218,"count":102},{"startOffset":4413,"endOffset":4433,"count":101},{"startOffset":4435,"endOffset":5202,"count":101},{"startOffset":4524,"endOffset":4791,"count":0},{"startOffset":4980,"endOffset":5178,"count":0},{"startOffset":5202,"endOffset":5225,"count":1},{"startOffset":5225,"endOffset":5244,"count":0},{"startOffset":5244,"endOffset":5583,"count":1},{"startOffset":5583,"endOffset":5781,"count":0},{"startOffset":5781,"endOffset":5869,"count":1},{"startOffset":5869,"endOffset":5939,"count":0},{"startOffset":5939,"endOffset":6215,"count":1},{"startOffset":5986,"endOffset":6026,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6222,"endOffset":7127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":182},{"startOffset":3053,"endOffset":3102,"count":0},{"startOffset":3108,"endOffset":3163,"count":0},{"startOffset":3169,"endOffset":3222,"count":120},{"startOffset":3228,"endOffset":3279,"count":61},{"startOffset":3285,"endOffset":3336,"count":1}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6204,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":182}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6715,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2622,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3258,"endOffset":6368,"count":144},{"startOffset":3465,"endOffset":3839,"count":0},{"startOffset":4188,"endOffset":4216,"count":0},{"startOffset":4335,"endOffset":4442,"count":1},{"startOffset":4740,"endOffset":4795,"count":0},{"startOffset":4802,"endOffset":5592,"count":0},{"startOffset":5598,"endOffset":5615,"count":0},{"startOffset":5621,"endOffset":5662,"count":0},{"startOffset":5668,"endOffset":5716,"count":0},{"startOffset":5721,"endOffset":5789,"count":0},{"startOffset":5791,"endOffset":6367,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5061,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6151,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6372,"endOffset":6655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":32},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"142","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1},{"startOffset":402,"endOffset":412,"count":0}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5968,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":1},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":729,"endOffset":732,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":8},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":8},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1570,"endOffset":1573,"count":0},{"startOffset":1578,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":311,"count":1},{"startOffset":75,"endOffset":94,"count":0},{"startOffset":228,"endOffset":270,"count":0},{"startOffset":271,"endOffset":308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34221,"count":1},{"startOffset":5791,"endOffset":5810,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":3983,"endOffset":5631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4396,"endOffset":4678,"count":59},{"startOffset":4467,"endOffset":4481,"count":0},{"startOffset":4483,"endOffset":4641,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4719,"endOffset":4773,"count":24}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":4947,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6139,"endOffset":7047,"count":74},{"startOffset":6388,"endOffset":6442,"count":1},{"startOffset":6443,"endOffset":6511,"count":0},{"startOffset":6516,"endOffset":6633,"count":0},{"startOffset":6731,"endOffset":6765,"count":1},{"startOffset":6770,"endOffset":6781,"count":73},{"startOffset":6849,"endOffset":6881,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7358,"endOffset":7971,"count":2},{"startOffset":7486,"endOffset":7886,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8147,"endOffset":8477,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":8731,"endOffset":8896,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9094,"endOffset":9350,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9167,"endOffset":9329,"count":254},{"startOffset":9258,"endOffset":9287,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9465,"endOffset":9691,"count":1},{"startOffset":9579,"endOffset":9672,"count":8},{"startOffset":9617,"endOffset":9640,"count":6},{"startOffset":9640,"endOffset":9672,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":9859,"endOffset":10036,"count":2},{"startOffset":9901,"endOffset":9932,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10130,"endOffset":10674,"count":83},{"startOffset":10189,"endOffset":10672,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10603,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11450,"endOffset":12479,"count":23},{"startOffset":11529,"endOffset":11538,"count":0},{"startOffset":11540,"endOffset":11557,"count":0},{"startOffset":11604,"endOffset":11789,"count":0},{"startOffset":11917,"endOffset":11951,"count":0},{"startOffset":12277,"endOffset":12377,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hook","ranges":[{"startOffset":12631,"endOffset":15427,"count":410},{"startOffset":12678,"endOffset":12690,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":12776,"endOffset":15370,"count":434},{"startOffset":12835,"endOffset":12861,"count":409},{"startOffset":12861,"endOffset":12935,"count":25},{"startOffset":12935,"endOffset":12993,"count":4},{"startOffset":12993,"endOffset":13171,"count":21},{"startOffset":13033,"endOffset":13118,"count":6},{"startOffset":13118,"endOffset":13171,"count":15},{"startOffset":13171,"endOffset":13335,"count":25},{"startOffset":13335,"endOffset":13443,"count":13},{"startOffset":13443,"endOffset":15369,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13458,"endOffset":14859,"count":25},{"startOffset":13541,"endOffset":13591,"count":0},{"startOffset":13642,"endOffset":14589,"count":0},{"startOffset":14604,"endOffset":14726,"count":1},{"startOffset":14726,"endOffset":14858,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14193,"endOffset":14255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14289,"endOffset":14353,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":14867,"endOffset":15366,"count":49},{"startOffset":14943,"endOffset":14956,"count":13},{"startOffset":15002,"endOffset":15093,"count":17},{"startOffset":15093,"endOffset":15360,"count":32},{"startOffset":15157,"endOffset":15211,"count":30},{"startOffset":15211,"endOffset":15286,"count":2},{"startOffset":15271,"endOffset":15275,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15393,"endOffset":15423,"count":410}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":15649,"endOffset":16064,"count":120}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15726,"endOffset":16039,"count":477},{"startOffset":15790,"endOffset":15841,"count":119},{"startOffset":15841,"endOffset":16038,"count":358}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15863,"endOffset":16033,"count":358},{"startOffset":15895,"endOffset":16000,"count":1},{"startOffset":16000,"endOffset":16032,"count":357}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16205,"endOffset":16322,"count":60}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":16471,"endOffset":16578,"count":60}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":16715,"endOffset":16871,"count":120},{"startOffset":16797,"endOffset":16852,"count":239}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":16996,"endOffset":17439,"count":59},{"startOffset":17037,"endOffset":17067,"count":0},{"startOffset":17126,"endOffset":17143,"count":0},{"startOffset":17167,"endOffset":17199,"count":0},{"startOffset":17315,"endOffset":17376,"count":0},{"startOffset":17407,"endOffset":17437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17240,"endOffset":17286,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":17621,"endOffset":22218,"count":26}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":17713,"endOffset":18418,"count":1},{"startOffset":17962,"endOffset":17979,"count":0},{"startOffset":18297,"endOffset":18414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18055,"endOffset":18289,"count":1},{"startOffset":18169,"endOffset":18229,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":18422,"endOffset":22159,"count":85},{"startOffset":18509,"endOffset":18523,"count":69},{"startOffset":18525,"endOffset":18550,"count":0},{"startOffset":18573,"endOffset":18599,"count":0},{"startOffset":18614,"endOffset":18664,"count":0},{"startOffset":18741,"endOffset":18767,"count":25},{"startOffset":18767,"endOffset":18854,"count":60},{"startOffset":18854,"endOffset":18883,"count":0},{"startOffset":18883,"endOffset":18900,"count":60},{"startOffset":18900,"endOffset":19540,"count":0},{"startOffset":19540,"endOffset":19610,"count":60},{"startOffset":19610,"endOffset":19901,"count":0},{"startOffset":19901,"endOffset":22158,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20039,"endOffset":22153,"count":60},{"startOffset":20138,"endOffset":20709,"count":0},{"startOffset":20725,"endOffset":20780,"count":1},{"startOffset":20780,"endOffset":22152,"count":59}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20606,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20840,"endOffset":22145,"count":59},{"startOffset":20947,"endOffset":21307,"count":0},{"startOffset":21322,"endOffset":21949,"count":22},{"startOffset":21405,"endOffset":21775,"count":0},{"startOffset":21949,"endOffset":22144,"count":37}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":22391,"endOffset":24036,"count":26},{"startOffset":22570,"endOffset":22584,"count":20},{"startOffset":22587,"endOffset":22643,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":22712,"endOffset":23608,"count":51},{"startOffset":22756,"endOffset":23106,"count":2},{"startOffset":22842,"endOffset":23106,"count":1},{"startOffset":23106,"endOffset":23129,"count":49},{"startOffset":23129,"endOffset":23157,"count":0},{"startOffset":23157,"endOffset":23208,"count":49},{"startOffset":23208,"endOffset":23236,"count":24},{"startOffset":23236,"endOffset":23467,"count":25},{"startOffset":23467,"endOffset":23558,"count":0},{"startOffset":23558,"endOffset":23604,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23494,"endOffset":23550,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":23612,"endOffset":23876,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23780,"endOffset":23870,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23938,"endOffset":24032,"count":26},{"startOffset":23968,"endOffset":23996,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":24882,"endOffset":27547,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":27914,"endOffset":29933,"count":1},{"startOffset":28000,"endOffset":28005,"count":0},{"startOffset":28062,"endOffset":28079,"count":0},{"startOffset":29611,"endOffset":29871,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":28065,"endOffset":28079,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28096,"endOffset":28291,"count":1},{"startOffset":28124,"endOffset":28146,"count":0},{"startOffset":28148,"endOffset":28166,"count":0}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":28310,"endOffset":28518,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":28539,"endOffset":28913,"count":1},{"startOffset":28642,"endOffset":28731,"count":0},{"startOffset":28800,"endOffset":28888,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29045,"endOffset":29092,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29149,"endOffset":29288,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":30767,"endOffset":30802,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":31190,"endOffset":31297,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31248,"endOffset":31293,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":31432,"endOffset":31515,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":31716,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":32111,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":32355,"endOffset":33393,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":33608,"endOffset":33708,"count":23},{"startOffset":33662,"endOffset":33705,"count":0}],"isBlockCoverage":true},{"functionName":"thrown2Error","ranges":[{"startOffset":33871,"endOffset":34024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"151","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":14},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":14},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6912,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":14},{"startOffset":1108,"endOffset":1213,"count":220}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":409},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":409},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4433,"count":1},{"startOffset":4196,"endOffset":4208,"count":0},{"startOffset":4311,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4626,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5739,"endOffset":5930,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6073,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6416,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6644,"endOffset":6820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10622,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":814,"endOffset":1192,"count":77},{"startOffset":901,"endOffset":906,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1118,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1369,"endOffset":1499,"count":141}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2201,"endOffset":2661,"count":226},{"startOffset":2242,"endOffset":2273,"count":149},{"startOffset":2273,"endOffset":2304,"count":77},{"startOffset":2304,"endOffset":2336,"count":0},{"startOffset":2336,"endOffset":2491,"count":77},{"startOffset":2493,"endOffset":2521,"count":0},{"startOffset":2521,"endOffset":2614,"count":77},{"startOffset":2614,"endOffset":2644,"count":0},{"startOffset":2644,"endOffset":2660,"count":77}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2821,"endOffset":3042,"count":146},{"startOffset":2861,"endOffset":2889,"count":77},{"startOffset":2891,"endOffset":2919,"count":69},{"startOffset":2919,"endOffset":2950,"count":77},{"startOffset":2950,"endOffset":2982,"count":0},{"startOffset":2982,"endOffset":3041,"count":77}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3150,"endOffset":3242,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3367,"endOffset":3449,"count":227}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3569,"endOffset":3653,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3773,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":3945,"endOffset":4039,"count":99},{"startOffset":3985,"endOffset":4016,"count":22},{"startOffset":4016,"endOffset":4038,"count":77}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4127,"endOffset":4231,"count":22},{"startOffset":4203,"endOffset":4230,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4427,"endOffset":4479,"count":314}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4677,"endOffset":4747,"count":337}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":4829,"endOffset":4872,"count":149}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":4954,"endOffset":5225,"count":65},{"startOffset":5013,"endOffset":5027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5079,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5372,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5605,"endOffset":9154,"count":84},{"startOffset":5760,"endOffset":5772,"count":0},{"startOffset":6566,"endOffset":6700,"count":0},{"startOffset":6761,"endOffset":7446,"count":0},{"startOffset":7512,"endOffset":7712,"count":1},{"startOffset":7586,"endOffset":7614,"count":0},{"startOffset":7644,"endOffset":7668,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":5915,"endOffset":6078,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6096,"endOffset":6439,"count":84},{"startOffset":6169,"endOffset":6190,"count":0},{"startOffset":6210,"endOffset":6245,"count":0},{"startOffset":6346,"endOffset":6367,"count":61},{"startOffset":6368,"endOffset":6377,"count":0},{"startOffset":6379,"endOffset":6422,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":6866,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":7716,"endOffset":8419,"count":84},{"startOffset":7784,"endOffset":7820,"count":65},{"startOffset":7822,"endOffset":8195,"count":65},{"startOffset":8195,"endOffset":8415,"count":18},{"startOffset":8229,"endOffset":8394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7878,"endOffset":8060,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8070,"endOffset":8180,"count":22},{"startOffset":8112,"endOffset":8168,"count":0}],"isBlockCoverage":true},{"functionName":"callFnAsync","ranges":[{"startOffset":8423,"endOffset":9152,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9337,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10396,"endOffset":10587,"count":1},{"startOffset":10436,"endOffset":10580,"count":0}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15639,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":350,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":753,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1062,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4375,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":4856,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5341,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5752,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6687,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7319,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":7870,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8297,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":8820,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9598,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10106,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10602,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11082,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12086,"endOffset":12341,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":12641,"endOffset":12827,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13287,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":13803,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14240,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":14609,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15436,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":714,"endOffset":882,"count":26}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1284,"endOffset":2125,"count":27},{"startOffset":1355,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1574,"endOffset":1595,"count":27}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2056,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2290,"endOffset":2601,"count":27}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2330,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2705,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3194,"endOffset":3521,"count":130},{"startOffset":3235,"endOffset":3266,"count":103},{"startOffset":3266,"endOffset":3297,"count":27},{"startOffset":3297,"endOffset":3329,"count":0},{"startOffset":3329,"endOffset":3520,"count":27}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3694,"endOffset":3848,"count":129},{"startOffset":3734,"endOffset":3765,"count":103},{"startOffset":3765,"endOffset":3826,"count":26},{"startOffset":3826,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4017,"endOffset":4209,"count":130},{"startOffset":4058,"endOffset":4086,"count":103},{"startOffset":4086,"endOffset":4117,"count":27},{"startOffset":4117,"endOffset":4149,"count":0},{"startOffset":4149,"endOffset":4208,"count":27}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4371,"endOffset":4506,"count":52},{"startOffset":4414,"endOffset":4505,"count":26}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4625,"endOffset":4707,"count":875},{"startOffset":4677,"endOffset":4703,"count":571}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":4896,"endOffset":5129,"count":13}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5312,"endOffset":5672,"count":4},{"startOffset":5359,"endOffset":5381,"count":0},{"startOffset":5499,"endOffset":5513,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterAll","ranges":[{"startOffset":5853,"endOffset":6210,"count":6},{"startOffset":5900,"endOffset":5922,"count":0},{"startOffset":6039,"endOffset":6053,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6395,"endOffset":6758,"count":3},{"startOffset":6442,"endOffset":6464,"count":0},{"startOffset":6583,"endOffset":6597,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":6941,"endOffset":7301,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7433,"endOffset":7713,"count":26}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":7850,"endOffset":8095,"count":64}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8279,"endOffset":8331,"count":52}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8517,"endOffset":8699,"count":1150},{"startOffset":8569,"endOffset":8627,"count":761},{"startOffset":8646,"endOffset":8680,"count":761}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":8824,"endOffset":8966,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8872,"endOffset":8935,"count":26}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9172,"endOffset":9301,"count":98}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9236,"endOffset":9282,"count":71}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9422,"endOffset":9510,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":9659,"endOffset":9843,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9781,"endOffset":9835,"count":26}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":9962,"endOffset":10999,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11139,"endOffset":11191,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11275,"endOffset":11342,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11474,"endOffset":11523,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":11646,"endOffset":11700,"count":410}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":11800,"endOffset":11909,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12309,"endOffset":12879,"count":26},{"startOffset":12843,"endOffset":12877,"count":62}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12340,"endOffset":12451,"count":104},{"startOffset":12416,"endOffset":12447,"count":13}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13048,"endOffset":13341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":354,"endOffset":438,"count":13}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":580,"endOffset":656,"count":13}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":793,"endOffset":927,"count":25},{"startOffset":903,"endOffset":926,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1095,"endOffset":1785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":749,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":690,"endOffset":2267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7044,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":851,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":1956,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2232,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2683,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3150,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3291,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3481,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3761,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4062,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4407,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4661,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5249,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6013,"endOffset":6911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3634,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":882,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2458,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":2921,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3431,"endOffset":3583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11916,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1664,"endOffset":8936,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":9063,"endOffset":9427,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":9515,"endOffset":9594,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":9680,"endOffset":9757,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":9931,"endOffset":10244,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":10305,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":10481,"endOffset":10831,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":10953,"endOffset":11227,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":11263,"endOffset":11450,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":11553,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":11734,"endOffset":11889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":854,"endOffset":1786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":674,"endOffset":977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":879,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1003,"endOffset":1064,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1275,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1396,"count":26},{"startOffset":1360,"endOffset":1392,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":2025,"count":37},{"startOffset":1639,"endOffset":1800,"count":23},{"startOffset":1800,"endOffset":2021,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058,"endOffset":2155,"count":23}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5570,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":760,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1798,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2080,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2513,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":2930,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3273,"endOffset":4070,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":4165,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4479,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4644,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":4813,"endOffset":5169,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":5306,"endOffset":5531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4878,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1066,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":2946,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3188,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3510,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4416,"endOffset":4825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2434,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":753,"endOffset":2381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":781,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":948,"endOffset":2401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2079,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":677,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1492,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1812,"endOffset":2019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3533,"count":1}],"isBlockCoverage":true},{"functionName":"forward","ranges":[{"startOffset":75,"endOffset":81,"count":9}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":108,"endOffset":1086,"count":9},{"startOffset":273,"endOffset":1033,"count":0},{"startOffset":1037,"endOffset":1085,"count":0}],"isBlockCoverage":true},{"functionName":"exports.doImport","ranges":[{"startOffset":1108,"endOffset":1134,"count":9}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1163,"endOffset":3093,"count":9},{"startOffset":1232,"endOffset":1285,"count":0},{"startOffset":1369,"endOffset":3091,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3096,"endOffset":3242,"count":9},{"startOffset":3153,"endOffset":3185,"count":0}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3269,"endOffset":3531,"count":1},{"startOffset":3367,"endOffset":3529,"count":9}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1329,"endOffset":2179,"count":1},{"startOffset":1520,"endOffset":1577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1635,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1716,"endOffset":1772,"count":26},{"startOffset":1750,"endOffset":1767,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1841,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":1912,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2052,"count":59}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2084,"endOffset":2175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"173","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2512,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":544,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":2444,"count":9},{"startOffset":926,"endOffset":955,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1135,"endOffset":1248,"count":26}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1380,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1587,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1872,"endOffset":2095,"count":64},{"startOffset":1953,"endOffset":1981,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2165,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2375,"endOffset":2439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":557,"endOffset":870,"count":64},{"startOffset":608,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1031,"endOffset":1133,"count":128}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1215,"endOffset":1317,"count":59},{"startOffset":1290,"endOffset":1316,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1417,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1494,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2051,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":625,"endOffset":2243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2135,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":648,"endOffset":2088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":460,"endOffset":1360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":152,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":338,"endOffset":475,"count":84},{"startOffset":385,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":610,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":885,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1108,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1308,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8821,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":831,"endOffset":920,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":869,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"exitMocha","ranges":[{"startOffset":1158,"endOffset":1849,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":2068,"endOffset":2146,"count":8},{"startOffset":2096,"endOffset":2125,"count":4},{"startOffset":2126,"endOffset":2146,"count":4}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2416,"endOffset":3274,"count":1},{"startOffset":2577,"endOffset":3104,"count":0},{"startOffset":3189,"endOffset":3254,"count":0}],"isBlockCoverage":true},{"functionName":"handleUnmatchedFiles","ranges":[{"startOffset":3537,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"singleRun","ranges":[{"startOffset":4507,"endOffset":5029,"count":1},{"startOffset":4698,"endOffset":4777,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":5434,"endOffset":5949,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":6412,"endOffset":6909,"count":1},{"startOffset":6745,"endOffset":6800,"count":0},{"startOffset":6827,"endOffset":6840,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":7490,"endOffset":8554,"count":2},{"startOffset":7763,"endOffset":7888,"count":0},{"startOffset":8170,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":7919,"endOffset":8075,"count":0}],"isBlockCoverage":false},{"functionName":"createExitHandler","ranges":[{"startOffset":8583,"endOffset":8819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8632,"endOffset":8816,"count":1},{"startOffset":8695,"endOffset":8698,"count":0},{"startOffset":8751,"endOffset":8775,"count":0}],"isBlockCoverage":true}]},{"scriptId":"181","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10769,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1013,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3283,"endOffset":4740,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5532,"endOffset":7799,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8180,"endOffset":9177,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9404,"endOffset":9617,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":9690,"endOffset":9738,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":9811,"endOffset":9859,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":9929,"endOffset":9975,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10136,"endOffset":10324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28375,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13187,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13398,"endOffset":14076,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14177,"endOffset":14941,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15016,"endOffset":15266,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15268,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15781,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18257,"endOffset":18533,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18829,"endOffset":19563,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19565,"endOffset":19615,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20062,"endOffset":21418,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21420,"endOffset":21484,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21658,"endOffset":22258,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22260,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22624,"endOffset":22863,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23061,"endOffset":23329,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23594,"endOffset":23870,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24176,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26931,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27141,"endOffset":27297,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27360,"endOffset":27543,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27545,"endOffset":27943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28244,"endOffset":28349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1153,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"185","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4380,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1363,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1799,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2411,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3145,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4122,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1099,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1349,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1769,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1971,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2179,"endOffset":2516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6406,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2311,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2583,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2864,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2982,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3115,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3283,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4797,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5593,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2797,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":832,"endOffset":2769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6899,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"205","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"208","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1878,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1670,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1702,"endOffset":1712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16368,"count":1},{"startOffset":243,"endOffset":264,"count":0},{"startOffset":282,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":1007,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2098,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2586,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":5072,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5388,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5516,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5774,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":6075,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6114,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6420,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6651,"endOffset":7317,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7319,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":9001,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11330,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12478,"endOffset":12951,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12953,"endOffset":13218,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13558,"endOffset":16297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4074,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":780,"endOffset":2999,"count":1},{"startOffset":2154,"endOffset":2181,"count":0},{"startOffset":2397,"endOffset":2788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":930,"endOffset":1517,"count":1},{"startOffset":1314,"endOffset":1513,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1056,"endOffset":1200,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1104,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1224,"endOffset":1258,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1627,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2273,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2862,"endOffset":2944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28818,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"charSet","ranges":[{"startOffset":1274,"endOffset":1347,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1298,"endOffset":1342,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1617,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1706,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1859,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":2957,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3030,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":3424,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4321,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4411,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4670,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"charUnescape","ranges":[{"startOffset":4722,"endOffset":4757,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4779,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"braExpEscape","ranges":[{"startOffset":4851,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":4907,"endOffset":5471,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":5475,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5490,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":6700,"endOffset":7058,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":7290,"endOffset":12449,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12453,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12528,"endOffset":24830,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":24834,"endOffset":27191,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27195,"endOffset":28706,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":28717,"endOffset":28782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minimatch/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1},{"startOffset":136,"endOffset":150,"count":0}],"isBlockCoverage":true}]},{"scriptId":"213","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4547,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1057,"endOffset":1108,"count":9}],"isBlockCoverage":true},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1618,"endOffset":1747,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1659,"endOffset":1705,"count":27},{"startOffset":1687,"endOffset":1692,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1717,"endOffset":1746,"count":9}],"isBlockCoverage":true},{"functionName":"lookupFiles","ranges":[{"startOffset":2409,"endOffset":4545,"count":1},{"startOffset":2551,"endOffset":3584,"count":0},{"startOffset":3668,"endOffset":3698,"count":0},{"startOffset":3703,"endOffset":3752,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2820,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3355,"endOffset":3389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3811,"endOffset":4524,"count":9},{"startOffset":3964,"endOffset":4095,"count":0},{"startOffset":4102,"endOffset":4139,"count":0},{"startOffset":4168,"endOffset":4350,"count":0},{"startOffset":4473,"endOffset":4494,"count":0}],"isBlockCoverage":true}]},{"scriptId":"216","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2876,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":699,"endOffset":741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":814,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":965,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1124,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1284,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"globStreamSync","ranges":[{"startOffset":1331,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":1444,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":1549,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":1654,"endOffset":1757,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1758,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1873,"endOffset":1979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40557,"count":1},{"startOffset":3263,"endOffset":3272,"count":0},{"startOffset":3424,"endOffset":3440,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":729,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1166,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1247,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1309,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1455,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1607,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1680,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1780,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1874,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1939,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2057,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2277,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2494,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2644,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2796,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2923,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4110,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4269,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4326,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6266,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":7419,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7570,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7956,"endOffset":8008,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8026,"endOffset":39810,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":39963,"endOffset":39999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40112,"endOffset":40154,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40273,"endOffset":40319,"count":1}],"isBlockCoverage":true}]},{"scriptId":"218","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":179,"endOffset":393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22822,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":316,"endOffset":335,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1090,"endOffset":1142,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1551,"endOffset":22771,"count":0}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5763,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1000,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1098,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1236,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1621,"endOffset":5683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":694,"endOffset":906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":553,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8546,"count":1},{"startOffset":552,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":637,"endOffset":8492,"count":0}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66122,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0},{"startOffset":65699,"endOffset":65710,"count":0},{"startOffset":66011,"endOffset":66087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":106},{"startOffset":232,"endOffset":247,"count":8},{"startOffset":248,"endOffset":284,"count":98},{"startOffset":264,"endOffset":284,"count":5},{"startOffset":287,"endOffset":363,"count":101}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":1},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":106}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2223,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":2588,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3789,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4182,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":4403,"endOffset":4577,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":4720,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":5698,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6534,"endOffset":38140,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38374,"endOffset":40226,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40380,"endOffset":41268,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41646,"endOffset":62674,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62939,"endOffset":64020,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64326,"endOffset":65000,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":65309,"endOffset":65441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55020,"count":1},{"startOffset":263,"endOffset":269,"count":0},{"startOffset":387,"endOffset":391,"count":0},{"startOffset":740,"endOffset":2309,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":436,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":786,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1004,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1603,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2350,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2425,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":2995,"endOffset":3312,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":3371,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3454,"endOffset":4192,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3454,"endOffset":4192,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4841,"endOffset":54957,"count":0}],"isBlockCoverage":true}]},{"scriptId":"226","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"227","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8490,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":956,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1182,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1316,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1461,"endOffset":1627,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1633,"endOffset":1772,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1778,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1943,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2100,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2253,"endOffset":2405,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2411,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2603,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2791,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2976,"endOffset":3151,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3157,"endOffset":3359,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3365,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3564,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3731,"endOffset":3894,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3900,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":4045,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4202,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4359,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"get deliveryType","ranges":[{"startOffset":4625,"endOffset":4759,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStatus","ranges":[{"startOffset":4765,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4909,"endOffset":5959,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6934,"endOffset":7710,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7782,"endOffset":8409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6716,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1200,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1722,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2482,"endOffset":2590,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2596,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3051,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3366,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3483,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3887,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4102,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4252,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5888,"endOffset":6335,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6339,"endOffset":6603,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":780,"endOffset":3224,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1479,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1700,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1923,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2147,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2369,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2599,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2994,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3230,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3486,"endOffset":3886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6637,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2900,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3170,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3403,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3700,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3805,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4135,"endOffset":4264,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4270,"endOffset":4505,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6168,"endOffset":6342,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6226,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6390,"endOffset":6533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8862,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1089,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1723,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1911,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2111,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2295,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2491,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2675,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2871,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":3057,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3249,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3453,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3663,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":4097,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4535,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4799,"endOffset":5006,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":5048,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5174,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5341,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5409,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5732,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5979,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6306,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6522,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6807,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6984,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":7053,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":7316,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":7330,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7711,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7725,"endOffset":7821,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7974,"endOffset":8676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1840,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"236","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34777,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3350,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3510,"endOffset":3595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3967,"endOffset":4100,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4142,"endOffset":10513,"count":25}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4228,"endOffset":4454,"count":25},{"startOffset":4387,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4460,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4525,"endOffset":4563,"count":50}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4569,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4659,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4723,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4795,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4855,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4907,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":5024,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":5113,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5188,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5342,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5410,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5482,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5564,"endOffset":5677,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5683,"endOffset":5768,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5774,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5871,"endOffset":6694,"count":25},{"startOffset":5906,"endOffset":5946,"count":0},{"startOffset":5979,"endOffset":6022,"count":0},{"startOffset":6257,"endOffset":6629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6197,"endOffset":6239,"count":25}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6344,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6462,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6701,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6967,"endOffset":8715,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9028,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9501,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9664,"endOffset":10079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10085,"endOffset":10140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10146,"endOffset":10236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10242,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10510,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10517,"endOffset":10899,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10631,"endOffset":10690,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10677,"endOffset":10689,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10697,"endOffset":10889,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10903,"endOffset":11196,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":11200,"endOffset":11678,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11682,"endOffset":11804,"count":100},{"startOffset":11727,"endOffset":11736,"count":0},{"startOffset":11743,"endOffset":11801,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11808,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12987,"endOffset":15477,"count":25},{"startOffset":13142,"endOffset":13172,"count":0},{"startOffset":13542,"endOffset":13580,"count":0},{"startOffset":13615,"endOffset":13665,"count":2},{"startOffset":13701,"endOffset":13739,"count":0},{"startOffset":14023,"endOffset":14097,"count":0},{"startOffset":14287,"endOffset":14291,"count":0},{"startOffset":14349,"endOffset":14379,"count":23},{"startOffset":14380,"endOffset":14448,"count":0},{"startOffset":14545,"endOffset":14556,"count":0},{"startOffset":14615,"endOffset":14677,"count":2},{"startOffset":14724,"endOffset":14738,"count":2},{"startOffset":14740,"endOffset":14853,"count":0},{"startOffset":14886,"endOffset":15123,"count":0},{"startOffset":15124,"endOffset":15139,"count":0},{"startOffset":15160,"endOffset":15469,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15634,"endOffset":15833,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15837,"endOffset":16053,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":16057,"endOffset":16332,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16456,"endOffset":16797,"count":25}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16801,"endOffset":18354,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":18358,"endOffset":18734,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18738,"endOffset":20138,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":20142,"endOffset":20623,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20627,"endOffset":20915,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20919,"endOffset":21055,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21059,"endOffset":21306,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":21310,"endOffset":21487,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21491,"endOffset":21928,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21932,"endOffset":22107,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22111,"endOffset":22278,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22282,"endOffset":22816,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":22820,"endOffset":24866,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24870,"endOffset":25484,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":25488,"endOffset":25760,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":25764,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":27046,"endOffset":27305,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27309,"endOffset":27579,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27583,"endOffset":27851,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":27855,"endOffset":28110,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":28114,"endOffset":28423,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":28427,"endOffset":28607,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":28611,"endOffset":28831,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":28835,"endOffset":29080,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":29084,"endOffset":29318,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":29322,"endOffset":29634,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":29638,"endOffset":29923,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":29927,"endOffset":30237,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":30241,"endOffset":30535,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":30539,"endOffset":30826,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":30830,"endOffset":31110,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":31114,"endOffset":31359,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":31363,"endOffset":31682,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":31686,"endOffset":32591,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":32595,"endOffset":32711,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":32715,"endOffset":32947,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":32951,"endOffset":33306,"count":25},{"startOffset":33070,"endOffset":33076,"count":0},{"startOffset":33120,"endOffset":33157,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":33310,"endOffset":33989,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34018,"endOffset":34056,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":34060,"endOffset":34212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7685,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":727,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":6817,"endOffset":7393,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7397,"endOffset":7621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11645,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1485,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1539,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1901,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2665,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3758,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4018,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4401,"endOffset":4843,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4876,"endOffset":5165,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5200,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5463,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7010,"endOffset":7953,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8176,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8311,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8690,"endOffset":8762,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8795,"endOffset":8869,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8874,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9158,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9199,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9281,"endOffset":11503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7491,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":908,"endOffset":7431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40452,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3967,"endOffset":9659,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9907,"endOffset":10009,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":10013,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10230,"endOffset":10283,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10383,"endOffset":10428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10434,"endOffset":10633,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10779,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11047,"endOffset":11366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11372,"endOffset":11623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11629,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11724,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11904,"endOffset":12107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12113,"endOffset":13325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13331,"endOffset":14374,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14464,"endOffset":14643,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14730,"endOffset":14867,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14965,"endOffset":15107,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15392,"endOffset":15558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15564,"endOffset":17343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17349,"endOffset":18042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18048,"endOffset":18460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18466,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20749,"endOffset":21222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21228,"endOffset":21492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21498,"endOffset":21992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21998,"endOffset":22493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22499,"endOffset":23281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23287,"endOffset":23724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23730,"endOffset":24015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24021,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24291,"endOffset":24557,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24563,"endOffset":24723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24729,"endOffset":25423,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25429,"endOffset":25584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25590,"endOffset":25750,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25756,"endOffset":25948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25954,"endOffset":26275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26281,"endOffset":26602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27046,"endOffset":27701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27707,"endOffset":28436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28514,"endOffset":29485,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29672,"endOffset":29845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29968,"endOffset":30548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30588,"endOffset":39121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39440,"endOffset":39831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12765,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":383,"endOffset":585,"count":4},{"startOffset":547,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":976,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1251,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2278,"endOffset":12197,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12230,"endOffset":12642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33796,"count":1},{"startOffset":374,"endOffset":427,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":745,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1063,"endOffset":1319,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1449,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2884,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2936,"endOffset":2948,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2967,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3056,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3263,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3414,"endOffset":3951,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4108,"endOffset":4208,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4213,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4412,"endOffset":4433,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4461,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4929,"endOffset":33733,"count":0}],"isBlockCoverage":true}]},{"scriptId":"244","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7300,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":241,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":284,"endOffset":306,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":409,"endOffset":7237,"count":0}],"isBlockCoverage":true}]},{"scriptId":"245","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12869,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":408,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":664,"endOffset":10529,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10593,"endOffset":11708,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11776,"endOffset":12801,"count":0}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4267,"count":1},{"startOffset":533,"endOffset":542,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":607,"endOffset":4207,"count":0}],"isBlockCoverage":true}]},{"scriptId":"247","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10760,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":378,"endOffset":938,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1213,"endOffset":1647,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1799,"endOffset":2598,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2813,"endOffset":10691,"count":0}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":748,"endOffset":990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":611,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":929,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2005,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2660,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3633,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4435,"endOffset":4487,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4723,"endOffset":5868,"count":3},{"startOffset":4798,"endOffset":4924,"count":0},{"startOffset":4956,"endOffset":5097,"count":0},{"startOffset":5181,"endOffset":5312,"count":0},{"startOffset":5405,"endOffset":5418,"count":0},{"startOffset":5468,"endOffset":5630,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6119,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":7385,"endOffset":7889,"count":1},{"startOffset":7528,"endOffset":7801,"count":3},{"startOffset":7560,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8016,"endOffset":8126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2624,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":880,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":958,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1375,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1723,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2437,"endOffset":2622,"count":1},{"startOffset":2539,"endOffset":2601,"count":0}],"isBlockCoverage":true}]},{"scriptId":"251","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":2},{"startOffset":1116,"endOffset":1121,"count":1},{"startOffset":1559,"endOffset":1823,"count":9},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1736,"count":1},{"startOffset":1736,"endOffset":1764,"count":8},{"startOffset":1764,"endOffset":1780,"count":1},{"startOffset":1780,"endOffset":1823,"count":7}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":9},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":9},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":9},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1178,"endOffset":1325,"count":49},{"startOffset":1285,"endOffset":1309,"count":1},{"startOffset":1314,"endOffset":1322,"count":48},{"startOffset":1325,"endOffset":1326,"count":8}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1079,"endOffset":1831,"count":11},{"startOffset":1125,"endOffset":1360,"count":1},{"startOffset":1252,"endOffset":1360,"count":0},{"startOffset":1360,"endOffset":1595,"count":10},{"startOffset":1595,"endOffset":1607,"count":1},{"startOffset":1608,"endOffset":1630,"count":1},{"startOffset":1632,"endOffset":1659,"count":10},{"startOffset":1660,"endOffset":1824,"count":10}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2107,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2636,"endOffset":2842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5238,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":175,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":356,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":444,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":641,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":724,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1762,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2600,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3643,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4322,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4544,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":82,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":240,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":285,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1286,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"260","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-unparser/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs-unparser/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3027,"count":1},{"startOffset":3005,"endOffset":3026,"count":0}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1374,"endOffset":2820,"count":1},{"startOffset":1727,"endOffset":1810,"count":0},{"startOffset":1835,"endOffset":1855,"count":0},{"startOffset":2553,"endOffset":2557,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2097,"endOffset":2314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1455,"count":1}],"isBlockCoverage":true},{"functionName":"Argv","ranges":[{"startOffset":272,"endOffset":462,"count":2}],"isBlockCoverage":true},{"functionName":"defineGetter","ranges":[{"startOffset":464,"endOffset":612,"count":14}],"isBlockCoverage":true},{"functionName":"lookupGetter","ranges":[{"startOffset":613,"endOffset":768,"count":2}],"isBlockCoverage":true},{"functionName":"singletonify","ranges":[{"startOffset":1010,"endOffset":1454,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1145,"endOffset":1450,"count":178},{"startOffset":1178,"endOffset":1241,"count":2},{"startOffset":1241,"endOffset":1446,"count":176},{"startOffset":1284,"endOffset":1331,"count":170},{"startOffset":1331,"endOffset":1446,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1370,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62178,"count":1},{"startOffset":60890,"endOffset":60897,"count":0},{"startOffset":60924,"endOffset":60931,"count":0},{"startOffset":60960,"endOffset":60974,"count":0},{"startOffset":61244,"endOffset":61249,"count":0},{"startOffset":61482,"endOffset":61489,"count":0},{"startOffset":61515,"endOffset":61522,"count":0},{"startOffset":61549,"endOffset":61592,"count":0},{"startOffset":61676,"endOffset":61831,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":59,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":186,"endOffset":734,"count":1},{"startOffset":272,"endOffset":691,"count":0},{"startOffset":704,"endOffset":711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":371,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":571,"count":0}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":926,"endOffset":1377,"count":262},{"startOffset":1037,"endOffset":1082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1154,"endOffset":1372,"count":540},{"startOffset":1211,"endOffset":1235,"count":2},{"startOffset":1249,"endOffset":1310,"count":248},{"startOffset":1310,"endOffset":1371,"count":292}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":1437,"endOffset":2173,"count":260},{"startOffset":1498,"endOffset":1530,"count":2},{"startOffset":1530,"endOffset":1550,"count":258},{"startOffset":1583,"endOffset":1607,"count":306},{"startOffset":1609,"endOffset":1617,"count":52},{"startOffset":1626,"endOffset":1636,"count":4},{"startOffset":1660,"endOffset":1762,"count":0},{"startOffset":1813,"endOffset":1894,"count":0},{"startOffset":2141,"endOffset":2172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914,"endOffset":2003,"count":291},{"startOffset":1983,"endOffset":1997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1974,"count":639},{"startOffset":1965,"endOffset":1974,"count":348}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2026,"endOffset":2138,"count":246},{"startOffset":2046,"endOffset":2053,"count":74},{"startOffset":2053,"endOffset":2118,"count":172},{"startOffset":2118,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2092,"endOffset":2109,"count":217},{"startOffset":2100,"endOffset":2109,"count":54}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":2173,"endOffset":2244,"count":463},{"startOffset":2210,"endOffset":2218,"count":32},{"startOffset":2218,"endOffset":2243,"count":431},{"startOffset":2227,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":2244,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2360,"endOffset":2421,"count":30},{"startOffset":2393,"endOffset":2420,"count":6}],"isBlockCoverage":true},{"functionName":"d","ranges":[{"startOffset":2421,"endOffset":2472,"count":6}],"isBlockCoverage":true},{"functionName":"u","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":2528,"endOffset":2564,"count":38}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":2564,"endOffset":2656,"count":34}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2583,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2624,"endOffset":2651,"count":9},{"startOffset":2637,"endOffset":2650,"count":8}],"isBlockCoverage":true},{"functionName":"m","ranges":[{"startOffset":2656,"endOffset":2727,"count":1},{"startOffset":2701,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":2727,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":2809,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":2866,"endOffset":3163,"count":1054},{"startOffset":2896,"endOffset":2900,"count":0},{"startOffset":2901,"endOffset":2970,"count":0},{"startOffset":2993,"endOffset":3003,"count":0},{"startOffset":3014,"endOffset":3110,"count":0},{"startOffset":3123,"endOffset":3125,"count":0},{"startOffset":3133,"endOffset":3143,"count":0},{"startOffset":3145,"endOffset":3153,"count":0}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":3163,"endOffset":3524,"count":78},{"startOffset":3196,"endOffset":3250,"count":0},{"startOffset":3260,"endOffset":3264,"count":0},{"startOffset":3265,"endOffset":3334,"count":0},{"startOffset":3357,"endOffset":3367,"count":0},{"startOffset":3378,"endOffset":3473,"count":0},{"startOffset":3486,"endOffset":3498,"count":0},{"startOffset":3500,"endOffset":3510,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":3532,"endOffset":3601,"count":2}],"isBlockCoverage":true},{"functionName":"addMiddleware","ranges":[{"startOffset":3601,"endOffset":4067,"count":8},{"startOffset":3727,"endOffset":3930,"count":0}],"isBlockCoverage":true},{"functionName":"addCoerceMiddleware","ranges":[{"startOffset":4067,"endOffset":4295,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4183,"endOffset":4250,"count":15}],"isBlockCoverage":true},{"functionName":"getMiddleware","ranges":[{"startOffset":4295,"endOffset":4340,"count":1}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":4340,"endOffset":4395,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":4395,"endOffset":4471,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":4471,"endOffset":4545,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4531,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":4546,"endOffset":4853,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4583,"endOffset":4848,"count":16},{"startOffset":4622,"endOffset":4644,"count":8},{"startOffset":4644,"endOffset":4680,"count":6},{"startOffset":4658,"endOffset":4667,"count":0},{"startOffset":4680,"endOffset":4688,"count":8},{"startOffset":4688,"endOffset":4768,"count":0},{"startOffset":4768,"endOffset":4795,"count":8},{"startOffset":4795,"endOffset":4827,"count":1},{"startOffset":4827,"endOffset":4846,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4703,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4738,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4804,"endOffset":4825,"count":1}],"isBlockCoverage":true},{"functionName":"j","ranges":[{"startOffset":4853,"endOffset":4982,"count":5},{"startOffset":4918,"endOffset":4922,"count":3},{"startOffset":4922,"endOffset":4924,"count":2},{"startOffset":4936,"endOffset":4954,"count":1},{"startOffset":4954,"endOffset":4959,"count":4},{"startOffset":4960,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":4871,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4945,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"_","ranges":[{"startOffset":5013,"endOffset":5177,"count":2}],"isBlockCoverage":true},{"functionName":"addDirectory","ranges":[{"startOffset":5177,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"addHandler","ranges":[{"startOffset":5536,"endOffset":6668,"count":4},{"startOffset":5654,"endOffset":5664,"count":2},{"startOffset":5682,"endOffset":5793,"count":1},{"startOffset":5752,"endOffset":5793,"count":0},{"startOffset":5793,"endOffset":6194,"count":3},{"startOffset":5861,"endOffset":6094,"count":2},{"startOffset":5892,"endOffset":5920,"count":1},{"startOffset":5930,"endOffset":5949,"count":0},{"startOffset":5966,"endOffset":6002,"count":0},{"startOffset":6094,"endOffset":6102,"count":1},{"startOffset":6102,"endOffset":6193,"count":0},{"startOffset":6194,"endOffset":6667,"count":2},{"startOffset":6335,"endOffset":6352,"count":0},{"startOffset":6354,"endOffset":6402,"count":1},{"startOffset":6548,"endOffset":6552,"count":0},{"startOffset":6622,"endOffset":6666,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5577,"endOffset":5644,"count":4},{"startOffset":5597,"endOffset":5640,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5605,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":5657,"endOffset":5663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5685,"endOffset":5737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5734,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5801,"endOffset":5857,"count":3},{"startOffset":5837,"endOffset":5856,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6239,"endOffset":6250,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6296,"endOffset":6320,"count":3},{"startOffset":6309,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6414,"endOffset":6441,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandHandlers","ranges":[{"startOffset":6668,"endOffset":6710,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":6710,"endOffset":6793,"count":2}],"isBlockCoverage":true},{"functionName":"hasDefaultCommand","ranges":[{"startOffset":6793,"endOffset":6841,"count":2}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":6841,"endOffset":7291,"count":1},{"startOffset":7009,"endOffset":7063,"count":0},{"startOffset":7145,"endOffset":7224,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7154,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"applyBuilderUpdateUsageAndParse","ranges":[{"startOffset":7291,"endOffset":7841,"count":1},{"startOffset":7479,"endOffset":7604,"count":0},{"startOffset":7605,"endOffset":7796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7494,"endOffset":7602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7610,"endOffset":7647,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7771,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"parseAndUpdateUsage","ranges":[{"startOffset":7841,"endOffset":8259,"count":1},{"startOffset":8165,"endOffset":8219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8174,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":8259,"endOffset":8413,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":8413,"endOffset":8591,"count":1},{"startOffset":8482,"endOffset":8514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8538,"endOffset":8551,"count":0}],"isBlockCoverage":false},{"functionName":"handleValidationAndGetResult","ranges":[{"startOffset":8591,"endOffset":9288,"count":1},{"startOffset":9037,"endOffset":9099,"count":0},{"startOffset":9244,"endOffset":9285,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8754,"endOffset":8765,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8978,"endOffset":9033,"count":1},{"startOffset":9030,"endOffset":9032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9023,"endOffset":9028,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9159,"endOffset":9233,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddlewareAndGetResult","ranges":[{"startOffset":9288,"endOffset":9649,"count":1},{"startOffset":9345,"endOffset":9354,"count":0},{"startOffset":9533,"endOffset":9597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9542,"endOffset":9595,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":9649,"endOffset":10069,"count":1},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9986,"endOffset":9993,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":10069,"endOffset":10195,"count":1},{"startOffset":10153,"endOffset":10194,"count":0}],"isBlockCoverage":true},{"functionName":"cmdToParseOptions","ranges":[{"startOffset":10195,"endOffset":10508,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10299,"endOffset":10397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10420,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":10508,"endOffset":11522,"count":1},{"startOffset":10917,"endOffset":11521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10791,"endOffset":10897,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10805,"endOffset":10894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11181,"endOffset":11209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11241,"endOffset":11518,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaulted","ranges":[{"startOffset":11522,"endOffset":11691,"count":0}],"isBlockCoverage":false},{"functionName":"isInConfigs","ranges":[{"startOffset":11691,"endOffset":11892,"count":0}],"isBlockCoverage":false},{"functionName":"runDefaultBuilderOn","ranges":[{"startOffset":11892,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12303,"endOffset":12629,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":12629,"endOffset":12712,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":12712,"endOffset":12848,"count":2},{"startOffset":12781,"endOffset":12839,"count":3},{"startOffset":12803,"endOffset":12811,"count":1},{"startOffset":12812,"endOffset":12821,"count":2},{"startOffset":12821,"endOffset":12839,"count":1},{"startOffset":12839,"endOffset":12847,"count":0}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":12848,"endOffset":12959,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":12959,"endOffset":13106,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":13106,"endOffset":13213,"count":1}],"isBlockCoverage":true},{"functionName":"k","ranges":[{"startOffset":13214,"endOffset":13296,"count":1},{"startOffset":13252,"endOffset":13295,"count":0}],"isBlockCoverage":true},{"functionName":"x","ranges":[{"startOffset":13296,"endOffset":13337,"count":1}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":13337,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":13525,"endOffset":13565,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":13565,"endOffset":21218,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.failFn","ranges":[{"startOffset":13618,"endOffset":13640,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.showHelpOnFail","ranges":[{"startOffset":13681,"endOffset":13806,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.fail","ranges":[{"startOffset":13823,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.usage","ranges":[{"startOffset":14295,"endOffset":14351,"count":1},{"startOffset":14310,"endOffset":14324,"count":0},{"startOffset":14342,"endOffset":14346,"count":0}],"isBlockCoverage":true},{"functionName":"P.n.getUsage","ranges":[{"startOffset":14363,"endOffset":14368,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getUsageDisabled","ranges":[{"startOffset":14388,"endOffset":14393,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getPositionalGroupName","ranges":[{"startOffset":14419,"endOffset":14440,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.example","ranges":[{"startOffset":14460,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.command","ranges":[{"startOffset":14506,"endOffset":14584,"count":2},{"startOffset":14530,"endOffset":14559,"count":1},{"startOffset":14571,"endOffset":14575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14542,"endOffset":14556,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getCommands","ranges":[{"startOffset":14599,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.describe","ranges":[{"startOffset":14625,"endOffset":14766,"count":50},{"startOffset":14655,"endOffset":14689,"count":0},{"startOffset":14708,"endOffset":14758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14667,"endOffset":14687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14733,"endOffset":14756,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getDescriptions","ranges":[{"startOffset":14785,"endOffset":14790,"count":45}],"isBlockCoverage":true},{"functionName":"P.n.epilog","ranges":[{"startOffset":14809,"endOffset":14823,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.wrap","ranges":[{"startOffset":14842,"endOffset":14855,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.getWrap","ranges":[{"startOffset":14866,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":15037,"endOffset":15258,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":15264,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":15372,"endOffset":15575,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.deferY18nLookup","ranges":[{"startOffset":15593,"endOffset":15599,"count":5}],"isBlockCoverage":true},{"functionName":"P.n.help","ranges":[{"startOffset":15607,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.cacheHelpMessage","ranges":[{"startOffset":20057,"endOffset":20082,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.clearCachedHelpMessage","ranges":[{"startOffset":20108,"endOffset":20128,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.hasCachedHelpMessage","ranges":[{"startOffset":20152,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.showHelp","ranges":[{"startOffset":20185,"endOffset":20295,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.functionDescription","ranges":[{"startOffset":20318,"endOffset":20399,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.stringifiedValues","ranges":[{"startOffset":20420,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.version","ranges":[{"startOffset":20577,"endOffset":20585,"count":4}],"isBlockCoverage":true},{"functionName":"P.n.showVersion","ranges":[{"startOffset":20600,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.reset","ranges":[{"startOffset":20712,"endOffset":20788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20775,"endOffset":20783,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.freeze","ranges":[{"startOffset":20816,"endOffset":20939,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.unfreeze","ranges":[{"startOffset":20951,"endOffset":21215,"count":2},{"startOffset":20987,"endOffset":21213,"count":1}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":21218,"endOffset":21257,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":21257,"endOffset":21299,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":21299,"endOffset":21334,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":21342,"endOffset":21745,"count":2},{"startOffset":21629,"endOffset":21647,"count":0},{"startOffset":21709,"endOffset":21727,"count":0},{"startOffset":21741,"endOffset":21744,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCompletion","ranges":[{"startOffset":21745,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"commandCompletions","ranges":[{"startOffset":22183,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"optionCompletions","ranges":[{"startOffset":22504,"endOffset":22928,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromOptionsCompletions","ranges":[{"startOffset":22928,"endOffset":23100,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromPositionalsCompletions","ranges":[{"startOffset":23100,"endOffset":23519,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousArgChoices","ranges":[{"startOffset":23519,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"previousArgHasChoices","ranges":[{"startOffset":23941,"endOffset":24034,"count":0}],"isBlockCoverage":false},{"functionName":"argsContainKey","ranges":[{"startOffset":24034,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"completeOptionKey","ranges":[{"startOffset":24233,"endOffset":24764,"count":0}],"isBlockCoverage":false},{"functionName":"customCompletion","ranges":[{"startOffset":24764,"endOffset":25283,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":25283,"endOffset":25489,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":25489,"endOffset":27133,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunction","ranges":[{"startOffset":27133,"endOffset":27185,"count":0}],"isBlockCoverage":false},{"functionName":"setParsed","ranges":[{"startOffset":27185,"endOffset":27221,"count":1}],"isBlockCoverage":true},{"functionName":"N","ranges":[{"startOffset":27222,"endOffset":27674,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":28887,"endOffset":29895,"count":2}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":29895,"endOffset":30205,"count":3},{"startOffset":29985,"endOffset":30031,"count":1},{"startOffset":30038,"endOffset":30050,"count":0},{"startOffset":30080,"endOffset":30082,"count":1},{"startOffset":30082,"endOffset":30089,"count":2},{"startOffset":30152,"endOffset":30197,"count":2}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":30205,"endOffset":30243,"count":3}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":30243,"endOffset":30529,"count":0}],"isBlockCoverage":false},{"functionName":"showHidden","ranges":[{"startOffset":30529,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":30579,"endOffset":30711,"count":23}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":30711,"endOffset":30805,"count":1}],"isBlockCoverage":true},{"functionName":"boolean","ranges":[{"startOffset":30805,"endOffset":30903,"count":7}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":30903,"endOffset":31275,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30987,"endOffset":31262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30997,"endOffset":31020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31023,"endOffset":31195,"count":1},{"startOffset":31069,"endOffset":31192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31198,"endOffset":31260,"count":0}],"isBlockCoverage":false},{"functionName":"choices","ranges":[{"startOffset":31275,"endOffset":31413,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":31413,"endOffset":32093,"count":6},{"startOffset":31506,"endOffset":31607,"count":0},{"startOffset":31629,"endOffset":31692,"count":0},{"startOffset":31698,"endOffset":31746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31813,"endOffset":32083,"count":6},{"startOffset":31875,"endOffset":32080,"count":2},{"startOffset":32080,"endOffset":32082,"count":4}],"isBlockCoverage":true},{"functionName":"Object.hasOwnProperty.call.i.<computed>","ranges":[{"startOffset":31879,"endOffset":31909,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31912,"endOffset":32048,"count":2},{"startOffset":32012,"endOffset":32039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32051,"endOffset":32078,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":32093,"endOffset":32209,"count":4}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":32209,"endOffset":32699,"count":2},{"startOffset":32332,"endOffset":32545,"count":1},{"startOffset":32372,"endOffset":32388,"count":0},{"startOffset":32485,"endOffset":32487,"count":0},{"startOffset":32545,"endOffset":32698,"count":1},{"startOffset":32677,"endOffset":32681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32502,"endOffset":32537,"count":1}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":32699,"endOffset":32998,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":32998,"endOffset":33198,"count":2}],"isBlockCoverage":true},{"functionName":"commands","ranges":[{"startOffset":33198,"endOffset":33253,"count":0}],"isBlockCoverage":false},{"functionName":"commandDir","ranges":[{"startOffset":33253,"endOffset":33439,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":33439,"endOffset":33533,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":33533,"endOffset":33907,"count":9},{"startOffset":33621,"endOffset":33683,"count":0},{"startOffset":33704,"endOffset":33853,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":33907,"endOffset":33950,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":33950,"endOffset":34210,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":34210,"endOffset":34593,"count":0}],"isBlockCoverage":false},{"functionName":"demandOption","ranges":[{"startOffset":34593,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateOption","ranges":[{"startOffset":34743,"endOffset":34868,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":34868,"endOffset":34997,"count":50}],"isBlockCoverage":true},{"functionName":"detectLocale","ranges":[{"startOffset":34997,"endOffset":35077,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":35077,"endOffset":35209,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":35209,"endOffset":35293,"count":1}],"isBlockCoverage":true},{"functionName":"epilog","ranges":[{"startOffset":35293,"endOffset":35327,"count":1}],"isBlockCoverage":true},{"functionName":"example","ranges":[{"startOffset":35327,"endOffset":35484,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":35484,"endOffset":35573,"count":0}],"isBlockCoverage":false},{"functionName":"exitProcess","ranges":[{"startOffset":35573,"endOffset":35655,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":35655,"endOffset":35852,"count":1},{"startOffset":35730,"endOffset":35738,"count":0},{"startOffset":35739,"endOffset":35815,"count":0}],"isBlockCoverage":true},{"functionName":"getAliases","ranges":[{"startOffset":35852,"endOffset":35907,"count":8},{"startOffset":35883,"endOffset":35903,"count":2},{"startOffset":35903,"endOffset":35906,"count":6}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":35907,"endOffset":36099,"count":0}],"isBlockCoverage":false},{"functionName":"getDemandedOptions","ranges":[{"startOffset":36099,"endOffset":36166,"count":1}],"isBlockCoverage":true},{"functionName":"getDemandedCommands","ranges":[{"startOffset":36166,"endOffset":36235,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecatedOptions","ranges":[{"startOffset":36235,"endOffset":36306,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectLocale","ranges":[{"startOffset":36306,"endOffset":36345,"count":0}],"isBlockCoverage":false},{"functionName":"getExitProcess","ranges":[{"startOffset":36345,"endOffset":36383,"count":0}],"isBlockCoverage":false},{"functionName":"getGroups","ranges":[{"startOffset":36383,"endOffset":36449,"count":0}],"isBlockCoverage":false},{"functionName":"getHelp","ranges":[{"startOffset":36449,"endOffset":36784,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":36784,"endOffset":36819,"count":4}],"isBlockCoverage":true},{"functionName":"getStrict","ranges":[{"startOffset":36819,"endOffset":36853,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictCommands","ranges":[{"startOffset":36853,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptions","ranges":[{"startOffset":36895,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":36936,"endOffset":37189,"count":14},{"startOffset":37102,"endOffset":37183,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37080,"endOffset":37100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37114,"endOffset":37181,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":37189,"endOffset":37428,"count":41},{"startOffset":37313,"endOffset":37339,"count":0},{"startOffset":37377,"endOffset":37381,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37401,"endOffset":37420,"count":257}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":37428,"endOffset":37520,"count":1}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":37520,"endOffset":37639,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":37639,"endOffset":37804,"count":0}],"isBlockCoverage":false},{"functionName":"middleware","ranges":[{"startOffset":37804,"endOffset":37866,"count":2}],"isBlockCoverage":true},{"functionName":"nargs","ranges":[{"startOffset":37866,"endOffset":37991,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":37991,"endOffset":38081,"count":2}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":38081,"endOffset":38177,"count":1}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":38177,"endOffset":40145,"count":44},{"startOffset":38264,"endOffset":38316,"count":1},{"startOffset":38316,"endOffset":40133,"count":43},{"startOffset":38339,"endOffset":38347,"count":0},{"startOffset":38412,"endOffset":38419,"count":0},{"startOffset":38428,"endOffset":38772,"count":0},{"startOffset":38805,"endOffset":38828,"count":0},{"startOffset":38864,"endOffset":38891,"count":0},{"startOffset":38933,"endOffset":38951,"count":0},{"startOffset":38966,"endOffset":39042,"count":0},{"startOffset":39054,"endOffset":39085,"count":4},{"startOffset":39099,"endOffset":39126,"count":9},{"startOffset":39145,"endOffset":39172,"count":0},{"startOffset":39189,"endOffset":39212,"count":0},{"startOffset":39221,"endOffset":39252,"count":1},{"startOffset":39264,"endOffset":39283,"count":2},{"startOffset":39293,"endOffset":39320,"count":0},{"startOffset":39329,"endOffset":39354,"count":6},{"startOffset":39362,"endOffset":39385,"count":40},{"startOffset":39417,"endOffset":39467,"count":0},{"startOffset":39495,"endOffset":39541,"count":0},{"startOffset":39571,"endOffset":39619,"count":0},{"startOffset":39649,"endOffset":39697,"count":0},{"startOffset":39725,"endOffset":39740,"count":0},{"startOffset":39767,"endOffset":39792,"count":0},{"startOffset":39813,"endOffset":39874,"count":5},{"startOffset":39891,"endOffset":39915,"count":0},{"startOffset":39949,"endOffset":39957,"count":0},{"startOffset":40034,"endOffset":40054,"count":1},{"startOffset":40083,"endOffset":40097,"count":1},{"startOffset":40111,"endOffset":40132,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38288,"endOffset":38313,"count":42}],"isBlockCoverage":true},{"functionName":"options","ranges":[{"startOffset":40145,"endOffset":40182,"count":43}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":40182,"endOffset":40870,"count":1},{"startOffset":40298,"endOffset":40318,"count":0},{"startOffset":40337,"endOffset":40361,"count":0},{"startOffset":40382,"endOffset":40407,"count":0},{"startOffset":40442,"endOffset":40460,"count":0},{"startOffset":40767,"endOffset":40869,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40556,"endOffset":40635,"count":1},{"startOffset":40574,"endOffset":40632,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40645,"endOffset":40723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40735,"endOffset":40765,"count":1}],"isBlockCoverage":true},{"functionName":"parseAsync","ranges":[{"startOffset":40870,"endOffset":40947,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":40947,"endOffset":41104,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":41104,"endOffset":41191,"count":1}],"isBlockCoverage":true},{"functionName":"pkgConf","ranges":[{"startOffset":41191,"endOffset":41491,"count":0}],"isBlockCoverage":false},{"functionName":"positional","ranges":[{"startOffset":41491,"endOffset":42122,"count":1},{"startOffset":41858,"endOffset":41893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41701,"endOffset":41780,"count":3},{"startOffset":41720,"endOffset":41764,"count":1},{"startOffset":41765,"endOffset":41780,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41956,"endOffset":42048,"count":4},{"startOffset":41989,"endOffset":42018,"count":1},{"startOffset":42007,"endOffset":42018,"count":0},{"startOffset":42018,"endOffset":42047,"count":3},{"startOffset":42023,"endOffset":42047,"count":0}],"isBlockCoverage":true},{"functionName":"recommendCommands","ranges":[{"startOffset":42122,"endOffset":42211,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":42211,"endOffset":42253,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42253,"endOffset":42294,"count":0}],"isBlockCoverage":false},{"functionName":"requiresArg","ranges":[{"startOffset":42294,"endOffset":42473,"count":14}],"isBlockCoverage":true},{"functionName":"showCompletionScript","ranges":[{"startOffset":42473,"endOffset":42662,"count":0}],"isBlockCoverage":false},{"functionName":"showHelp","ranges":[{"startOffset":42662,"endOffset":43060,"count":0}],"isBlockCoverage":false},{"functionName":"scriptName","ranges":[{"startOffset":43060,"endOffset":43121,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":43121,"endOffset":43242,"count":0}],"isBlockCoverage":false},{"functionName":"showVersion","ranges":[{"startOffset":43242,"endOffset":43343,"count":0}],"isBlockCoverage":false},{"functionName":"skipValidation","ranges":[{"startOffset":43343,"endOffset":43443,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":43443,"endOffset":43523,"count":0}],"isBlockCoverage":false},{"functionName":"strictCommands","ranges":[{"startOffset":43523,"endOffset":43611,"count":0}],"isBlockCoverage":false},{"functionName":"strictOptions","ranges":[{"startOffset":43611,"endOffset":43698,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":43698,"endOffset":43794,"count":1}],"isBlockCoverage":true},{"functionName":"terminalWidth","ranges":[{"startOffset":43794,"endOffset":43859,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":43859,"endOffset":43904,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrings","ranges":[{"startOffset":43904,"endOffset":44021,"count":1}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":44021,"endOffset":44366,"count":0}],"isBlockCoverage":false},{"functionName":"usageConfiguration","ranges":[{"startOffset":44366,"endOffset":44452,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":44452,"endOffset":44991,"count":3},{"startOffset":44567,"endOffset":44646,"count":1},{"startOffset":44668,"endOffset":44685,"count":2},{"startOffset":44685,"endOffset":44787,"count":1},{"startOffset":44714,"endOffset":44745,"count":0},{"startOffset":44770,"endOffset":44786,"count":0},{"startOffset":44824,"endOffset":44826,"count":0},{"startOffset":44835,"endOffset":44890,"count":2},{"startOffset":44915,"endOffset":44923,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":44991,"endOffset":45084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45084,"endOffset":45695,"count":1},{"startOffset":45629,"endOffset":45694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45695,"endOffset":46036,"count":2}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":45713,"endOffset":45869,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":45876,"endOffset":46034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46036,"endOffset":46266,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46071,"endOffset":46220,"count":44},{"startOffset":46098,"endOffset":46105,"count":2},{"startOffset":46105,"endOffset":46147,"count":42},{"startOffset":46147,"endOffset":46187,"count":18},{"startOffset":46161,"endOffset":46187,"count":2},{"startOffset":46187,"endOffset":46219,"count":24},{"startOffset":46206,"endOffset":46219,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46266,"endOffset":46358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46358,"endOffset":46856,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46856,"endOffset":47374,"count":2},{"startOffset":46996,"endOffset":47037,"count":0},{"startOffset":47193,"endOffset":47371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47047,"endOffset":47147,"count":2},{"startOffset":47144,"endOffset":47146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47374,"endOffset":47403,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47403,"endOffset":47432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47432,"endOffset":47653,"count":2},{"startOffset":47464,"endOffset":47616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47653,"endOffset":47697,"count":2},{"startOffset":47685,"endOffset":47696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47697,"endOffset":47891,"count":1},{"startOffset":47720,"endOffset":47728,"count":0},{"startOffset":47769,"endOffset":47882,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47891,"endOffset":48310,"count":2},{"startOffset":47935,"endOffset":47960,"count":0},{"startOffset":48251,"endOffset":48261,"count":0},{"startOffset":48287,"endOffset":48291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48114,"endOffset":48169,"count":4},{"startOffset":48147,"endOffset":48169,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48310,"endOffset":48393,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48346,"endOffset":48390,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48393,"endOffset":48461,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48425,"endOffset":48458,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48461,"endOffset":48564,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48493,"endOffset":48561,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48564,"endOffset":48714,"count":96},{"startOffset":48600,"endOffset":48625,"count":0},{"startOffset":48660,"endOffset":48690,"count":1},{"startOffset":48680,"endOffset":48690,"count":20},{"startOffset":48690,"endOffset":48713,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48611,"endOffset":48622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48634,"endOffset":48655,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48714,"endOffset":48760,"count":146},{"startOffset":48743,"endOffset":48757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48760,"endOffset":48822,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48822,"endOffset":49732,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49013,"endOffset":49040,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49077,"endOffset":49103,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49119,"endOffset":49145,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49161,"endOffset":49188,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49207,"endOffset":49233,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49252,"endOffset":49278,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49313,"endOffset":49340,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49364,"endOffset":49391,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49414,"endOffset":49441,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49468,"endOffset":49494,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49511,"endOffset":49538,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49560,"endOffset":49587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49732,"endOffset":49768,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalMethods","ranges":[{"startOffset":49768,"endOffset":50389,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50389,"endOffset":50417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50417,"endOffset":50445,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50445,"endOffset":50473,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50473,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50501,"endOffset":50534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50534,"endOffset":50563,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50563,"endOffset":50592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50592,"endOffset":50622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50622,"endOffset":50650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50650,"endOffset":50879,"count":3},{"startOffset":50669,"endOffset":50678,"count":1},{"startOffset":50678,"endOffset":50686,"count":2},{"startOffset":50686,"endOffset":50713,"count":1},{"startOffset":50759,"endOffset":50808,"count":1},{"startOffset":50809,"endOffset":50826,"count":1},{"startOffset":50828,"endOffset":50876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50879,"endOffset":57436,"count":3},{"startOffset":50914,"endOffset":50918,"count":2},{"startOffset":50963,"endOffset":50967,"count":2},{"startOffset":51012,"endOffset":51016,"count":2},{"startOffset":51691,"endOffset":51715,"count":1},{"startOffset":51715,"endOffset":51738,"count":2},{"startOffset":51768,"endOffset":51792,"count":1},{"startOffset":51792,"endOffset":57044,"count":2},{"startOffset":57072,"endOffset":57094,"count":1},{"startOffset":57094,"endOffset":57195,"count":2},{"startOffset":57214,"endOffset":57320,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51045,"endOffset":51092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51159,"endOffset":51245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51375,"endOffset":51427,"count":24},{"startOffset":51402,"endOffset":51406,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51416,"endOffset":51424,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51569,"endOffset":51610,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51599,"endOffset":51607,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51793,"endOffset":57008,"count":2}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51858,"endOffset":52604,"count":1},{"startOffset":51923,"endOffset":51938,"count":0},{"startOffset":51997,"endOffset":52603,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":52621,"endOffset":52783,"count":1},{"startOffset":52638,"endOffset":52782,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":52802,"endOffset":53192,"count":1},{"startOffset":52857,"endOffset":52935,"count":0},{"startOffset":52940,"endOffset":53191,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":53210,"endOffset":54009,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":54026,"endOffset":54359,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":54388,"endOffset":54564,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":54580,"endOffset":55078,"count":1},{"startOffset":54661,"endOffset":55077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54685,"endOffset":54861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54945,"endOffset":55065,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":55089,"endOffset":55318,"count":0}],"isBlockCoverage":false},{"functionName":"r.implies","ranges":[{"startOffset":55328,"endOffset":55583,"count":0}],"isBlockCoverage":false},{"functionName":"r.getImplied","ranges":[{"startOffset":55597,"endOffset":55617,"count":0}],"isBlockCoverage":false},{"functionName":"r.implications","ranges":[{"startOffset":55633,"endOffset":55877,"count":1},{"startOffset":55803,"endOffset":55876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55683,"endOffset":55791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55854,"endOffset":55863,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicts","ranges":[{"startOffset":55899,"endOffset":56135,"count":14},{"startOffset":55990,"endOffset":56041,"count":0},{"startOffset":56059,"endOffset":56070,"count":4},{"startOffset":56087,"endOffset":56120,"count":2},{"startOffset":56120,"endOffset":56133,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56015,"endOffset":56039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56099,"endOffset":56118,"count":10}],"isBlockCoverage":true},{"functionName":"r.getConflicting","ranges":[{"startOffset":56153,"endOffset":56158,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicting","ranges":[{"startOffset":56173,"endOffset":56586,"count":1},{"startOffset":56399,"endOffset":56585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56209,"endOffset":56333,"count":15},{"startOffset":56217,"endOffset":56332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56233,"endOffset":56330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56425,"endOffset":56583,"count":0}],"isBlockCoverage":false},{"functionName":"r.recommendCommands","ranges":[{"startOffset":56607,"endOffset":56783,"count":0}],"isBlockCoverage":false},{"functionName":"r.reset","ranges":[{"startOffset":56792,"endOffset":56849,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56818,"endOffset":56826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56836,"endOffset":56844,"count":0}],"isBlockCoverage":false},{"functionName":"r.freeze","ranges":[{"startOffset":56877,"endOffset":56922,"count":1}],"isBlockCoverage":true},{"functionName":"r.unfreeze","ranges":[{"startOffset":56934,"endOffset":57005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57095,"endOffset":57135,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57225,"endOffset":57265,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57436,"endOffset":57487,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57487,"endOffset":59870,"count":2},{"startOffset":57517,"endOffset":57520,"count":1},{"startOffset":57524,"endOffset":57540,"count":1},{"startOffset":58128,"endOffset":58156,"count":0},{"startOffset":58213,"endOffset":58217,"count":0},{"startOffset":58273,"endOffset":58291,"count":0},{"startOffset":58404,"endOffset":58847,"count":0},{"startOffset":58883,"endOffset":58887,"count":1},{"startOffset":58888,"endOffset":58980,"count":1},{"startOffset":58980,"endOffset":59239,"count":0},{"startOffset":59239,"endOffset":59400,"count":1},{"startOffset":59259,"endOffset":59321,"count":0},{"startOffset":59323,"endOffset":59399,"count":0},{"startOffset":59403,"endOffset":59529,"count":0},{"startOffset":59533,"endOffset":59760,"count":0},{"startOffset":59761,"endOffset":59832,"count":0},{"startOffset":59832,"endOffset":59855,"count":1},{"startOffset":59855,"endOffset":59857,"count":0},{"startOffset":59857,"endOffset":59859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57965,"endOffset":58031,"count":25},{"startOffset":57986,"endOffset":57997,"count":0},{"startOffset":58016,"endOffset":58030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58227,"endOffset":58240,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59120,"endOffset":59214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59469,"endOffset":59526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59709,"endOffset":59755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59870,"endOffset":60315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59930,"endOffset":60314,"count":1},{"startOffset":59939,"endOffset":59962,"count":0},{"startOffset":60056,"endOffset":60095,"count":0},{"startOffset":60110,"endOffset":60157,"count":0},{"startOffset":60172,"endOffset":60219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60315,"endOffset":60339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60339,"endOffset":60441,"count":53},{"startOffset":60369,"endOffset":60394,"count":49},{"startOffset":60394,"endOffset":60440,"count":4},{"startOffset":60416,"endOffset":60440,"count":43}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":60733,"endOffset":60750,"count":6}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":61020,"endOffset":61036,"count":4}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":61065,"endOffset":61096,"count":0}],"isBlockCoverage":false},{"functionName":"execPath","ranges":[{"startOffset":61106,"endOffset":61126,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":61132,"endOffset":61152,"count":0}],"isBlockCoverage":false},{"functionName":"ue.Yargs","ranges":[{"startOffset":61923,"endOffset":62074,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":62021,"endOffset":62034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32614,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2950,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3709,"endOffset":3829,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3999,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":5278,"endOffset":5341,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":5611,"endOffset":5997,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":6226,"endOffset":6616,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":6825,"endOffset":7204,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":7419,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":8060,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":8723,"endOffset":9134,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":9348,"endOffset":9674,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":9895,"endOffset":10229,"count":6},{"startOffset":9977,"endOffset":10038,"count":0},{"startOffset":10074,"endOffset":10226,"count":0}],"isBlockCoverage":true},{"functionName":"isSpecial","ranges":[{"startOffset":10234,"endOffset":10360,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareMaps","ranges":[{"startOffset":10488,"endOffset":11111,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareArrayBuffersOrViews","ranges":[{"startOffset":11115,"endOffset":13090,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareSets","ranges":[{"startOffset":13094,"endOffset":13987,"count":0}],"isBlockCoverage":false},{"functionName":"partiallyCompareArrays","ranges":[{"startOffset":13991,"endOffset":15211,"count":0}],"isBlockCoverage":false},{"functionName":"compareBranch","ranges":[{"startOffset":15706,"endOffset":17705,"count":0}],"isBlockCoverage":false},{"functionName":"partialDeepStrictEqual","ranges":[{"startOffset":17921,"endOffset":18361,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18388,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18790,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19539,"endOffset":23026,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23030,"endOffset":23178,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23182,"endOffset":23554,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23558,"endOffset":24295,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24299,"endOffset":25958,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25962,"endOffset":26598,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26602,"endOffset":27267,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27433,"endOffset":27529,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27716,"endOffset":27830,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28000,"endOffset":28096,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28270,"endOffset":28384,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28519,"endOffset":30361,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30366,"endOffset":31473,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":31678,"endOffset":31772,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31989,"endOffset":32097,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32297,"endOffset":32368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14171,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1553,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":2050,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":2641,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"checkOperator","ranges":[{"startOffset":2743,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"getColoredMyersDiff","ranges":[{"startOffset":3253,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"getStackedDiff","ranges":[{"startOffset":3663,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"getSimpleDiff","ranges":[{"startOffset":4669,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleDiff","ranges":[{"startOffset":5453,"endOffset":5738,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":5742,"endOffset":7729,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":7733,"endOffset":8079,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":8123,"endOffset":13163,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":13169,"endOffset":13246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13252,"endOffset":14130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":274,"endOffset":541,"count":144},{"startOffset":347,"endOffset":408,"count":0},{"startOffset":528,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":546,"endOffset":1200,"count":1},{"startOffset":717,"endOffset":721,"count":0},{"startOffset":778,"endOffset":782,"count":0},{"startOffset":839,"endOffset":843,"count":0},{"startOffset":901,"endOffset":905,"count":0},{"startOffset":960,"endOffset":964,"count":0},{"startOffset":1020,"endOffset":1024,"count":0},{"startOffset":1078,"endOffset":1082,"count":0},{"startOffset":1138,"endOffset":1142,"count":0}],"isBlockCoverage":true}]},{"scriptId":"269","url":"node:internal/assert/myers_diff","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5135,"count":1}],"isBlockCoverage":false},{"functionName":"areLinesEqual","ranges":[{"startOffset":239,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"myersDiff","ranges":[{"startOffset":482,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"backtrack","ranges":[{"startOffset":1657,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"printSimpleMyersDiff","ranges":[{"startOffset":3065,"endOffset":3537,"count":0}],"isBlockCoverage":false},{"functionName":"printMyersDiff","ranges":[{"startOffset":3541,"endOffset":5060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"node:internal/assert/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9869,"count":1}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":1555,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":1608,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":2577,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":4261,"endOffset":5716,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":5720,"endOffset":9201,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":9205,"endOffset":9829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":514,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1586,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":1},{"startOffset":676,"endOffset":755,"count":0},{"startOffset":913,"endOffset":929,"count":0},{"startOffset":946,"endOffset":964,"count":0},{"startOffset":1025,"endOffset":1048,"count":0},{"startOffset":1157,"endOffset":1176,"count":0},{"startOffset":1178,"endOffset":1535,"count":0},{"startOffset":1655,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":807,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":949,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":1},{"startOffset":3453,"endOffset":3601,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":1},{"startOffset":5145,"endOffset":5411,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":1},{"startOffset":5645,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5919,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":1},{"startOffset":6628,"endOffset":6677,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cliui/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":2},{"startOffset":235,"endOffset":261,"count":0},{"startOffset":277,"endOffset":413,"count":4},{"startOffset":331,"endOffset":404,"count":2},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/yargs/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":265,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":368,"endOffset":956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11093,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1009,"endOffset":10839,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3713,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4676,"endOffset":4708,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4862,"endOffset":4893,"count":6}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":5799,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7945,"endOffset":10084,"count":1},{"startOffset":8269,"endOffset":8308,"count":0},{"startOffset":8310,"endOffset":8503,"count":0},{"startOffset":8530,"endOffset":9582,"count":0},{"startOffset":9610,"endOffset":9832,"count":0},{"startOffset":9855,"endOffset":10058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8056,"endOffset":8181,"count":2},{"startOffset":8088,"endOffset":8173,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10102,"endOffset":10714,"count":1},{"startOffset":10527,"endOffset":10708,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":10860,"endOffset":11091,"count":1},{"startOffset":10999,"endOffset":11089,"count":0}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4831,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":551,"endOffset":4829,"count":9}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":729,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1196,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1423,"endOffset":1494,"count":4}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":1623,"endOffset":1693,"count":6}],"isBlockCoverage":true},{"functionName":"beforeEach","ranges":[{"startOffset":1829,"endOffset":1901,"count":3}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":2035,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":2319,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2718,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3263,"endOffset":4297,"count":26},{"startOffset":3479,"endOffset":3518,"count":0},{"startOffset":3556,"endOffset":3596,"count":0},{"startOffset":3597,"endOffset":3631,"count":0},{"startOffset":3642,"endOffset":3719,"count":0},{"startOffset":3831,"endOffset":4266,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4474,"endOffset":4658,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4761,"endOffset":4816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36408,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1637,"endOffset":1770,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1930,"endOffset":2054,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2222,"endOffset":2347,"count":28}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3151,"endOffset":28931,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":4245,"endOffset":4324,"count":1}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5914,"endOffset":6165,"count":1},{"startOffset":6019,"endOffset":6103,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":6171,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForImport","ranges":[{"startOffset":7454,"endOffset":7709,"count":63}],"isBlockCoverage":true},{"functionName":"getModuleJobForRequireInImportedCJS","ranges":[{"startOffset":8220,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"#getJobFromResolveResult","ranges":[{"startOffset":9073,"endOffset":9559,"count":63},{"startOffset":9414,"endOffset":9535,"count":27}],"isBlockCoverage":true},{"functionName":"importSyncForRequire","ranges":[{"startOffset":10106,"endOffset":12203,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForRequire","ranges":[{"startOffset":12637,"endOffset":16158,"count":0}],"isBlockCoverage":false},{"functionName":"#translate","ranges":[{"startOffset":16740,"endOffset":17049,"count":27},{"startOffset":16903,"endOffset":16968,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTranslateForRequireInImportedCJS","ranges":[{"startOffset":17476,"endOffset":18420,"count":0}],"isBlockCoverage":false},{"functionName":"loadAndTranslate","ranges":[{"startOffset":18792,"endOffset":18972,"count":27}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":19798,"endOffset":20809,"count":27},{"startOffset":20052,"endOffset":20159,"count":0},{"startOffset":20292,"endOffset":20333,"count":0},{"startOffset":20391,"endOffset":20406,"count":0},{"startOffset":20408,"endOffset":20464,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":21282,"endOffset":21692,"count":9}],"isBlockCoverage":true},{"functionName":"onImport.tracePromise.__proto__","ranges":[{"startOffset":21393,"endOffset":21610,"count":9}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":21763,"endOffset":22319,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23058,"endOffset":23385,"count":63},{"startOffset":23172,"endOffset":23300,"count":0}],"isBlockCoverage":true},{"functionName":"#cachedDefaultResolve","ranges":[{"startOffset":23757,"endOffset":24213,"count":63},{"startOffset":24011,"endOffset":24047,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":24647,"endOffset":24949,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":25675,"endOffset":25858,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":26077,"endOffset":26428,"count":63}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":26752,"endOffset":26990,"count":27},{"startOffset":26810,"endOffset":26873,"count":0}],"isBlockCoverage":true},{"functionName":"#loadAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":27359,"endOffset":27633,"count":0}],"isBlockCoverage":false},{"functionName":"#loadSync","ranges":[{"startOffset":28190,"endOffset":28285,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":28291,"endOffset":28446,"count":27},{"startOffset":28350,"endOffset":28441,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":28452,"endOffset":28794,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":28860,"endOffset":28928,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29017,"endOffset":31680,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":32073,"endOffset":33729,"count":1},{"startOffset":32487,"endOffset":33675,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":32564,"endOffset":33066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33390,"endOffset":33478,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":33849,"endOffset":34032,"count":0}],"isBlockCoverage":false},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":34548,"endOffset":34663,"count":9}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":35936,"endOffset":36292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3991,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1343,"endOffset":1384,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1817,"endOffset":3236,"count":27},{"startOffset":2016,"endOffset":2147,"count":0},{"startOffset":2223,"endOffset":2371,"count":0},{"startOffset":2646,"endOffset":2707,"count":0},{"startOffset":2715,"endOffset":2826,"count":0},{"startOffset":2834,"endOffset":3228,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3477,"endOffset":3911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4174,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":295,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":878,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1262,"endOffset":1890,"count":63},{"startOffset":1680,"endOffset":1889,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1896,"endOffset":2118,"count":126},{"startOffset":2012,"endOffset":2086,"count":16}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2300,"endOffset":2404,"count":63}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2551,"endOffset":2683,"count":63}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2689,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2936,"endOffset":2964,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3014,"endOffset":3164,"count":63},{"startOffset":3150,"endOffset":3158,"count":36}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3168,"endOffset":3796,"count":27},{"startOffset":3407,"endOffset":3444,"count":0},{"startOffset":3446,"endOffset":3518,"count":0},{"startOffset":3607,"endOffset":3613,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3800,"endOffset":3964,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3968,"endOffset":4112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17534,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1198,"endOffset":1225,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1798,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2239,"endOffset":2380,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2580,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2816,"endOffset":3146,"count":18}],"isBlockCoverage":true},{"functionName":"loadCJSModule","ranges":[{"startOffset":3819,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":6416,"endOffset":7904,"count":8},{"startOffset":6690,"endOffset":6723,"count":0},{"startOffset":6892,"endOffset":6915,"count":0},{"startOffset":6964,"endOffset":7022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7084,"endOffset":7891,"count":8},{"startOffset":7386,"endOffset":7431,"count":0},{"startOffset":7475,"endOffset":7845,"count":44},{"startOffset":7580,"endOffset":7609,"count":0},{"startOffset":7738,"endOffset":7796,"count":0}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":7941,"endOffset":8216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8382,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8678,"endOffset":8884,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":9076,"endOffset":9839,"count":8},{"startOffset":9143,"endOffset":9174,"count":1},{"startOffset":9578,"endOffset":9593,"count":0},{"startOffset":9723,"endOffset":9773,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":9426,"endOffset":9577,"count":8}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":10035,"endOffset":12645,"count":9},{"startOffset":10220,"endOffset":10263,"count":0},{"startOffset":10265,"endOffset":10336,"count":0},{"startOffset":10734,"endOffset":10739,"count":0},{"startOffset":10748,"endOffset":10800,"count":0},{"startOffset":10973,"endOffset":12605,"count":1},{"startOffset":11850,"endOffset":11885,"count":0},{"startOffset":12105,"endOffset":12122,"count":0},{"startOffset":12123,"endOffset":12153,"count":0},{"startOffset":12538,"endOffset":12584,"count":11}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":12773,"endOffset":13190,"count":1},{"startOffset":13058,"endOffset":13112,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":13257,"endOffset":15517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15586,"endOffset":16712,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16811,"endOffset":17125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17218,"endOffset":17530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6546,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":976,"endOffset":1651,"count":25},{"startOffset":1253,"endOffset":1596,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":1841,"endOffset":2419,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":2549,"endOffset":3980,"count":27},{"startOffset":2741,"endOffset":2776,"count":0},{"startOffset":2777,"endOffset":2809,"count":0},{"startOffset":2811,"endOffset":3026,"count":0},{"startOffset":3156,"endOffset":3209,"count":1},{"startOffset":3209,"endOffset":3835,"count":26},{"startOffset":3241,"endOffset":3268,"count":1},{"startOffset":3270,"endOffset":3835,"count":25},{"startOffset":3456,"endOffset":3830,"count":7}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":4513,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":5331,"endOffset":5798,"count":27},{"startOffset":5538,"endOffset":5566,"count":1},{"startOffset":5567,"endOffset":5595,"count":1},{"startOffset":5596,"endOffset":5672,"count":0},{"startOffset":5678,"endOffset":5795,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":6186,"endOffset":6433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"node:internal/data_url","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10529,"count":1}],"isBlockCoverage":false},{"functionName":"lazyEncoder","ranges":[{"startOffset":407,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"dataURLProcessor","ranges":[{"startOffset":773,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":4101,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":4721,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":5196,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"isHexCharByte","ranges":[{"startOffset":5453,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"hexByteToNumber","ranges":[{"startOffset":5653,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":5952,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":7359,"endOffset":8528,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":8624,"endOffset":8777,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":8972,"endOffset":9111,"count":0}],"isBlockCoverage":false},{"functionName":"removeChars","ranges":[{"startOffset":9261,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":9821,"endOffset":10480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11560,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":611,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":906,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2688,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3127,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3365,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3632,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9997,"endOffset":11344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15842,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":510,"count":1}],"isBlockCoverage":true},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1370,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1535,"endOffset":1728,"count":27}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1886,"endOffset":11238,"count":27}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":2608,"endOffset":3586,"count":27},{"startOffset":2962,"endOffset":3121,"count":0}],"isBlockCoverage":true},{"functionName":"_link","ranges":[{"startOffset":3730,"endOffset":5392,"count":27},{"startOffset":4731,"endOffset":5313,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4993,"endOffset":5148,"count":54}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":5398,"endOffset":5548,"count":9}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":5554,"endOffset":9368,"count":9},{"startOffset":6102,"endOffset":6283,"count":0},{"startOffset":6343,"endOffset":9114,"count":0},{"startOffset":9163,"endOffset":9363,"count":57}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":5655,"endOffset":5997,"count":69},{"startOffset":5792,"endOffset":5819,"count":12},{"startOffset":5819,"endOffset":5996,"count":57}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":9374,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9830,"endOffset":11235,"count":9},{"startOffset":9918,"endOffset":9994,"count":0},{"startOffset":10169,"endOffset":11176,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11867,"endOffset":15716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/authRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3795,"count":1}],"isBlockCoverage":true},{"functionName":"deleteTestUser","ranges":[{"startOffset":323,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":452,"endOffset":3789,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":586,"endOffset":2017,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":643,"endOffset":904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":961,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1285,"endOffset":1683,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1740,"endOffset":2010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2049,"endOffset":3674,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2106,"endOffset":2356,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2413,"endOffset":2657,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2709,"endOffset":2970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3029,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3351,"endOffset":3667,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3728,"endOffset":3784,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true}]},{"scriptId":"301","url":"node:internal/deps/cjs-module-lexer/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55157,"count":1}],"isBlockCoverage":false},{"functionName":"resetState","ranges":[{"startOffset":303,"endOffset":761,"count":18}],"isBlockCoverage":true},{"functionName":"parseCJS","ranges":[{"startOffset":850,"endOffset":1334,"count":9},{"startOffset":951,"endOffset":1121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1226,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1338,"endOffset":2115,"count":92},{"startOffset":1384,"endOffset":1402,"count":89},{"startOffset":1404,"endOffset":2080,"count":49},{"startOffset":1570,"endOffset":2031,"count":673},{"startOffset":1739,"endOffset":2022,"count":0},{"startOffset":2067,"endOffset":2075,"count":0},{"startOffset":2080,"endOffset":2112,"count":43}],"isBlockCoverage":true},{"functionName":"parseSource","ranges":[{"startOffset":2119,"endOffset":8029,"count":9},{"startOffset":2291,"endOffset":2321,"count":0},{"startOffset":2328,"endOffset":2532,"count":0},{"startOffset":2558,"endOffset":7876,"count":206516},{"startOffset":2615,"endOffset":2635,"count":159998},{"startOffset":2626,"endOffset":2635,"count":6962},{"startOffset":2644,"endOffset":2653,"count":53480},{"startOffset":2653,"endOffset":2687,"count":153036},{"startOffset":2687,"endOffset":4222,"count":19356},{"startOffset":2719,"endOffset":2897,"count":326},{"startOffset":2785,"endOffset":2805,"count":0},{"startOffset":2820,"endOffset":2845,"count":0},{"startOffset":2907,"endOffset":3133,"count":366},{"startOffset":2994,"endOffset":3019,"count":47},{"startOffset":3034,"endOffset":3081,"count":47},{"startOffset":3143,"endOffset":4206,"count":77},{"startOffset":3225,"endOffset":3289,"count":0},{"startOffset":3291,"endOffset":3677,"count":0},{"startOffset":3736,"endOffset":3800,"count":0},{"startOffset":3802,"endOffset":4154,"count":0},{"startOffset":4215,"endOffset":4222,"count":18587},{"startOffset":4222,"endOffset":4251,"count":152267},{"startOffset":4251,"endOffset":4548,"count":10380},{"startOffset":4315,"endOffset":4335,"count":33},{"startOffset":4337,"endOffset":4532,"count":33},{"startOffset":4440,"endOffset":4521,"count":0},{"startOffset":4556,"endOffset":4731,"count":4787},{"startOffset":4601,"endOffset":4638,"count":1723},{"startOffset":4639,"endOffset":4678,"count":30},{"startOffset":4691,"endOffset":4715,"count":30},{"startOffset":4739,"endOffset":4885,"count":1898},{"startOffset":4803,"endOffset":4823,"count":24},{"startOffset":4836,"endOffset":4869,"count":24},{"startOffset":4893,"endOffset":5054,"count":296},{"startOffset":4956,"endOffset":4976,"count":68},{"startOffset":4989,"endOffset":5038,"count":32},{"startOffset":5062,"endOffset":5152,"count":3303},{"startOffset":5160,"endOffset":5310,"count":3303},{"startOffset":5220,"endOffset":5267,"count":0},{"startOffset":5318,"endOffset":5507,"count":1654},{"startOffset":5515,"endOffset":5949,"count":1819},{"startOffset":5576,"endOffset":5621,"count":0},{"startOffset":5671,"endOffset":5776,"count":165},{"startOffset":5776,"endOffset":5933,"count":1654},{"startOffset":5829,"endOffset":5862,"count":0},{"startOffset":5877,"endOffset":5922,"count":0},{"startOffset":5957,"endOffset":6029,"count":115},{"startOffset":6037,"endOffset":6050,"count":811},{"startOffset":6058,"endOffset":6115,"count":816},{"startOffset":6123,"endOffset":7775,"count":237},{"startOffset":6226,"endOffset":6321,"count":93},{"startOffset":6321,"endOffset":7750,"count":144},{"startOffset":6361,"endOffset":6457,"count":14},{"startOffset":6457,"endOffset":7750,"count":130},{"startOffset":6877,"endOffset":7021,"count":34},{"startOffset":6919,"endOffset":7020,"count":0},{"startOffset":7022,"endOffset":7115,"count":34},{"startOffset":7064,"endOffset":7109,"count":0},{"startOffset":7116,"endOffset":7194,"count":34},{"startOffset":7143,"endOffset":7188,"count":0},{"startOffset":7195,"endOffset":7287,"count":96},{"startOffset":7235,"endOffset":7287,"count":17},{"startOffset":7288,"endOffset":7428,"count":96},{"startOffset":7329,"endOffset":7428,"count":0},{"startOffset":7429,"endOffset":7492,"count":96},{"startOffset":7469,"endOffset":7492,"count":0},{"startOffset":7493,"endOffset":7544,"count":96},{"startOffset":7545,"endOffset":7573,"count":96},{"startOffset":7575,"endOffset":7666,"count":34},{"startOffset":7666,"endOffset":7739,"count":96},{"startOffset":7750,"endOffset":7775,"count":130},{"startOffset":7783,"endOffset":7839,"count":126},{"startOffset":7846,"endOffset":7876,"count":152160},{"startOffset":7913,"endOffset":7955,"count":0},{"startOffset":7986,"endOffset":8026,"count":0}],"isBlockCoverage":true},{"functionName":"tryBacktrackAddStarExportBinding","ranges":[{"startOffset":8033,"endOffset":9292,"count":47},{"startOffset":8421,"endOffset":8433,"count":457},{"startOffset":8435,"endOffset":8658,"count":457},{"startOffset":8480,"endOffset":8487,"count":0},{"startOffset":8544,"endOffset":8550,"count":47},{"startOffset":8550,"endOffset":8658,"count":410},{"startOffset":8724,"endOffset":9284,"count":44},{"startOffset":8922,"endOffset":9026,"count":23},{"startOffset":9001,"endOffset":9008,"count":0},{"startOffset":9036,"endOffset":9180,"count":21},{"startOffset":9155,"endOffset":9162,"count":0},{"startOffset":9190,"endOffset":9206,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseObjectHasOwnProperty","ranges":[{"startOffset":9380,"endOffset":10585,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectDefineOrKeys","ranges":[{"startOffset":10589,"endOffset":28502,"count":32},{"startOffset":10801,"endOffset":10847,"count":2},{"startOffset":10849,"endOffset":14604,"count":2},{"startOffset":11004,"endOffset":11010,"count":0},{"startOffset":11111,"endOffset":11117,"count":0},{"startOffset":11182,"endOffset":11188,"count":0},{"startOffset":11287,"endOffset":11466,"count":1},{"startOffset":11466,"endOffset":11472,"count":0},{"startOffset":11472,"endOffset":11554,"count":1},{"startOffset":11554,"endOffset":11560,"count":0},{"startOffset":11560,"endOffset":11642,"count":1},{"startOffset":11642,"endOffset":12093,"count":0},{"startOffset":12093,"endOffset":12377,"count":1},{"startOffset":12178,"endOffset":12184,"count":0},{"startOffset":12274,"endOffset":12280,"count":0},{"startOffset":12377,"endOffset":14527,"count":0},{"startOffset":14527,"endOffset":14545,"count":1},{"startOffset":14545,"endOffset":14597,"count":0},{"startOffset":14604,"endOffset":28474,"count":30},{"startOffset":14624,"endOffset":14637,"count":0},{"startOffset":14643,"endOffset":14679,"count":0},{"startOffset":14681,"endOffset":28474,"count":0},{"startOffset":28479,"endOffset":28501,"count":31}],"isBlockCoverage":true},{"functionName":"readExportsOrModuleDotExports","ranges":[{"startOffset":28506,"endOffset":28978,"count":2},{"startOffset":28601,"endOffset":28639,"count":0},{"startOffset":28641,"endOffset":28815,"count":0},{"startOffset":28919,"endOffset":28975,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseModuleExportsDotAssign","ranges":[{"startOffset":28982,"endOffset":29327,"count":24},{"startOffset":29304,"endOffset":29326,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseExportsDotAssign","ranges":[{"startOffset":29331,"endOffset":30758,"count":57},{"startOffset":29495,"endOffset":29833,"count":48},{"startOffset":29707,"endOffset":29803,"count":43},{"startOffset":29812,"endOffset":29833,"count":5},{"startOffset":29863,"endOffset":30313,"count":0},{"startOffset":30344,"endOffset":30730,"count":7},{"startOffset":30379,"endOffset":30723,"count":6},{"startOffset":30421,"endOffset":30443,"count":0},{"startOffset":30545,"endOffset":30613,"count":0},{"startOffset":30684,"endOffset":30714,"count":1},{"startOffset":30735,"endOffset":30757,"count":14}],"isBlockCoverage":true},{"functionName":"tryParseRequire","ranges":[{"startOffset":30762,"endOffset":31771,"count":367},{"startOffset":30895,"endOffset":31751,"count":49},{"startOffset":31081,"endOffset":31093,"count":3},{"startOffset":31100,"endOffset":31717,"count":48},{"startOffset":31279,"endOffset":31405,"count":1},{"startOffset":31419,"endOffset":31543,"count":0},{"startOffset":31557,"endOffset":31684,"count":47},{"startOffset":31724,"endOffset":31751,"count":1},{"startOffset":31751,"endOffset":31770,"count":319}],"isBlockCoverage":true},{"functionName":"tryParseLiteralExports","ranges":[{"startOffset":31775,"endOffset":33388,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":44773,"endOffset":44992,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":45060,"endOffset":45438,"count":458},{"startOffset":45121,"endOffset":45139,"count":2},{"startOffset":45139,"endOffset":45158,"count":456},{"startOffset":45158,"endOffset":45169,"count":47},{"startOffset":45169,"endOffset":45188,"count":409},{"startOffset":45188,"endOffset":45206,"count":11},{"startOffset":45206,"endOffset":45237,"count":398},{"startOffset":45237,"endOffset":45437,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":45505,"endOffset":45984,"count":959},{"startOffset":45565,"endOffset":45583,"count":95},{"startOffset":45583,"endOffset":45602,"count":864},{"startOffset":45602,"endOffset":45613,"count":2},{"startOffset":45613,"endOffset":45632,"count":862},{"startOffset":45632,"endOffset":45644,"count":0},{"startOffset":45644,"endOffset":45663,"count":862},{"startOffset":45663,"endOffset":45674,"count":82},{"startOffset":45674,"endOffset":45693,"count":780},{"startOffset":45693,"endOffset":45711,"count":15},{"startOffset":45711,"endOffset":45742,"count":765},{"startOffset":45742,"endOffset":45981,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":45988,"endOffset":46430,"count":48},{"startOffset":46107,"endOffset":46120,"count":0},{"startOffset":46189,"endOffset":46411,"count":502},{"startOffset":46228,"endOffset":46268,"count":454},{"startOffset":46268,"endOffset":46406,"count":48},{"startOffset":46296,"endOffset":46373,"count":0}],"isBlockCoverage":true},{"functionName":"codePointLen","ranges":[{"startOffset":46434,"endOffset":46509,"count":912},{"startOffset":46493,"endOffset":46508,"count":0}],"isBlockCoverage":true},{"functionName":"codePointAtLast","ranges":[{"startOffset":46513,"endOffset":46774,"count":457},{"startOffset":46677,"endOffset":46757,"count":0}],"isBlockCoverage":true},{"functionName":"esmSyntaxErr","ranges":[{"startOffset":46778,"endOffset":46885,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfImportStatement","ranges":[{"startOffset":46889,"endOffset":47708,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfExportStatement","ranges":[{"startOffset":47712,"endOffset":47948,"count":0}],"isBlockCoverage":false},{"functionName":"commentWhitespace","ranges":[{"startOffset":47952,"endOffset":48370,"count":429},{"startOffset":48001,"endOffset":48332,"count":489},{"startOffset":48062,"endOffset":48271,"count":0},{"startOffset":48301,"endOffset":48327,"count":429},{"startOffset":48332,"endOffset":48369,"count":0}],"isBlockCoverage":true},{"functionName":"templateString","ranges":[{"startOffset":48374,"endOffset":48779,"count":291},{"startOffset":48426,"endOffset":48758,"count":7060},{"startOffset":48492,"endOffset":48529,"count":165},{"startOffset":48536,"endOffset":48674,"count":165},{"startOffset":48674,"endOffset":48707,"count":6895},{"startOffset":48707,"endOffset":48714,"count":126},{"startOffset":48714,"endOffset":48747,"count":6769},{"startOffset":48747,"endOffset":48753,"count":8},{"startOffset":48758,"endOffset":48778,"count":0}],"isBlockCoverage":true},{"functionName":"blockComment","ranges":[{"startOffset":48783,"endOffset":48997,"count":14},{"startOffset":48843,"endOffset":48994,"count":885},{"startOffset":48909,"endOffset":48945,"count":56},{"startOffset":48952,"endOffset":48989,"count":14}],"isBlockCoverage":true},{"functionName":"lineComment","ranges":[{"startOffset":49001,"endOffset":49159,"count":93},{"startOffset":49050,"endOffset":49156,"count":3835},{"startOffset":49117,"endOffset":49129,"count":3743},{"startOffset":49144,"endOffset":49151,"count":92}],"isBlockCoverage":true},{"functionName":"stringLiteral","ranges":[{"startOffset":49163,"endOffset":49545,"count":865},{"startOffset":49219,"endOffset":49498,"count":9643},{"startOffset":49289,"endOffset":49296,"count":865},{"startOffset":49296,"endOffset":49322,"count":8778},{"startOffset":49322,"endOffset":49455,"count":36},{"startOffset":49389,"endOffset":49425,"count":0},{"startOffset":49442,"endOffset":49448,"count":0},{"startOffset":49455,"endOffset":49493,"count":8742},{"startOffset":49487,"endOffset":49493,"count":0},{"startOffset":49498,"endOffset":49544,"count":0}],"isBlockCoverage":true},{"functionName":"regexCharacterClass","ranges":[{"startOffset":49549,"endOffset":49869,"count":11},{"startOffset":49606,"endOffset":49796,"count":55},{"startOffset":49678,"endOffset":49688,"count":11},{"startOffset":49688,"endOffset":49721,"count":44},{"startOffset":49721,"endOffset":49727,"count":11},{"startOffset":49727,"endOffset":49791,"count":33},{"startOffset":49785,"endOffset":49791,"count":0},{"startOffset":49796,"endOffset":49868,"count":0}],"isBlockCoverage":true},{"functionName":"regularExpression","ranges":[{"startOffset":49873,"endOffset":50247,"count":34},{"startOffset":49928,"endOffset":50180,"count":454},{"startOffset":50000,"endOffset":50007,"count":34},{"startOffset":50007,"endOffset":50040,"count":420},{"startOffset":50040,"endOffset":50067,"count":11},{"startOffset":50067,"endOffset":50175,"count":409},{"startOffset":50105,"endOffset":50111,"count":56},{"startOffset":50111,"endOffset":50175,"count":353},{"startOffset":50169,"endOffset":50175,"count":0},{"startOffset":50180,"endOffset":50246,"count":0}],"isBlockCoverage":true},{"functionName":"isBr","ranges":[{"startOffset":50389,"endOffset":50455,"count":8742}],"isBlockCoverage":true},{"functionName":"isBrOrWs","ranges":[{"startOffset":50459,"endOffset":50537,"count":519},{"startOffset":50521,"endOffset":50533,"count":429}],"isBlockCoverage":true},{"functionName":"isBrOrWsOrPunctuatorNotDot","ranges":[{"startOffset":50541,"endOffset":50673,"count":4958},{"startOffset":50609,"endOffset":50620,"count":4790},{"startOffset":50621,"endOffset":50633,"count":3435},{"startOffset":50634,"endOffset":50664,"count":3435},{"startOffset":50653,"endOffset":50664,"count":659}],"isBlockCoverage":true},{"functionName":"keywordStart","ranges":[{"startOffset":50677,"endOffset":50788,"count":4959},{"startOffset":50727,"endOffset":50784,"count":4958}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword","ranges":[{"startOffset":50792,"endOffset":51033,"count":7},{"startOffset":50873,"endOffset":50886,"count":0},{"startOffset":50946,"endOffset":51029,"count":0}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword1","ranges":[{"startOffset":51037,"endOffset":51196,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKeyword","ranges":[{"startOffset":51322,"endOffset":53492,"count":96},{"startOffset":51401,"endOffset":51710,"count":0},{"startOffset":51716,"endOffset":52294,"count":6},{"startOffset":51785,"endOffset":52140,"count":0},{"startOffset":52150,"endOffset":52242,"count":0},{"startOffset":52300,"endOffset":52736,"count":0},{"startOffset":52742,"endOffset":52875,"count":0},{"startOffset":52881,"endOffset":52964,"count":0},{"startOffset":52970,"endOffset":53059,"count":1},{"startOffset":53065,"endOffset":53148,"count":6},{"startOffset":53154,"endOffset":53467,"count":8},{"startOffset":53223,"endOffset":53315,"count":0},{"startOffset":53325,"endOffset":53415,"count":0},{"startOffset":53472,"endOffset":53491,"count":75}],"isBlockCoverage":true},{"functionName":"isParenKeyword","ranges":[{"startOffset":53496,"endOffset":53807,"count":17},{"startOffset":53580,"endOffset":53620,"count":0},{"startOffset":53670,"endOffset":53708,"count":0},{"startOffset":53762,"endOffset":53798,"count":2}],"isBlockCoverage":true},{"functionName":"isPunctuator","ranges":[{"startOffset":53811,"endOffset":54104,"count":3435},{"startOffset":53928,"endOffset":53940,"count":3427},{"startOffset":53946,"endOffset":53958,"count":3427},{"startOffset":53964,"endOffset":53990,"count":3427},{"startOffset":53991,"endOffset":54012,"count":2825},{"startOffset":54002,"endOffset":54012,"count":2606},{"startOffset":54013,"endOffset":54030,"count":2825},{"startOffset":54036,"endOffset":54048,"count":2782},{"startOffset":54054,"endOffset":54066,"count":2782},{"startOffset":54072,"endOffset":54100,"count":2782},{"startOffset":54089,"endOffset":54100,"count":6}],"isBlockCoverage":true},{"functionName":"isExpressionPunctuator","ranges":[{"startOffset":54108,"endOffset":54416,"count":130},{"startOffset":54231,"endOffset":54243,"count":129},{"startOffset":54249,"endOffset":54261,"count":129},{"startOffset":54267,"endOffset":54306,"count":129},{"startOffset":54294,"endOffset":54306,"count":45},{"startOffset":54307,"endOffset":54328,"count":101},{"startOffset":54318,"endOffset":54328,"count":77},{"startOffset":54329,"endOffset":54346,"count":96},{"startOffset":54352,"endOffset":54364,"count":96},{"startOffset":54370,"endOffset":54407,"count":96},{"startOffset":54382,"endOffset":54393,"count":0},{"startOffset":54394,"endOffset":54407,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionTerminator","ranges":[{"startOffset":54420,"endOffset":54998,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.init","ranges":[{"startOffset":55066,"endOffset":55083,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.initSync","ranges":[{"startOffset":55112,"endOffset":55120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"303","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"304","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"305","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"306","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19,"count":1}],"isBlockCoverage":true}]},{"scriptId":"307","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"308","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"309","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"310","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"311","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"312","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"313","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"314","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1129,"count":1},{"startOffset":168,"endOffset":215,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":457,"endOffset":1005,"count":60},{"startOffset":564,"endOffset":705,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":729,"endOffset":928,"count":2100}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":766,"endOffset":923,"count":60},{"startOffset":867,"endOffset":898,"count":0}],"isBlockCoverage":true}]},{"scriptId":"315","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"316","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"317","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/authRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2419,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208,"endOffset":1143,"count":5},{"startOffset":287,"endOffset":299,"count":4},{"startOffset":301,"endOffset":392,"count":2},{"startOffset":392,"endOffset":530,"count":3},{"startOffset":530,"endOffset":605,"count":1},{"startOffset":605,"endOffset":759,"count":2},{"startOffset":759,"endOffset":1011,"count":1},{"startOffset":1011,"endOffset":1140,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1202,"endOffset":2389,"count":4},{"startOffset":1287,"endOffset":1299,"count":3},{"startOffset":1301,"endOffset":1480,"count":2},{"startOffset":1480,"endOffset":1489,"count":0},{"startOffset":1490,"endOffset":1498,"count":2},{"startOffset":1648,"endOffset":1684,"count":2},{"startOffset":1684,"endOffset":2249,"count":1},{"startOffset":2249,"endOffset":2386,"count":0}],"isBlockCoverage":true}]},{"scriptId":"319","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/config/db.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":295,"count":1}],"isBlockCoverage":true}]},{"scriptId":"320","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"321","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":2}],"isBlockCoverage":true}]},{"scriptId":"322","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"323","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"324","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"325","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"326","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":1}],"isBlockCoverage":true}]},{"scriptId":"327","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":1}],"isBlockCoverage":true}]},{"scriptId":"328","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"329","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"330","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"331","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":1}],"isBlockCoverage":true}]},{"scriptId":"332","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"333","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/chai/chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":139547,"count":1},{"startOffset":14930,"endOffset":14949,"count":0},{"startOffset":17828,"endOffset":18162,"count":0},{"startOffset":19236,"endOffset":19243,"count":0},{"startOffset":22547,"endOffset":22565,"count":0},{"startOffset":22666,"endOffset":22691,"count":0},{"startOffset":22703,"endOffset":22751,"count":0},{"startOffset":33213,"endOffset":33222,"count":0},{"startOffset":132152,"endOffset":132184,"count":15}],"isBlockCoverage":true},{"functionName":"__name","ranges":[{"startOffset":104,"endOffset":179,"count":541}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":198,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":211,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":354,"endOffset":465,"count":3},{"startOffset":401,"endOffset":463,"count":37}],"isBlockCoverage":true},{"functionName":"(disabled):util","ranges":[{"startOffset":521,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":651,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":695,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":730,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"addProperty","ranges":[{"startOffset":762,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":795,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":842,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"eql","ranges":[{"startOffset":873,"endOffset":895,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":912,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":939,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"getActual","ranges":[{"startOffset":964,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":995,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1025,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1055,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":1104,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":1173,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":1227,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1261,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1291,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":1316,"endOffset":1328,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":1343,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":1378,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":1412,"endOffset":1427,"count":0}],"isBlockCoverage":false},{"functionName":"objDisplay","ranges":[{"startOffset":1443,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":1489,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":1540,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteProperty","ranges":[{"startOffset":1584,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":1620,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1643,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"transferFlags","ranges":[{"startOffset":1672,"endOffset":1691,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":1701,"endOffset":1711,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1841,"endOffset":1868,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":1892,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":1939,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":1986,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":2026,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorInstance","ranges":[{"startOffset":2047,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":2216,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":2341,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":2503,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":2951,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":3330,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":3818,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":4084,"endOffset":4294,"count":2260},{"startOffset":4143,"endOffset":4197,"count":245},{"startOffset":4229,"endOffset":4258,"count":1494},{"startOffset":4258,"endOffset":4292,"count":766}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":4344,"endOffset":4456,"count":89},{"startOffset":4439,"endOffset":4446,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4513,"endOffset":4836,"count":27},{"startOffset":4568,"endOffset":4597,"count":0},{"startOffset":4618,"endOffset":4642,"count":0},{"startOffset":4725,"endOffset":4752,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5009,"endOffset":5652,"count":22}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":5009,"endOffset":5652,"count":1}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":5075,"endOffset":5120,"count":22}],"isBlockCoverage":true},{"functionName":"get ok","ranges":[{"startOffset":5123,"endOffset":5155,"count":0}],"isBlockCoverage":false},{"functionName":"_AssertionError","ranges":[{"startOffset":5158,"endOffset":5473,"count":22},{"startOffset":5338,"endOffset":5356,"count":0},{"startOffset":5394,"endOffset":5469,"count":85}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":5476,"endOffset":5650,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":5688,"endOffset":6458,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":6527,"endOffset":6607,"count":44},{"startOffset":6594,"endOffset":6604,"count":0}],"isBlockCoverage":true},{"functionName":"colorise","ranges":[{"startOffset":7620,"endOffset":7846,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":7877,"endOffset":8618,"count":110},{"startOffset":8561,"endOffset":8598,"count":0}],"isBlockCoverage":true},{"functionName":"isHighSurrogate","ranges":[{"startOffset":8665,"endOffset":8746,"count":4},{"startOffset":8724,"endOffset":8743,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":8791,"endOffset":9267,"count":106},{"startOffset":8970,"endOffset":8998,"count":0},{"startOffset":9000,"endOffset":9022,"count":0},{"startOffset":9051,"endOffset":9079,"count":4},{"startOffset":9081,"endOffset":9248,"count":4},{"startOffset":9171,"endOffset":9199,"count":0},{"startOffset":9248,"endOffset":9266,"count":102}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":9298,"endOffset":10736,"count":4},{"startOffset":9395,"endOffset":9413,"count":0},{"startOffset":9465,"endOffset":10700,"count":2},{"startOffset":9848,"endOffset":9866,"count":0},{"startOffset":9937,"endOffset":9948,"count":0},{"startOffset":10108,"endOffset":10161,"count":0},{"startOffset":10163,"endOffset":10183,"count":0},{"startOffset":10198,"endOffset":10214,"count":0},{"startOffset":10215,"endOffset":10250,"count":0},{"startOffset":10252,"endOffset":10272,"count":0},{"startOffset":10294,"endOffset":10363,"count":0},{"startOffset":10379,"endOffset":10394,"count":0},{"startOffset":10395,"endOffset":10430,"count":0},{"startOffset":10431,"endOffset":10475,"count":0},{"startOffset":10477,"endOffset":10497,"count":0},{"startOffset":10534,"endOffset":10550,"count":0},{"startOffset":10551,"endOffset":10596,"count":0},{"startOffset":10598,"endOffset":10676,"count":0},{"startOffset":10700,"endOffset":10735,"count":2}],"isBlockCoverage":true},{"functionName":"quoteComplexKey","ranges":[{"startOffset":10773,"endOffset":10970,"count":2},{"startOffset":10871,"endOffset":10969,"count":0}],"isBlockCoverage":true},{"functionName":"inspectProperty","ranges":[{"startOffset":11015,"endOffset":11354,"count":2},{"startOffset":11158,"endOffset":11246,"count":0}],"isBlockCoverage":true},{"functionName":"inspectArray","ranges":[{"startOffset":11435,"endOffset":11997,"count":1},{"startOffset":11611,"endOffset":11985,"count":0},{"startOffset":11986,"endOffset":11990,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11854,"endOffset":11880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12119,"endOffset":12333,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":12352,"endOffset":13280,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":13364,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":13784,"endOffset":14094,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":14173,"endOffset":14396,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":14441,"endOffset":14581,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":14620,"endOffset":14833,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":14934,"endOffset":14948,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":14951,"endOffset":15417,"count":38},{"startOffset":15014,"endOffset":15064,"count":0},{"startOffset":15092,"endOffset":15147,"count":0},{"startOffset":15176,"endOffset":15232,"count":0},{"startOffset":15253,"endOffset":15335,"count":1},{"startOffset":15313,"endOffset":15319,"count":0},{"startOffset":15335,"endOffset":15416,"count":37}],"isBlockCoverage":true},{"functionName":"inspectBigInt","ranges":[{"startOffset":15495,"endOffset":15687,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":15765,"endOffset":16031,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":16106,"endOffset":16233,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":16272,"endOffset":16441,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":16869,"endOffset":17002,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":17029,"endOffset":17255,"count":69},{"startOffset":17109,"endOffset":17170,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":17333,"endOffset":17516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17640,"endOffset":17663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17875,"endOffset":18137,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":18261,"endOffset":19068,"count":2},{"startOffset":18446,"endOffset":18450,"count":0},{"startOffset":18482,"endOffset":18505,"count":0},{"startOffset":18507,"endOffset":18529,"count":0},{"startOffset":18585,"endOffset":18590,"count":0},{"startOffset":18629,"endOffset":18659,"count":0},{"startOffset":18986,"endOffset":19007,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18743,"endOffset":18770,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18849,"endOffset":18876,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":19245,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":19662,"endOffset":19838,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject2","ranges":[{"startOffset":20085,"endOffset":20873,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":20950,"endOffset":21200,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":21247,"endOffset":21364,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":21421,"endOffset":22321,"count":0}],"isBlockCoverage":false},{"functionName":"undefined","ranges":[{"startOffset":22861,"endOffset":22922,"count":0}],"isBlockCoverage":false},{"functionName":"null","ranges":[{"startOffset":22932,"endOffset":22983,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":22996,"endOffset":23057,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":23070,"endOffset":23131,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":23657,"endOffset":23722,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":23735,"endOffset":23800,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":24155,"endOffset":24163,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":24177,"endOffset":24185,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":24202,"endOffset":24210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24358,"endOffset":25012,"count":2},{"startOffset":24414,"endOffset":24457,"count":0},{"startOffset":24459,"endOffset":24504,"count":0},{"startOffset":24523,"endOffset":24546,"count":0},{"startOffset":24547,"endOffset":24590,"count":0},{"startOffset":24592,"endOffset":24652,"count":0},{"startOffset":24678,"endOffset":24716,"count":0},{"startOffset":24718,"endOffset":24773,"count":0},{"startOffset":24845,"endOffset":24916,"count":0},{"startOffset":24944,"endOffset":24997,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":25074,"endOffset":26217,"count":110},{"startOffset":25228,"endOffset":25236,"count":0},{"startOffset":25279,"endOffset":25331,"count":3},{"startOffset":25361,"endOffset":25414,"count":108},{"startOffset":25414,"endOffset":25443,"count":2},{"startOffset":25445,"endOffset":25631,"count":2},{"startOffset":25520,"endOffset":25627,"count":0},{"startOffset":25631,"endOffset":25684,"count":2},{"startOffset":25685,"endOffset":25692,"count":0},{"startOffset":25727,"endOffset":25744,"count":0},{"startOffset":25746,"endOffset":25793,"count":2},{"startOffset":25793,"endOffset":25842,"count":0},{"startOffset":25843,"endOffset":25874,"count":0},{"startOffset":25876,"endOffset":26216,"count":0}],"isBlockCoverage":true},{"functionName":"inspect2","ranges":[{"startOffset":30070,"endOffset":30336,"count":108},{"startOffset":30196,"endOffset":30203,"count":0},{"startOffset":30287,"endOffset":30297,"count":0}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":30399,"endOffset":31072,"count":47},{"startOffset":30572,"endOffset":31043,"count":4},{"startOffset":30613,"endOffset":30711,"count":0},{"startOffset":30749,"endOffset":30802,"count":0},{"startOffset":30841,"endOffset":31008,"count":2},{"startOffset":30901,"endOffset":30941,"count":0},{"startOffset":31008,"endOffset":31039,"count":2},{"startOffset":31043,"endOffset":31070,"count":43}],"isBlockCoverage":true},{"functionName":"getMessage2","ranges":[{"startOffset":31140,"endOffset":31694,"count":22},{"startOffset":31301,"endOffset":31310,"count":0},{"startOffset":31391,"endOffset":31403,"count":0},{"startOffset":31416,"endOffset":31421,"count":0},{"startOffset":31663,"endOffset":31685,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31457,"endOffset":31501,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31524,"endOffset":31571,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31594,"endOffset":31643,"count":22}],"isBlockCoverage":true},{"functionName":"transferFlags","ranges":[{"startOffset":31766,"endOffset":32256,"count":165},{"startOffset":31854,"endOffset":31914,"count":0},{"startOffset":31939,"endOffset":32002,"count":0},{"startOffset":32041,"endOffset":32053,"count":0},{"startOffset":32089,"endOffset":32254,"count":830},{"startOffset":32110,"endOffset":32197,"count":0}],"isBlockCoverage":true},{"functionName":"type2","ranges":[{"startOffset":32332,"endOffset":32695,"count":0}],"isBlockCoverage":false},{"functionName":"FakeMap","ranges":[{"startOffset":32719,"endOffset":32803,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32884,"endOffset":32934,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":32974,"endOffset":33144,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCompare","ranges":[{"startOffset":33224,"endOffset":33616,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeSet","ranges":[{"startOffset":33659,"endOffset":34108,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":34177,"endOffset":34563,"count":0}],"isBlockCoverage":false},{"functionName":"simpleEqual","ranges":[{"startOffset":34596,"endOffset":35043,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqual","ranges":[{"startOffset":35080,"endOffset":36537,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqualByType","ranges":[{"startOffset":36588,"endOffset":38706,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEqual","ranges":[{"startOffset":38769,"endOffset":38897,"count":0}],"isBlockCoverage":false},{"functionName":"entriesEqual","ranges":[{"startOffset":38934,"endOffset":39633,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEqual","ranges":[{"startOffset":39672,"endOffset":40071,"count":0}],"isBlockCoverage":false},{"functionName":"generatorEqual","ranges":[{"startOffset":40112,"endOffset":40293,"count":0}],"isBlockCoverage":false},{"functionName":"hasIteratorFunction","ranges":[{"startOffset":40336,"endOffset":40537,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorEntries","ranges":[{"startOffset":40590,"endOffset":40807,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorEntries","ranges":[{"startOffset":40858,"endOffset":41142,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableKeys","ranges":[{"startOffset":41195,"endOffset":41317,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableSymbols","ranges":[{"startOffset":41366,"endOffset":41666,"count":0}],"isBlockCoverage":false},{"functionName":"keysEqual","ranges":[{"startOffset":41721,"endOffset":42042,"count":0}],"isBlockCoverage":false},{"functionName":"objectEqual","ranges":[{"startOffset":42075,"endOffset":43297,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":43334,"endOffset":43419,"count":0}],"isBlockCoverage":false},{"functionName":"mapSymbols","ranges":[{"startOffset":43456,"endOffset":43664,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":43733,"endOffset":43872,"count":4},{"startOffset":43817,"endOffset":43840,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":43909,"endOffset":44428,"count":0}],"isBlockCoverage":false},{"functionName":"internalGetPathValue","ranges":[{"startOffset":44461,"endOffset":44993,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":45048,"endOffset":45414,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion","ranges":[{"startOffset":45477,"endOffset":45744,"count":245},{"startOffset":45550,"endOffset":45562,"count":244}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45835,"endOffset":45992,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46001,"endOffset":46164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46223,"endOffset":46368,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46377,"endOffset":46528,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.addProperty","ranges":[{"startOffset":46557,"endOffset":46620,"count":43}],"isBlockCoverage":true},{"functionName":"Assertion.addMethod","ranges":[{"startOffset":46644,"endOffset":46705,"count":49}],"isBlockCoverage":true},{"functionName":"Assertion.addChainableMethod","ranges":[{"startOffset":46738,"endOffset":46844,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteProperty","ranges":[{"startOffset":46876,"endOffset":46945,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteMethod","ranges":[{"startOffset":46975,"endOffset":47042,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteChainableMethod","ranges":[{"startOffset":47081,"endOffset":47193,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.assert","ranges":[{"startOffset":47224,"endOffset":47970,"count":89},{"startOffset":47393,"endOffset":47414,"count":7},{"startOffset":47420,"endOffset":47437,"count":7},{"startOffset":47474,"endOffset":47491,"count":0},{"startOffset":47503,"endOffset":47968,"count":22},{"startOffset":47752,"endOffset":47817,"count":19},{"startOffset":47923,"endOffset":47936,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":48032,"endOffset":48081,"count":75}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":48090,"endOffset":48140,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":48182,"endOffset":48303,"count":396}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":48380,"endOffset":48943,"count":43},{"startOffset":48451,"endOffset":48469,"count":17},{"startOffset":48470,"endOffset":48478,"count":26}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":48453,"endOffset":48469,"count":95}],"isBlockCoverage":true},{"functionName":"propertyGetter","ranges":[{"startOffset":48549,"endOffset":48892,"count":96},{"startOffset":48605,"endOffset":48631,"count":0},{"startOffset":48633,"endOffset":48686,"count":0},{"startOffset":48762,"endOffset":48776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49068,"endOffset":49082,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":49095,"endOffset":49698,"count":55},{"startOffset":49191,"endOffset":49201,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":49251,"endOffset":49677,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":49777,"endOffset":50215,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":50345,"endOffset":51952,"count":300},{"startOffset":50422,"endOffset":50433,"count":0}],"isBlockCoverage":true},{"functionName":"proxyGetter","ranges":[{"startOffset":50492,"endOffset":51928,"count":1956},{"startOffset":50660,"endOffset":51751,"count":0},{"startOffset":51796,"endOffset":51824,"count":183},{"startOffset":51826,"endOffset":51878,"count":180}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51000,"endOffset":51492,"count":0}],"isBlockCoverage":false},{"functionName":"stringDistanceCapped","ranges":[{"startOffset":51981,"endOffset":52726,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":52813,"endOffset":53307,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52898,"endOffset":53196,"count":81},{"startOffset":52944,"endOffset":52992,"count":80},{"startOffset":53074,"endOffset":53088,"count":0},{"startOffset":53088,"endOffset":53195,"count":60}],"isBlockCoverage":true},{"functionName":"overwriteProperty","ranges":[{"startOffset":53380,"endOffset":54258,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":54345,"endOffset":55247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55436,"endOffset":55450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55524,"endOffset":55692,"count":3},{"startOffset":55645,"endOffset":55657,"count":0}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":55769,"endOffset":57567,"count":8},{"startOffset":55882,"endOffset":55974,"count":2},{"startOffset":56063,"endOffset":56092,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55930,"endOffset":55948,"count":3}],"isBlockCoverage":true},{"functionName":"chainableMethodGetter","ranges":[{"startOffset":56205,"endOffset":57509,"count":6},{"startOffset":57026,"endOffset":57406,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56351,"endOffset":56728,"count":4},{"startOffset":56568,"endOffset":56604,"count":0},{"startOffset":56604,"endOffset":56727,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57125,"endOffset":57396,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":57665,"endOffset":58624,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":58726,"endOffset":58806,"count":20},{"startOffset":58795,"endOffset":58799,"count":16},{"startOffset":58800,"endOffset":58803,"count":4}],"isBlockCoverage":true},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":58907,"endOffset":59166,"count":2},{"startOffset":59017,"endOffset":59027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59078,"endOffset":59162,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":59292,"endOffset":59408,"count":2}],"isBlockCoverage":true},{"functionName":"isObjectType","ranges":[{"startOffset":59564,"endOffset":59726,"count":19}],"isBlockCoverage":true},{"functionName":"getOperator","ranges":[{"startOffset":59765,"endOffset":60336,"count":22},{"startOffset":59920,"endOffset":59929,"count":0},{"startOffset":59957,"endOffset":59983,"count":0},{"startOffset":60021,"endOffset":60033,"count":0},{"startOffset":60046,"endOffset":60051,"count":0},{"startOffset":60065,"endOffset":60089,"count":0},{"startOffset":60118,"endOffset":60142,"count":3},{"startOffset":60142,"endOffset":60211,"count":19},{"startOffset":60211,"endOffset":60279,"count":0},{"startOffset":60279,"endOffset":60298,"count":19},{"startOffset":60298,"endOffset":60317,"count":0},{"startOffset":60318,"endOffset":60333,"count":19}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":60401,"endOffset":60443,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp2","ranges":[{"startOffset":60472,"endOffset":60567,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeric","ranges":[{"startOffset":60599,"endOffset":60677,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60949,"endOffset":61000,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61032,"endOffset":61077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61110,"endOffset":61153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61188,"endOffset":61233,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61265,"endOffset":61307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61343,"endOffset":61389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61421,"endOffset":61492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61524,"endOffset":61595,"count":0}],"isBlockCoverage":false},{"functionName":"an","ranges":[{"startOffset":61918,"endOffset":62586,"count":3},{"startOffset":61959,"endOffset":61987,"count":0},{"startOffset":62124,"endOffset":62130,"count":0},{"startOffset":62229,"endOffset":62414,"count":0}],"isBlockCoverage":true},{"functionName":"SameValueZero","ranges":[{"startOffset":62684,"endOffset":62760,"count":0}],"isBlockCoverage":false},{"functionName":"includeChainingBehavior","ranges":[{"startOffset":62801,"endOffset":62872,"count":2}],"isBlockCoverage":true},{"functionName":"include","ranges":[{"startOffset":62933,"endOffset":65590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65949,"endOffset":66082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66115,"endOffset":66297,"count":1},{"startOffset":66276,"endOffset":66283,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66333,"endOffset":66577,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66614,"endOffset":67252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67286,"endOffset":67469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67502,"endOffset":67645,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67683,"endOffset":67838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67870,"endOffset":68010,"count":0}],"isBlockCoverage":false},{"functionName":"assertExist","ranges":[{"startOffset":68013,"endOffset":68199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68358,"endOffset":69412,"count":0}],"isBlockCoverage":false},{"functionName":"checkArguments","ranges":[{"startOffset":69415,"endOffset":69645,"count":0}],"isBlockCoverage":false},{"functionName":"assertEqual","ranges":[{"startOffset":69792,"endOffset":70264,"count":75},{"startOffset":69840,"endOffset":69868,"count":0},{"startOffset":69931,"endOffset":70081,"count":0}],"isBlockCoverage":true},{"functionName":"assertEql","ranges":[{"startOffset":70428,"endOffset":70724,"count":0}],"isBlockCoverage":false},{"functionName":"assertAbove","ranges":[{"startOffset":70836,"endOffset":72523,"count":0}],"isBlockCoverage":false},{"functionName":"assertLeast","ranges":[{"startOffset":72692,"endOffset":74387,"count":0}],"isBlockCoverage":false},{"functionName":"assertBelow","ranges":[{"startOffset":74564,"endOffset":76258,"count":0}],"isBlockCoverage":false},{"functionName":"assertMost","ranges":[{"startOffset":76424,"endOffset":78114,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":78312,"endOffset":80260,"count":0}],"isBlockCoverage":false},{"functionName":"assertInstanceOf","ranges":[{"startOffset":80263,"endOffset":81076,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":81229,"endOffset":83515,"count":4},{"startOffset":81286,"endOffset":81314,"count":0},{"startOffset":81518,"endOffset":81534,"count":0},{"startOffset":81557,"endOffset":81759,"count":0},{"startOffset":81797,"endOffset":81821,"count":0},{"startOffset":81822,"endOffset":81846,"count":0},{"startOffset":81848,"endOffset":82007,"count":0},{"startOffset":82027,"endOffset":82035,"count":0},{"startOffset":82037,"endOffset":82172,"count":0},{"startOffset":82211,"endOffset":82333,"count":0},{"startOffset":82422,"endOffset":82446,"count":0},{"startOffset":82472,"endOffset":82488,"count":0},{"startOffset":82517,"endOffset":82537,"count":0},{"startOffset":82612,"endOffset":82634,"count":0},{"startOffset":82652,"endOffset":82673,"count":0},{"startOffset":82694,"endOffset":82718,"count":0},{"startOffset":82785,"endOffset":82848,"count":0},{"startOffset":82874,"endOffset":82905,"count":0},{"startOffset":82970,"endOffset":82995,"count":0},{"startOffset":83208,"endOffset":83481,"count":3},{"startOffset":83481,"endOffset":83514,"count":2}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":82540,"endOffset":82569,"count":3}],"isBlockCoverage":true},{"functionName":"assertOwnProperty","ranges":[{"startOffset":83607,"endOffset":83727,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnPropertyDescriptor","ranges":[{"startOffset":83890,"endOffset":84941,"count":0}],"isBlockCoverage":false},{"functionName":"assertLengthChain","ranges":[{"startOffset":85164,"endOffset":85229,"count":1}],"isBlockCoverage":true},{"functionName":"assertLength","ranges":[{"startOffset":85278,"endOffset":85974,"count":1},{"startOffset":85325,"endOffset":85353,"count":0},{"startOffset":85546,"endOffset":85557,"count":0},{"startOffset":85562,"endOffset":85642,"count":0}],"isBlockCoverage":true},{"functionName":"assertMatch","ranges":[{"startOffset":86161,"endOffset":86392,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":86547,"endOffset":86918,"count":0}],"isBlockCoverage":false},{"functionName":"assertKeys","ranges":[{"startOffset":86921,"endOffset":89570,"count":2},{"startOffset":87178,"endOffset":87194,"count":0},{"startOffset":87410,"endOffset":87630,"count":0},{"startOffset":87714,"endOffset":87852,"count":0},{"startOffset":87859,"endOffset":88032,"count":0},{"startOffset":88234,"endOffset":88310,"count":0},{"startOffset":88420,"endOffset":88440,"count":0},{"startOffset":88527,"endOffset":88690,"count":0},{"startOffset":88897,"endOffset":88951,"count":0},{"startOffset":89153,"endOffset":89206,"count":0},{"startOffset":89210,"endOffset":89250,"count":0},{"startOffset":89278,"endOffset":89286,"count":0},{"startOffset":89341,"endOffset":89350,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87484,"endOffset":87534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":88128,"endOffset":88207,"count":7},{"startOffset":88181,"endOffset":88186,"count":0}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":88443,"endOffset":88472,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88552,"endOffset":88684,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":88728,"endOffset":88860,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88777,"endOffset":88852,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88993,"endOffset":89042,"count":7}],"isBlockCoverage":true},{"functionName":"assertThrows","ranges":[{"startOffset":89686,"endOffset":93986,"count":0}],"isBlockCoverage":false},{"functionName":"respondTo","ranges":[{"startOffset":94158,"endOffset":94564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94720,"endOffset":94765,"count":0}],"isBlockCoverage":false},{"functionName":"satisfy","ranges":[{"startOffset":94768,"endOffset":95114,"count":0}],"isBlockCoverage":false},{"functionName":"closeTo","ranges":[{"startOffset":95227,"endOffset":96357,"count":0}],"isBlockCoverage":false},{"functionName":"isSubsetOf","ranges":[{"startOffset":96474,"endOffset":97259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97325,"endOffset":98385,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98422,"endOffset":98677,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":98680,"endOffset":99807,"count":0}],"isBlockCoverage":false},{"functionName":"assertChanges","ranges":[{"startOffset":99869,"endOffset":100848,"count":0}],"isBlockCoverage":false},{"functionName":"assertIncreases","ranges":[{"startOffset":100982,"endOffset":102031,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecreases","ranges":[{"startOffset":102177,"endOffset":103226,"count":0}],"isBlockCoverage":false},{"functionName":"assertDelta","ranges":[{"startOffset":103372,"endOffset":104023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104136,"endOffset":104378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104413,"endOffset":104641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104676,"endOffset":104904,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104939,"endOffset":105153,"count":0}],"isBlockCoverage":false},{"functionName":"compareSubset","ranges":[{"startOffset":105156,"endOffset":106278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106356,"endOffset":106649,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":106685,"endOffset":106756,"count":85}],"isBlockCoverage":true},{"functionName":"expect.fail","ranges":[{"startOffset":106797,"endOffset":107083,"count":0}],"isBlockCoverage":false},{"functionName":"Should","ranges":[{"startOffset":107180,"endOffset":107192,"count":0}],"isBlockCoverage":false},{"functionName":"should","ranges":[{"startOffset":107204,"endOffset":107216,"count":0}],"isBlockCoverage":false},{"functionName":"loadShould","ranges":[{"startOffset":107221,"endOffset":109085,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":109203,"endOffset":109363,"count":0}],"isBlockCoverage":false},{"functionName":"assert.fail","ranges":[{"startOffset":109404,"endOffset":109690,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isOk","ranges":[{"startOffset":109706,"endOffset":109780,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotOk","ranges":[{"startOffset":109799,"endOffset":109880,"count":0}],"isBlockCoverage":false},{"functionName":"assert.equal","ranges":[{"startOffset":109897,"endOffset":110149,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notEqual","ranges":[{"startOffset":110169,"endOffset":110424,"count":0}],"isBlockCoverage":false},{"functionName":"assert.strictEqual","ranges":[{"startOffset":110447,"endOffset":110541,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notStrictEqual","ranges":[{"startOffset":110567,"endOffset":110668,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepEqual.assert.deepStrictEqual","ranges":[{"startOffset":110714,"endOffset":110804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepEqual","ranges":[{"startOffset":110828,"endOffset":110925,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAbove","ranges":[{"startOffset":110944,"endOffset":111037,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtLeast","ranges":[{"startOffset":111058,"endOffset":111157,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBelow","ranges":[{"startOffset":111176,"endOffset":111269,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtMost","ranges":[{"startOffset":111289,"endOffset":111386,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isTrue","ranges":[{"startOffset":111404,"endOffset":111485,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotTrue","ranges":[{"startOffset":111506,"endOffset":111598,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFalse","ranges":[{"startOffset":111617,"endOffset":111700,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFalse","ranges":[{"startOffset":111722,"endOffset":111816,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNull","ranges":[{"startOffset":111834,"endOffset":111919,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNull","ranges":[{"startOffset":111940,"endOffset":112032,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNaN","ranges":[{"startOffset":112049,"endOffset":112128,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNaN","ranges":[{"startOffset":112148,"endOffset":112246,"count":0}],"isBlockCoverage":false},{"functionName":"assert.exists","ranges":[{"startOffset":112264,"endOffset":112343,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notExists","ranges":[{"startOffset":112364,"endOffset":112450,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isUndefined","ranges":[{"startOffset":112473,"endOffset":112565,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isDefined","ranges":[{"startOffset":112586,"endOffset":112680,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isCallable","ranges":[{"startOffset":112702,"endOffset":112800,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotCallable","ranges":[{"startOffset":112825,"endOffset":112930,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isObject","ranges":[{"startOffset":112950,"endOffset":113040,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotObject","ranges":[{"startOffset":113063,"endOffset":113160,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isArray","ranges":[{"startOffset":113179,"endOffset":113268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotArray","ranges":[{"startOffset":113290,"endOffset":113386,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isString","ranges":[{"startOffset":113406,"endOffset":113496,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotString","ranges":[{"startOffset":113519,"endOffset":113616,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumber","ranges":[{"startOffset":113636,"endOffset":113726,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumber","ranges":[{"startOffset":113749,"endOffset":113846,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumeric","ranges":[{"startOffset":113867,"endOffset":113951,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumeric","ranges":[{"startOffset":113975,"endOffset":114066,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFinite","ranges":[{"startOffset":114086,"endOffset":114171,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBoolean","ranges":[{"startOffset":114192,"endOffset":114284,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotBoolean","ranges":[{"startOffset":114308,"endOffset":114407,"count":0}],"isBlockCoverage":false},{"functionName":"assert.typeOf","ranges":[{"startOffset":114425,"endOffset":114517,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notTypeOf","ranges":[{"startOffset":114538,"endOffset":114649,"count":0}],"isBlockCoverage":false},{"functionName":"assert.instanceOf","ranges":[{"startOffset":114671,"endOffset":114776,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInstanceOf","ranges":[{"startOffset":114801,"endOffset":114921,"count":0}],"isBlockCoverage":false},{"functionName":"assert.include","ranges":[{"startOffset":114940,"endOffset":115029,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInclude","ranges":[{"startOffset":115051,"endOffset":115147,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepInclude","ranges":[{"startOffset":115170,"endOffset":115268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepInclude","ranges":[{"startOffset":115294,"endOffset":115399,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedInclude","ranges":[{"startOffset":115424,"endOffset":115526,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedInclude","ranges":[{"startOffset":115554,"endOffset":115671,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedInclude","ranges":[{"startOffset":115700,"endOffset":115819,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedInclude","ranges":[{"startOffset":115851,"endOffset":115989,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownInclude","ranges":[{"startOffset":116011,"endOffset":116107,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnInclude","ranges":[{"startOffset":116132,"endOffset":116235,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnInclude","ranges":[{"startOffset":116261,"endOffset":116366,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnInclude","ranges":[{"startOffset":116395,"endOffset":116515,"count":0}],"isBlockCoverage":false},{"functionName":"assert.match","ranges":[{"startOffset":116532,"endOffset":116618,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notMatch","ranges":[{"startOffset":116638,"endOffset":116731,"count":0}],"isBlockCoverage":false},{"functionName":"assert.property","ranges":[{"startOffset":116751,"endOffset":116852,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notProperty","ranges":[{"startOffset":116875,"endOffset":116983,"count":0}],"isBlockCoverage":false},{"functionName":"assert.propertyVal","ranges":[{"startOffset":117006,"endOffset":117120,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notPropertyVal","ranges":[{"startOffset":117146,"endOffset":117279,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepPropertyVal","ranges":[{"startOffset":117306,"endOffset":117441,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepPropertyVal","ranges":[{"startOffset":117471,"endOffset":117621,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownProperty","ranges":[{"startOffset":117644,"endOffset":117752,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnProperty","ranges":[{"startOffset":117778,"endOffset":117901,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownPropertyVal","ranges":[{"startOffset":117927,"endOffset":118064,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnPropertyVal","ranges":[{"startOffset":118093,"endOffset":118245,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnPropertyVal","ranges":[{"startOffset":118275,"endOffset":118429,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnPropertyVal","ranges":[{"startOffset":118462,"endOffset":118623,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedProperty","ranges":[{"startOffset":118649,"endOffset":118771,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedProperty","ranges":[{"startOffset":118800,"endOffset":118941,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedPropertyVal","ranges":[{"startOffset":118970,"endOffset":119117,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedPropertyVal","ranges":[{"startOffset":119149,"endOffset":119303,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedPropertyVal","ranges":[{"startOffset":119336,"endOffset":119492,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedPropertyVal","ranges":[{"startOffset":119528,"endOffset":119691,"count":0}],"isBlockCoverage":false},{"functionName":"assert.lengthOf","ranges":[{"startOffset":119711,"endOffset":119810,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyKeys","ranges":[{"startOffset":119832,"endOffset":119935,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllKeys","ranges":[{"startOffset":119957,"endOffset":120060,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllKeys","ranges":[{"startOffset":120087,"endOffset":120206,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyKeys","ranges":[{"startOffset":120236,"endOffset":120359,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllKeys","ranges":[{"startOffset":120389,"endOffset":120512,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyDeepKeys","ranges":[{"startOffset":120538,"endOffset":120658,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllDeepKeys","ranges":[{"startOffset":120684,"endOffset":120804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllDeepKeys","ranges":[{"startOffset":120835,"endOffset":120975,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyDeepKeys","ranges":[{"startOffset":121009,"endOffset":121153,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllDeepKeys","ranges":[{"startOffset":121187,"endOffset":121331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":121349,"endOffset":121669,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":121693,"endOffset":121979,"count":0}],"isBlockCoverage":false},{"functionName":"assert.operator","ranges":[{"startOffset":121999,"endOffset":122951,"count":0}],"isBlockCoverage":false},{"functionName":"assert.closeTo","ranges":[{"startOffset":122970,"endOffset":123079,"count":0}],"isBlockCoverage":false},{"functionName":"assert.approximately","ranges":[{"startOffset":123104,"endOffset":123237,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameMembers","ranges":[{"startOffset":123260,"endOffset":123370,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameMembers","ranges":[{"startOffset":123396,"endOffset":123533,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepMembers","ranges":[{"startOffset":123560,"endOffset":123699,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepMembers","ranges":[{"startOffset":123729,"endOffset":123875,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameOrderedMembers","ranges":[{"startOffset":123905,"endOffset":124050,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameOrderedMembers","ranges":[{"startOffset":124083,"endOffset":124235,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepOrderedMembers","ranges":[{"startOffset":124269,"endOffset":124423,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepOrderedMembers","ranges":[{"startOffset":124460,"endOffset":124621,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeMembers","ranges":[{"startOffset":124647,"endOffset":124778,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeMembers","ranges":[{"startOffset":124807,"endOffset":124957,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepMembers","ranges":[{"startOffset":124987,"endOffset":125139,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepMembers","ranges":[{"startOffset":125172,"endOffset":125331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeOrderedMembers","ranges":[{"startOffset":125364,"endOffset":125522,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeOrderedMembers","ranges":[{"startOffset":125558,"endOffset":125723,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepOrderedMembers","ranges":[{"startOffset":125760,"endOffset":125927,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepOrderedMembers","ranges":[{"startOffset":125967,"endOffset":126141,"count":0}],"isBlockCoverage":false},{"functionName":"assert.oneOf","ranges":[{"startOffset":126158,"endOffset":126257,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isIterable","ranges":[{"startOffset":126279,"endOffset":126533,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changes","ranges":[{"startOffset":126552,"endOffset":126751,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesBy","ranges":[{"startOffset":126772,"endOffset":127091,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotChange","ranges":[{"startOffset":127116,"endOffset":127344,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesButNotBy","ranges":[{"startOffset":127371,"endOffset":127704,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increases","ranges":[{"startOffset":127725,"endOffset":127935,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesBy","ranges":[{"startOffset":127958,"endOffset":128281,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotIncrease","ranges":[{"startOffset":128308,"endOffset":128540,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesButNotBy","ranges":[{"startOffset":128569,"endOffset":128906,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreases","ranges":[{"startOffset":128927,"endOffset":129137,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesBy","ranges":[{"startOffset":129160,"endOffset":129483,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecrease","ranges":[{"startOffset":129510,"endOffset":129742,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecreaseBy","ranges":[{"startOffset":129771,"endOffset":130111,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesButNotBy","ranges":[{"startOffset":130140,"endOffset":130477,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":130496,"endOffset":130545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isExtensible","ranges":[{"startOffset":130569,"endOffset":130662,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotExtensible","ranges":[{"startOffset":130689,"endOffset":130789,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isSealed","ranges":[{"startOffset":130809,"endOffset":130894,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotSealed","ranges":[{"startOffset":130917,"endOffset":131009,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFrozen","ranges":[{"startOffset":131029,"endOffset":131114,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFrozen","ranges":[{"startOffset":131137,"endOffset":131229,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isEmpty","ranges":[{"startOffset":131248,"endOffset":131331,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotEmpty","ranges":[{"startOffset":131353,"endOffset":131443,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsSubset","ranges":[{"startOffset":131469,"endOffset":131545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotContainSubset","ranges":[{"startOffset":131577,"endOffset":131657,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":132216,"endOffset":132489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bcrypt/bcrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7315,"count":1}],"isBlockCoverage":true},{"functionName":"genSaltSync","ranges":[{"startOffset":435,"endOffset":870,"count":0}],"isBlockCoverage":false},{"functionName":"genSalt","ranges":[{"startOffset":1022,"endOffset":2359,"count":1},{"startOffset":1187,"endOffset":1370,"count":0},{"startOffset":1558,"endOffset":1630,"count":0},{"startOffset":1674,"endOffset":1702,"count":0},{"startOffset":1740,"endOffset":1922,"count":0},{"startOffset":1939,"endOffset":1966,"count":0},{"startOffset":1989,"endOffset":2005,"count":0},{"startOffset":2007,"endOffset":2156,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1869,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2103,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2185,"endOffset":2355,"count":1},{"startOffset":2235,"endOffset":2289,"count":0}],"isBlockCoverage":true},{"functionName":"hashSync","ranges":[{"startOffset":2547,"endOffset":3076,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":3279,"endOffset":4867,"count":2},{"startOffset":3363,"endOffset":3574,"count":0},{"startOffset":3612,"endOffset":3823,"count":0},{"startOffset":3909,"endOffset":3936,"count":1},{"startOffset":3938,"endOffset":4041,"count":0},{"startOffset":4056,"endOffset":4160,"count":1},{"startOffset":4162,"endOffset":4312,"count":0},{"startOffset":4312,"endOffset":4349,"count":1},{"startOffset":4349,"endOffset":4374,"count":0},{"startOffset":4376,"endOffset":4433,"count":1},{"startOffset":4435,"endOffset":4644,"count":0},{"startOffset":4644,"endOffset":4819,"count":1},{"startOffset":4819,"endOffset":4866,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3519,"endOffset":3566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3768,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4259,"endOffset":4304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4591,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4727,"endOffset":4811,"count":1}],"isBlockCoverage":true},{"functionName":"compareSync","ranges":[{"startOffset":5080,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5707,"endOffset":6916,"count":4},{"startOffset":5794,"endOffset":5946,"count":0},{"startOffset":5984,"endOffset":6136,"count":0},{"startOffset":6222,"endOffset":6249,"count":2},{"startOffset":6251,"endOffset":6354,"count":0},{"startOffset":6369,"endOffset":6476,"count":2},{"startOffset":6478,"endOffset":6628,"count":0},{"startOffset":6628,"endOffset":6665,"count":2},{"startOffset":6665,"endOffset":6690,"count":0},{"startOffset":6692,"endOffset":6719,"count":2},{"startOffset":6721,"endOffset":6868,"count":0},{"startOffset":6868,"endOffset":6915,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5891,"endOffset":5938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6081,"endOffset":6128,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6575,"endOffset":6620,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6815,"endOffset":6860,"count":0}],"isBlockCoverage":false},{"functionName":"getRounds","ranges":[{"startOffset":7072,"endOffset":7313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"336","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"337","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"338","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"339","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2409,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":696,"endOffset":1263,"count":7}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":739,"endOffset":801,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2406,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2164,"endOffset":2374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2681,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1413,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":1950,"endOffset":2047,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1996,"endOffset":2045,"count":4}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2095,"endOffset":2680,"count":4},{"startOffset":2194,"endOffset":2217,"count":0},{"startOffset":2299,"endOffset":2366,"count":1},{"startOffset":2371,"endOffset":2436,"count":1},{"startOffset":2441,"endOffset":2508,"count":1},{"startOffset":2513,"endOffset":2592,"count":1}],"isBlockCoverage":true}]},{"scriptId":"341","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10932,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":347,"endOffset":666,"count":18},{"startOffset":573,"endOffset":617,"count":0},{"startOffset":619,"endOffset":644,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":730,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1224,"endOffset":1369,"count":15}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1415,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1730,"endOffset":2308,"count":9},{"startOffset":1776,"endOffset":1839,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":1930,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"eehaslisteners","ranges":[{"startOffset":2624,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2865,"endOffset":3095,"count":9},{"startOffset":2927,"endOffset":2980,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":3143,"endOffset":3380,"count":9},{"startOffset":3207,"endOffset":3263,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3423,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":5167,"endOffset":5537,"count":24},{"startOffset":5242,"endOffset":5258,"count":0},{"startOffset":5363,"endOffset":5418,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5593,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":6232,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6721,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7305,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7484,"endOffset":7903,"count":24}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7950,"endOffset":8014,"count":24}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":8080,"endOffset":8686,"count":15},{"startOffset":8150,"endOffset":8213,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8740,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9955,"endOffset":10931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":612,"endOffset":1217,"count":14},{"startOffset":664,"endOffset":722,"count":0},{"startOffset":736,"endOffset":793,"count":0},{"startOffset":825,"endOffset":873,"count":0}],"isBlockCoverage":true},{"functionName":"forEachOwnPropertyName","ranges":[{"startOffset":917,"endOffset":1199,"count":504},{"startOffset":1012,"endOffset":1057,"count":0}],"isBlockCoverage":true}]},{"scriptId":"344","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14593,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1425,"endOffset":1538,"count":7}],"isBlockCoverage":true},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1630,"endOffset":3237,"count":7},{"startOffset":2984,"endOffset":3020,"count":0}],"isBlockCoverage":true},{"functionName":"onmount","ranges":[{"startOffset":2137,"endOffset":2636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3073,"endOffset":3229,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3477,"endOffset":3779,"count":14},{"startOffset":3522,"endOffset":3777,"count":7}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":4028,"endOffset":4365,"count":60},{"startOffset":4261,"endOffset":4329,"count":0}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":4609,"endOffset":5784,"count":14},{"startOffset":4754,"endOffset":4965,"count":7},{"startOffset":4805,"endOffset":4824,"count":0},{"startOffset":4826,"endOffset":4853,"count":0},{"startOffset":5044,"endOffset":5117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5202,"endOffset":5758,"count":14},{"startOffset":5267,"endOffset":5277,"count":7},{"startOffset":5321,"endOffset":5757,"count":0}],"isBlockCoverage":true},{"functionName":"mounted_app","ranges":[{"startOffset":5474,"endOffset":5701,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":6012,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7349,"endOffset":7618,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":7899,"endOffset":8130,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8439,"endOffset":9387,"count":441},{"startOffset":8498,"endOffset":8788,"count":357},{"startOffset":8578,"endOffset":8610,"count":533},{"startOffset":8664,"endOffset":8706,"count":181},{"startOffset":8706,"endOffset":8788,"count":176},{"startOffset":8788,"endOffset":8935,"count":84},{"startOffset":8935,"endOffset":9005,"count":7},{"startOffset":9010,"endOffset":9103,"count":7},{"startOffset":9108,"endOffset":9365,"count":7},{"startOffset":9369,"endOffset":9386,"count":84}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":9687,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":10025,"endOffset":10091,"count":74}],"isBlockCoverage":true},{"functionName":"disabled","ranges":[{"startOffset":10332,"endOffset":10391,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10508,"endOffset":10570,"count":7}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":10689,"endOffset":10753,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10835,"endOffset":11148,"count":35}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":10869,"endOffset":11145,"count":283},{"startOffset":10999,"endOffset":11144,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":11380,"endOffset":11611,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":12081,"endOffset":13530,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":14086,"endOffset":14196,"count":0}],"isBlockCoverage":false},{"functionName":"logerror","ranges":[{"startOffset":14279,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":14460,"endOffset":14592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6768,"count":1},{"startOffset":617,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":619,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":810,"endOffset":1209,"count":6}],"isBlockCoverage":true},{"functionName":"finalhandler","ranges":[{"startOffset":1455,"endOffset":2820,"count":60},{"startOffset":1520,"endOffset":1525,"count":0},{"startOffset":1569,"endOffset":1592,"count":0},{"startOffset":1593,"endOffset":1609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674,"endOffset":2818,"count":6},{"startOffset":1809,"endOffset":1874,"count":0},{"startOffset":1912,"endOffset":2298,"count":0},{"startOffset":2504,"endOffset":2514,"count":0},{"startOffset":2516,"endOffset":2559,"count":0},{"startOffset":2618,"endOffset":2751,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorHeaders","ranges":[{"startOffset":2922,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3415,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":3870,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4453,"endOffset":4580,"count":6},{"startOffset":4541,"endOffset":4578,"count":0}],"isBlockCoverage":true},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4692,"endOffset":4924,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5048,"endOffset":5173,"count":12},{"startOffset":5127,"endOffset":5149,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":5361,"endOffset":6431,"count":6},{"startOffset":6282,"endOffset":6310,"count":1},{"startOffset":6310,"endOffset":6430,"count":5}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":5416,"endOffset":6257,"count":6},{"startOffset":6190,"endOffset":6226,"count":0}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":6556,"endOffset":6767,"count":6},{"startOffset":6625,"endOffset":6765,"count":0}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"347","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":11},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":11},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"348","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":11},{"startOffset":895,"endOffset":1003,"count":170}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":11}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":791},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":11},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1403,"endOffset":1577,"count":6}],"isBlockCoverage":true}]},{"scriptId":"351","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":6},{"startOffset":625,"endOffset":1347,"count":0},{"startOffset":1352,"endOffset":1358,"count":0}],"isBlockCoverage":true}]},{"scriptId":"352","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4430,"count":1},{"startOffset":489,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":491,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":752,"endOffset":969,"count":5},{"startOffset":823,"endOffset":874,"count":0}],"isBlockCoverage":true},{"functionName":"isFinished","ranges":[{"startOffset":1083,"endOffset":1479,"count":11},{"startOffset":1179,"endOffset":1272,"count":0},{"startOffset":1441,"endOffset":1478,"count":0}],"isBlockCoverage":true},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1604,"endOffset":2467,"count":5},{"startOffset":2276,"endOffset":2465,"count":0}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":1707,"endOffset":1820,"count":5}],"isBlockCoverage":true},{"functionName":"onSocket","ranges":[{"startOffset":1925,"endOffset":2184,"count":5},{"startOffset":2039,"endOffset":2045,"count":0},{"startOffset":2074,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"attachListener","ranges":[{"startOffset":2577,"endOffset":2875,"count":5},{"startOffset":2719,"endOffset":2737,"count":0}],"isBlockCoverage":true},{"functionName":"createListener","ranges":[{"startOffset":2977,"endOffset":3314,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3011,"endOffset":3270,"count":5},{"startOffset":3125,"endOffset":3131,"count":0}],"isBlockCoverage":true},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3508,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":3861,"endOffset":3973,"count":1},{"startOffset":3942,"endOffset":3971,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4095,"endOffset":4429,"count":5},{"startOffset":4239,"endOffset":4262,"count":0},{"startOffset":4331,"endOffset":4350,"count":0}],"isBlockCoverage":true}]},{"scriptId":"353","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":10},{"startOffset":351,"endOffset":420,"count":0},{"startOffset":563,"endOffset":627,"count":0},{"startOffset":691,"endOffset":954,"count":20}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":962,"endOffset":1033,"count":5}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":1037,"endOffset":1188,"count":15},{"startOffset":1114,"endOffset":1184,"count":30}],"isBlockCoverage":true},{"functionName":"thunk","ranges":[{"startOffset":1192,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":20}],"isBlockCoverage":true},{"functionName":"onevent","ranges":[{"startOffset":1369,"endOffset":1681,"count":5},{"startOffset":1493,"endOffset":1499,"count":0},{"startOffset":1609,"endOffset":1645,"count":0}],"isBlockCoverage":true}]},{"scriptId":"354","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":368},{"startOffset":539,"endOffset":589,"count":0},{"startOffset":648,"endOffset":702,"count":300},{"startOffset":702,"endOffset":805,"count":68}],"isBlockCoverage":true},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":6},{"startOffset":1034,"endOffset":1080,"count":0},{"startOffset":1147,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":74},{"startOffset":1528,"endOffset":1555,"count":0},{"startOffset":1809,"endOffset":2268,"count":772},{"startOffset":1850,"endOffset":2040,"count":0},{"startOffset":2047,"endOffset":2057,"count":0},{"startOffset":2073,"endOffset":2083,"count":0},{"startOffset":2099,"endOffset":2109,"count":0},{"startOffset":2125,"endOffset":2135,"count":0},{"startOffset":2151,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2187,"count":0},{"startOffset":2203,"endOffset":2213,"count":0},{"startOffset":2220,"endOffset":2258,"count":0},{"startOffset":2320,"endOffset":2324,"count":0},{"startOffset":2410,"endOffset":2461,"count":0}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":374},{"startOffset":2696,"endOffset":2721,"count":308},{"startOffset":2722,"endOffset":2776,"count":308},{"startOffset":2777,"endOffset":2806,"count":308}],"isBlockCoverage":true}]},{"scriptId":"355","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"createMessageToStatusCodeMap","ranges":[{"startOffset":906,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":999,"endOffset":1153,"count":63}],"isBlockCoverage":true},{"functionName":"createStatusCodeList","ranges":[{"startOffset":1231,"endOffset":1359,"count":1}],"isBlockCoverage":true},{"functionName":"mapCode","ranges":[{"startOffset":1303,"endOffset":1356,"count":63}],"isBlockCoverage":true},{"functionName":"getStatusCode","ranges":[{"startOffset":1424,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"getStatusMessage","ranges":[{"startOffset":1721,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"status","ranges":[{"startOffset":2288,"endOffset":2609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":242,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":553,"endOffset":1117,"count":5},{"startOffset":594,"endOffset":654,"count":0},{"startOffset":752,"endOffset":1115,"count":0}],"isBlockCoverage":true}]},{"scriptId":"357","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15123,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":922,"endOffset":1316,"count":14},{"startOffset":963,"endOffset":968,"count":7}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":973,"endOffset":1045,"count":60}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":2469,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3359,"endOffset":8105,"count":120},{"startOffset":3857,"endOffset":3862,"count":112},{"startOffset":4075,"endOffset":4233,"count":0},{"startOffset":4326,"endOffset":4336,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4099,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4352,"endOffset":6866,"count":314},{"startOffset":4416,"endOffset":4422,"count":0},{"startOffset":4483,"endOffset":4549,"count":0},{"startOffset":4612,"endOffset":4740,"count":0},{"startOffset":4804,"endOffset":4855,"count":0},{"startOffset":4917,"endOffset":4976,"count":6},{"startOffset":4976,"endOffset":5022,"count":308},{"startOffset":5022,"endOffset":5066,"count":0},{"startOffset":5066,"endOffset":5155,"count":308},{"startOffset":5155,"endOffset":5193,"count":0},{"startOffset":5193,"endOffset":5299,"count":308},{"startOffset":5299,"endOffset":5320,"count":452},{"startOffset":5322,"endOffset":6181,"count":446},{"startOffset":5457,"endOffset":5541,"count":0},{"startOffset":5569,"endOffset":5596,"count":128},{"startOffset":5596,"endOffset":5616,"count":318},{"startOffset":5616,"endOffset":5690,"count":248},{"startOffset":5690,"endOffset":5714,"count":70},{"startOffset":5714,"endOffset":5816,"count":0},{"startOffset":5816,"endOffset":5971,"count":70},{"startOffset":5971,"endOffset":5994,"count":16},{"startOffset":5996,"endOffset":6055,"count":0},{"startOffset":6055,"endOffset":6121,"count":70},{"startOffset":6121,"endOffset":6141,"count":16},{"startOffset":6143,"endOffset":6175,"count":16},{"startOffset":6181,"endOffset":6223,"count":308},{"startOffset":6223,"endOffset":6261,"count":6},{"startOffset":6261,"endOffset":6320,"count":302},{"startOffset":6320,"endOffset":6352,"count":54},{"startOffset":6352,"endOffset":6431,"count":302},{"startOffset":6431,"endOffset":6472,"count":0},{"startOffset":6479,"endOffset":6493,"count":302}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6623,"endOffset":6860,"count":302},{"startOffset":6655,"endOffset":6696,"count":0},{"startOffset":6713,"endOffset":6767,"count":54},{"startOffset":6767,"endOffset":6838,"count":248}],"isBlockCoverage":true},{"functionName":"trim_prefix","ranges":[{"startOffset":6870,"endOffset":8103,"count":248},{"startOffset":6961,"endOffset":7893,"count":8},{"startOffset":7061,"endOffset":7110,"count":0},{"startOffset":7211,"endOffset":7223,"count":6},{"startOffset":7224,"endOffset":7236,"count":0},{"startOffset":7238,"endOffset":7261,"count":0},{"startOffset":7633,"endOffset":7702,"count":2},{"startOffset":7825,"endOffset":7867,"count":0},{"startOffset":7981,"endOffset":8042,"count":0}],"isBlockCoverage":true},{"functionName":"process_params","ranges":[{"startOffset":8193,"endOffset":9886,"count":302},{"startOffset":8412,"endOffset":8436,"count":278},{"startOffset":8436,"endOffset":9885,"count":24}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":8619,"endOffset":9440,"count":50},{"startOffset":8654,"endOffset":8685,"count":0},{"startOffset":8714,"endOffset":8742,"count":24},{"startOffset":8742,"endOffset":8956,"count":26},{"startOffset":8958,"endOffset":8987,"count":26},{"startOffset":8987,"endOffset":9171,"count":0},{"startOffset":9173,"endOffset":9439,"count":0}],"isBlockCoverage":true},{"functionName":"paramCallback","ranges":[{"startOffset":9472,"endOffset":9872,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10432,"endOffset":11459,"count":29},{"startOffset":10580,"endOffset":10791,"count":14},{"startOffset":10631,"endOffset":10650,"count":0},{"startOffset":10652,"endOffset":10679,"count":0},{"startOffset":10882,"endOffset":10958,"count":0},{"startOffset":11069,"endOffset":11174,"count":0},{"startOffset":11239,"endOffset":11255,"count":0}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":11755,"endOffset":12018,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12083,"endOffset":12249,"count":36}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12119,"endOffset":12246,"count":24}],"isBlockCoverage":true},{"functionName":"appendMethods","ranges":[{"startOffset":12292,"endOffset":12484,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":12513,"endOffset":12629,"count":308},{"startOffset":12588,"endOffset":12627,"count":0}],"isBlockCoverage":true},{"functionName":"getProtohost","ranges":[{"startOffset":12668,"endOffset":13062,"count":120},{"startOffset":12792,"endOffset":12886,"count":0},{"startOffset":12891,"endOffset":12903,"count":0},{"startOffset":12993,"endOffset":13044,"count":0},{"startOffset":13049,"endOffset":13060,"count":0}],"isBlockCoverage":true},{"functionName":"gettype","ranges":[{"startOffset":13094,"endOffset":13291,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13391,"endOffset":13503,"count":446},{"startOffset":13468,"endOffset":13501,"count":0}],"isBlockCoverage":true},{"functionName":"mergeParams","ranges":[{"startOffset":13540,"endOffset":14198,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14236,"endOffset":14638,"count":120},{"startOffset":14399,"endOffset":14466,"count":360}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14477,"endOffset":14635,"count":12},{"startOffset":14554,"endOffset":14592,"count":36}],"isBlockCoverage":true},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":14668,"endOffset":14847,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":14868,"endOffset":15122,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4399,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":663,"endOffset":818,"count":24}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":925,"endOffset":1222,"count":70},{"startOffset":985,"endOffset":1007,"count":0},{"startOffset":1100,"endOffset":1108,"count":0},{"startOffset":1132,"endOffset":1156,"count":0},{"startOffset":1158,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"_options","ranges":[{"startOffset":1315,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1710,"endOffset":2672,"count":54},{"startOffset":1829,"endOffset":1853,"count":0},{"startOffset":1935,"endOffset":1947,"count":0},{"startOffset":1973,"endOffset":1997,"count":0},{"startOffset":1999,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":2060,"endOffset":2670,"count":54},{"startOffset":2121,"endOffset":2139,"count":0},{"startOffset":2141,"endOffset":2169,"count":0},{"startOffset":2212,"endOffset":2231,"count":0},{"startOffset":2233,"endOffset":2263,"count":0},{"startOffset":2309,"endOffset":2353,"count":0},{"startOffset":2422,"endOffset":2452,"count":0},{"startOffset":2503,"endOffset":2526,"count":0},{"startOffset":2541,"endOffset":2595,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3281,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3787,"endOffset":4396,"count":35}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":3833,"endOffset":4393,"count":24},{"startOffset":4015,"endOffset":4186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"359","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":230,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":659,"endOffset":904,"count":67},{"startOffset":800,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1045,"endOffset":1194,"count":67},{"startOffset":1147,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"360","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":486,"endOffset":951,"count":101},{"startOffset":554,"endOffset":600,"count":24},{"startOffset":600,"endOffset":647,"count":77},{"startOffset":647,"endOffset":652,"count":0},{"startOffset":697,"endOffset":713,"count":24},{"startOffset":928,"endOffset":949,"count":55}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1146,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1561,"endOffset":1775,"count":356},{"startOffset":1641,"endOffset":1703,"count":0},{"startOffset":1741,"endOffset":1773,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":1943,"endOffset":2872,"count":446},{"startOffset":2092,"endOffset":2161,"count":240},{"startOffset":2161,"endOffset":2249,"count":206},{"startOffset":2249,"endOffset":2343,"count":0},{"startOffset":2343,"endOffset":2421,"count":206},{"startOffset":2421,"endOffset":2500,"count":128},{"startOffset":2500,"endOffset":2658,"count":78},{"startOffset":2658,"endOffset":2854,"count":38},{"startOffset":2776,"endOffset":2815,"count":0},{"startOffset":2854,"endOffset":2871,"count":78}],"isBlockCoverage":true},{"functionName":"decode_param","ranges":[{"startOffset":2965,"endOffset":3295,"count":38},{"startOffset":3045,"endOffset":3066,"count":0},{"startOffset":3116,"endOffset":3293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"361","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3839,"count":1}],"isBlockCoverage":true},{"functionName":"pathToRegexp","ranges":[{"startOffset":538,"endOffset":3837,"count":77},{"startOffset":603,"endOffset":608,"count":0},{"startOffset":624,"endOffset":629,"count":0},{"startOffset":729,"endOffset":733,"count":0},{"startOffset":949,"endOffset":1182,"count":0},{"startOffset":1211,"endOffset":1582,"count":0},{"startOffset":1616,"endOffset":1712,"count":0},{"startOffset":3216,"endOffset":3533,"count":9},{"startOffset":3244,"endOffset":3253,"count":0},{"startOffset":3336,"endOffset":3519,"count":0},{"startOffset":3552,"endOffset":3556,"count":0},{"startOffset":3589,"endOffset":3594,"count":55},{"startOffset":3595,"endOffset":3601,"count":22},{"startOffset":3679,"endOffset":3701,"count":48},{"startOffset":3701,"endOffset":3794,"count":29},{"startOffset":3778,"endOffset":3789,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1449,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1800,"endOffset":3101,"count":9},{"startOffset":1901,"endOffset":1978,"count":0},{"startOffset":2005,"endOffset":2108,"count":0},{"startOffset":2126,"endOffset":2135,"count":0},{"startOffset":2170,"endOffset":2231,"count":0},{"startOffset":2294,"endOffset":2352,"count":0},{"startOffset":2380,"endOffset":2464,"count":0},{"startOffset":2486,"endOffset":2491,"count":0},{"startOffset":2515,"endOffset":2522,"count":0},{"startOffset":2586,"endOffset":2670,"count":0},{"startOffset":2692,"endOffset":2728,"count":0},{"startOffset":2950,"endOffset":2981,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2622,"endOffset":2669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1},{"startOffset":299,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":383,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":460,"endOffset":531,"count":35}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":624,"endOffset":1039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6620,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2187,"endOffset":2281,"count":60}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":4464,"endOffset":4550,"count":60}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4724,"endOffset":4830,"count":0}],"isBlockCoverage":false},{"functionName":"lazyUndici","ranges":[{"startOffset":5010,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":5395,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5621,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5968,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6020,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6202,"endOffset":6250,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6380,"endOffset":6429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6561,"endOffset":6612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17313,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2526,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2615,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2803,"endOffset":6078,"count":62},{"startOffset":2867,"endOffset":2893,"count":0},{"startOffset":3444,"endOffset":3452,"count":60},{"startOffset":3633,"endOffset":3642,"count":60},{"startOffset":3844,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3987,"endOffset":5957,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6190,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6909,"endOffset":7427,"count":180},{"startOffset":6979,"endOffset":6993,"count":0},{"startOffset":7113,"endOffset":7142,"count":0},{"startOffset":7309,"endOffset":7338,"count":0},{"startOffset":7373,"endOffset":7406,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7461,"endOffset":9469,"count":60},{"startOffset":7687,"endOffset":7798,"count":0},{"startOffset":7896,"endOffset":7930,"count":0},{"startOffset":8126,"endOffset":8395,"count":0},{"startOffset":8429,"endOffset":8449,"count":0},{"startOffset":8528,"endOffset":8681,"count":0},{"startOffset":9061,"endOffset":9466,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8919,"endOffset":9054,"count":60},{"startOffset":8963,"endOffset":8989,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9505,"endOffset":10499,"count":60},{"startOffset":9642,"endOffset":9676,"count":0},{"startOffset":10278,"endOffset":10383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9889,"endOffset":10177,"count":60},{"startOffset":9924,"endOffset":9939,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeServerName","ranges":[{"startOffset":10504,"endOffset":10669,"count":120},{"startOffset":10611,"endOffset":10666,"count":60}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":10673,"endOffset":11449,"count":60},{"startOffset":10997,"endOffset":11252,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":11453,"endOffset":12945,"count":60},{"startOffset":12897,"endOffset":12942,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":11503,"endOffset":11600,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":11631,"endOffset":11961,"count":60}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":11994,"endOffset":12306,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12343,"endOffset":12835,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":12980,"endOffset":14749,"count":60},{"startOffset":13318,"endOffset":13611,"count":120},{"startOffset":13377,"endOffset":13606,"count":60},{"startOffset":13652,"endOffset":13660,"count":0},{"startOffset":13662,"endOffset":13762,"count":0},{"startOffset":14093,"endOffset":14433,"count":0},{"startOffset":14452,"endOffset":14462,"count":0},{"startOffset":14464,"endOffset":14744,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14618,"endOffset":14737,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14788,"endOffset":15932,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15967,"endOffset":16140,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16171,"endOffset":16532,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16537,"endOffset":16785,"count":60},{"startOffset":16695,"endOffset":16726,"count":0},{"startOffset":16747,"endOffset":16784,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16789,"endOffset":17192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29685,"count":1}],"isBlockCoverage":false},{"functionName":"emitErrorEvent","ranges":[{"startOffset":3018,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3361,"endOffset":3388,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":3643,"endOffset":3943,"count":120},{"startOffset":3722,"endOffset":3749,"count":60},{"startOffset":3751,"endOffset":3924,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3982,"endOffset":4055,"count":60}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":4062,"endOffset":12050,"count":60},{"startOffset":4174,"endOffset":4255,"count":0},{"startOffset":4279,"endOffset":4348,"count":0},{"startOffset":4461,"endOffset":4524,"count":0},{"startOffset":4763,"endOffset":5263,"count":0},{"startOffset":5580,"endOffset":5711,"count":0},{"startOffset":5757,"endOffset":5828,"count":0},{"startOffset":6045,"endOffset":6059,"count":0},{"startOffset":6060,"endOffset":6065,"count":0},{"startOffset":6230,"endOffset":6244,"count":0},{"startOffset":6297,"endOffset":6328,"count":0},{"startOffset":6650,"endOffset":6710,"count":0},{"startOffset":6762,"endOffset":6841,"count":0},{"startOffset":6997,"endOffset":7076,"count":0},{"startOffset":7150,"endOffset":7217,"count":0},{"startOffset":7272,"endOffset":7319,"count":0},{"startOffset":7411,"endOffset":7462,"count":0},{"startOffset":7603,"endOffset":7681,"count":0},{"startOffset":7786,"endOffset":7876,"count":0},{"startOffset":7970,"endOffset":7976,"count":0},{"startOffset":7989,"endOffset":8027,"count":0},{"startOffset":8054,"endOffset":8081,"count":44},{"startOffset":8082,"endOffset":8111,"count":44},{"startOffset":8112,"endOffset":8142,"count":26},{"startOffset":8143,"endOffset":8171,"count":26},{"startOffset":8172,"endOffset":8202,"count":26},{"startOffset":8204,"endOffset":8257,"count":34},{"startOffset":8257,"endOffset":8315,"count":26},{"startOffset":9034,"endOffset":9111,"count":0},{"startOffset":9224,"endOffset":9531,"count":0},{"startOffset":9887,"endOffset":9939,"count":0},{"startOffset":9940,"endOffset":9985,"count":0},{"startOffset":9996,"endOffset":10047,"count":0},{"startOffset":10212,"endOffset":10247,"count":0},{"startOffset":10249,"endOffset":10376,"count":0},{"startOffset":10414,"endOffset":10631,"count":0},{"startOffset":10636,"endOffset":10761,"count":0},{"startOffset":10945,"endOffset":11911,"count":0},{"startOffset":11965,"endOffset":12047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11394,"endOffset":11566,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":12218,"endOffset":12948,"count":60},{"startOffset":12316,"endOffset":12661,"count":0},{"startOffset":12713,"endOffset":12793,"count":0},{"startOffset":12823,"endOffset":12945,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":12995,"endOffset":13213,"count":60},{"startOffset":13045,"endOffset":13099,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":13250,"endOffset":13395,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":13434,"endOffset":13725,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13730,"endOffset":13782,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13786,"endOffset":13952,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13956,"endOffset":15176,"count":60},{"startOffset":14359,"endOffset":14422,"count":0},{"startOffset":14511,"endOffset":14542,"count":0},{"startOffset":14547,"endOffset":14890,"count":0},{"startOffset":15107,"endOffset":15173,"count":0}],"isBlockCoverage":true},{"functionName":"socketErrorListener","ranges":[{"startOffset":15180,"endOffset":15845,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15849,"endOffset":16357,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":16361,"endOffset":18757,"count":60},{"startOffset":16591,"endOffset":16888,"count":0},{"startOffset":16924,"endOffset":18129,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":18761,"endOffset":19002,"count":120},{"startOffset":18963,"endOffset":18979,"count":0},{"startOffset":18980,"endOffset":18997,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":19017,"endOffset":22129,"count":60},{"startOffset":19198,"endOffset":19365,"count":0},{"startOffset":19449,"endOffset":19458,"count":0},{"startOffset":19578,"endOffset":19660,"count":0},{"startOffset":19709,"endOffset":20432,"count":0},{"startOffset":20462,"endOffset":20481,"count":0},{"startOffset":20482,"endOffset":20506,"count":0},{"startOffset":20508,"endOffset":20731,"count":0},{"startOffset":20771,"endOffset":20793,"count":0},{"startOffset":20795,"endOffset":21029,"count":0},{"startOffset":21083,"endOffset":21186,"count":0},{"startOffset":21215,"endOffset":21255,"count":0},{"startOffset":21257,"endOffset":21395,"count":0},{"startOffset":21872,"endOffset":21884,"count":0},{"startOffset":21918,"endOffset":21927,"count":0},{"startOffset":22003,"endOffset":22085,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":22144,"endOffset":23242,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":23246,"endOffset":24435,"count":60},{"startOffset":23371,"endOffset":23424,"count":0},{"startOffset":23700,"endOffset":23735,"count":0},{"startOffset":23778,"endOffset":24432,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":24439,"endOffset":24596,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":24742,"endOffset":24867,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24871,"endOffset":25001,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":25005,"endOffset":26190,"count":60},{"startOffset":25176,"endOffset":25200,"count":0},{"startOffset":25396,"endOffset":25409,"count":0},{"startOffset":25673,"endOffset":25734,"count":0},{"startOffset":26119,"endOffset":26156,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":26194,"endOffset":26307,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":26311,"endOffset":26716,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":26755,"endOffset":26930,"count":60}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":26935,"endOffset":27769,"count":60},{"startOffset":27004,"endOffset":27703,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":27040,"endOffset":27292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27467,"endOffset":27621,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":27833,"endOffset":28610,"count":60},{"startOffset":28578,"endOffset":28607,"count":0}],"isBlockCoverage":true},{"functionName":"callSocketMethod","ranges":[{"startOffset":28244,"endOffset":28340,"count":60}],"isBlockCoverage":true},{"functionName":"onSocket","ranges":[{"startOffset":28364,"endOffset":28511,"count":60},{"startOffset":28438,"endOffset":28506,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":28651,"endOffset":29032,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":29037,"endOffset":29231,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":29272,"endOffset":29355,"count":60}],"isBlockCoverage":true},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":29410,"endOffset":29537,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":29581,"endOffset":29638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8415,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2344,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2817,"endOffset":4344,"count":120},{"startOffset":3109,"endOffset":3174,"count":0},{"startOffset":3203,"endOffset":3256,"count":60},{"startOffset":3348,"endOffset":3368,"count":60},{"startOffset":3370,"endOffset":3422,"count":60},{"startOffset":3699,"endOffset":3721,"count":60},{"startOffset":4098,"endOffset":4283,"count":60}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4348,"endOffset":4678,"count":86},{"startOffset":4499,"endOffset":4506,"count":0},{"startOffset":4648,"endOffset":4670,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4682,"endOffset":5189,"count":120},{"startOffset":4933,"endOffset":5051,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5241,"endOffset":5540,"count":2}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5546,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5934,"endOffset":6581,"count":120},{"startOffset":6028,"endOffset":6047,"count":60},{"startOffset":6137,"endOffset":6319,"count":0},{"startOffset":6499,"endOffset":6529,"count":60}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6801,"endOffset":6869,"count":540}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7140,"endOffset":7218,"count":540}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7222,"endOffset":7617,"count":122}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7621,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7852,"endOffset":8043,"count":120},{"startOffset":7901,"endOffset":7918,"count":0},{"startOffset":7920,"endOffset":8010,"count":0}],"isBlockCoverage":true}]},{"scriptId":"367","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":120},{"startOffset":255,"endOffset":279,"count":118},{"startOffset":280,"endOffset":329,"count":2}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":120},{"startOffset":447,"endOffset":470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"368","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15203,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1603,"endOffset":1709,"count":146}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1713,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1848,"endOffset":2874,"count":120}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3090,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3142,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3285,"endOffset":3594,"count":734},{"startOffset":3324,"endOffset":3561,"count":120},{"startOffset":3485,"endOffset":3554,"count":606}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3604,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3758,"endOffset":4107,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4117,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4272,"endOffset":4587,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4597,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4753,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5118,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5223,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5855,"endOffset":6243,"count":26}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":6491,"endOffset":7310,"count":120},{"startOffset":6566,"endOffset":6625,"count":0},{"startOffset":6995,"endOffset":7248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7071,"endOffset":7241,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7377,"endOffset":7845,"count":120},{"startOffset":7481,"endOffset":7588,"count":0},{"startOffset":7716,"endOffset":7837,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8580,"endOffset":12555,"count":686},{"startOffset":8659,"endOffset":8741,"count":0},{"startOffset":8747,"endOffset":9100,"count":174},{"startOffset":8783,"endOffset":8802,"count":114},{"startOffset":8804,"endOffset":8818,"count":60},{"startOffset":8818,"endOffset":8866,"count":114},{"startOffset":8868,"endOffset":8882,"count":0},{"startOffset":8882,"endOffset":8911,"count":114},{"startOffset":8911,"endOffset":8930,"count":60},{"startOffset":8932,"endOffset":8946,"count":54},{"startOffset":8946,"endOffset":8975,"count":60},{"startOffset":8975,"endOffset":8994,"count":0},{"startOffset":8996,"endOffset":9016,"count":60},{"startOffset":9016,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9100,"count":0},{"startOffset":9106,"endOffset":9501,"count":0},{"startOffset":9507,"endOffset":9753,"count":0},{"startOffset":9759,"endOffset":9956,"count":0},{"startOffset":9962,"endOffset":10259,"count":120},{"startOffset":10041,"endOffset":10061,"count":0},{"startOffset":10132,"endOffset":10148,"count":0},{"startOffset":10183,"endOffset":10208,"count":0},{"startOffset":10245,"endOffset":10259,"count":0},{"startOffset":10265,"endOffset":10381,"count":0},{"startOffset":10387,"endOffset":10603,"count":206},{"startOffset":10432,"endOffset":10459,"count":120},{"startOffset":10470,"endOffset":10492,"count":86},{"startOffset":10492,"endOffset":10556,"count":120},{"startOffset":10567,"endOffset":10589,"count":0},{"startOffset":10589,"endOffset":10603,"count":120},{"startOffset":10609,"endOffset":11043,"count":0},{"startOffset":11049,"endOffset":11174,"count":86},{"startOffset":11096,"endOffset":11125,"count":0},{"startOffset":11160,"endOffset":11174,"count":0},{"startOffset":11180,"endOffset":11538,"count":60},{"startOffset":11228,"endOffset":11258,"count":0},{"startOffset":11300,"endOffset":11370,"count":0},{"startOffset":11381,"endOffset":11482,"count":0},{"startOffset":11493,"endOffset":11538,"count":0},{"startOffset":11544,"endOffset":11796,"count":0},{"startOffset":11802,"endOffset":12172,"count":0},{"startOffset":12178,"endOffset":12436,"count":0},{"startOffset":12441,"endOffset":12461,"count":160},{"startOffset":12461,"endOffset":12554,"count":80}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":13177,"endOffset":14225,"count":606},{"startOffset":13314,"endOffset":13327,"count":286},{"startOffset":13329,"endOffset":13545,"count":320},{"startOffset":13432,"endOffset":13498,"count":0},{"startOffset":13545,"endOffset":14222,"count":286},{"startOffset":13567,"endOffset":13769,"count":0},{"startOffset":13806,"endOffset":14129,"count":0}],"isBlockCoverage":true},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14305,"endOffset":14491,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14619,"endOffset":14868,"count":34}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":14873,"endOffset":15128,"count":120},{"startOffset":15080,"endOffset":15125,"count":60}],"isBlockCoverage":true}]},{"scriptId":"369","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37422,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2703,"endOffset":2730,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3184,"endOffset":3192,"count":232}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3442,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3534,"endOffset":3648,"count":426},{"startOffset":3600,"endOffset":3644,"count":0}],"isBlockCoverage":true},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3652,"endOffset":5287,"count":120},{"startOffset":5152,"endOffset":5167,"count":60},{"startOffset":5168,"endOffset":5196,"count":60},{"startOffset":5245,"endOffset":5274,"count":60},{"startOffset":5275,"endOffset":5283,"count":60}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5491,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5624,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5765,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6022,"endOffset":6053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6154,"endOffset":6271,"count":86},{"startOffset":6230,"endOffset":6260,"count":60},{"startOffset":6261,"endOffset":6264,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6379,"endOffset":6479,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6580,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6742,"endOffset":6790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6887,"endOffset":7372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7538,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7592,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7734,"endOffset":7778,"count":420}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7788,"endOffset":7940,"count":180},{"startOffset":7849,"endOffset":7909,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8067,"endOffset":8539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8640,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":9227,"endOffset":9749,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9787,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9918,"endOffset":10707,"count":120},{"startOffset":9973,"endOffset":10008,"count":60},{"startOffset":10089,"endOffset":10628,"count":0},{"startOffset":10629,"endOffset":10635,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10543,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10751,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":11312,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":11759,"endOffset":12733,"count":206},{"startOffset":12042,"endOffset":12066,"count":120},{"startOffset":12068,"endOffset":12666,"count":120},{"startOffset":12260,"endOffset":12331,"count":66},{"startOffset":12293,"endOffset":12317,"count":60},{"startOffset":12318,"endOffset":12330,"count":26},{"startOffset":12333,"endOffset":12376,"count":66},{"startOffset":12376,"endOffset":12631,"count":54}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":12788,"endOffset":13659,"count":206},{"startOffset":12883,"endOffset":12894,"count":120},{"startOffset":12896,"endOffset":13047,"count":0},{"startOffset":13089,"endOffset":13143,"count":0},{"startOffset":13158,"endOffset":13187,"count":120},{"startOffset":13188,"endOffset":13204,"count":120},{"startOffset":13206,"endOffset":13433,"count":120},{"startOffset":13304,"endOffset":13344,"count":54},{"startOffset":13433,"endOffset":13658,"count":86}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":13721,"endOffset":18757,"count":120},{"startOffset":14163,"endOffset":14274,"count":426},{"startOffset":14281,"endOffset":15007,"count":0},{"startOffset":15083,"endOffset":15097,"count":60},{"startOffset":15099,"endOffset":15151,"count":60},{"startOffset":15758,"endOffset":15845,"count":0},{"startOffset":15847,"endOffset":16035,"count":0},{"startOffset":16093,"endOffset":16296,"count":0},{"startOffset":16381,"endOffset":16458,"count":0},{"startOffset":16489,"endOffset":16527,"count":0},{"startOffset":16529,"endOffset":16579,"count":0},{"startOffset":16610,"endOffset":17020,"count":0},{"startOffset":17132,"endOffset":17144,"count":34},{"startOffset":17146,"endOffset":18155,"count":34},{"startOffset":17173,"endOffset":17292,"count":0},{"startOffset":17371,"endOffset":18150,"count":0},{"startOffset":18482,"endOffset":18531,"count":0},{"startOffset":18739,"endOffset":18754,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":18761,"endOffset":19907,"count":426},{"startOffset":18843,"endOffset":18867,"count":0},{"startOffset":19116,"endOffset":19138,"count":0},{"startOffset":19140,"endOffset":19395,"count":0},{"startOffset":19426,"endOffset":19853,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":19911,"endOffset":20115,"count":426},{"startOffset":19991,"endOffset":20023,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":20119,"endOffset":21012,"count":426},{"startOffset":20220,"endOffset":20227,"count":20},{"startOffset":20227,"endOffset":20285,"count":406},{"startOffset":20285,"endOffset":20505,"count":0},{"startOffset":20511,"endOffset":20682,"count":0},{"startOffset":20688,"endOffset":20826,"count":86},{"startOffset":20832,"endOffset":20844,"count":0},{"startOffset":20850,"endOffset":20864,"count":0},{"startOffset":20870,"endOffset":20927,"count":0},{"startOffset":20933,"endOffset":21004,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21059,"endOffset":21246,"count":480},{"startOffset":21147,"endOffset":21243,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21296,"endOffset":21616,"count":480},{"startOffset":21343,"endOffset":21429,"count":0},{"startOffset":21468,"endOffset":21613,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":21622,"endOffset":21890,"count":120},{"startOffset":21722,"endOffset":21889,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":21932,"endOffset":22292,"count":480},{"startOffset":21987,"endOffset":22038,"count":0},{"startOffset":22173,"endOffset":22223,"count":120}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":22336,"endOffset":23382,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":23428,"endOffset":24178,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":24223,"endOffset":24433,"count":490},{"startOffset":24353,"endOffset":24360,"count":60},{"startOffset":24360,"endOffset":24424,"count":430},{"startOffset":24424,"endOffset":24429,"count":198}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":24550,"endOffset":24655,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":24779,"endOffset":25193,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":25299,"endOffset":25723,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":25768,"endOffset":25916,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":25964,"endOffset":26542,"count":18},{"startOffset":26050,"endOffset":26104,"count":0},{"startOffset":26167,"endOffset":26238,"count":0},{"startOffset":26244,"endOffset":26316,"count":0},{"startOffset":26322,"endOffset":26392,"count":0},{"startOffset":26398,"endOffset":26454,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":26593,"endOffset":26686,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26828,"endOffset":26865,"count":24}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":26970,"endOffset":27006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27115,"endOffset":27199,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":27282,"endOffset":27545,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":27550,"endOffset":27963,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":27967,"endOffset":28123,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":28127,"endOffset":28370,"count":120},{"startOffset":28204,"endOffset":28238,"count":0},{"startOffset":28239,"endOffset":28259,"count":0},{"startOffset":28260,"endOffset":28288,"count":0},{"startOffset":28289,"endOffset":28317,"count":0},{"startOffset":28318,"endOffset":28361,"count":0}],"isBlockCoverage":true},{"functionName":"write_","ranges":[{"startOffset":28374,"endOffset":30867,"count":86},{"startOffset":28518,"endOffset":28565,"count":0},{"startOffset":28601,"endOffset":28624,"count":54},{"startOffset":28626,"endOffset":28729,"count":0},{"startOffset":28765,"endOffset":28816,"count":0},{"startOffset":28841,"endOffset":28893,"count":0},{"startOffset":28908,"endOffset":29057,"count":0},{"startOffset":29106,"endOffset":29517,"count":0},{"startOffset":29604,"endOffset":29640,"count":32},{"startOffset":29641,"endOffset":29659,"count":54},{"startOffset":29758,"endOffset":30031,"count":0},{"startOffset":30050,"endOffset":30063,"count":0},{"startOffset":30064,"endOffset":30093,"count":0},{"startOffset":30095,"endOffset":30178,"count":0},{"startOffset":30220,"endOffset":30241,"count":0},{"startOffset":30243,"endOffset":30749,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":30873,"endOffset":30927,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":30971,"endOffset":32420,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":32425,"endOffset":32523,"count":120},{"startOffset":32487,"endOffset":32494,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":32559,"endOffset":34634,"count":120},{"startOffset":32637,"endOffset":32707,"count":0},{"startOffset":32749,"endOffset":32803,"count":0},{"startOffset":32820,"endOffset":33128,"count":86},{"startOffset":32846,"endOffset":33009,"count":0},{"startOffset":33036,"endOffset":33073,"count":60},{"startOffset":33128,"endOffset":33540,"count":34},{"startOffset":33153,"endOffset":33386,"count":0},{"startOffset":33437,"endOffset":33474,"count":0},{"startOffset":33587,"endOffset":33617,"count":0},{"startOffset":33653,"endOffset":33699,"count":0},{"startOffset":33701,"endOffset":33798,"count":0},{"startOffset":33899,"endOffset":33974,"count":0},{"startOffset":34002,"endOffset":34024,"count":86},{"startOffset":34025,"endOffset":34033,"count":0},{"startOffset":34080,"endOffset":34123,"count":0},{"startOffset":34148,"endOffset":34271,"count":60},{"startOffset":34515,"endOffset":34538,"count":60},{"startOffset":34539,"endOffset":34584,"count":60},{"startOffset":34586,"endOffset":34613,"count":60}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":34813,"endOffset":34889,"count":120}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":35705,"endOffset":36143,"count":120},{"startOffset":35924,"endOffset":36135,"count":60},{"startOffset":36046,"endOffset":36065,"count":0},{"startOffset":36067,"endOffset":36135,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":36189,"endOffset":36782,"count":174},{"startOffset":36300,"endOffset":36317,"count":60},{"startOffset":36317,"endOffset":36535,"count":114},{"startOffset":36535,"endOffset":36649,"count":140},{"startOffset":36649,"endOffset":36781,"count":114}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":36830,"endOffset":36968,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":37006,"endOffset":37151,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":37212,"endOffset":37259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":307,"endOffset":377,"count":60},{"startOffset":346,"endOffset":354,"count":4}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":381,"endOffset":518,"count":4}],"isBlockCoverage":true},{"functionName":"resetCache","ranges":[{"startOffset":522,"endOffset":573,"count":3}],"isBlockCoverage":true},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":602,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":729,"endOffset":793,"count":240}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":845,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":939,"endOffset":1027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40105,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2828,"endOffset":2855,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7428,"endOffset":7510,"count":60}],"isBlockCoverage":true},{"functionName":"ServerResponse","ranges":[{"startOffset":7517,"endOffset":8532,"count":60},{"startOffset":7629,"endOffset":7651,"count":0},{"startOffset":7821,"endOffset":7940,"count":0},{"startOffset":7971,"endOffset":8229,"count":0},{"startOffset":8259,"endOffset":8381,"count":0},{"startOffset":8430,"endOffset":8529,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":8703,"endOffset":9368,"count":60},{"startOffset":8763,"endOffset":8785,"count":0},{"startOffset":8787,"endOffset":9076,"count":0},{"startOffset":9154,"endOffset":9195,"count":0},{"startOffset":9197,"endOffset":9365,"count":0}],"isBlockCoverage":true},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9474,"endOffset":10486,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10530,"endOffset":10794,"count":60},{"startOffset":10590,"endOffset":10639,"count":0}],"isBlockCoverage":true},{"functionName":"detachSocket","ranges":[{"startOffset":10839,"endOffset":11026,"count":60}],"isBlockCoverage":true},{"functionName":"writeContinue","ranges":[{"startOffset":11072,"endOffset":11193,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":11241,"endOffset":11341,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":11389,"endOffset":11925,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11973,"endOffset":12040,"count":60}],"isBlockCoverage":true},{"functionName":"writeHead","ranges":[{"startOffset":12094,"endOffset":15029,"count":60},{"startOffset":12163,"endOffset":12216,"count":0},{"startOffset":12328,"endOffset":12399,"count":0},{"startOffset":12439,"endOffset":12534,"count":0},{"startOffset":12636,"endOffset":12648,"count":0},{"startOffset":12865,"endOffset":13416,"count":0},{"startOffset":13431,"endOffset":13709,"count":0},{"startOffset":13785,"endOffset":13849,"count":0},{"startOffset":13908,"endOffset":13952,"count":0},{"startOffset":14131,"endOffset":14726,"count":0},{"startOffset":14903,"endOffset":14920,"count":0},{"startOffset":14922,"endOffset":14963,"count":0}],"isBlockCoverage":true},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":15145,"endOffset":18017,"count":60},{"startOffset":15414,"endOffset":15465,"count":0},{"startOffset":15611,"endOffset":15677,"count":0},{"startOffset":15816,"endOffset":15924,"count":0},{"startOffset":16075,"endOffset":16183,"count":0},{"startOffset":16415,"endOffset":16509,"count":0},{"startOffset":16605,"endOffset":16721,"count":0},{"startOffset":16912,"endOffset":17072,"count":0},{"startOffset":17245,"endOffset":17370,"count":0},{"startOffset":17526,"endOffset":17608,"count":0},{"startOffset":17790,"endOffset":17955,"count":0}],"isBlockCoverage":true},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":18021,"endOffset":18573,"count":60},{"startOffset":18185,"endOffset":18247,"count":0}],"isBlockCoverage":true},{"functionName":"httpServerPreClose","ranges":[{"startOffset":18577,"endOffset":18707,"count":60}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":18711,"endOffset":19942,"count":60},{"startOffset":18789,"endOffset":18833,"count":0},{"startOffset":18941,"endOffset":19056,"count":0}],"isBlockCoverage":true},{"functionName":"Server.close","ranges":[{"startOffset":20077,"endOffset":20199,"count":60}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":20243,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":20352,"endOffset":20568,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":20613,"endOffset":20951,"count":60},{"startOffset":20654,"endOffset":20673,"count":0},{"startOffset":20829,"endOffset":20876,"count":0},{"startOffset":20878,"endOffset":20903,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":20986,"endOffset":21120,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":21171,"endOffset":21760,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":21765,"endOffset":22124,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":22128,"endOffset":22277,"count":60}],"isBlockCoverage":true},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":22281,"endOffset":25780,"count":60},{"startOffset":22713,"endOffset":22755,"count":0},{"startOffset":22762,"endOffset":22796,"count":0},{"startOffset":22956,"endOffset":22983,"count":0},{"startOffset":23298,"endOffset":23311,"count":0},{"startOffset":23529,"endOffset":23593,"count":0}],"isBlockCoverage":true},{"functionName":"socketSetEncoding","ranges":[{"startOffset":25784,"endOffset":25858,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":25862,"endOffset":25981,"count":108}],"isBlockCoverage":true},{"functionName":"socketOnDrain","ranges":[{"startOffset":25985,"endOffset":26455,"count":108},{"startOffset":26178,"endOffset":26191,"count":0},{"startOffset":26193,"endOffset":26305,"count":0},{"startOffset":26392,"endOffset":26452,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnTimeout","ranges":[{"startOffset":26459,"endOffset":26827,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":26831,"endOffset":26984,"count":60}],"isBlockCoverage":true},{"functionName":"abortIncoming","ranges":[{"startOffset":26988,"endOffset":27181,"count":60},{"startOffset":27050,"endOffset":27144,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnEnd","ranges":[{"startOffset":27185,"endOffset":27723,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":27727,"endOffset":27962,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":27966,"endOffset":28143,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":28147,"endOffset":28654,"count":60}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":28658,"endOffset":28808,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":28825,"endOffset":28833,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":29405,"endOffset":30509,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":30513,"endOffset":32151,"count":60},{"startOffset":30662,"endOffset":30773,"count":0},{"startOffset":30809,"endOffset":31840,"count":0},{"startOffset":31903,"endOffset":31970,"count":0},{"startOffset":31995,"endOffset":32011,"count":0},{"startOffset":32013,"endOffset":32148,"count":0}],"isBlockCoverage":true},{"functionName":"clearIncoming","ranges":[{"startOffset":32155,"endOffset":32486,"count":89},{"startOffset":32388,"endOffset":32427,"count":60},{"startOffset":32427,"endOffset":32478,"count":29}],"isBlockCoverage":true},{"functionName":"resOnFinish","ranges":[{"startOffset":32490,"endOffset":34021,"count":60},{"startOffset":32593,"endOffset":32720,"count":0},{"startOffset":33190,"endOffset":33228,"count":34},{"startOffset":33235,"endOffset":33247,"count":34},{"startOffset":33451,"endOffset":33486,"count":0},{"startOffset":33491,"endOffset":34018,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":34025,"endOffset":34164,"count":60}],"isBlockCoverage":true},{"functionName":"parserOnIncoming","ranges":[{"startOffset":34335,"endOffset":38155,"count":60},{"startOffset":34470,"endOffset":34618,"count":0},{"startOffset":34964,"endOffset":35191,"count":0},{"startOffset":35908,"endOffset":36033,"count":0},{"startOffset":36064,"endOffset":36157,"count":0},{"startOffset":36829,"endOffset":36924,"count":0},{"startOffset":37097,"endOffset":37243,"count":0},{"startOffset":37274,"endOffset":37335,"count":0},{"startOffset":37337,"endOffset":37461,"count":0},{"startOffset":37505,"endOffset":38041,"count":0}],"isBlockCoverage":true},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":38159,"endOffset":38345,"count":120},{"startOffset":38259,"endOffset":38302,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketResume","ranges":[{"startOffset":38349,"endOffset":38887,"count":60},{"startOffset":38726,"endOffset":38764,"count":0},{"startOffset":38813,"endOffset":38884,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketPause","ranges":[{"startOffset":38891,"endOffset":39022,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":39026,"endOffset":39286,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":39290,"endOffset":39860,"count":180}],"isBlockCoverage":true},{"functionName":"socketListenerWrap","ranges":[{"startOffset":39357,"endOffset":39856,"count":130},{"startOffset":39551,"endOffset":39748,"count":0},{"startOffset":39803,"endOffset":39832,"count":0}],"isBlockCoverage":true}]},{"scriptId":"372","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":276,"endOffset":379,"count":7},{"startOffset":331,"endOffset":361,"count":0}],"isBlockCoverage":true}]},{"scriptId":"373","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":502,"endOffset":850,"count":7}],"isBlockCoverage":true},{"functionName":"expressInit","ranges":[{"startOffset":526,"endOffset":847,"count":60}],"isBlockCoverage":true}]},{"scriptId":"375","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":400,"endOffset":883,"count":7},{"startOffset":605,"endOffset":642,"count":0},{"startOffset":644,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":726,"endOffset":880,"count":60}],"isBlockCoverage":true}]},{"scriptId":"376","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"377","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11329,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":546,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1167,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1322,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1565,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5761,"endOffset":9234,"count":60},{"startOffset":5819,"endOffset":5851,"count":0},{"startOffset":5906,"endOffset":5951,"count":0},{"startOffset":5953,"endOffset":6063,"count":0},{"startOffset":6117,"endOffset":6161,"count":0},{"startOffset":6163,"endOffset":6272,"count":0},{"startOffset":6343,"endOffset":6380,"count":0},{"startOffset":6382,"endOffset":6451,"count":0},{"startOffset":6549,"endOffset":6576,"count":0},{"startOffset":6577,"endOffset":6609,"count":0},{"startOffset":6611,"endOffset":6716,"count":0},{"startOffset":6799,"endOffset":6972,"count":0},{"startOffset":7123,"endOffset":7160,"count":0},{"startOffset":7234,"endOffset":7281,"count":0},{"startOffset":7347,"endOffset":7358,"count":0},{"startOffset":7376,"endOffset":7433,"count":0},{"startOffset":7468,"endOffset":7511,"count":0},{"startOffset":7513,"endOffset":7598,"count":0},{"startOffset":7690,"endOffset":7696,"count":0},{"startOffset":7718,"endOffset":7736,"count":0},{"startOffset":7817,"endOffset":7838,"count":0},{"startOffset":7965,"endOffset":7990,"count":0},{"startOffset":8147,"endOffset":8169,"count":0},{"startOffset":8321,"endOffset":8337,"count":0},{"startOffset":8388,"endOffset":8401,"count":0},{"startOffset":8488,"endOffset":8510,"count":0},{"startOffset":8591,"endOffset":8605,"count":0},{"startOffset":8695,"endOffset":8718,"count":0},{"startOffset":8890,"endOffset":8910,"count":0},{"startOffset":8992,"endOffset":9008,"count":0},{"startOffset":9077,"endOffset":9088,"count":0},{"startOffset":9196,"endOffset":9225,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":9254,"endOffset":11327,"count":60},{"startOffset":9434,"endOffset":9505,"count":0},{"startOffset":9540,"endOffset":9606,"count":0},{"startOffset":9677,"endOffset":9703,"count":0},{"startOffset":9836,"endOffset":9861,"count":0},{"startOffset":9949,"endOffset":9992,"count":0},{"startOffset":10079,"endOffset":10821,"count":0},{"startOffset":10919,"endOffset":10924,"count":0},{"startOffset":10965,"endOffset":11271,"count":0},{"startOffset":11302,"endOffset":11319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"378","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1189,"count":1},{"startOffset":310,"endOffset":330,"count":0},{"startOffset":331,"endOffset":352,"count":0}],"isBlockCoverage":true},{"functionName":"getSideChannel","ranges":[{"startOffset":399,"endOffset":1187,"count":60}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":595,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":737,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":823,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":901,"endOffset":972,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":981,"endOffset":1105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19059,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":13069,"endOffset":13110,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3594,"endOffset":11263,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":11266,"endOffset":11434,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":11436,"endOffset":11510,"count":0}],"isBlockCoverage":false},{"functionName":"canTrustToString","ranges":[{"startOffset":11512,"endOffset":11668,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":11669,"endOffset":11759,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11760,"endOffset":11848,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11849,"endOffset":11941,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11942,"endOffset":12032,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":12033,"endOffset":12125,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":12126,"endOffset":12218,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":12219,"endOffset":12313,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12423,"endOffset":12804,"count":1},{"startOffset":12475,"endOffset":12554,"count":0},{"startOffset":12616,"endOffset":12656,"count":0},{"startOffset":12657,"endOffset":12672,"count":0},{"startOffset":12674,"endOffset":12803,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12806,"endOffset":13022,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":13072,"endOffset":13110,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":13112,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":13174,"endOffset":13234,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":13236,"endOffset":13413,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13415,"endOffset":13597,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13599,"endOffset":13938,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13940,"endOffset":14320,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":14322,"endOffset":14529,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14531,"endOffset":14870,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14872,"endOffset":15252,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":15254,"endOffset":15518,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15520,"endOffset":16111,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":16113,"endOffset":16381,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":16383,"endOffset":16444,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":16446,"endOffset":16509,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":16511,"endOffset":16718,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16720,"endOffset":16895,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16897,"endOffset":17283,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":17285,"endOffset":17496,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":17498,"endOffset":19058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-list/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3391,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":512,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1112,"endOffset":1251,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1312,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":1757,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"listDelete","ranges":[{"startOffset":1970,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannelList","ranges":[{"startOffset":2105,"endOffset":3389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1981,"count":1}],"isBlockCoverage":true},{"functionName":"getSideChannelMap","ranges":[{"startOffset":889,"endOffset":1979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14439,"count":1},{"startOffset":1512,"endOffset":1528,"count":0},{"startOffset":1947,"endOffset":1958,"count":0},{"startOffset":2080,"endOffset":2091,"count":0},{"startOffset":2182,"endOffset":2193,"count":0},{"startOffset":2295,"endOffset":2306,"count":0},{"startOffset":2544,"endOffset":2555,"count":0},{"startOffset":2610,"endOffset":2621,"count":0},{"startOffset":2689,"endOffset":2700,"count":0},{"startOffset":2777,"endOffset":2788,"count":0},{"startOffset":2877,"endOffset":2888,"count":0},{"startOffset":3225,"endOffset":3239,"count":0},{"startOffset":3296,"endOffset":3307,"count":0},{"startOffset":3379,"endOffset":3390,"count":0},{"startOffset":3478,"endOffset":3489,"count":0},{"startOffset":3624,"endOffset":3635,"count":0},{"startOffset":3700,"endOffset":3711,"count":0},{"startOffset":3777,"endOffset":3788,"count":0},{"startOffset":3938,"endOffset":3949,"count":0},{"startOffset":3994,"endOffset":4005,"count":0},{"startOffset":4044,"endOffset":4055,"count":0},{"startOffset":4145,"endOffset":4156,"count":0},{"startOffset":4403,"endOffset":4414,"count":0},{"startOffset":4467,"endOffset":4478,"count":0},{"startOffset":4601,"endOffset":4612,"count":0},{"startOffset":4682,"endOffset":4693,"count":0},{"startOffset":4783,"endOffset":4794,"count":0},{"startOffset":4902,"endOffset":4913,"count":0},{"startOffset":5043,"endOffset":5054,"count":0},{"startOffset":5089,"endOffset":5100,"count":0},{"startOffset":5279,"endOffset":5290,"count":0},{"startOffset":5370,"endOffset":5381,"count":0},{"startOffset":5456,"endOffset":5467,"count":0},{"startOffset":5536,"endOffset":5547,"count":0},{"startOffset":5634,"endOffset":5645,"count":0},{"startOffset":5702,"endOffset":5713,"count":0},{"startOffset":5770,"endOffset":5781,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":788,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":1035,"endOffset":1075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1108,"endOffset":1507,"count":1},{"startOffset":1448,"endOffset":1500,"count":0}],"isBlockCoverage":true},{"functionName":"doEval","ranges":[{"startOffset":6439,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":10556,"endOffset":11107,"count":13},{"startOffset":10680,"endOffset":10695,"count":4},{"startOffset":10697,"endOffset":10777,"count":0},{"startOffset":10800,"endOffset":10816,"count":4},{"startOffset":10818,"endOffset":10898,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10947,"endOffset":11087,"count":34},{"startOffset":11024,"endOffset":11065,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":11154,"endOffset":11830,"count":13},{"startOffset":11285,"endOffset":11370,"count":0},{"startOffset":11482,"endOffset":11521,"count":0},{"startOffset":11557,"endOffset":11573,"count":0},{"startOffset":11575,"endOffset":11683,"count":0},{"startOffset":11760,"endOffset":11829,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":11850,"endOffset":14437,"count":13},{"startOffset":11946,"endOffset":12019,"count":0},{"startOffset":12046,"endOffset":12082,"count":12},{"startOffset":12084,"endOffset":12157,"count":0},{"startOffset":12201,"endOffset":12317,"count":0},{"startOffset":12404,"endOffset":12408,"count":0},{"startOffset":12638,"endOffset":12721,"count":0},{"startOffset":12780,"endOffset":14420,"count":21},{"startOffset":13004,"endOffset":13021,"count":0},{"startOffset":13026,"endOffset":13114,"count":0},{"startOffset":13155,"endOffset":13190,"count":0},{"startOffset":13326,"endOffset":13373,"count":8},{"startOffset":13373,"endOffset":14417,"count":13},{"startOffset":13425,"endOffset":13594,"count":0},{"startOffset":13636,"endOffset":14255,"count":10},{"startOffset":14146,"endOffset":14179,"count":1},{"startOffset":14181,"endOffset":14211,"count":1},{"startOffset":14211,"endOffset":14250,"count":9},{"startOffset":14255,"endOffset":14325,"count":3}],"isBlockCoverage":true}]},{"scriptId":"385","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-object-atoms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":67,"count":1}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66,"count":1}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"388","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"389","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"390","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-errors/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/abs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/floor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/max.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"396","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/pow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/round.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":98,"endOffset":212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/math-intrinsics/isNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1},{"startOffset":78,"endOffset":119,"count":0}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":81,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gopd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1},{"startOffset":120,"endOffset":178,"count":0}],"isBlockCoverage":true}]},{"scriptId":"401","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gopd/gOPD.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true}]},{"scriptId":"402","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":288,"count":1},{"startOffset":86,"endOffset":94,"count":0},{"startOffset":171,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"403","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":447,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":158,"endOffset":445,"count":1},{"startOffset":227,"endOffset":244,"count":0},{"startOffset":280,"endOffset":297,"count":0},{"startOffset":342,"endOffset":359,"count":0},{"startOffset":400,"endOffset":417,"count":0}],"isBlockCoverage":true}]},{"scriptId":"404","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1922,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":123,"endOffset":1920,"count":2},{"startOffset":236,"endOffset":253,"count":0},{"startOffset":312,"endOffset":1277,"count":0},{"startOffset":1279,"endOffset":1399,"count":0},{"startOffset":1401,"endOffset":1508,"count":0},{"startOffset":1510,"endOffset":1919,"count":0}],"isBlockCoverage":true}]},{"scriptId":"405","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":821,"count":1},{"startOffset":376,"endOffset":819,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":248,"endOffset":374,"count":9}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":399,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"getProto","ranges":[{"startOffset":678,"endOffset":809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/Reflect.getPrototypeOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":150,"count":1},{"startOffset":141,"endOffset":148,"count":0}],"isBlockCoverage":true}]},{"scriptId":"407","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-proto/Object.getPrototypeOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1},{"startOffset":147,"endOffset":154,"count":0}],"isBlockCoverage":true}]},{"scriptId":"408","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/dunder-proto/get.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1},{"startOffset":290,"endOffset":404,"count":0},{"startOffset":757,"endOffset":978,"count":0}],"isBlockCoverage":true},{"functionName":"getDunder","ranges":[{"startOffset":832,"endOffset":968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"callBindBasic","ranges":[{"startOffset":326,"endOffset":509,"count":11},{"startOffset":412,"endOffset":466,"count":0}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"411","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2043,"count":1}],"isBlockCoverage":true},{"functionName":"concatty","ranges":[{"startOffset":230,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"slicy","ranges":[{"startOffset":465,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joiny","ranges":[{"startOffset":659,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":885,"endOffset":2041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/functionCall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/actualApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1},{"startOffset":251,"endOffset":278,"count":0}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/functionApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bind-apply-helpers/reflectApply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/hasown/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1}],"isBlockCoverage":true}]},{"scriptId":"417","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/call-bound/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":323,"endOffset":685,"count":9},{"startOffset":664,"endOffset":684,"count":0}],"isBlockCoverage":true}]},{"scriptId":"418","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/side-channel-weakmap/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2708,"count":1},{"startOffset":2687,"endOffset":2706,"count":0}],"isBlockCoverage":true},{"functionName":"getSideChannelWeakMap","ranges":[{"startOffset":954,"endOffset":2685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7267,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3377,"endOffset":5753,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5770,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":6396,"endOffset":6492,"count":60}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":6510,"endOffset":6701,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6718,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6790,"endOffset":7015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11311,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":675,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":850,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1658,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":4012,"endOffset":5379,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":5398,"endOffset":7115,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":7146,"endOffset":10535,"count":60},{"startOffset":7200,"endOffset":7232,"count":0},{"startOffset":7287,"endOffset":7332,"count":0},{"startOffset":7334,"endOffset":7444,"count":0},{"startOffset":7498,"endOffset":7542,"count":0},{"startOffset":7544,"endOffset":7653,"count":0},{"startOffset":7724,"endOffset":7761,"count":0},{"startOffset":7763,"endOffset":7832,"count":0},{"startOffset":7878,"endOffset":7905,"count":0},{"startOffset":7906,"endOffset":7938,"count":0},{"startOffset":7940,"endOffset":8045,"count":0},{"startOffset":8119,"endOffset":8133,"count":0},{"startOffset":8218,"endOffset":8235,"count":0},{"startOffset":8271,"endOffset":8296,"count":0},{"startOffset":8297,"endOffset":8321,"count":0},{"startOffset":8323,"endOffset":8423,"count":0},{"startOffset":8515,"endOffset":8521,"count":0},{"startOffset":8543,"endOffset":8561,"count":0},{"startOffset":8676,"endOffset":8701,"count":0},{"startOffset":8821,"endOffset":8847,"count":0},{"startOffset":8908,"endOffset":8926,"count":0},{"startOffset":9007,"endOffset":9024,"count":0},{"startOffset":9141,"endOffset":9163,"count":0},{"startOffset":9239,"endOffset":9251,"count":0},{"startOffset":9337,"endOffset":9359,"count":0},{"startOffset":9440,"endOffset":9454,"count":0},{"startOffset":9563,"endOffset":9579,"count":0},{"startOffset":9748,"endOffset":9761,"count":0},{"startOffset":9957,"endOffset":9988,"count":0},{"startOffset":10090,"endOffset":10111,"count":0},{"startOffset":10249,"endOffset":10268,"count":0},{"startOffset":10353,"endOffset":10373,"count":0},{"startOffset":10471,"endOffset":10496,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":10555,"endOffset":11309,"count":60},{"startOffset":10661,"endOffset":10690,"count":0},{"startOffset":10730,"endOffset":10751,"count":0},{"startOffset":10763,"endOffset":10834,"count":0},{"startOffset":10835,"endOffset":10840,"count":0},{"startOffset":10877,"endOffset":10898,"count":0},{"startOffset":10899,"endOffset":10903,"count":0},{"startOffset":11040,"endOffset":11308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"422","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":854,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":1962,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2485,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2750,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"tryStat","ranges":[{"startOffset":3189,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5871,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1107,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1717,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":1996,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2669,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3164,"endOffset":3523,"count":7},{"startOffset":3224,"endOffset":3245,"count":0},{"startOffset":3268,"endOffset":3278,"count":0},{"startOffset":3339,"endOffset":3363,"count":0},{"startOffset":3368,"endOffset":3420,"count":0},{"startOffset":3425,"endOffset":3503,"count":0}],"isBlockCoverage":true},{"functionName":"compileQueryParser","ranges":[{"startOffset":3682,"endOffset":4110,"count":7},{"startOffset":3761,"endOffset":3782,"count":0},{"startOffset":3805,"endOffset":3815,"count":0},{"startOffset":3820,"endOffset":3877,"count":0},{"startOffset":3882,"endOffset":3928,"count":0},{"startOffset":4004,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4283,"endOffset":4745,"count":7},{"startOffset":4332,"endOffset":4343,"count":0},{"startOffset":4365,"endOffset":4440,"count":0},{"startOffset":4473,"endOffset":4557,"count":0},{"startOffset":4590,"endOffset":4703,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4410,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4520,"endOffset":4552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4666,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":4918,"endOffset":5173,"count":54},{"startOffset":4980,"endOffset":5002,"count":0}],"isBlockCoverage":true},{"functionName":"createETagGenerator","ranges":[{"startOffset":5331,"endOffset":5544,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5381,"endOffset":5542,"count":54},{"startOffset":5465,"endOffset":5494,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5656,"endOffset":5755,"count":60}],"isBlockCoverage":true},{"functionName":"newObject","ranges":[{"startOffset":5833,"endOffset":5870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":12}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5002,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1786,"endOffset":2478,"count":54},{"startOffset":1849,"endOffset":1906,"count":0},{"startOffset":2005,"endOffset":2050,"count":0},{"startOffset":2321,"endOffset":2384,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2587,"endOffset":3947,"count":80},{"startOffset":2628,"endOffset":2688,"count":0},{"startOffset":2782,"endOffset":2806,"count":26},{"startOffset":2811,"endOffset":2819,"count":54},{"startOffset":2855,"endOffset":2930,"count":0},{"startOffset":2996,"endOffset":3027,"count":54},{"startOffset":3032,"endOffset":3047,"count":26},{"startOffset":3080,"endOffset":3131,"count":0},{"startOffset":3224,"endOffset":3931,"count":54},{"startOffset":3386,"endOffset":3451,"count":0},{"startOffset":3591,"endOffset":3790,"count":0},{"startOffset":3866,"endOffset":3927,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":4054,"endOffset":4457,"count":26},{"startOffset":4143,"endOffset":4207,"count":0},{"startOffset":4363,"endOffset":4438,"count":0}],"isBlockCoverage":true},{"functionName":"qstring","ranges":[{"startOffset":4558,"endOffset":4851,"count":54},{"startOffset":4687,"endOffset":4735,"count":0},{"startOffset":4737,"endOffset":4850,"count":0}],"isBlockCoverage":true},{"functionName":"ContentType","ranges":[{"startOffset":4911,"endOffset":5001,"count":80}],"isBlockCoverage":true}]},{"scriptId":"427","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23455,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6571,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":6790,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7131,"endOffset":7777,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7915,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8263,"endOffset":8405,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8519,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8863,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9112,"endOffset":9331,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9445,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9722,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10252,"endOffset":10934,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11055,"endOffset":12722,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":12823,"endOffset":15046,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15160,"endOffset":16015,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16131,"endOffset":16592,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":16737,"endOffset":17279,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17434,"endOffset":17774,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":17951,"endOffset":18820,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":18907,"endOffset":19057,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19157,"endOffset":19339,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19415,"endOffset":19608,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":19730,"endOffset":19856,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":19966,"endOffset":20261,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpError","ranges":[{"startOffset":20394,"endOffset":20597,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20746,"endOffset":20852,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":20967,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21425,"endOffset":21615,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":21739,"endOffset":21864,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":21996,"endOffset":22246,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22333,"endOffset":22475,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22552,"endOffset":23157,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23276,"endOffset":23454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":783,"endOffset":863,"count":63}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":936,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2487,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2530,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2735,"endOffset":3762,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2838,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":3839,"endOffset":4211,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":3897,"endOffset":4209,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4278,"endOffset":5306,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4381,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5373,"endOffset":5574,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5669,"endOffset":6223,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5751,"endOffset":6220,"count":63},{"startOffset":5889,"endOffset":5984,"count":29},{"startOffset":5991,"endOffset":6086,"count":12},{"startOffset":6113,"endOffset":6216,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6290,"endOffset":6390,"count":41},{"startOffset":6361,"endOffset":6377,"count":40},{"startOffset":6382,"endOffset":6388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"430","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":298,"endOffset":503,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":366,"endOffset":452,"count":133}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4258,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":556,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1004,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1372,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2143,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3112,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3282,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3423,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3559,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3903,"endOffset":3922,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4020,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4138,"endOffset":4257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1129,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2163,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3287,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3542,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3673,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4706,"endOffset":6514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6709,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6771,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":7077,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":8291,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8898,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9071,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":9138,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11409,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11471,"endOffset":11530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11570,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11753,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12577,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":13456,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13892,"endOffset":14480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":14518,"endOffset":15091,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":15126,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15715,"endOffset":15749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29666,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3518,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4165,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4507,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4599,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4946,"endOffset":5505,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5509,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6076,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8418,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8911,"endOffset":8959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9108,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9356,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9601,"endOffset":9675,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":9745,"endOffset":9783,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10400,"endOffset":10477,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10932,"endOffset":11349,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11473,"endOffset":11558,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11593,"endOffset":11656,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11693,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12280,"endOffset":12515,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12520,"endOffset":14814,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14818,"endOffset":15426,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15430,"endOffset":18373,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":18429,"endOffset":18587,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18793,"endOffset":21178,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":21536,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21838,"endOffset":22266,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":22314,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":22553,"endOffset":22692,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22792,"endOffset":22919,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23013,"endOffset":23148,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23246,"endOffset":23456,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":23562,"endOffset":23713,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":23819,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24046,"endOffset":24448,"count":18},{"startOffset":24106,"endOffset":24447,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24120,"endOffset":24223,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24240,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24526,"endOffset":24597,"count":107},{"startOffset":24585,"endOffset":24592,"count":9},{"startOffset":24593,"endOffset":24596,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":24824,"endOffset":25870,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25968,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":26254,"endOffset":26428,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":26552,"endOffset":26747,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":26678,"endOffset":26737,"count":0}],"isBlockCoverage":false},{"functionName":"crc32","ranges":[{"startOffset":26751,"endOffset":27025,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27260,"endOffset":27296,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27301,"endOffset":27342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":54},{"startOffset":516,"endOffset":589,"count":0},{"startOffset":809,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":54},{"startOffset":1147,"endOffset":1207,"count":0},{"startOffset":1351,"endOffset":1360,"count":0},{"startOffset":1459,"endOffset":1543,"count":0},{"startOffset":1594,"endOffset":1611,"count":0},{"startOffset":1672,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":54},{"startOffset":1901,"endOffset":1922,"count":0},{"startOffset":2003,"endOffset":2050,"count":0},{"startOffset":2051,"endOffset":2072,"count":0},{"startOffset":2073,"endOffset":2120,"count":0},{"startOffset":2121,"endOffset":2140,"count":0},{"startOffset":2141,"endOffset":2171,"count":0},{"startOffset":2172,"endOffset":2192,"count":0},{"startOffset":2193,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8796,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3216,"endOffset":3321,"count":1}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3348,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3627,"endOffset":3711,"count":57}],"isBlockCoverage":true},{"functionName":"createCipheriv","ranges":[{"startOffset":3715,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3823,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3935,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4097,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4185,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4247,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4335,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4423,"endOffset":4511,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5773,"endOffset":5860,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5864,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6162,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6337,"endOffset":6601,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6606,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6857,"endOffset":7731,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6959,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7478,"endOffset":7721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8143,"endOffset":8183,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8303,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8484,"endOffset":8505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":1},{"startOffset":1568,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":2},{"startOffset":1891,"endOffset":2012,"count":0},{"startOffset":2046,"endOffset":2133,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":1},{"startOffset":2425,"endOffset":2490,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2597,"endOffset":2743,"count":1},{"startOffset":2631,"endOffset":2683,"count":0}],"isBlockCoverage":true},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":1},{"startOffset":3537,"endOffset":3563,"count":0},{"startOffset":3565,"endOffset":3678,"count":0},{"startOffset":3771,"endOffset":3923,"count":0},{"startOffset":3961,"endOffset":4022,"count":0},{"startOffset":4174,"endOffset":4217,"count":0},{"startOffset":4318,"endOffset":4363,"count":0}],"isBlockCoverage":true},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":1},{"startOffset":8385,"endOffset":8437,"count":0}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3103,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":519,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1214,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1640,"endOffset":2122,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2168,"endOffset":3028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16959,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":2033,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2240,"endOffset":2518,"count":114},{"startOffset":2299,"endOffset":2493,"count":1},{"startOffset":2370,"endOffset":2488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2446,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2522,"endOffset":2653,"count":57},{"startOffset":2636,"endOffset":2640,"count":1},{"startOffset":2641,"endOffset":2649,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2689,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2767,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2844,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2892,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3362,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6936,"endOffset":7048,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7883,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":8335,"endOffset":10843,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10847,"endOffset":10989,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10993,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":11151,"endOffset":11305,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":11309,"endOffset":11453,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":11457,"endOffset":11811,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11815,"endOffset":12017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12064,"endOffset":12370,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":12376,"endOffset":12615,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12619,"endOffset":12899,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":13444,"endOffset":13735,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13739,"endOffset":13984,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":13988,"endOffset":14158,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":14162,"endOffset":14381,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":14385,"endOffset":14608,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":14612,"endOffset":14802,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14954,"endOffset":15949,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15953,"endOffset":16345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2586,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3545,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":882,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1461,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1917,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2406,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2801,"endOffset":3476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28384,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2487,"endOffset":9772,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2600,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3167,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3231,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3384,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3923,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3991,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4081,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":4447,"endOffset":5927,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":6066,"endOffset":6344,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":6457,"endOffset":6519,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":6527,"endOffset":6640,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":6648,"endOffset":6987,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":6995,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":8652,"endOffset":8712,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":8720,"endOffset":9020,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":9089,"endOffset":9150,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":9158,"endOffset":9687,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":9778,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":10177,"endOffset":11051,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":11055,"endOffset":11179,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":11183,"endOffset":11900,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":11904,"endOffset":12045,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":12049,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":13652,"endOffset":13790,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":13995,"endOffset":14113,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":14117,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":14718,"endOffset":15239,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":15243,"endOffset":17900,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":17904,"endOffset":19489,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":19493,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":19587,"endOffset":19684,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":19688,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":20411,"endOffset":20620,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":20624,"endOffset":20972,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":20976,"endOffset":21328,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":21332,"endOffset":21416,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":21848,"endOffset":21910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21916,"endOffset":22280,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":22286,"endOffset":22425,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":22431,"endOffset":22574,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":22580,"endOffset":22719,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":22725,"endOffset":22861,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":23336,"endOffset":24279,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":24583,"endOffset":24962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24968,"endOffset":25344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25350,"endOffset":25499,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":25633,"endOffset":25719,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":25723,"endOffset":27882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10478,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1316,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3180,"endOffset":3516,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3634,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3873,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4243,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4473,"endOffset":4601,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4719,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4956,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5119,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5312,"endOffset":5460,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5467,"endOffset":5627,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5945,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6106,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6284,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6561,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6704,"endOffset":7037,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7115,"endOffset":8209,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8346,"endOffset":10363,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2945,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3191,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3625,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4220,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4500,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4650,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4827,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5391,"endOffset":5644,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5685,"endOffset":5836,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5871,"endOffset":6036,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6043,"endOffset":6260,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6290,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6894,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7113,"endOffset":7716,"count":3},{"startOffset":7515,"endOffset":7590,"count":1},{"startOffset":7590,"endOffset":7654,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8128,"endOffset":8266,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8682,"endOffset":8904,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9072,"endOffset":9934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1443,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":416,"endOffset":480,"count":57}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":616,"endOffset":796,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":800,"endOffset":1029,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":838,"endOffset":1025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":922,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1317,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1441,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1769,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1850,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1937,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2304,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2584,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3225,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4499,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5010,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5617,"endOffset":7161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6172,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1165,"endOffset":1909,"count":57},{"startOffset":1226,"endOffset":1262,"count":0},{"startOffset":1416,"endOffset":1435,"count":0},{"startOffset":1436,"endOffset":1463,"count":0},{"startOffset":1511,"endOffset":1558,"count":0},{"startOffset":1693,"endOffset":1697,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":2045,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2252,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2389,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2501,"endOffset":2980,"count":59},{"startOffset":2597,"endOffset":2635,"count":0},{"startOffset":2671,"endOffset":2716,"count":1},{"startOffset":2716,"endOffset":2865,"count":58},{"startOffset":2752,"endOffset":2865,"count":0},{"startOffset":2919,"endOffset":2961,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3011,"endOffset":3341,"count":57},{"startOffset":3107,"endOffset":3145,"count":0},{"startOffset":3270,"endOffset":3292,"count":54}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3346,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3946,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4554,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":5047,"endOffset":6101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10867,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1220,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1309,"endOffset":2581,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2615,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2785,"endOffset":10609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":4},{"startOffset":762,"endOffset":1036,"count":0},{"startOffset":1038,"endOffset":1117,"count":0},{"startOffset":1119,"endOffset":1799,"count":0}],"isBlockCoverage":true},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":1},{"startOffset":603,"endOffset":1092,"count":844},{"startOffset":673,"endOffset":953,"count":1069},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":1},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":54},{"startOffset":2683,"endOffset":2693,"count":0}],"isBlockCoverage":true}]},{"scriptId":"454","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":7},{"startOffset":1360,"endOffset":1413,"count":0},{"startOffset":1459,"endOffset":1482,"count":0},{"startOffset":1541,"endOffset":1606,"count":0},{"startOffset":1649,"endOffset":1895,"count":0}],"isBlockCoverage":true},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":7},{"startOffset":2162,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":7},{"startOffset":2503,"endOffset":2584,"count":0}],"isBlockCoverage":true},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12505,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1150,"endOffset":1565,"count":0}],"isBlockCoverage":false},{"functionName":"req.accepts","ranges":[{"startOffset":2913,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3158,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3585,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4002,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5220,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":5806,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":6898,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7546,"endOffset":8029,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8158,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8416,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":8860,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":9633,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10314,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11052,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11736,"count":54},{"startOffset":11462,"endOffset":11482,"count":41},{"startOffset":11484,"endOffset":11497,"count":41},{"startOffset":11497,"endOffset":11572,"count":13},{"startOffset":11574,"endOffset":11591,"count":9},{"startOffset":11593,"endOffset":11717,"count":4},{"startOffset":11717,"endOffset":11735,"count":9}],"isBlockCoverage":true},{"functionName":"stale","ranges":[{"startOffset":11921,"endOffset":11962,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12084,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12355,"endOffset":12504,"count":11}],"isBlockCoverage":true}]},{"scriptId":"463","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2279},{"startOffset":3016,"endOffset":3031,"count":965},{"startOffset":3033,"endOffset":3053,"count":1314},{"startOffset":3053,"endOffset":3177,"count":965},{"startOffset":3177,"endOffset":3655,"count":1220},{"startOffset":3238,"endOffset":3583,"count":40},{"startOffset":3417,"endOffset":3511,"count":34},{"startOffset":3441,"endOffset":3510,"count":19},{"startOffset":3457,"endOffset":3509,"count":11},{"startOffset":3513,"endOffset":3575,"count":23},{"startOffset":3583,"endOffset":3655,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"470","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true}]},{"scriptId":"471","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":26},{"startOffset":972,"endOffset":994,"count":0},{"startOffset":1269,"endOffset":1289,"count":0},{"startOffset":1460,"endOffset":1465,"count":0},{"startOffset":1490,"endOffset":1523,"count":0}],"isBlockCoverage":true},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":86}],"isBlockCoverage":true},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":26},{"startOffset":2891,"endOffset":2912,"count":0},{"startOffset":2975,"endOffset":3109,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":26},{"startOffset":3637,"endOffset":3679,"count":0},{"startOffset":3703,"endOffset":3770,"count":0},{"startOffset":3775,"endOffset":3819,"count":0},{"startOffset":3848,"endOffset":3914,"count":0},{"startOffset":3954,"endOffset":3973,"count":0}],"isBlockCoverage":true},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":26},{"startOffset":4272,"endOffset":4294,"count":0},{"startOffset":4476,"endOffset":4498,"count":0},{"startOffset":4590,"endOffset":4612,"count":0},{"startOffset":4690,"endOffset":4850,"count":0},{"startOffset":4945,"endOffset":4967,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":26}],"isBlockCoverage":true},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":26},{"startOffset":5459,"endOffset":5480,"count":0},{"startOffset":5526,"endOffset":5559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"472","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":26},{"startOffset":2809,"endOffset":2866,"count":0},{"startOffset":3022,"endOffset":3067,"count":0},{"startOffset":3121,"endOffset":3169,"count":0},{"startOffset":3270,"endOffset":3393,"count":0},{"startOffset":3435,"endOffset":3468,"count":0},{"startOffset":3470,"endOffset":3780,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":26},{"startOffset":3952,"endOffset":4012,"count":0},{"startOffset":4094,"endOffset":4135,"count":0},{"startOffset":4171,"endOffset":4246,"count":0},{"startOffset":4312,"endOffset":4337,"count":0},{"startOffset":4509,"endOffset":4878,"count":0},{"startOffset":4899,"endOffset":4925,"count":0},{"startOffset":4927,"endOffset":4984,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":26},{"startOffset":6001,"endOffset":6052,"count":0},{"startOffset":6199,"endOffset":6282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"473","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28729,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1392,"endOffset":1663,"count":48},{"startOffset":1478,"endOffset":1490,"count":0},{"startOffset":1491,"endOffset":1505,"count":0},{"startOffset":1507,"endOffset":1620,"count":0}],"isBlockCoverage":true},{"functionName":"res.links","ranges":[{"startOffset":1955,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2419,"endOffset":5591,"count":54},{"startOffset":2604,"endOffset":3031,"count":0},{"startOffset":3126,"endOffset":3151,"count":0},{"startOffset":3153,"endOffset":3425,"count":0},{"startOffset":3542,"endOffset":3578,"count":0},{"startOffset":3596,"endOffset":3611,"count":0},{"startOffset":3616,"endOffset":3630,"count":0},{"startOffset":3635,"endOffset":3888,"count":0},{"startOffset":4409,"endOffset":4471,"count":0},{"startOffset":4495,"endOffset":4517,"count":0},{"startOffset":4519,"endOffset":4631,"count":0},{"startOffset":5022,"endOffset":5044,"count":0},{"startOffset":5134,"endOffset":5279,"count":0},{"startOffset":5339,"endOffset":5438,"count":0},{"startOffset":5469,"endOffset":5516,"count":0}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":5771,"endOffset":6598,"count":54},{"startOffset":5865,"endOffset":6250,"count":0}],"isBlockCoverage":true},{"functionName":"jsonp","ranges":[{"startOffset":6809,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":8967,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10530,"endOffset":11509,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":12893,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14257,"endOffset":15493,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":15921,"endOffset":16063,"count":0}],"isBlockCoverage":false},{"functionName":"res.format","ranges":[{"startOffset":17498,"endOffset":18033,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":18210,"endOffset":18381,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18785,"endOffset":19075,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":19494,"endOffset":20156,"count":216},{"startOffset":19597,"endOffset":19614,"count":0},{"startOffset":19720,"endOffset":20021,"count":108},{"startOffset":19754,"endOffset":19834,"count":0},{"startOffset":19873,"endOffset":20015,"count":54},{"startOffset":20060,"endOffset":20139,"count":0}],"isBlockCoverage":true},{"functionName":"res.get","ranges":[{"startOffset":20270,"endOffset":20320,"count":224}],"isBlockCoverage":true},{"functionName":"clearCookie","ranges":[{"startOffset":20482,"endOffset":21205,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":21836,"endOffset":22562,"count":0}],"isBlockCoverage":false},{"functionName":"location","ranges":[{"startOffset":22938,"endOffset":23320,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":23788,"endOffset":24786,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":24992,"endOffset":25207,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":25593,"endOffset":26110,"count":0}],"isBlockCoverage":false},{"functionName":"sendfile","ranges":[{"startOffset":26142,"endOffset":27776,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":28057,"endOffset":28728,"count":54},{"startOffset":28265,"endOffset":28306,"count":0},{"startOffset":28350,"endOffset":28377,"count":0},{"startOffset":28379,"endOffset":28711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28415,"endOffset":28706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":217,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":781,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1146,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8103,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3018,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"startIndex","ranges":[{"startOffset":4393,"endOffset":4590,"count":0}],"isBlockCoverage":false},{"functionName":"endIndex","ranges":[{"startOffset":4592,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":5163,"endOffset":7492,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":7619,"endOffset":7717,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":7794,"endOffset":7870,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":7999,"endOffset":8102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5299,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1078,"endOffset":3292,"count":7},{"startOffset":1222,"endOffset":1234,"count":0},{"startOffset":1445,"endOffset":1476,"count":0},{"startOffset":1478,"endOffset":1541,"count":0},{"startOffset":1669,"endOffset":1675,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1679,"endOffset":2303,"count":26},{"startOffset":1730,"endOffset":1900,"count":0},{"startOffset":1979,"endOffset":1995,"count":0},{"startOffset":1997,"endOffset":2091,"count":0},{"startOffset":2180,"endOffset":2299,"count":0}],"isBlockCoverage":true},{"functionName":"jsonParser","ranges":[{"startOffset":2314,"endOffset":3290,"count":60},{"startOffset":2372,"endOffset":2440,"count":0},{"startOffset":2539,"endOffset":2603,"count":34},{"startOffset":2603,"endOffset":2736,"count":26},{"startOffset":2736,"endOffset":2797,"count":0},{"startOffset":2797,"endOffset":2886,"count":26},{"startOffset":2927,"endOffset":3135,"count":0},{"startOffset":3135,"endOffset":3289,"count":26}],"isBlockCoverage":true},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3447,"endOffset":4066,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":4192,"endOffset":4309,"count":26},{"startOffset":4296,"endOffset":4307,"count":0}],"isBlockCoverage":true},{"functionName":"getCharset","ranges":[{"startOffset":4395,"endOffset":4548,"count":26},{"startOffset":4510,"endOffset":4546,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4683,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5189,"endOffset":5298,"count":7}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":5228,"endOffset":5296,"count":26}],"isBlockCoverage":true}]},{"scriptId":"481","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":33},{"startOffset":3049,"endOffset":3063,"count":26},{"startOffset":3065,"endOffset":3086,"count":26},{"startOffset":3086,"endOffset":3119,"count":7},{"startOffset":3119,"endOffset":3141,"count":0},{"startOffset":3141,"endOffset":3275,"count":7},{"startOffset":3275,"endOffset":3387,"count":0},{"startOffset":3387,"endOffset":3542,"count":7},{"startOffset":3542,"endOffset":3564,"count":0},{"startOffset":3564,"endOffset":3611,"count":7}],"isBlockCoverage":true}]},{"scriptId":"482","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4325,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":664,"endOffset":2935,"count":26},{"startOffset":890,"endOffset":896,"count":0},{"startOffset":1077,"endOffset":1115,"count":0},{"startOffset":1195,"endOffset":1201,"count":0},{"startOffset":1280,"endOffset":1300,"count":0},{"startOffset":1301,"endOffset":1335,"count":0},{"startOffset":1337,"endOffset":1514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1576,"endOffset":2932,"count":26},{"startOffset":1616,"endOffset":2268,"count":0},{"startOffset":2300,"endOffset":2556,"count":0},{"startOffset":2663,"endOffset":2683,"count":0},{"startOffset":2692,"endOffset":2722,"count":0},{"startOffset":2772,"endOffset":2916,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":2177,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":3112,"endOffset":4056,"count":26},{"startOffset":3365,"endOffset":3391,"count":0},{"startOffset":3393,"endOffset":3527,"count":0},{"startOffset":3555,"endOffset":3669,"count":0},{"startOffset":3674,"endOffset":3783,"count":0},{"startOffset":3869,"endOffset":4033,"count":0}],"isBlockCoverage":true},{"functionName":"dump","ranges":[{"startOffset":4174,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":633,"endOffset":1022,"count":26},{"startOffset":683,"endOffset":694,"count":0},{"startOffset":746,"endOffset":1020,"count":0}],"isBlockCoverage":true},{"functionName":"getRawBody","ranges":[{"startOffset":1200,"endOffset":2733,"count":26},{"startOffset":1293,"endOffset":1298,"count":0},{"startOffset":1350,"endOffset":1410,"count":0},{"startOffset":1502,"endOffset":1567,"count":0},{"startOffset":1624,"endOffset":1702,"count":0},{"startOffset":1741,"endOffset":1779,"count":0},{"startOffset":1887,"endOffset":1956,"count":0},{"startOffset":2013,"endOffset":2031,"count":0},{"startOffset":2033,"endOffset":2095,"count":0},{"startOffset":2179,"endOffset":2188,"count":0},{"startOffset":2407,"endOffset":2413,"count":0},{"startOffset":2529,"endOffset":2732,"count":0}],"isBlockCoverage":true},{"functionName":"executor","ranges":[{"startOffset":2552,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2803,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":3165,"endOffset":6549,"count":26},{"startOffset":3477,"endOffset":3650,"count":0},{"startOffset":3982,"endOffset":4124,"count":0},{"startOffset":4192,"endOffset":4300,"count":0},{"startOffset":4383,"endOffset":4421,"count":0},{"startOffset":4459,"endOffset":4463,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4684,"endOffset":5168,"count":26},{"startOffset":4811,"endOffset":4847,"count":52},{"startOffset":4905,"endOffset":4951,"count":0}],"isBlockCoverage":true},{"functionName":"invokeCallback","ranges":[{"startOffset":4993,"endOffset":5164,"count":26},{"startOffset":5058,"endOffset":5124,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":5172,"endOffset":5410,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":5414,"endOffset":5803,"count":26},{"startOffset":5458,"endOffset":5464,"count":0},{"startOffset":5540,"endOffset":5698,"count":0},{"startOffset":5761,"endOffset":5799,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":5807,"endOffset":6283,"count":26},{"startOffset":5848,"endOffset":5854,"count":0},{"startOffset":5868,"endOffset":5884,"count":0},{"startOffset":5934,"endOffset":6141,"count":0},{"startOffset":6225,"endOffset":6248,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":6287,"endOffset":6547,"count":26}],"isBlockCoverage":true},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":6602,"endOffset":6714,"count":1},{"startOffset":6683,"endOffset":6712,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6836,"endOffset":7170,"count":26},{"startOffset":7072,"endOffset":7091,"count":0}],"isBlockCoverage":true}]},{"scriptId":"484","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5120,"count":1},{"startOffset":4754,"endOffset":4776,"count":0},{"startOffset":4924,"endOffset":5119,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":585,"endOffset":877,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":894,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1501,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1879,"endOffset":3589,"count":26},{"startOffset":1943,"endOffset":1985,"count":1},{"startOffset":2269,"endOffset":3587,"count":27},{"startOffset":2350,"endOffset":2363,"count":25},{"startOffset":2363,"endOffset":2458,"count":2},{"startOffset":2458,"endOffset":2562,"count":0},{"startOffset":2576,"endOffset":2905,"count":1},{"startOffset":2692,"endOffset":2726,"count":2},{"startOffset":2919,"endOffset":3444,"count":1},{"startOffset":3021,"endOffset":3053,"count":0},{"startOffset":3458,"endOffset":3571,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3621,"endOffset":3804,"count":26}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3825,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4122,"endOffset":4411,"count":26},{"startOffset":4295,"endOffset":4324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"485","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2110,"count":1},{"startOffset":163,"endOffset":294,"count":14},{"startOffset":200,"endOffset":208,"count":0},{"startOffset":236,"endOffset":255,"count":13},{"startOffset":257,"endOffset":265,"count":2},{"startOffset":265,"endOffset":294,"count":12},{"startOffset":346,"endOffset":487,"count":12},{"startOffset":383,"endOffset":391,"count":0},{"startOffset":420,"endOffset":448,"count":11},{"startOffset":450,"endOffset":458,"count":2},{"startOffset":458,"endOffset":487,"count":10},{"startOffset":583,"endOffset":1070,"count":0},{"startOffset":1090,"endOffset":1642,"count":0},{"startOffset":1673,"endOffset":1900,"count":0},{"startOffset":1924,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":600,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1108,"endOffset":1640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":494,"endOffset":1686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":26}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":26},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":26}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":199,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":277,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":441,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":905,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1312,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1670,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1886,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2189,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2570,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2942,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3189,"endOffset":3385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":229,"endOffset":8700,"count":1},{"startOffset":564,"endOffset":602,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":638,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7714,"endOffset":8698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1884,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":452,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1774,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4521,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":497,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":1930,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2175,"endOffset":2284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6404,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":717,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"extendedparser","ranges":[{"startOffset":2857,"endOffset":4245,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":4331,"endOffset":4484,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4626,"endOffset":4855,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":4974,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"simpleparser","ranges":[{"startOffset":5435,"endOffset":6202,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":6294,"endOffset":6403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":false}]},{"scriptId":"495","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113251,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":4935,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":4978,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":5190,"endOffset":5388,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5392,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5538,"endOffset":5645,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":9020,"endOffset":9093,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":9402,"endOffset":12371,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":12375,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":12738,"endOffset":13048,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":13164,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":13441,"endOffset":14039,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":14043,"endOffset":14810,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14927,"endOffset":15254,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":15258,"endOffset":15587,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":15591,"endOffset":15804,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":16199,"endOffset":17329,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":17425,"endOffset":17705,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":17903,"endOffset":18364,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":18480,"endOffset":19188,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":19192,"endOffset":19504,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":19508,"endOffset":20150,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":20154,"endOffset":20574,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":20985,"endOffset":21962,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":22169,"endOffset":24283,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24656,"endOffset":25341,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":25442,"endOffset":25617,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":25621,"endOffset":26102,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":26166,"endOffset":26498,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":26666,"endOffset":27103,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":27344,"endOffset":27567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27603,"endOffset":28335,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":28340,"endOffset":28527,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28532,"endOffset":29200,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":29621,"endOffset":29828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30448,"endOffset":32705,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":32846,"endOffset":33572,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":33864,"endOffset":36315,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":36433,"endOffset":36538,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":36542,"endOffset":36996,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":37000,"endOffset":37978,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":37982,"endOffset":39006,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":41197,"endOffset":43966,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":44097,"endOffset":44149,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":44334,"endOffset":44392,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":44766,"endOffset":44901,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":44981,"endOffset":45066,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":45133,"endOffset":45211,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":45280,"endOffset":45364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45403,"endOffset":45517,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":45738,"endOffset":46020,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":46198,"endOffset":46512,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":46716,"endOffset":47335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47341,"endOffset":47712,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":47757,"endOffset":47949,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":47978,"endOffset":48020,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":48100,"endOffset":48180,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":48263,"endOffset":48344,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":48423,"endOffset":48495,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":48556,"endOffset":48666,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":48815,"endOffset":49087,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":49153,"endOffset":49626,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":49694,"endOffset":50225,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":50485,"endOffset":50992,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":51100,"endOffset":51532,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":52119,"endOffset":52425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52431,"endOffset":52681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52825,"endOffset":53162,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":53168,"endOffset":53217,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":53223,"endOffset":53296,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":53302,"endOffset":53379,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":53604,"endOffset":54134,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":54140,"endOffset":54186,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":54441,"endOffset":56321,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":56369,"endOffset":57146,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":57461,"endOffset":57589,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":57703,"endOffset":61488,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":61495,"endOffset":61713,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":61717,"endOffset":61803,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":61807,"endOffset":61908,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":61912,"endOffset":62146,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":62150,"endOffset":62714,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":62718,"endOffset":63195,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":63283,"endOffset":64231,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":64235,"endOffset":64613,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":64774,"endOffset":65935,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65941,"endOffset":66126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66132,"endOffset":66574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66580,"endOffset":66961,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":66967,"endOffset":67185,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":67191,"endOffset":67261,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":67267,"endOffset":67323,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":67329,"endOffset":67387,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":67393,"endOffset":67453,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":67459,"endOffset":67516,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":67615,"endOffset":67653,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":67710,"endOffset":67758,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":67764,"endOffset":67823,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":67875,"endOffset":67963,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":68023,"endOffset":68102,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":68150,"endOffset":68238,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":68308,"endOffset":68362,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":68412,"endOffset":68567,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68573,"endOffset":68708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68714,"endOffset":68885,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68891,"endOffset":71366,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":71372,"endOffset":71458,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":71464,"endOffset":71534,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":71540,"endOffset":71766,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":71772,"endOffset":72113,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":72119,"endOffset":72636,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":72642,"endOffset":73360,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":73366,"endOffset":73443,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":74238,"endOffset":74567,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":74791,"endOffset":77308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77429,"endOffset":78472,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":78479,"endOffset":79374,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":79378,"endOffset":79434,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":79438,"endOffset":80883,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":80889,"endOffset":81075,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":81197,"endOffset":81374,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":81378,"endOffset":82215,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":82219,"endOffset":82678,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":82682,"endOffset":84141,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":84145,"endOffset":86223,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":86227,"endOffset":86672,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":86725,"endOffset":86968,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":87025,"endOffset":87237,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":87351,"endOffset":89608,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":89660,"endOffset":91174,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":91575,"endOffset":93623,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":94106,"endOffset":95728,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":96242,"endOffset":97307,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":97443,"endOffset":97681,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":97688,"endOffset":97821,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":98213,"endOffset":98679,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":98777,"endOffset":98949,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":98953,"endOffset":99127,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":99131,"endOffset":99256,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":99390,"endOffset":99651,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":99655,"endOffset":102059,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":102063,"endOffset":103430,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":103434,"endOffset":103806,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":103810,"endOffset":103936,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":103987,"endOffset":104668,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":104674,"endOffset":104879,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":104885,"endOffset":105068,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":105074,"endOffset":105238,"count":0}],"isBlockCoverage":false},{"functionName":"closeIdleConnections","ranges":[{"startOffset":105244,"endOffset":105408,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":105456,"endOffset":105772,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":105778,"endOffset":105983,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":105989,"endOffset":106172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106178,"endOffset":106260,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":106328,"endOffset":107274,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":107279,"endOffset":107559,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":107563,"endOffset":108026,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":108030,"endOffset":109868,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":109979,"endOffset":110255,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":110265,"endOffset":110366,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":110370,"endOffset":110557,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":110727,"endOffset":110916,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":110920,"endOffset":112516,"count":0}],"isBlockCoverage":false},{"functionName":"performServerHandshake","ranges":[{"startOffset":112520,"endOffset":112681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10941,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3140,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3238,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3463,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"convertProtocols","ranges":[{"startOffset":3733,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4385,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":4927,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5101,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5185,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5284,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":7596,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":8743,"endOffset":10483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4945,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1779,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2152,"endOffset":3011,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3015,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3736,"endOffset":4846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9926,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":772,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":1031,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1272,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1445,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1614,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1911,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2162,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":3270,"endOffset":9874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55293,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1904,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4020,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4211,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5027,"endOffset":5333,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5339,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6586,"endOffset":7263,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7269,"endOffset":8342,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8346,"endOffset":9715,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9719,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":9926,"endOffset":10170,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10174,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":11045,"endOffset":11725,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11729,"endOffset":12463,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12467,"endOffset":12561,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12565,"endOffset":12684,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12688,"endOffset":13789,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":13937,"endOffset":14493,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14577,"endOffset":17790,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":18248,"endOffset":18428,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":18291,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18601,"endOffset":19483,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":19531,"endOffset":19606,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":19800,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":21235,"endOffset":21832,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":21975,"endOffset":22228,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":22232,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":22387,"endOffset":22440,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":22478,"endOffset":22780,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":22785,"endOffset":23106,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":23110,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":23567,"endOffset":28375,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":28414,"endOffset":29709,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":29757,"endOffset":30089,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":30135,"endOffset":30260,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":30302,"endOffset":30373,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":30414,"endOffset":30504,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":30541,"endOffset":30654,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":30697,"endOffset":30859,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":30898,"endOffset":31984,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":32018,"endOffset":32536,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":32577,"endOffset":32753,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":32791,"endOffset":32933,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":32979,"endOffset":33150,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":33192,"endOffset":33406,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":33456,"endOffset":33599,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":33645,"endOffset":33776,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setKeyCert","ranges":[{"startOffset":33814,"endOffset":34090,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":34130,"endOffset":34334,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":34179,"endOffset":34330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34550,"endOffset":34630,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":34677,"endOffset":35190,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":35194,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":35440,"endOffset":35529,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":35533,"endOffset":35901,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":35905,"endOffset":36817,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":39650,"endOffset":41448,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":41607,"endOffset":41693,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":41736,"endOffset":44724,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":44765,"endOffset":44853,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":44894,"endOffset":44973,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":45013,"endOffset":45095,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":45135,"endOffset":45336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45383,"endOffset":47458,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":47584,"endOffset":48000,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":48051,"endOffset":48317,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":48322,"endOffset":48625,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":48875,"endOffset":49620,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":49624,"endOffset":51899,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":51903,"endOffset":52478,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":52547,"endOffset":55290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8857,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":834,"endOffset":897,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":901,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":970,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":1037,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1112,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1964,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3891,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3948,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":4018,"endOffset":4078,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":4084,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":4148,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5501,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5806,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":7362,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7824,"endOffset":8658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8664,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8738,"endOffset":8816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2078,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":415,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":514,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":651,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":868,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":997,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1239,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1878,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1990,"endOffset":2075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24584,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2198,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2732,"endOffset":3071,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3075,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3323,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3457,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3810,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":3955,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4189,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4364,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4548,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4608,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4670,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":4800,"endOffset":5007,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":5011,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5075,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5165,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5325,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6404,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6582,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7416,"endOffset":7885,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":7889,"endOffset":8024,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":8075,"endOffset":9113,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9119,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9173,"endOffset":9330,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9336,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9388,"endOffset":9436,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9442,"endOffset":9496,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9502,"endOffset":9552,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9558,"endOffset":9614,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9620,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9670,"endOffset":9714,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":9720,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":9769,"endOffset":10002,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":10008,"endOffset":10056,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10062,"endOffset":10320,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10326,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10400,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10612,"endOffset":10676,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":10682,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":10756,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":10825,"endOffset":10890,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10896,"endOffset":11029,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":11036,"endOffset":11123,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":11127,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11583,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12517,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12573,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12664,"endOffset":12744,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":12750,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":13172,"endOffset":13220,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":13226,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":13278,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13347,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13409,"endOffset":13478,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13484,"endOffset":13544,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13550,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13625,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":13714,"endOffset":13787,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":13793,"endOffset":13862,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":13868,"endOffset":14122,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":14128,"endOffset":14305,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":14311,"endOffset":14513,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14519,"endOffset":14649,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":14655,"endOffset":14718,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":14724,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":14842,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":14992,"endOffset":15300,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15306,"endOffset":15487,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15493,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":15895,"endOffset":16082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16088,"endOffset":17003,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":17009,"endOffset":17079,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":17085,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":17146,"endOffset":17295,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":17301,"endOffset":19478,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":19484,"endOffset":19524,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":19530,"endOffset":19574,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19580,"endOffset":20274,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":20280,"endOffset":21329,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":21335,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":21479,"endOffset":21606,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":21612,"endOffset":22035,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22041,"endOffset":22358,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":22401,"endOffset":22642,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":22648,"endOffset":23305,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":23312,"endOffset":24490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28297,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":7246,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomSettingsToObj","ranges":[{"startOffset":9965,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":10284,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":12260,"endOffset":13112,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":13116,"endOffset":18428,"count":0}],"isBlockCoverage":false},{"functionName":"remoteCustomSettingsToBuffer","ranges":[{"startOffset":18432,"endOffset":19139,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":19143,"endOffset":20025,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":20029,"endOffset":20475,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":20479,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20957,"endOffset":21067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21129,"endOffset":21227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21288,"endOffset":21351,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":21518,"endOffset":23573,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":23614,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23879,"endOffset":23924,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":23930,"endOffset":24007,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24053,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24345,"endOffset":24556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24608,"endOffset":24878,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":24887,"endOffset":26984,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":26988,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":27075,"endOffset":27287,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":27291,"endOffset":27749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9636,"count":1},{"startOffset":367,"endOffset":414,"count":0}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":703,"endOffset":1221,"count":60},{"startOffset":844,"endOffset":933,"count":0},{"startOffset":1166,"endOffset":1178,"count":0}],"isBlockCoverage":true},{"functionName":"serverAddress","ranges":[{"startOffset":1391,"endOffset":1652,"count":60},{"startOffset":1576,"endOffset":1585,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":2068,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3290,"endOffset":3564,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3348,"endOffset":3540,"count":60},{"startOffset":3512,"endOffset":3539,"count":0}],"isBlockCoverage":true},{"functionName":"localAssert","ranges":[{"startOffset":3390,"endOffset":3440,"count":60}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":3737,"endOffset":4978,"count":60},{"startOffset":4278,"endOffset":4289,"count":0},{"startOffset":4291,"endOffset":4579,"count":0},{"startOffset":4641,"endOffset":4653,"count":0},{"startOffset":4663,"endOffset":4732,"count":0},{"startOffset":4852,"endOffset":4895,"count":51},{"startOffset":4897,"endOffset":4931,"count":0}],"isBlockCoverage":true},{"functionName":"_assertBody","ranges":[{"startOffset":5218,"endOffset":5992,"count":0}],"isBlockCoverage":false},{"functionName":"_assertHeader","ranges":[{"startOffset":6237,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatus","ranges":[{"startOffset":7280,"endOffset":7530,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatusArray","ranges":[{"startOffset":7789,"endOffset":8093,"count":0}],"isBlockCoverage":false},{"functionName":"_assertFunction","ranges":[{"startOffset":8340,"endOffset":8495,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAssertFn","ranges":[{"startOffset":8737,"endOffset":9246,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":9426,"endOffset":9584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126455,"count":1},{"startOffset":32130,"endOffset":32611,"count":36},{"startOffset":32183,"endOffset":32193,"count":1},{"startOffset":32194,"endOffset":32202,"count":35}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":819,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1308,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"_initHeaders","ranges":[{"startOffset":2390,"endOffset":2555,"count":60}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":2705,"endOffset":3350,"count":60},{"startOffset":2789,"endOffset":2807,"count":0},{"startOffset":3074,"endOffset":3077,"count":0}],"isBlockCoverage":true},{"functionName":"Request.http2","ranges":[{"startOffset":4007,"endOffset":4235,"count":0}],"isBlockCoverage":false},{"functionName":"Request.attach","ranges":[{"startOffset":4850,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"Request._getFormData","ranges":[{"startOffset":5612,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"Request.agent","ranges":[{"startOffset":6280,"endOffset":6388,"count":0}],"isBlockCoverage":false},{"functionName":"Request.lookup","ranges":[{"startOffset":6558,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"Request.type","ranges":[{"startOffset":7201,"endOffset":7303,"count":26},{"startOffset":7272,"endOffset":7278,"count":0}],"isBlockCoverage":true},{"functionName":"Request.accept","ranges":[{"startOffset":7738,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"Request.query","ranges":[{"startOffset":8085,"endOffset":8234,"count":0}],"isBlockCoverage":false},{"functionName":"Request.write","ranges":[{"startOffset":8418,"endOffset":8589,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pipe","ranges":[{"startOffset":8755,"endOffset":8899,"count":0}],"isBlockCoverage":false},{"functionName":"Request._pipeContinue","ranges":[{"startOffset":8935,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"Request.buffer","ranges":[{"startOffset":10080,"endOffset":10149,"count":60}],"isBlockCoverage":true},{"functionName":"Request._redirect","ranges":[{"startOffset":10296,"endOffset":11850,"count":0}],"isBlockCoverage":false},{"functionName":"Request.auth","ranges":[{"startOffset":12293,"endOffset":12699,"count":0}],"isBlockCoverage":false},{"functionName":"Request.ca","ranges":[{"startOffset":12877,"endOffset":12930,"count":0}],"isBlockCoverage":false},{"functionName":"Request.key","ranges":[{"startOffset":13111,"endOffset":13165,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pfx","ranges":[{"startOffset":13367,"endOffset":13564,"count":0}],"isBlockCoverage":false},{"functionName":"Request.cert","ranges":[{"startOffset":13742,"endOffset":13797,"count":0}],"isBlockCoverage":false},{"functionName":"Request.disableTLSCerts","ranges":[{"startOffset":14020,"endOffset":14082,"count":0}],"isBlockCoverage":false},{"functionName":"Request.request","ranges":[{"startOffset":14239,"endOffset":18532,"count":60},{"startOffset":14269,"endOffset":14285,"count":0},{"startOffset":14434,"endOffset":14492,"count":0},{"startOffset":14530,"endOffset":14583,"count":0},{"startOffset":14720,"endOffset":14754,"count":0},{"startOffset":14941,"endOffset":15145,"count":0},{"startOffset":15215,"endOffset":15925,"count":0},{"startOffset":16340,"endOffset":16364,"count":0},{"startOffset":16514,"endOffset":16584,"count":0},{"startOffset":16612,"endOffset":16677,"count":0},{"startOffset":16679,"endOffset":16724,"count":0},{"startOffset":16784,"endOffset":16835,"count":0},{"startOffset":17824,"endOffset":17872,"count":0},{"startOffset":17893,"endOffset":17909,"count":0},{"startOffset":17911,"endOffset":17961,"count":0},{"startOffset":17995,"endOffset":18072,"count":26},{"startOffset":18111,"endOffset":18516,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17183,"endOffset":17218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17239,"endOffset":17774,"count":0}],"isBlockCoverage":false},{"functionName":"Request.callback","ranges":[{"startOffset":18710,"endOffset":19943,"count":60},{"startOffset":18771,"endOffset":18802,"count":0},{"startOffset":18939,"endOffset":18946,"count":0},{"startOffset":18990,"endOffset":19045,"count":0},{"startOffset":19130,"endOffset":19371,"count":51},{"startOffset":19253,"endOffset":19263,"count":0},{"startOffset":19351,"endOffset":19362,"count":0},{"startOffset":19378,"endOffset":19485,"count":0},{"startOffset":19601,"endOffset":19632,"count":9},{"startOffset":19632,"endOffset":19681,"count":51},{"startOffset":19681,"endOffset":19715,"count":0},{"startOffset":19715,"endOffset":19885,"count":51},{"startOffset":19887,"endOffset":19923,"count":0},{"startOffset":19923,"endOffset":19942,"count":51}],"isBlockCoverage":true},{"functionName":"Request._isHost","ranges":[{"startOffset":20110,"endOffset":20223,"count":52}],"isBlockCoverage":true},{"functionName":"Request._emitResponse","ranges":[{"startOffset":20433,"endOffset":20867,"count":60},{"startOffset":20594,"endOffset":20625,"count":54}],"isBlockCoverage":true},{"functionName":"response.pipe","ranges":[{"startOffset":20697,"endOffset":20806,"count":0}],"isBlockCoverage":false},{"functionName":"Request._emitRedirect","ranges":[{"startOffset":20992,"endOffset":21124,"count":0}],"isBlockCoverage":false},{"functionName":"Request.end","ranges":[{"startOffset":21150,"endOffset":21433,"count":60},{"startOffset":21248,"endOffset":21338,"count":0},{"startOffset":21408,"endOffset":21415,"count":0}],"isBlockCoverage":true},{"functionName":"Request._end","ranges":[{"startOffset":21460,"endOffset":30341,"count":60},{"startOffset":21495,"endOffset":21589,"count":0},{"startOffset":21974,"endOffset":22014,"count":26},{"startOffset":22110,"endOffset":22132,"count":34},{"startOffset":22134,"endOffset":22202,"count":0},{"startOffset":22224,"endOffset":22247,"count":26},{"startOffset":22290,"endOffset":22325,"count":26},{"startOffset":22327,"endOffset":22436,"count":26},{"startOffset":22389,"endOffset":22402,"count":0},{"startOffset":29523,"endOffset":30208,"count":0},{"startOffset":30241,"endOffset":30309,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22520,"endOffset":28291,"count":60},{"startOffset":22630,"endOffset":22685,"count":0},{"startOffset":22706,"endOffset":22727,"count":0},{"startOffset":22820,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22842,"count":0},{"startOffset":23119,"endOffset":23147,"count":0},{"startOffset":23149,"endOffset":23190,"count":0},{"startOffset":23223,"endOffset":23317,"count":0},{"startOffset":23371,"endOffset":23401,"count":0},{"startOffset":23462,"endOffset":23487,"count":0},{"startOffset":23489,"endOffset":23542,"count":0},{"startOffset":23603,"endOffset":23612,"count":0},{"startOffset":23614,"endOffset":23850,"count":0},{"startOffset":23894,"endOffset":23998,"count":0},{"startOffset":24019,"endOffset":24137,"count":0},{"startOffset":24163,"endOffset":24307,"count":0},{"startOffset":24338,"endOffset":24385,"count":54},{"startOffset":24385,"endOffset":24868,"count":6},{"startOffset":24548,"endOffset":24868,"count":0},{"startOffset":24978,"endOffset":24993,"count":0},{"startOffset":25011,"endOffset":25039,"count":54},{"startOffset":27478,"endOffset":27543,"count":0},{"startOffset":27606,"endOffset":27917,"count":0},{"startOffset":28079,"endOffset":28287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25269,"endOffset":25857,"count":60},{"startOffset":25353,"endOffset":25356,"count":0},{"startOffset":25393,"endOffset":25849,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26087,"endOffset":27467,"count":60},{"startOffset":26144,"endOffset":26234,"count":0},{"startOffset":26382,"endOffset":26399,"count":0},{"startOffset":26401,"endOffset":26455,"count":0},{"startOffset":26517,"endOffset":27347,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27803,"endOffset":27895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27967,"endOffset":28049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28095,"endOffset":28285,"count":0}],"isBlockCoverage":false},{"functionName":"getProgressMonitor","ranges":[{"startOffset":28353,"endOffset":28786,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToChunks","ranges":[{"startOffset":28813,"endOffset":29390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29839,"endOffset":30202,"count":0}],"isBlockCoverage":false},{"functionName":"Request._shouldUnzip","ranges":[{"startOffset":30439,"endOffset":30931,"count":60},{"startOffset":30504,"endOffset":30573,"count":0},{"startOffset":30709,"endOffset":30830,"count":0}],"isBlockCoverage":true},{"functionName":"Request.connect","ranges":[{"startOffset":31430,"endOffset":31735,"count":0}],"isBlockCoverage":false},{"functionName":"Request.trustLocalhost","ranges":[{"startOffset":31772,"endOffset":31871,"count":0}],"isBlockCoverage":false},{"functionName":"request.<computed>","ranges":[{"startOffset":32255,"endOffset":32608,"count":0}],"isBlockCoverage":false},{"functionName":"isText","ranges":[{"startOffset":32736,"endOffset":33009,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":33212,"endOffset":33483,"count":60}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":33624,"endOffset":33748,"count":94}],"isBlockCoverage":true},{"functionName":"isRedirect","ranges":[{"startOffset":33873,"endOffset":33958,"count":60}],"isBlockCoverage":true}]},{"scriptId":"506","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11360,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1937,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":2097,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3780,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":3946,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4325,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":4445,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5955,"endOffset":6361,"count":1},{"startOffset":6019,"endOffset":6045,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":6747,"endOffset":8555,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":8590,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":8696,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":9326,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":9766,"endOffset":10313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11148,"endOffset":11258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/Mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2892,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":102,"endOffset":418,"count":1},{"startOffset":245,"endOffset":281,"count":2}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":1250,"endOffset":2264,"count":3},{"startOffset":1305,"endOffset":2262,"count":957},{"startOffset":1478,"endOffset":2065,"count":1214},{"startOffset":1652,"endOffset":1679,"count":38},{"startOffset":1679,"endOffset":1698,"count":1176},{"startOffset":1698,"endOffset":1721,"count":1173},{"startOffset":1723,"endOffset":2027,"count":0},{"startOffset":2027,"endOffset":2065,"count":1176},{"startOffset":2119,"endOffset":2145,"count":956},{"startOffset":2230,"endOffset":2235,"count":924},{"startOffset":2236,"endOffset":2251,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1346,"endOffset":1395,"count":1214}],"isBlockCoverage":true},{"functionName":"Mime.getType","ranges":[{"startOffset":2341,"endOffset":2641,"count":26},{"startOffset":2631,"endOffset":2638,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.getExtension","ranges":[{"startOffset":2735,"endOffset":2866,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/types/standard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/mime/types/other.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25894,"count":1}],"isBlockCoverage":true}]},{"scriptId":"511","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/form-data/lib/form_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14008,"count":1}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":780,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.append","ranges":[{"startOffset":1220,"endOffset":2052,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._trackLength","ranges":[{"startOffset":2089,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lengthRetriever","ranges":[{"startOffset":3194,"endOffset":4793,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartHeader","ranges":[{"startOffset":4834,"endOffset":6228,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentDisposition","ranges":[{"startOffset":6275,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentType","ranges":[{"startOffset":7131,"endOffset":8068,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartFooter","ranges":[{"startOffset":8109,"endOffset":8336,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lastBoundary","ranges":[{"startOffset":8374,"endOffset":8453,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getHeaders","ranges":[{"startOffset":8488,"endOffset":8826,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.setBoundary","ranges":[{"startOffset":8862,"endOffset":8913,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBoundary","ranges":[{"startOffset":8949,"endOffset":9048,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBuffer","ranges":[{"startOffset":9082,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._generateBoundary","ranges":[{"startOffset":10034,"endOffset":10350,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLengthSync","ranges":[{"startOffset":10534,"endOffset":11199,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.hasKnownLength","ranges":[{"startOffset":11402,"endOffset":11542,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLength","ranges":[{"startOffset":11576,"endOffset":12100,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.submit","ranges":[{"startOffset":12131,"endOffset":13748,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._error","ranges":[{"startOffset":13779,"endOffset":13890,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.toString","ranges":[{"startOffset":13923,"endOffset":13968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/combined-stream/lib/combined_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"CombinedStream","ranges":[{"startOffset":148,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.create","ranges":[{"startOffset":514,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.isStreamLike","ranges":[{"startOffset":739,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.append","ranges":[{"startOffset":980,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pipe","ranges":[{"startOffset":1526,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._getNext","ranges":[{"startOffset":1675,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._realGetNext","ranges":[{"startOffset":2035,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._pipeNext","ranges":[{"startOffset":2567,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._handleErrors","ranges":[{"startOffset":2908,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.write","ranges":[{"startOffset":3052,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pause","ranges":[{"startOffset":3133,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.resume","ranges":[{"startOffset":3378,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.end","ranges":[{"startOffset":3682,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.destroy","ranges":[{"startOffset":3771,"endOffset":3824,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._reset","ranges":[{"startOffset":3861,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._checkDataSize","ranges":[{"startOffset":3997,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._updateDataSize","ranges":[{"startOffset":4275,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._emitError","ranges":[{"startOffset":4624,"endOffset":4685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/delayed-stream/lib/delayed_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2319,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedStream","ranges":[{"startOffset":100,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.create","ranges":[{"startOffset":388,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":982,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.setEncoding","ranges":[{"startOffset":1075,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.resume","ranges":[{"startOffset":1189,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pause","ranges":[{"startOffset":1312,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.release","ranges":[{"startOffset":1386,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pipe","ranges":[{"startOffset":1587,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._handleEmit","ranges":[{"startOffset":1727,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._checkIfMaxDataSizeExceeded","ranges":[{"startOffset":2021,"endOffset":2317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"515","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/parallel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"parallel","ranges":[{"startOffset":492,"endOffset":1016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":true},{"functionName":"iterate","ranges":[{"startOffset":390,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"runJob","ranges":[{"startOffset":1455,"endOffset":1793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":251,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/defer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":140,"endOffset":440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":122,"endOffset":246,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":400,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":341,"endOffset":940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/lib/terminator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":533,"count":1}],"isBlockCoverage":true},{"functionName":"terminator","ranges":[{"startOffset":270,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/serial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"serial","ranges":[{"startOffset":399,"endOffset":500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asynckit/serialOrdered.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"serialOrdered","ranges":[{"startOffset":657,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"ascending","ranges":[{"startOffset":1427,"endOffset":1492,"count":0}],"isBlockCoverage":false},{"functionName":"descending","ranges":[{"startOffset":1690,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/es-set-tostringtag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1},{"startOffset":319,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"setToStringTag","ranges":[{"startOffset":372,"endOffset":1211,"count":1},{"startOffset":455,"endOffset":472,"count":0},{"startOffset":473,"endOffset":494,"count":0},{"startOffset":540,"endOffset":557,"count":0},{"startOffset":558,"endOffset":589,"count":0},{"startOffset":765,"endOffset":876,"count":0},{"startOffset":1122,"endOffset":1206,"count":0}],"isBlockCoverage":true}]},{"scriptId":"525","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-tostringtag/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"hasToStringTagShams","ranges":[{"startOffset":107,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"526","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/form-data/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":45,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/formidable/dist/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45595,"count":1}],"isBlockCoverage":true},{"functionName":"PersistentFile","ranges":[{"startOffset":605,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1040,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1201,"endOffset":1566,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1570,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1700,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2036,"endOffset":2197,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":2201,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"VolatileFile","ranges":[{"startOffset":2469,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":2950,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3108,"endOffset":3156,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3160,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":3462,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3535,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3860,"endOffset":4021,"count":0}],"isBlockCoverage":false},{"functionName":"FormidableError","ranges":[{"startOffset":4682,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"DummyParser","ranges":[{"startOffset":5783,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":5924,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"lower","ranges":[{"startOffset":6699,"endOffset":6739,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6788,"endOffset":6846,"count":13}],"isBlockCoverage":true},{"functionName":"MultipartParser","ranges":[{"startOffset":6906,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"_endUnexpected","ranges":[{"startOffset":7224,"endOffset":7399,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":7403,"endOffset":7786,"count":0}],"isBlockCoverage":false},{"functionName":"initWithBoundary","ranges":[{"startOffset":7790,"endOffset":8098,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCallback","ranges":[{"startOffset":8143,"endOffset":8305,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":8354,"endOffset":15275,"count":0}],"isBlockCoverage":false},{"functionName":"explain","ranges":[{"startOffset":15279,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.stateToString","ranges":[{"startOffset":15443,"endOffset":15654,"count":0}],"isBlockCoverage":false},{"functionName":"OctetStreamParser","ranges":[{"startOffset":15786,"endOffset":15871,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$3","ranges":[{"startOffset":16039,"endOffset":16410,"count":0}],"isBlockCoverage":false},{"functionName":"init$2","ranges":[{"startOffset":16655,"endOffset":18039,"count":0}],"isBlockCoverage":false},{"functionName":"QuerystringParser","ranges":[{"startOffset":18236,"endOffset":18398,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":18402,"endOffset":18551,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":18555,"endOffset":18771,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$2","ranges":[{"startOffset":18942,"endOffset":19299,"count":0}],"isBlockCoverage":false},{"functionName":"init$1","ranges":[{"startOffset":19543,"endOffset":19870,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$1","ranges":[{"startOffset":20031,"endOffset":20923,"count":0}],"isBlockCoverage":false},{"functionName":"createInitMultipart","ranges":[{"startOffset":21168,"endOffset":25739,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParser","ranges":[{"startOffset":25836,"endOffset":25971,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":25975,"endOffset":26111,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":26115,"endOffset":26324,"count":0}],"isBlockCoverage":false},{"functionName":"plugin","ranges":[{"startOffset":26482,"endOffset":26830,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":27074,"endOffset":27351,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":28089,"endOffset":28125,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProp","ranges":[{"startOffset":28154,"endOffset":28244,"count":0}],"isBlockCoverage":false},{"functionName":"decorateForceSequential","ranges":[{"startOffset":28279,"endOffset":28947,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28450,"endOffset":28944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29014,"endOffset":29148,"count":0}],"isBlockCoverage":false},{"functionName":"invalidExtensionChar","ranges":[{"startOffset":29181,"endOffset":29364,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm","ranges":[{"startOffset":29423,"endOffset":30675,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":30679,"endOffset":30918,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":30922,"endOffset":31175,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":31179,"endOffset":31435,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":31489,"endOffset":33460,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeaders","ranges":[{"startOffset":33464,"endOffset":33876,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":33880,"endOffset":34272,"count":0}],"isBlockCoverage":false},{"functionName":"onPart","ranges":[{"startOffset":34276,"endOffset":34379,"count":0}],"isBlockCoverage":false},{"functionName":"_handlePart","ranges":[{"startOffset":34383,"endOffset":38299,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentType","ranges":[{"startOffset":38348,"endOffset":39539,"count":0}],"isBlockCoverage":false},{"functionName":"_error","ranges":[{"startOffset":39543,"endOffset":39784,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentLength","ranges":[{"startOffset":39788,"endOffset":40175,"count":0}],"isBlockCoverage":false},{"functionName":"_newParser","ranges":[{"startOffset":40179,"endOffset":40245,"count":0}],"isBlockCoverage":false},{"functionName":"_newFile","ranges":[{"startOffset":40249,"endOffset":41081,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileName","ranges":[{"startOffset":41085,"endOffset":41641,"count":0}],"isBlockCoverage":false},{"functionName":"_getExtension","ranges":[{"startOffset":41763,"endOffset":42411,"count":0}],"isBlockCoverage":false},{"functionName":"_joinDirectoryName","ranges":[{"startOffset":42415,"endOffset":42689,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpRename","ranges":[{"startOffset":42693,"endOffset":43569,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFields","ranges":[{"startOffset":43573,"endOffset":44013,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFiles","ranges":[{"startOffset":44017,"endOffset":44449,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeEnd","ranges":[{"startOffset":44453,"endOffset":44588,"count":0}],"isBlockCoverage":false},{"functionName":"formidable","ranges":[{"startOffset":44731,"endOffset":44769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@paralleldrive/cuid2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"529","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@paralleldrive/cuid2/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"createEntropy","ranges":[{"startOffset":166,"endOffset":350,"count":1},{"startOffset":261,"endOffset":330,"count":32}],"isBlockCoverage":true},{"functionName":"bufToBigInt","ranges":[{"startOffset":479,"endOffset":658,"count":1},{"startOffset":575,"endOffset":640,"count":64}],"isBlockCoverage":true},{"functionName":"hash","ranges":[{"startOffset":673,"endOffset":832,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":879,"endOffset":918,"count":26}],"isBlockCoverage":true},{"functionName":"randomLetter","ranges":[{"startOffset":944,"endOffset":1006,"count":0}],"isBlockCoverage":false},{"functionName":"createFingerprint","ranges":[{"startOffset":1264,"endOffset":1655,"count":1},{"startOffset":1328,"endOffset":1381,"count":0},{"startOffset":1564,"endOffset":1598,"count":0}],"isBlockCoverage":true},{"functionName":"createCounter","ranges":[{"startOffset":1680,"endOffset":1718,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1691,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":1891,"endOffset":2954,"count":2}],"isBlockCoverage":true},{"functionName":"cuid2","ranges":[{"startOffset":2305,"endOffset":2951,"count":0}],"isBlockCoverage":false},{"functionName":"isCuid","ranges":[{"startOffset":2998,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.getConstants","ranges":[{"startOffset":3337,"endOffset":3373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/sha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9104,"count":1},{"startOffset":1387,"endOffset":1792,"count":24},{"startOffset":1612,"endOffset":1766,"count":168},{"startOffset":1705,"endOffset":1760,"count":86}],"isBlockCoverage":true},{"functionName":"rotlH","ranges":[{"startOffset":1958,"endOffset":2045,"count":3480},{"startOffset":1979,"endOffset":2011,"count":1200},{"startOffset":2012,"endOffset":2044,"count":2280}],"isBlockCoverage":true},{"functionName":"rotlL","ranges":[{"startOffset":2061,"endOffset":2148,"count":3480},{"startOffset":2082,"endOffset":2114,"count":1200},{"startOffset":2115,"endOffset":2147,"count":2280}],"isBlockCoverage":true},{"functionName":"keccakP","ranges":[{"startOffset":2233,"endOffset":3814,"count":5},{"startOffset":2460,"endOffset":3782,"count":120},{"startOffset":2530,"endOffset":2590,"count":1200},{"startOffset":2631,"endOffset":3023,"count":600},{"startOffset":2930,"endOffset":3013,"count":3000},{"startOffset":3141,"endOffset":3433,"count":2880},{"startOffset":3494,"endOffset":3684,"count":600},{"startOffset":3553,"endOffset":3569,"count":6000},{"startOffset":3627,"endOffset":3674,"count":6000}],"isBlockCoverage":true},{"functionName":"Keccak","ranges":[{"startOffset":3953,"endOffset":4757,"count":11},{"startOffset":4594,"endOffset":4653,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":4762,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"keccak","ranges":[{"startOffset":4816,"endOffset":5023,"count":5}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":5028,"endOffset":5547,"count":1},{"startOffset":5279,"endOffset":5520,"count":5},{"startOffset":5407,"endOffset":5440,"count":290},{"startOffset":5496,"endOffset":5510,"count":4}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":5552,"endOffset":5902,"count":1},{"startOffset":5602,"endOffset":5609,"count":0},{"startOffset":5785,"endOffset":5808,"count":0},{"startOffset":5822,"endOffset":5836,"count":0}],"isBlockCoverage":true},{"functionName":"writeInto","ranges":[{"startOffset":5907,"endOffset":6475,"count":1},{"startOffset":6218,"endOffset":6232,"count":0}],"isBlockCoverage":true},{"functionName":"xofInto","ranges":[{"startOffset":6480,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"xof","ranges":[{"startOffset":6731,"endOffset":6841,"count":0}],"isBlockCoverage":false},{"functionName":"digestInto","ranges":[{"startOffset":6846,"endOffset":7073,"count":1},{"startOffset":6947,"endOffset":6994,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":7078,"endOffset":7158,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":7163,"endOffset":7254,"count":1}],"isBlockCoverage":true},{"functionName":"_cloneInto","ranges":[{"startOffset":7259,"endOffset":7791,"count":0}],"isBlockCoverage":false},{"functionName":"gen","ranges":[{"startOffset":7831,"endOffset":7939,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7893,"endOffset":7938,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7992,"endOffset":8021,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8104,"endOffset":8133,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8189,"endOffset":8218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8274,"endOffset":8302,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8362,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8476,"endOffset":8505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8565,"endOffset":8594,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8654,"endOffset":8682,"count":1}],"isBlockCoverage":true},{"functionName":"genShake","ranges":[{"startOffset":8704,"endOffset":8866,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8765,"endOffset":8865,"count":2},{"startOffset":8846,"endOffset":8858,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8931,"endOffset":8965,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9033,"endOffset":9067,"count":1}],"isBlockCoverage":true}]},{"scriptId":"531","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/_u64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3819,"count":1}],"isBlockCoverage":true},{"functionName":"fromBig","ranges":[{"startOffset":755,"endOffset":972,"count":24},{"startOffset":883,"endOffset":971,"count":0}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":973,"endOffset":1248,"count":1},{"startOffset":1139,"endOffset":1225,"count":24}],"isBlockCoverage":true},{"functionName":"toBig","ranges":[{"startOffset":1263,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"shrSH","ranges":[{"startOffset":1379,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"shrSL","ranges":[{"startOffset":1439,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"rotrSH","ranges":[{"startOffset":1556,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"rotrSL","ranges":[{"startOffset":1638,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"rotrBH","ranges":[{"startOffset":1785,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"rotrBL","ranges":[{"startOffset":1874,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"rotr32H","ranges":[{"startOffset":2012,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"rotr32L","ranges":[{"startOffset":2069,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"rotlSH","ranges":[{"startOffset":2161,"endOffset":2201,"count":2280}],"isBlockCoverage":true},{"functionName":"rotlSL","ranges":[{"startOffset":2243,"endOffset":2283,"count":2280}],"isBlockCoverage":true},{"functionName":"rotlBH","ranges":[{"startOffset":2389,"endOffset":2436,"count":1200}],"isBlockCoverage":true},{"functionName":"rotlBL","ranges":[{"startOffset":2478,"endOffset":2525,"count":1200}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":2706,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"add3L","ranges":[{"startOffset":2895,"endOffset":2947,"count":0}],"isBlockCoverage":false},{"functionName":"add3H","ranges":[{"startOffset":2986,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"add4L","ranges":[{"startOffset":3088,"endOffset":3157,"count":0}],"isBlockCoverage":false},{"functionName":"add4H","ranges":[{"startOffset":3196,"endOffset":3268,"count":0}],"isBlockCoverage":false},{"functionName":"add5L","ranges":[{"startOffset":3307,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"add5H","ranges":[{"startOffset":3432,"endOffset":3513,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11528,"count":1},{"startOffset":4636,"endOffset":4656,"count":0},{"startOffset":4943,"endOffset":4955,"count":0}],"isBlockCoverage":true},{"functionName":"isBytes","ranges":[{"startOffset":1789,"endOffset":1914,"count":5},{"startOffset":1846,"endOffset":1911,"count":0}],"isBlockCoverage":true},{"functionName":"anumber","ranges":[{"startOffset":1961,"endOffset":2091,"count":11},{"startOffset":2034,"endOffset":2089,"count":0}],"isBlockCoverage":true},{"functionName":"abytes","ranges":[{"startOffset":2132,"endOffset":2392,"count":5},{"startOffset":2194,"endOffset":2233,"count":0},{"startOffset":2261,"endOffset":2291,"count":0},{"startOffset":2301,"endOffset":2390,"count":0}],"isBlockCoverage":true},{"functionName":"ahash","ranges":[{"startOffset":2426,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"aexists","ranges":[{"startOffset":2704,"endOffset":2955,"count":2},{"startOffset":2791,"endOffset":2843,"count":0},{"startOffset":2866,"endOffset":2886,"count":1},{"startOffset":2896,"endOffset":2953,"count":0}],"isBlockCoverage":true},{"functionName":"aoutput","ranges":[{"startOffset":3007,"endOffset":3218,"count":1},{"startOffset":3120,"endOffset":3216,"count":0}],"isBlockCoverage":true},{"functionName":"u8","ranges":[{"startOffset":3253,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"u32","ranges":[{"startOffset":3380,"endOffset":3489,"count":11}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":3555,"endOffset":3663,"count":6}],"isBlockCoverage":true},{"functionName":"createView","ranges":[{"startOffset":3733,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"rotr","ranges":[{"startOffset":3899,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"rotl","ranges":[{"startOffset":4050,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4236,"endOffset":4306,"count":1}],"isBlockCoverage":true},{"functionName":"byteSwap","ranges":[{"startOffset":4353,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4623,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"exports.swap8IfBE","ranges":[{"startOffset":4638,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"byteSwap32","ranges":[{"startOffset":4761,"endOffset":4889,"count":0}],"isBlockCoverage":false},{"functionName":"exports.swap32IfBE","ranges":[{"startOffset":4930,"endOffset":4938,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5086,"endOffset":5198,"count":1},{"startOffset":5155,"endOffset":5198,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5318,"endOffset":5359,"count":256}],"isBlockCoverage":true},{"functionName":"bytesToHex","ranges":[{"startOffset":5527,"endOffset":5805,"count":0}],"isBlockCoverage":false},{"functionName":"asciiToBase16","ranges":[{"startOffset":5936,"endOffset":6269,"count":0}],"isBlockCoverage":false},{"functionName":"hexToBytes","ranges":[{"startOffset":6435,"endOffset":7334,"count":0}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":7570,"endOffset":7585,"count":0}],"isBlockCoverage":false},{"functionName":"asyncLoop","ranges":[{"startOffset":7683,"endOffset":8073,"count":0}],"isBlockCoverage":false},{"functionName":"utf8ToBytes","ranges":[{"startOffset":8195,"endOffset":8388,"count":1},{"startOffset":8264,"endOffset":8299,"count":0}],"isBlockCoverage":true},{"functionName":"bytesToUtf8","ranges":[{"startOffset":8510,"endOffset":8585,"count":0}],"isBlockCoverage":false},{"functionName":"toBytes","ranges":[{"startOffset":8765,"endOffset":8894,"count":2},{"startOffset":8832,"endOffset":8857,"count":1}],"isBlockCoverage":true},{"functionName":"kdfInputToBytes","ranges":[{"startOffset":9019,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"concatBytes","ranges":[{"startOffset":9201,"endOffset":9571,"count":0}],"isBlockCoverage":false},{"functionName":"checkOpts","ranges":[{"startOffset":9572,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"createHasher","ranges":[{"startOffset":9976,"endOffset":10235,"count":8}],"isBlockCoverage":true},{"functionName":"hashC","ranges":[{"startOffset":10028,"endOffset":10077,"count":1}],"isBlockCoverage":true},{"functionName":"hashC.create","ranges":[{"startOffset":10198,"endOffset":10214,"count":0}],"isBlockCoverage":false},{"functionName":"createOptHasher","ranges":[{"startOffset":10236,"endOffset":10518,"count":0}],"isBlockCoverage":false},{"functionName":"createXOFer","ranges":[{"startOffset":10519,"endOffset":10797,"count":2}],"isBlockCoverage":true},{"functionName":"hashC","ranges":[{"startOffset":10570,"endOffset":10629,"count":0}],"isBlockCoverage":false},{"functionName":"hashC.create","ranges":[{"startOffset":10752,"endOffset":10776,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":11026,"endOffset":11494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/cryptoNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1},{"startOffset":453,"endOffset":539,"count":0}],"isBlockCoverage":true}]},{"scriptId":"534","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30612,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1215,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1846,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1963,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4547,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":6163,"endOffset":6807,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6811,"endOffset":9061,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":9065,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":10084,"endOffset":11108,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":11112,"endOffset":12082,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":12086,"endOffset":13672,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13676,"endOffset":14562,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":14566,"endOffset":17367,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":17464,"endOffset":19048,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":19147,"endOffset":21185,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":21189,"endOffset":22326,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":22330,"endOffset":22976,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":22980,"endOffset":23761,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":23765,"endOffset":25212,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":25216,"endOffset":25963,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":25967,"endOffset":26714,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":26876,"endOffset":26938,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26975,"endOffset":26988,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":27030,"endOffset":27092,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":27098,"endOffset":27201,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27238,"endOffset":27251,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":27269,"endOffset":27610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/dezalgo/dezalgo.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":368,"count":1}],"isBlockCoverage":true},{"functionName":"dezalgo","ranges":[{"startOffset":93,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asap/asap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"asap","ranges":[{"startOffset":510,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask","ranges":[{"startOffset":751,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask.call","ranges":[{"startOffset":846,"endOffset":1955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/asap/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"rawAsap","ranges":[{"startOffset":748,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":1861,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"requestFlush","ranges":[{"startOffset":3011,"endOffset":4138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"541","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":1},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":1},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6912,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":1},{"startOffset":1108,"endOffset":1213,"count":10}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":120},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":120},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4433,"count":1},{"startOffset":4196,"endOffset":4208,"count":0},{"startOffset":4311,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4626,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5739,"endOffset":5930,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6073,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6416,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6644,"endOffset":6820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cookiejar/cookiejar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25,"endOffset":10213,"count":1}],"isBlockCoverage":true},{"functionName":"CookieAccessInfo","ranges":[{"startOffset":62,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"Cookie","ranges":[{"startOffset":549,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1407,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"toValueString","ranges":[{"startOffset":2001,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2176,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":4603,"endOffset":4938,"count":0}],"isBlockCoverage":false},{"functionName":"collidesWith","ranges":[{"startOffset":4977,"endOffset":6046,"count":0}],"isBlockCoverage":false},{"functionName":"CookieJar","ranges":[{"startOffset":6053,"endOffset":9403,"count":0}],"isBlockCoverage":false},{"functionName":"setCookies","ranges":[{"startOffset":9587,"endOffset":10210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/fast-safe-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5794,"count":1}],"isBlockCoverage":true},{"functionName":"defaultOptions","ranges":[{"startOffset":263,"endOffset":389,"count":26}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":412,"endOffset":1141,"count":26},{"startOffset":701,"endOffset":785,"count":0},{"startOffset":790,"endOffset":902,"count":0},{"startOffset":942,"endOffset":1122,"count":0}],"isBlockCoverage":true},{"functionName":"setReplace","ranges":[{"startOffset":1143,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"decirc","ranges":[{"startOffset":1598,"endOffset":2696,"count":118},{"startOffset":1718,"endOffset":1733,"count":39},{"startOffset":1735,"endOffset":2694,"count":39},{"startOffset":1776,"endOffset":1894,"count":13},{"startOffset":1806,"endOffset":1888,"count":0},{"startOffset":1995,"endOffset":2068,"count":0},{"startOffset":2177,"endOffset":2250,"count":0},{"startOffset":2377,"endOffset":2490,"count":13},{"startOffset":2418,"endOffset":2484,"count":11},{"startOffset":2490,"endOffset":2674,"count":26},{"startOffset":2572,"endOffset":2668,"count":81}],"isBlockCoverage":true},{"functionName":"compareFunction","ranges":[{"startOffset":2718,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicStringify","ranges":[{"startOffset":2831,"endOffset":3655,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicDecirc","ranges":[{"startOffset":3657,"endOffset":5178,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetterValues","ranges":[{"startOffset":5279,"endOffset":5793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8422,"count":1},{"startOffset":1737,"endOffset":1947,"count":0}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":146,"endOffset":187,"count":120}],"isBlockCoverage":true},{"functionName":"exports.params","ranges":[{"startOffset":313,"endOffset":564,"count":60},{"startOffset":391,"endOffset":545,"count":120},{"startOffset":521,"endOffset":541,"count":60}],"isBlockCoverage":true},{"functionName":"exports.parseLinks","ranges":[{"startOffset":688,"endOffset":951,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cleanHeader","ranges":[{"startOffset":1104,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isObject","ranges":[{"startOffset":1507,"endOffset":1576,"count":78}],"isBlockCoverage":true},{"functionName":"exports.hasOwn","ranges":[{"startOffset":1740,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"exports.mixin","ranges":[{"startOffset":1965,"endOffset":2100,"count":2},{"startOffset":2015,"endOffset":2098,"count":33}],"isBlockCoverage":true}]},{"scriptId":"547","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/request-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64288,"count":1}],"isBlockCoverage":true},{"functionName":"RequestBase","ranges":[{"startOffset":272,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.clearTimeout","ranges":[{"startOffset":424,"endOffset":663,"count":120}],"isBlockCoverage":true},{"functionName":"RequestBase.parse","ranges":[{"startOffset":863,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.responseType","ranges":[{"startOffset":1330,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.serialize","ranges":[{"startOffset":1621,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.timeout","ranges":[{"startOffset":2316,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.retry","ranges":[{"startOffset":3236,"endOffset":3485,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._shouldRetry","ranges":[{"startOffset":4640,"endOffset":5576,"count":60},{"startOffset":4688,"endOffset":4726,"count":0},{"startOffset":4751,"endOffset":5294,"count":0},{"startOffset":5295,"endOffset":5326,"count":0},{"startOffset":5328,"endOffset":5575,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._retry","ranges":[{"startOffset":5689,"endOffset":5913,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.then","ranges":[{"startOffset":6056,"endOffset":7009,"count":60},{"startOffset":6167,"endOffset":6324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6367,"endOffset":6945,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6413,"endOffset":6842,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6860,"endOffset":6937,"count":60},{"startOffset":6897,"endOffset":6911,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.catch","ranges":[{"startOffset":7041,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.use","ranges":[{"startOffset":7168,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.ok","ranges":[{"startOffset":7241,"endOffset":7386,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._isResponseOK","ranges":[{"startOffset":7426,"endOffset":7592,"count":60},{"startOffset":7455,"endOffset":7478,"count":0},{"startOffset":7503,"endOffset":7542,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.get","ranges":[{"startOffset":7747,"endOffset":7811,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.set","ranges":[{"startOffset":8652,"endOffset":8909,"count":26},{"startOffset":8701,"endOffset":8817,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.unset","ranges":[{"startOffset":9132,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.field","ranges":[{"startOffset":9803,"endOffset":10821,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.abort","ranges":[{"startOffset":10960,"endOffset":11200,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._auth","ranges":[{"startOffset":11232,"endOffset":11693,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.withCredentials","ranges":[{"startOffset":12094,"endOffset":12252,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.redirects","ranges":[{"startOffset":12448,"endOffset":12505,"count":120}],"isBlockCoverage":true},{"functionName":"RequestBase.maxResponseSize","ranges":[{"startOffset":12727,"endOffset":12867,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.toJSON","ranges":[{"startOffset":13172,"endOffset":13295,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.send","ranges":[{"startOffset":14309,"endOffset":15757,"count":26},{"startOffset":14428,"endOffset":14566,"count":0},{"startOffset":14630,"endOffset":14660,"count":0},{"startOffset":14725,"endOffset":14841,"count":0},{"startOffset":14925,"endOffset":15109,"count":81},{"startOffset":14966,"endOffset":14986,"count":0},{"startOffset":14988,"endOffset":15045,"count":0},{"startOffset":15113,"endOffset":15623,"count":0},{"startOffset":15664,"endOffset":15686,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.sortQuery","ranges":[{"startOffset":16374,"endOffset":16536,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._finalizeQueryString","ranges":[{"startOffset":16655,"endOffset":17207,"count":60},{"startOffset":16721,"endOffset":16788,"count":0},{"startOffset":16863,"endOffset":17205,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._appendQueryString","ranges":[{"startOffset":17282,"endOffset":17322,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._timeoutError","ranges":[{"startOffset":17430,"endOffset":17742,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._setTimeouts","ranges":[{"startOffset":17781,"endOffset":18258,"count":60},{"startOffset":17851,"endOffset":17866,"count":0},{"startOffset":17868,"endOffset":17998,"count":0},{"startOffset":18050,"endOffset":18080,"count":0},{"startOffset":18082,"endOffset":18256,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17899,"endOffset":17977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18128,"endOffset":18227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/http2wrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18469,"count":1}],"isBlockCoverage":true},{"functionName":"setProtocol","ranges":[{"startOffset":324,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":482,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"createUnixConnection","ranges":[{"startOffset":1403,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":1830,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"getFrame","ranges":[{"startOffset":2060,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttpHeader","ranges":[{"startOffset":2887,"endOffset":3316,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttp2Header","ranges":[{"startOffset":3319,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":3814,"endOffset":3889,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":3892,"endOffset":3959,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3962,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":4067,"endOffset":4169,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4172,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4246,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/unzip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6506,"count":1}],"isBlockCoverage":true},{"functionName":"exports.unzip","ranges":[{"startOffset":329,"endOffset":1560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11626,"count":1}],"isBlockCoverage":true},{"functionName":"Response","ranges":[{"startOffset":521,"endOffset":1165,"count":60}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1314,"endOffset":1426,"count":24},{"startOffset":1371,"endOffset":1421,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1430,"endOffset":1470,"count":54}],"isBlockCoverage":true},{"functionName":"Response.destroy","ranges":[{"startOffset":1678,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"Response.pause","ranges":[{"startOffset":1774,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"Response.resume","ranges":[{"startOffset":1860,"endOffset":1896,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toError","ranges":[{"startOffset":2028,"endOffset":2352,"count":51}],"isBlockCoverage":true},{"functionName":"Response.setStatusProperties","ranges":[{"startOffset":2395,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toJSON","ranges":[{"startOffset":2627,"endOffset":2760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/response-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10004,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseBase","ranges":[{"startOffset":213,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase.get","ranges":[{"startOffset":381,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase._setHeaderProperties","ranges":[{"startOffset":745,"endOffset":1239,"count":60},{"startOffset":865,"endOffset":870,"count":0},{"startOffset":1144,"endOffset":1201,"count":0},{"startOffset":1206,"endOffset":1237,"count":0}],"isBlockCoverage":true},{"functionName":"ResponseBase._setStatusProperties","ranges":[{"startOffset":1894,"endOffset":2630,"count":60},{"startOffset":2248,"endOffset":2261,"count":31},{"startOffset":2262,"endOffset":2278,"count":51},{"startOffset":2279,"endOffset":2286,"count":9}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10181,"count":1},{"startOffset":1674,"endOffset":2143,"count":35}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":352,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"_saveCookies","ranges":[{"startOffset":949,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"_attachCookies","ranges":[{"startOffset":1381,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":1739,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":2355,"endOffset":2439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/agent-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3363,"count":1},{"startOffset":449,"endOffset":758,"count":22}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":263,"endOffset":307,"count":0}],"isBlockCoverage":false},{"functionName":"_setDefaults","ranges":[{"startOffset":310,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":529,"endOffset":755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"555","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1804,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":91,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2652,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":594,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":114,"endOffset":151,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":170,"endOffset":590,"count":54},{"startOffset":270,"endOffset":547,"count":0}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1088,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":170,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":108,"endOffset":145,"count":6}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/image.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/supertest/lib/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1965,"count":1},{"startOffset":247,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"TestAgent","ranges":[{"startOffset":450,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"TestAgent.host","ranges":[{"startOffset":1204,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1307,"endOffset":1850,"count":35}],"isBlockCoverage":true},{"functionName":"TestAgent.<computed>","ranges":[{"startOffset":1358,"endOffset":1847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1168,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":216,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":837,"count":42}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":851,"endOffset":1161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/node-pre-gyp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8844,"count":1},{"startOffset":945,"endOffset":1013,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1135,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"Run","ranges":[{"startOffset":1953,"endOffset":2490,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2129,"endOffset":2318,"count":13}],"isBlockCoverage":true},{"functionName":"self.commands.<computed>","ranges":[{"startOffset":2173,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"parseOpts","ranges":[{"startOffset":3371,"endOffset":5621,"count":1},{"startOffset":4141,"endOffset":4203,"count":0},{"startOffset":4368,"endOffset":4448,"count":0},{"startOffset":5562,"endOffset":5603,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3847,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4788,"endOffset":5532,"count":80},{"startOffset":4847,"endOffset":4854,"count":69},{"startOffset":4854,"endOffset":4939,"count":11},{"startOffset":4939,"endOffset":4969,"count":0},{"startOffset":4969,"endOffset":5528,"count":11},{"startOffset":5270,"endOffset":5476,"count":0}],"isBlockCoverage":true},{"functionName":"proto.setBinaryHostProperty","ranges":[{"startOffset":6964,"endOffset":8209,"count":1},{"startOffset":7010,"endOffset":7057,"count":0},{"startOffset":7232,"endOffset":7375,"count":0},{"startOffset":7377,"endOffset":7486,"count":0},{"startOffset":7488,"endOffset":7805,"count":0},{"startOffset":7807,"endOffset":8208,"count":0}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":8287,"endOffset":8683,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8770,"endOffset":8819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/s3_setup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4581,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.detect","ranges":[{"startOffset":151,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_s3","ranges":[{"startOffset":952,"endOffset":2529,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_mockS3Http","ranges":[{"startOffset":2765,"endOffset":4576,"count":1},{"startOffset":2873,"endOffset":4575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2855,"endOffset":2868,"count":2}],"isBlockCoverage":true},{"functionName":"mock_http","ranges":[{"startOffset":3267,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"mockS3Http","ranges":[{"startOffset":4060,"endOffset":4343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12220,"count":1},{"startOffset":98,"endOffset":155,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":100,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":160,"endOffset":174,"count":2}],"isBlockCoverage":true},{"functionName":"nopt","ranges":[{"startOffset":813,"endOffset":1480,"count":1},{"startOffset":876,"endOffset":891,"count":0},{"startOffset":908,"endOffset":913,"count":0},{"startOffset":940,"endOffset":945,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1370,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1482,"endOffset":4022,"count":1},{"startOffset":1545,"endOffset":1564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1667,"endOffset":4019,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":4024,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":4092,"endOffset":4500,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4502,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":4650,"endOffset":4816,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4818,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":5104,"endOffset":5225,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":5227,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5332,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6786,"endOffset":10517,"count":1},{"startOffset":7033,"endOffset":10515,"count":0}],"isBlockCoverage":true},{"functionName":"resolveShort","ranges":[{"startOffset":10519,"endOffset":12219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/abbrev/abbrev.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"monkeyPatch","ranges":[{"startOffset":85,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"abbrev","ranges":[{"startOffset":457,"endOffset":1695,"count":2},{"startOffset":536,"endOffset":593,"count":0},{"startOffset":655,"endOffset":730,"count":13},{"startOffset":709,"endOffset":726,"count":0},{"startOffset":1006,"endOffset":1676,"count":13},{"startOffset":1061,"endOffset":1066,"count":2},{"startOffset":1147,"endOffset":1155,"count":0},{"startOffset":1213,"endOffset":1459,"count":21},{"startOffset":1285,"endOffset":1314,"count":17},{"startOffset":1347,"endOffset":1376,"count":17},{"startOffset":1400,"endOffset":1415,"count":17},{"startOffset":1417,"endOffset":1453,"count":13},{"startOffset":1497,"endOffset":1552,"count":2},{"startOffset":1552,"endOffset":1609,"count":11},{"startOffset":1609,"endOffset":1672,"count":57}],"isBlockCoverage":true},{"functionName":"lexSort","ranges":[{"startOffset":1697,"endOffset":1762,"count":23},{"startOffset":1740,"endOffset":1743,"count":0},{"startOffset":1752,"endOffset":1755,"count":16},{"startOffset":1756,"endOffset":1760,"count":7}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/npmlog/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9007,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":390,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":520,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"log.useColor","ranges":[{"startOffset":634,"endOffset":709,"count":1},{"startOffset":678,"endOffset":692,"count":0}],"isBlockCoverage":true},{"functionName":"log.enableColor","ranges":[{"startOffset":729,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableColor","ranges":[{"startOffset":862,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableUnicode","ranges":[{"startOffset":1601,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableUnicode","ranges":[{"startOffset":1742,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeThemeset","ranges":[{"startOffset":1886,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeTemplate","ranges":[{"startOffset":1965,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableProgress","ranges":[{"startOffset":2046,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableProgress","ranges":[{"startOffset":2268,"endOffset":2442,"count":1},{"startOffset":2327,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"mixinLog","ranges":[{"startOffset":2523,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3476,"endOffset":3589,"count":3}],"isBlockCoverage":true},{"functionName":"log.<computed>","ranges":[{"startOffset":3502,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"log.clearProgress","ranges":[{"startOffset":3612,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3746,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"log.pause","ranges":[{"startOffset":4477,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"log.resume","ranges":[{"startOffset":4588,"endOffset":4825,"count":1},{"startOffset":4639,"endOffset":4823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4720,"endOffset":4758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":6044,"count":0}],"isBlockCoverage":false},{"functionName":"log.emitLog","ranges":[{"startOffset":6070,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"log._format","ranges":[{"startOffset":6957,"endOffset":7706,"count":0}],"isBlockCoverage":false},{"functionName":"log.write","ranges":[{"startOffset":7720,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"log.addLevel","ranges":[{"startOffset":7836,"endOffset":8310,"count":9},{"startOffset":7951,"endOffset":7971,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8058,"endOffset":8269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8991,"endOffset":9005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-group.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":213,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"bubbleChange","ranges":[{"startOffset":483,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.nameInTree","ranges":[{"startOffset":815,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.addUnit","ranges":[{"startOffset":1003,"endOffset":1670,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.completed","ranges":[{"startOffset":1707,"endOffset":2045,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newGroup","ranges":[{"startOffset":2081,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newItem","ranges":[{"startOffset":2197,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newStream","ranges":[{"startOffset":2322,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.finish","ranges":[{"startOffset":2450,"endOffset":2777,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.debug","ranges":[{"startOffset":2860,"endOffset":3280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":144,"endOffset":232,"count":1}],"isBlockCoverage":true}]},{"scriptId":"569","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":836,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":119,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completed","ranges":[{"startOffset":291,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.addWork","ranges":[{"startOffset":401,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completeWork","ranges":[{"startOffset":536,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.finish","ranges":[{"startOffset":742,"endOffset":835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/are-we-there-yet/lib/tracker-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":192,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"delegateChange","ranges":[{"startOffset":452,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._transform","ranges":[{"startOffset":652,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._flush","ranges":[{"startOffset":804,"endOffset":852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1},{"startOffset":78,"endOffset":87,"count":0},{"startOffset":89,"endOffset":203,"count":0},{"startOffset":304,"endOffset":314,"count":0}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36023,"count":1},{"startOffset":1643,"endOffset":1725,"count":0},{"startOffset":1738,"endOffset":1755,"count":0},{"startOffset":2064,"endOffset":2104,"count":0}],"isBlockCoverage":true},{"functionName":"EElistenerCount","ranges":[{"startOffset":1349,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":1741,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1757,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":1826,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2082,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2966,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3753,"endOffset":6617,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":6618,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7456,"endOffset":7589,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7598,"endOffset":7876,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":8016,"endOffset":8049,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8278,"endOffset":8749,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":8844,"endOffset":8923,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8925,"endOffset":10565,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10566,"endOffset":11003,"count":0}],"isBlockCoverage":false},{"functionName":"chunkInvalid","ranges":[{"startOffset":11004,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11292,"endOffset":11355,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11419,"endOffset":12102,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12160,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12637,"endOffset":13234,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":13331,"endOffset":16902,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16904,"endOffset":17635,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17836,"endOffset":18161,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18162,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19132,"endOffset":19288,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19289,"endOffset":21062,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21333,"endOffset":21416,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21444,"endOffset":25163,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25165,"endOffset":25490,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":25519,"endOffset":26722,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":26847,"endOffset":27742,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeListener","ranges":[{"startOffset":27836,"endOffset":28347,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":28389,"endOffset":28924,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":28926,"endOffset":29354,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":29355,"endOffset":29443,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":29597,"endOffset":29918,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":29920,"endOffset":30070,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30071,"endOffset":30317,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":30345,"endOffset":30611,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":30613,"endOffset":30758,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":30942,"endOffset":32458,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":32541,"endOffset":32763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32998,"endOffset":33064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33293,"endOffset":33375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33605,"endOffset":33665,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":33674,"endOffset":33779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34078,"endOffset":34137,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":34367,"endOffset":34885,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":34886,"endOffset":35104,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":35105,"endOffset":35683,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":35738,"endOffset":35897,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":35901,"endOffset":36023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6905,"count":1},{"startOffset":2542,"endOffset":2554,"count":0}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":15,"endOffset":356,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":357,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":864,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"_classCallCheck","ranges":[{"startOffset":1101,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperties","ranges":[{"startOffset":1255,"endOffset":1588,"count":1},{"startOffset":1338,"endOffset":1586,"count":11}],"isBlockCoverage":true},{"functionName":"_createClass","ranges":[{"startOffset":1589,"endOffset":1874,"count":1},{"startOffset":1738,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"_toPropertyKey","ranges":[{"startOffset":1875,"endOffset":1998,"count":11},{"startOffset":1976,"endOffset":1981,"count":1},{"startOffset":1982,"endOffset":1995,"count":10}],"isBlockCoverage":true},{"functionName":"_toPrimitive","ranges":[{"startOffset":1999,"endOffset":2376,"count":11},{"startOffset":2066,"endOffset":2083,"count":0},{"startOffset":2098,"endOffset":2356,"count":0},{"startOffset":2357,"endOffset":2365,"count":0}],"isBlockCoverage":true},{"functionName":"copyBuffer","ranges":[{"startOffset":2556,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2682,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"BufferList","ranges":[{"startOffset":2698,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":2888,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":3136,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3364,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":3624,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3743,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":3961,"endOffset":4255,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":4377,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":4929,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":5098,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":5856,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6636,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3109,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":77,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndCloseNT","ranges":[{"startOffset":1593,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1684,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1875,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2433,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2496,"endOffset":3010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":99,"endOffset":262,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":263,"endOffset":686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3715,"count":1}],"isBlockCoverage":true},{"functionName":"createErrorType","ranges":[{"startOffset":34,"endOffset":513,"count":12},{"startOffset":95,"endOffset":117,"count":8}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":121,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":322,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":585,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":1183,"endOffset":1298,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":1400,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":1700,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1962,"endOffset":2062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2116,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2908,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3090,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3525,"endOffset":3579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21907,"count":1},{"startOffset":2145,"endOffset":2227,"count":0},{"startOffset":2240,"endOffset":2257,"count":0},{"startOffset":8301,"endOffset":8405,"count":0}],"isBlockCoverage":true},{"functionName":"WriteReq","ranges":[{"startOffset":1354,"endOffset":1488,"count":0}],"isBlockCoverage":false},{"functionName":"CorkedRequest","ranges":[{"startOffset":1579,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":2243,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":2259,"endOffset":2327,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":2328,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3247,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":3265,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":7204,"endOffset":7371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7374,"endOffset":7694,"count":1},{"startOffset":7680,"endOffset":7692,"count":0}],"isBlockCoverage":true},{"functionName":"writableStateBufferGetter","ranges":[{"startOffset":7493,"endOffset":7572,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8090,"endOffset":8293,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":8329,"endOffset":8402,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":8406,"endOffset":9611,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9707,"endOffset":9776,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":9778,"endOffset":9990,"count":0}],"isBlockCoverage":false},{"functionName":"validChunk","ranges":[{"startOffset":10214,"endOffset":10587,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":10615,"endOffset":11266,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":11294,"endOffset":11341,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":11371,"endOffset":11586,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11628,"endOffset":12050,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12276,"endOffset":12363,"count":0}],"isBlockCoverage":false},{"functionName":"decodeChunk","ranges":[{"startOffset":12368,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12799,"endOffset":12865,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":13058,"endOffset":14027,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":14028,"endOffset":14388,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":14389,"endOffset":15099,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteStateUpdate","ranges":[{"startOffset":15100,"endOffset":15243,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":15244,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":15926,"endOffset":16083,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteDrain","ranges":[{"startOffset":16276,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16487,"endOffset":18291,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":18320,"endOffset":18404,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18466,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19216,"endOffset":19275,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19280,"endOffset":19426,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":19427,"endOffset":19674,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":19675,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":20024,"endOffset":20568,"count":0}],"isBlockCoverage":false},{"functionName":"endWritable","ranges":[{"startOffset":20569,"endOffset":20807,"count":0}],"isBlockCoverage":false},{"functionName":"onCorkedFinish","ranges":[{"startOffset":20808,"endOffset":21093,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21313,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":21455,"endOffset":21733,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":21873,"endOffset":21906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/util-deprecate/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true}]},{"scriptId":"580","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4381,"count":1},{"startOffset":1419,"endOffset":1511,"count":0},{"startOffset":1815,"endOffset":1936,"count":11},{"startOffset":1878,"endOffset":1932,"count":7}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":1422,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1939,"endOffset":2374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2604,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2897,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3211,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":3305,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"onEndNT","ranges":[{"startOffset":3536,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3794,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4006,"endOffset":4377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7936,"count":1}],"isBlockCoverage":true},{"functionName":"afterTransform","ranges":[{"startOffset":3961,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4471,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5393,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5660,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6279,"endOffset":6367,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6398,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6883,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7287,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7393,"endOffset":7936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1628,"count":1}],"isBlockCoverage":true},{"functionName":"PassThrough","ranges":[{"startOffset":1401,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1574,"endOffset":1627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3084,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":231,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":521,"endOffset":539,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":540,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":636,"endOffset":3062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/readable-stream/lib/internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2416,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":137,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":468,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":572,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":668,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1423,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":1453,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1505,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":1669,"endOffset":2389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/delegates/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2065,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator","ranges":[{"startOffset":167,"endOffset":407,"count":2},{"startOffset":239,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator.method","ranges":[{"startOffset":544,"endOffset":754,"count":3}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":658,"endOffset":735,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.access","ranges":[{"startOffset":895,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.getter","ranges":[{"startOffset":1092,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.setter","ranges":[{"startOffset":1426,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.fluent","ranges":[{"startOffset":1770,"endOffset":2063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6998,"count":1}],"isBlockCoverage":true},{"functionName":"callWith","ranges":[{"startOffset":366,"endOffset":456,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":454,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge","ranges":[{"startOffset":458,"endOffset":2340,"count":1},{"startOffset":577,"endOffset":582,"count":0},{"startOffset":586,"endOffset":738,"count":0},{"startOffset":1186,"endOffset":1206,"count":0},{"startOffset":1309,"endOffset":1333,"count":0},{"startOffset":1423,"endOffset":1447,"count":0},{"startOffset":1610,"endOffset":1811,"count":0},{"startOffset":2147,"endOffset":2171,"count":0},{"startOffset":2251,"endOffset":2263,"count":0},{"startOffset":2264,"endOffset":2282,"count":0},{"startOffset":2285,"endOffset":2308,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.isEnabled","ranges":[{"startOffset":2391,"endOffset":2431,"count":1}],"isBlockCoverage":true},{"functionName":"Gauge.setTemplate","ranges":[{"startOffset":2463,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._computeTheme","ranges":[{"startOffset":2599,"endOffset":3110,"count":1},{"startOffset":2632,"endOffset":2642,"count":0},{"startOffset":2676,"endOffset":2722,"count":0},{"startOffset":2893,"endOffset":2911,"count":0},{"startOffset":2954,"endOffset":2964,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setThemeset","ranges":[{"startOffset":3142,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.setTheme","ranges":[{"startOffset":3245,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._requestRedraw","ranges":[{"startOffset":3415,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.getWidth","ranges":[{"startOffset":3532,"endOffset":3601,"count":1},{"startOffset":3589,"endOffset":3594,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setWriteTo","ranges":[{"startOffset":3632,"endOffset":3980,"count":1},{"startOffset":3705,"endOffset":3719,"count":0},{"startOffset":3842,"endOffset":3875,"count":0},{"startOffset":3876,"endOffset":3892,"count":0},{"startOffset":3912,"endOffset":3949,"count":0},{"startOffset":3965,"endOffset":3978,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.enable","ranges":[{"startOffset":4007,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.disable","ranges":[{"startOffset":4176,"endOffset":4412,"count":1},{"startOffset":4218,"endOffset":4410,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge._enableEvents","ranges":[{"startOffset":4446,"endOffset":4779,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._disableEvents","ranges":[{"startOffset":4814,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.hide","ranges":[{"startOffset":5026,"endOffset":5223,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.show","ranges":[{"startOffset":5248,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.pulse","ranges":[{"startOffset":5737,"endOffset":5911,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._handleSizeChange","ranges":[{"startOffset":5949,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._doRedraw","ranges":[{"startOffset":6064,"endOffset":6997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/plumbing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1269,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":188,"endOffset":386,"count":1},{"startOffset":238,"endOffset":248,"count":0}],"isBlockCoverage":true},{"functionName":"Plumbing.setTheme","ranges":[{"startOffset":442,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setTemplate","ranges":[{"startOffset":543,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setWidth","ranges":[{"startOffset":653,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.hide","ranges":[{"startOffset":747,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.show","ranges":[{"startOffset":971,"endOffset":1268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/console-control-strings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"up","ranges":[{"startOffset":87,"endOffset":144,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":161,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"forward","ranges":[{"startOffset":240,"endOffset":302,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":319,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"nextLine","ranges":[{"startOffset":399,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"previousLine","ranges":[{"startOffset":487,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"horizontalAbsolute","ranges":[{"startOffset":585,"endOffset":740,"count":0}],"isBlockCoverage":false},{"functionName":"eraseData","ranges":[{"startOffset":762,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":831,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"exports.goto","ranges":[{"startOffset":895,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"exports.gotoSOL","ranges":[{"startOffset":970,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beep","ranges":[{"startOffset":1016,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":1070,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"color","ranges":[{"startOffset":1977,"endOffset":2191,"count":8},{"startOffset":2035,"endOffset":2063,"count":4}],"isBlockCoverage":true},{"functionName":"colorNameToCode","ranges":[{"startOffset":2193,"endOffset":2338,"count":12},{"startOffset":2277,"endOffset":2337,"count":0}],"isBlockCoverage":true}]},{"scriptId":"589","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/render-template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5646,"count":1}],"isBlockCoverage":true},{"functionName":"renderValueWithValues","ranges":[{"startOffset":204,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":355,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"preType","ranges":[{"startOffset":572,"endOffset":702,"count":0}],"isBlockCoverage":false},{"functionName":"postType","ranges":[{"startOffset":704,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"hasPreOrPost","ranges":[{"startOffset":838,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"generatePreAndPost","ranges":[{"startOffset":962,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"prepareItems","ranges":[{"startOffset":1581,"endOffset":4855,"count":0}],"isBlockCoverage":false},{"functionName":"renderFunction","ranges":[{"startOffset":4857,"endOffset":5085,"count":0}],"isBlockCoverage":false},{"functionName":"renderValue","ranges":[{"startOffset":5087,"endOffset":5645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/align.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"createPadding","ranges":[{"startOffset":185,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"alignLeft","ranges":[{"startOffset":410,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":703,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":996,"endOffset":1427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/wide-align/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/aproba/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3644,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":40,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":209,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":251,"endOffset":290,"count":3},{"startOffset":273,"endOffset":290,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":323,"endOffset":349,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":382,"endOffset":408,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":443,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":504,"endOffset":585,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":619,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":678,"endOffset":701,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":732,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":751,"endOffset":910,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":912,"endOffset":2318,"count":1},{"startOffset":981,"endOffset":1030,"count":0},{"startOffset":1050,"endOffset":1091,"count":0},{"startOffset":1105,"endOffset":1140,"count":0},{"startOffset":1175,"endOffset":1219,"count":0},{"startOffset":1248,"endOffset":1285,"count":0},{"startOffset":1847,"endOffset":1913,"count":0},{"startOffset":1957,"endOffset":2316,"count":3},{"startOffset":2150,"endOffset":2285,"count":0},{"startOffset":2316,"endOffset":2317,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1364,"endOffset":1792,"count":1},{"startOffset":1423,"endOffset":1512,"count":3},{"startOffset":1479,"endOffset":1506,"count":0},{"startOffset":1542,"endOffset":1572,"count":0},{"startOffset":1628,"endOffset":1788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1997,"endOffset":2119,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2232,"count":0}],"isBlockCoverage":false},{"functionName":"missingRequiredArg","ranges":[{"startOffset":2320,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"unknownType","ranges":[{"startOffset":2439,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"invalidType","ranges":[{"startOffset":2570,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"englishList","ranges":[{"startOffset":2899,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"wrongNumberOfArgs","ranges":[{"startOffset":2989,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"moreThanOneError","ranges":[{"startOffset":3261,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"newException","ranges":[{"startOffset":3447,"endOffset":3643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/wide-truncate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":828,"count":1}],"isBlockCoverage":true},{"functionName":"wideTruncate","ranges":[{"startOffset":125,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":616,"count":1}],"isBlockCoverage":true},{"functionName":"User","ranges":[{"startOffset":67,"endOffset":189,"count":0}],"isBlockCoverage":false},{"functionName":"MissingTemplateValue","ranges":[{"startOffset":222,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"Internal","ranges":[{"startOffset":477,"endOffset":615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/template-item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1903,"count":1}],"isBlockCoverage":true},{"functionName":"isPercent","ranges":[{"startOffset":87,"endOffset":190,"count":0}],"isBlockCoverage":false},{"functionName":"percent","ranges":[{"startOffset":192,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem","ranges":[{"startOffset":260,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getBaseLength","ranges":[{"startOffset":1220,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getLength","ranges":[{"startOffset":1466,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMaxLength","ranges":[{"startOffset":1638,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMinLength","ranges":[{"startOffset":1790,"endOffset":1902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/has-unicode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":656,"count":1},{"startOffset":522,"endOffset":606,"count":0},{"startOffset":607,"endOffset":626,"count":0}],"isBlockCoverage":true}]},{"scriptId":"604","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/has-color.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/color-support/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2644,"count":1}],"isBlockCoverage":true},{"functionName":"hasNone","ranges":[{"startOffset":136,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"hasBasic","ranges":[{"startOffset":319,"endOffset":439,"count":2}],"isBlockCoverage":true},{"functionName":"has256","ranges":[{"startOffset":441,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"has16m","ranges":[{"startOffset":560,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"colorSupport","ranges":[{"startOffset":678,"endOffset":2643,"count":2},{"startOffset":737,"endOffset":742,"count":1},{"startOffset":756,"endOffset":761,"count":1},{"startOffset":864,"endOffset":1080,"count":0},{"startOffset":1294,"endOffset":1332,"count":0},{"startOffset":1563,"endOffset":1601,"count":0},{"startOffset":1648,"endOffset":1665,"count":0},{"startOffset":1667,"endOffset":1705,"count":0},{"startOffset":1765,"endOffset":1872,"count":0},{"startOffset":1874,"endOffset":2227,"count":0},{"startOffset":2233,"endOffset":2250,"count":0},{"startOffset":2255,"endOffset":2293,"count":0},{"startOffset":2299,"endOffset":2339,"count":0},{"startOffset":2345,"endOffset":2392,"count":0},{"startOffset":2396,"endOffset":2642,"count":0}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5708,"count":1},{"startOffset":778,"endOffset":844,"count":0},{"startOffset":1059,"endOffset":1089,"count":0},{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":293,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":799,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1703,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2318,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":2724,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3001,"endOffset":3890,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3042,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":3920,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":3993,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":4712,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":5171,"endOffset":5705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":910,"endOffset":1153,"count":0},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"608","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/themes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1625,"count":1}],"isBlockCoverage":true}]},{"scriptId":"609","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/theme-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3692,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":75,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.newTheme","ranges":[{"startOffset":232,"endOffset":368,"count":4},{"startOffset":273,"endOffset":325,"count":2}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getThemeNames","ranges":[{"startOffset":400,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.addTheme","ranges":[{"startOffset":476,"endOffset":561,"count":4}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.addToAllThemes","ranges":[{"startOffset":594,"endOffset":770,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.getTheme","ranges":[{"startOffset":797,"endOffset":907,"count":3},{"startOffset":841,"endOffset":878,"count":0}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.setDefault","ranges":[{"startOffset":936,"endOffset":1290,"count":6},{"startOffset":980,"endOffset":1015,"count":0},{"startOffset":1055,"endOffset":1067,"count":2},{"startOffset":1068,"endOffset":1083,"count":4},{"startOffset":1186,"endOffset":1233,"count":3}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getDefault","ranges":[{"startOffset":1319,"endOffset":2542,"count":1},{"startOffset":1350,"endOffset":1359,"count":0},{"startOffset":1573,"endOffset":1647,"count":0},{"startOffset":1687,"endOffset":2353,"count":0},{"startOffset":2454,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"newMissingThemeError","ranges":[{"startOffset":2581,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"newMissingDefaultThemeError","ranges":[{"startOffset":2861,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.newThemeSet","ranges":[{"startOffset":3392,"endOffset":3691,"count":1}],"isBlockCoverage":true},{"functionName":"themeset","ranges":[{"startOffset":3423,"endOffset":3481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/base-theme.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"activityIndicator","ranges":[{"startOffset":133,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"progressbar","ranges":[{"startOffset":259,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/spin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true},{"functionName":"spin","ranges":[{"startOffset":31,"endOffset":104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/progress-bar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1000,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":205,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":712,"endOffset":999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/set-interval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93,"count":1}],"isBlockCoverage":true}]},{"scriptId":"615","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"616","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/gauge/set-immediate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":139,"count":1},{"startOffset":88,"endOffset":138,"count":0}],"isBlockCoverage":true}]},{"scriptId":"617","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/set-blocking/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82,"endOffset":248,"count":2}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/napi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8098,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163,"endOffset":196,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version","ranges":[{"startOffset":448,"endOffset":893,"count":12},{"startOffset":686,"endOffset":873,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version_as_string","ranges":[{"startOffset":940,"endOffset":1144,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.validate_package_json","ranges":[{"startOffset":1186,"endOffset":3363,"count":2},{"startOffset":2009,"endOffset":2191,"count":0},{"startOffset":2215,"endOffset":2232,"count":0},{"startOffset":2233,"endOffset":2251,"count":0},{"startOffset":2282,"endOffset":2468,"count":0},{"startOffset":2563,"endOffset":2611,"count":0},{"startOffset":2613,"endOffset":2934,"count":0},{"startOffset":2990,"endOffset":3037,"count":0},{"startOffset":3039,"endOffset":3360,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1683,"endOffset":1912,"count":2},{"startOffset":1804,"endOffset":1906,"count":0}],"isBlockCoverage":true},{"functionName":"pathOK","ranges":[{"startOffset":3366,"endOffset":3499,"count":6},{"startOffset":3452,"endOffset":3495,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.expand_commands","ranges":[{"startOffset":3534,"endOffset":4476,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3716,"endOffset":4444,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions","ranges":[{"startOffset":4520,"endOffset":5715,"count":7},{"startOffset":4721,"endOffset":4734,"count":3},{"startOffset":4735,"endOffset":4746,"count":4},{"startOffset":5368,"endOffset":5409,"count":3},{"startOffset":5411,"endOffset":5642,"count":0},{"startOffset":5701,"endOffset":5712,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4932,"endOffset":5350,"count":7},{"startOffset":5175,"endOffset":5344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5473,"endOffset":5570,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions_raw","ranges":[{"startOffset":5763,"endOffset":6179,"count":2},{"startOffset":6165,"endOffset":6176,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5957,"endOffset":6100,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.get_command_arg","ranges":[{"startOffset":6215,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_version_from_command_args","ranges":[{"startOffset":6362,"endOffset":6624,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_out","ranges":[{"startOffset":6663,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_in","ranges":[{"startOffset":6940,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_build_dir","ranges":[{"startOffset":7172,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_best_napi_build_version","ranges":[{"startOffset":7302,"endOffset":7895,"count":3},{"startOffset":7553,"endOffset":7566,"count":1},{"startOffset":7567,"endOffset":7578,"count":2},{"startOffset":7855,"endOffset":7866,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7613,"endOffset":7809,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.build_napi_only","ranges":[{"startOffset":7931,"endOffset":8096,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/pre-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1178,"count":1},{"startOffset":188,"endOffset":217,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":377,"endOffset":459,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":477,"endOffset":1176,"count":1},{"startOffset":551,"endOffset":615,"count":0}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@mapbox/node-pre-gyp/lib/util/versioning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14514,"count":1},{"startOffset":411,"endOffset":481,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":605,"endOffset":715,"count":650},{"startOffset":677,"endOffset":713,"count":18}],"isBlockCoverage":true},{"functionName":"get_electron_abi","ranges":[{"startOffset":719,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_webkit_abi","ranges":[{"startOffset":1273,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_abi","ranges":[{"startOffset":1694,"endOffset":2428,"count":1},{"startOffset":1753,"endOffset":1822,"count":0},{"startOffset":1840,"endOffset":1921,"count":0},{"startOffset":1995,"endOffset":2015,"count":0},{"startOffset":2017,"endOffset":2136,"count":0},{"startOffset":2361,"endOffset":2421,"count":0}],"isBlockCoverage":true},{"functionName":"get_runtime_abi","ranges":[{"startOffset":2474,"endOffset":8579,"count":1},{"startOffset":2542,"endOffset":2614,"count":0},{"startOffset":2648,"endOffset":2745,"count":0},{"startOffset":2779,"endOffset":2867,"count":0},{"startOffset":2903,"endOffset":2971,"count":0},{"startOffset":3058,"endOffset":8573,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3320,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"validate_config","ranges":[{"startOffset":8708,"endOffset":9704,"count":2},{"startOffset":8883,"endOffset":8914,"count":0},{"startOffset":8944,"endOffset":8978,"count":0},{"startOffset":9005,"endOffset":9036,"count":0},{"startOffset":9065,"endOffset":9098,"count":0},{"startOffset":9316,"endOffset":9419,"count":0},{"startOffset":9541,"endOffset":9648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9175,"endOffset":9281,"count":6},{"startOffset":9229,"endOffset":9275,"count":0}],"isBlockCoverage":true},{"functionName":"eval_template","ranges":[{"startOffset":9757,"endOffset":10006,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9826,"endOffset":9983,"count":116},{"startOffset":9917,"endOffset":9979,"count":8}],"isBlockCoverage":true},{"functionName":"fix_slashes","ranges":[{"startOffset":10201,"endOffset":10321,"count":2},{"startOffset":10300,"endOffset":10320,"count":0}],"isBlockCoverage":true},{"functionName":"drop_double_slashes","ranges":[{"startOffset":10437,"endOffset":10520,"count":1}],"isBlockCoverage":true},{"functionName":"get_process_runtime","ranges":[{"startOffset":10522,"endOffset":10732,"count":1},{"startOffset":10618,"endOffset":10652,"count":0},{"startOffset":10681,"endOffset":10712,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.evaluate","ranges":[{"startOffset":10945,"endOffset":14512,"count":1},{"startOffset":11019,"endOffset":11024,"count":0},{"startOffset":11357,"endOffset":11366,"count":0},{"startOffset":11542,"endOffset":11579,"count":0},{"startOffset":11625,"endOffset":11657,"count":0},{"startOffset":11907,"endOffset":11949,"count":0},{"startOffset":12097,"endOffset":12102,"count":0},{"startOffset":12176,"endOffset":12218,"count":0},{"startOffset":13709,"endOffset":13861,"count":0},{"startOffset":14077,"endOffset":14098,"count":0},{"startOffset":14191,"endOffset":14213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"621","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"622","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7998,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":987,"endOffset":1198,"count":43},{"startOffset":1052,"endOffset":1181,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1220,"endOffset":1520,"count":43},{"startOffset":1437,"endOffset":1442,"count":5},{"startOffset":1443,"endOffset":1454,"count":38},{"startOffset":1500,"endOffset":1505,"count":5},{"startOffset":1506,"endOffset":1517,"count":38}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"624","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":51}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9338,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":325,"endOffset":2250,"count":4},{"startOffset":430,"endOffset":633,"count":0},{"startOffset":672,"endOffset":773,"count":0},{"startOffset":812,"endOffset":912,"count":0},{"startOffset":1251,"endOffset":1264,"count":0},{"startOffset":1292,"endOffset":1356,"count":0},{"startOffset":1543,"endOffset":1601,"count":0},{"startOffset":1660,"endOffset":1718,"count":0},{"startOffset":1777,"endOffset":1835,"count":0},{"startOffset":1896,"endOffset":1930,"count":3},{"startOffset":1930,"endOffset":2182,"count":1},{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1982,"endOffset":2175,"count":1},{"startOffset":2149,"endOffset":2174,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2254,"endOffset":2450,"count":4},{"startOffset":2361,"endOffset":2422,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2454,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2499,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2893,"endOffset":3184,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3188,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4043,"endOffset":4580,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4733,"endOffset":9310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":153,"endOffset":293,"count":6},{"startOffset":208,"endOffset":292,"count":0}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":58,"endOffset":292,"count":2},{"startOffset":136,"endOffset":160,"count":0},{"startOffset":213,"endOffset":290,"count":0}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1407,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":50,"endOffset":1383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1990,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":145,"endOffset":1965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3617,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":135,"endOffset":682,"count":2},{"startOffset":238,"endOffset":358,"count":0},{"startOffset":556,"endOffset":585,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":686,"endOffset":1182,"count":2},{"startOffset":734,"endOffset":757,"count":0},{"startOffset":818,"endOffset":882,"count":0},{"startOffset":930,"endOffset":934,"count":0},{"startOffset":966,"endOffset":998,"count":0},{"startOffset":1077,"endOffset":1108,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1186,"endOffset":1225,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1229,"endOffset":1609,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1613,"endOffset":3323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14924,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":88,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"get range","ranges":[{"startOffset":2102,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2561,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2602,"endOffset":2641,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2645,"endOffset":4928,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":4932,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5630,"endOffset":6012,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":6510,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":6552,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":6693,"endOffset":7099,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":7269,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":7596,"endOffset":7647,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":7983,"endOffset":8106,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":8129,"endOffset":8803,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":9096,"endOffset":9219,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":9242,"endOffset":10544,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":10569,"endOffset":10722,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":10746,"endOffset":12446,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":12592,"endOffset":12777,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":12799,"endOffset":12954,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":13211,"endOffset":13881,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13899,"endOffset":14923,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/internal/lrucache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":788,"count":1}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":19,"endOffset":84,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":88,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":352,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":406,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2190,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":390,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7510,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2869,"endOffset":6974,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7025,"endOffset":7229,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7280,"endOffset":7484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/detect-libc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6231,"count":1}],"isBlockCoverage":true},{"functionName":"safeCommand","ranges":[{"startOffset":455,"endOffset":682,"count":0}],"isBlockCoverage":false},{"functionName":"safeCommandSync","ranges":[{"startOffset":709,"endOffset":898,"count":0}],"isBlockCoverage":false},{"functionName":"isFileMusl","ranges":[{"startOffset":1274,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromReport","ranges":[{"startOffset":1359,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromCommand","ranges":[{"startOffset":1647,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getFamilyFromLddContent","ranges":[{"startOffset":1881,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystem","ranges":[{"startOffset":2064,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystemSync","ranges":[{"startOffset":2406,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"family","ranges":[{"startOffset":2839,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"familySync","ranges":[{"startOffset":3245,"endOffset":3517,"count":1},{"startOffset":3291,"endOffset":3498,"count":0}],"isBlockCoverage":true},{"functionName":"isNonGlibcLinux","ranges":[{"startOffset":3670,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlibcLinuxSync","ranges":[{"startOffset":3866,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystem","ranges":[{"startOffset":3940,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystemSync","ranges":[{"startOffset":4361,"endOffset":4737,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromReport","ranges":[{"startOffset":4766,"endOffset":4930,"count":0}],"isBlockCoverage":false},{"functionName":"versionSuffix","ranges":[{"startOffset":4955,"endOffset":4986,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromCommand","ranges":[{"startOffset":5016,"endOffset":5261,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":5398,"endOffset":5690,"count":0}],"isBlockCoverage":false},{"functionName":"versionSync","ranges":[{"startOffset":5816,"endOffset":6098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28092,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1992,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3531,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5242,"endOffset":5743,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5747,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6841,"endOffset":7093,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7131,"endOffset":7510,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7153,"endOffset":7506,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7655,"endOffset":8532,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":9172,"endOffset":14060,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14212,"endOffset":14418,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14422,"endOffset":19905,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19909,"endOffset":20175,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20754,"endOffset":22024,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22816,"endOffset":24351,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24357,"endOffset":24756,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25291,"endOffset":25772,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26291,"endOffset":26682,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26688,"endOffset":26915,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26921,"endOffset":27087,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":27093,"endOffset":27285,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27291,"endOffset":27570,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27576,"endOffset":27947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32829,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2661,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2785,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2863,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3043,"endOffset":4643,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4652,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5423,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5969,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6039,"endOffset":6095,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6166,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6299,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6479,"endOffset":6909,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6913,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8591,"endOffset":9084,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9090,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9188,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9428,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9581,"endOffset":13277,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13284,"endOffset":13347,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13353,"endOffset":13405,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13441,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14184,"endOffset":14245,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14281,"endOffset":14337,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14375,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14473,"endOffset":15476,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15630,"endOffset":28098,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28136,"endOffset":28453,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28491,"endOffset":31484,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31490,"endOffset":31814,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31820,"endOffset":32027,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":32031,"endOffset":32693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31134,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":3138,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadBlockList","ranges":[{"startOffset":3238,"endOffset":3337,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3341,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":5824,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":5910,"endOffset":6369,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":6373,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":6958,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":7331,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":7876,"endOffset":11564,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":11596,"endOffset":12419,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":12426,"endOffset":12786,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":12792,"endOffset":13567,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":13603,"endOffset":13924,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":14033,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":14493,"endOffset":15276,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":15282,"endOffset":15680,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":15686,"endOffset":16124,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":16130,"endOffset":16271,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":16277,"endOffset":16404,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":16410,"endOffset":16615,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":17203,"endOffset":20195,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":20200,"endOffset":21558,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":21562,"endOffset":21751,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":21780,"endOffset":22370,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":22414,"endOffset":22552,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":22559,"endOffset":22615,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":22648,"endOffset":22852,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":22890,"endOffset":23217,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":23256,"endOffset":23413,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":23446,"endOffset":23633,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":23675,"endOffset":23880,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":23927,"endOffset":24138,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":24186,"endOffset":24460,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":24498,"endOffset":24889,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":24930,"endOffset":25324,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":25376,"endOffset":26002,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":26057,"endOffset":26689,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":26696,"endOffset":26864,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":26870,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":27048,"endOffset":27486,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":27492,"endOffset":27610,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":27639,"endOffset":27753,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":27785,"endOffset":27901,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":27945,"endOffset":28004,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":28048,"endOffset":28107,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":28151,"endOffset":28210,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":28254,"endOffset":28313,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":28354,"endOffset":28425,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":28467,"endOffset":28539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28663,"endOffset":28719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28793,"endOffset":28851,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29010,"endOffset":29069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29146,"endOffset":29207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29369,"endOffset":29428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29505,"endOffset":29566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29724,"endOffset":29779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29852,"endOffset":29909,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30067,"endOffset":30126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30203,"endOffset":30264,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30375,"endOffset":30412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30524,"endOffset":30563,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30855,"endOffset":30891,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30896,"endOffset":30937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1928,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":485,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":594,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":695,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1374,"endOffset":1843,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":569,"count":1}],"isBlockCoverage":true},{"functionName":"isLinux","ranges":[{"startOffset":115,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"getReport","ranges":[{"startOffset":189,"endOffset":525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/detect-libc/lib/filesystem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":717,"count":1}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":325,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":480,"endOffset":653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/bcrypt/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1148,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.promise","ranges":[{"startOffset":366,"endOffset":860,"count":3},{"startOffset":428,"endOffset":484,"count":0},{"startOffset":520,"endOffset":594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":619,"endOffset":856,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":665,"endOffset":814,"count":3},{"startOffset":708,"endOffset":752,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.reject","ranges":[{"startOffset":927,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.use","ranges":[{"startOffset":1104,"endOffset":1146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6312,"count":1}],"isBlockCoverage":true},{"functionName":"createConnectionPromise","ranges":[{"startOffset":798,"endOffset":1679,"count":1},{"startOffset":996,"endOffset":1232,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1257,"endOffset":1675,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1315,"endOffset":1394,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1430,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"createPromisePool","ranges":[{"startOffset":1796,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"PromisePoolCluster","ranges":[{"startOffset":2272,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":2488,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":2916,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":3328,"endOffset":3740,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":3744,"endOffset":3880,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3884,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4440,"endOffset":4971,"count":1},{"startOffset":4503,"endOffset":4532,"count":3},{"startOffset":4539,"endOffset":4970,"count":2}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":4754,"endOffset":4951,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4798,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"createPromisePoolCluster","ranges":[{"startOffset":4994,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5920,"endOffset":5961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6002,"endOffset":6048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6099,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setMaxParserCache","ranges":[{"startOffset":6187,"endOffset":6237,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearParserCache","ranges":[{"startOffset":6267,"endOffset":6310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/sqlstring/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45,"count":1}],"isBlockCoverage":true}]},{"scriptId":"677","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/sqlstring/lib/SqlString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5865,"count":1}],"isBlockCoverage":true},{"functionName":"escapeId","ranges":[{"startOffset":401,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":879,"endOffset":1747,"count":70},{"startOffset":971,"endOffset":995,"count":1},{"startOffset":995,"endOffset":1025,"count":69},{"startOffset":1025,"endOffset":1073,"count":0},{"startOffset":1078,"endOffset":1109,"count":15},{"startOffset":1114,"endOffset":1702,"count":2},{"startOffset":1196,"endOffset":1270,"count":0},{"startOffset":1362,"endOffset":1702,"count":0},{"startOffset":1707,"endOffset":1741,"count":52}],"isBlockCoverage":true},{"functionName":"arrayToList","ranges":[{"startOffset":1774,"endOffset":2131,"count":5},{"startOffset":1872,"endOffset":2114,"count":12},{"startOffset":1927,"endOffset":2021,"count":3},{"startOffset":1951,"endOffset":1955,"count":2},{"startOffset":1956,"endOffset":1962,"count":1},{"startOffset":2021,"endOffset":2110,"count":9},{"startOffset":2051,"endOffset":2055,"count":3},{"startOffset":2056,"endOffset":2062,"count":6}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2153,"endOffset":3060,"count":39},{"startOffset":2234,"endOffset":2255,"count":0},{"startOffset":2287,"endOffset":2315,"count":0},{"startOffset":2490,"endOffset":2530,"count":61},{"startOffset":2532,"endOffset":2884,"count":61},{"startOffset":2583,"endOffset":2606,"count":0},{"startOffset":2640,"endOffset":2681,"count":0},{"startOffset":2910,"endOffset":2959,"count":4},{"startOffset":2959,"endOffset":2992,"count":35},{"startOffset":2992,"endOffset":3040,"count":12},{"startOffset":3040,"endOffset":3059,"count":23}],"isBlockCoverage":true},{"functionName":"dateToString","ranges":[{"startOffset":3088,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToString","ranges":[{"startOffset":4286,"endOffset":4374,"count":0}],"isBlockCoverage":false},{"functionName":"objectToValues","ranges":[{"startOffset":4404,"endOffset":4718,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":4737,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":4929,"endOffset":5454,"count":52},{"startOffset":5099,"endOffset":5235,"count":0},{"startOffset":5321,"endOffset":5453,"count":0}],"isBlockCoverage":true},{"functionName":"zeroPad","ranges":[{"startOffset":5456,"endOffset":5606,"count":0}],"isBlockCoverage":false},{"functionName":"convertTimezone","ranges":[{"startOffset":5608,"endOffset":5864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/parser_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1381,"count":1}],"isBlockCoverage":true},{"functionName":"keyFromFields","ranges":[{"startOffset":109,"endOffset":840,"count":12},{"startOffset":464,"endOffset":482,"count":0},{"startOffset":594,"endOffset":798,"count":48}],"isBlockCoverage":true},{"functionName":"getParser","ranges":[{"startOffset":842,"endOffset":1138,"count":12},{"startOffset":1016,"endOffset":1137,"count":6}],"isBlockCoverage":true},{"functionName":"setMaxCache","ranges":[{"startOffset":1140,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":1198,"endOffset":1246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/lru.min/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8736,"count":1}],"isBlockCoverage":true},{"functionName":"createLRU","ranges":[{"startOffset":123,"endOffset":8703,"count":3},{"startOffset":218,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"setTail","ranges":[{"startOffset":620,"endOffset":1094,"count":7},{"startOffset":679,"endOffset":686,"count":0},{"startOffset":805,"endOffset":822,"count":1},{"startOffset":822,"endOffset":915,"count":6},{"startOffset":855,"endOffset":873,"count":5},{"startOffset":887,"endOffset":915,"count":1},{"startOffset":957,"endOffset":985,"count":2}],"isBlockCoverage":true},{"functionName":"_evict","ranges":[{"startOffset":1115,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1737,"endOffset":2385,"count":7},{"startOffset":1806,"endOffset":1813,"count":0},{"startOffset":1931,"endOffset":1941,"count":0},{"startOffset":1960,"endOffset":1972,"count":0},{"startOffset":2096,"endOffset":2218,"count":0},{"startOffset":2299,"endOffset":2319,"count":2},{"startOffset":2319,"endOffset":2375,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2493,"endOffset":2723,"count":13},{"startOffset":2600,"endOffset":2607,"count":7},{"startOffset":2607,"endOffset":2656,"count":6},{"startOffset":2656,"endOffset":2678,"count":2},{"startOffset":2678,"endOffset":2722,"count":6}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":2821,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3020,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3140,"endOffset":3331,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3622,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":3730,"endOffset":3944,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":4060,"endOffset":4349,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":4415,"endOffset":5210,"count":0}],"isBlockCoverage":false},{"functionName":"evict","ranges":[{"startOffset":5325,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":5567,"endOffset":6047,"count":0}],"isBlockCoverage":false},{"functionName":"resize","ranges":[{"startOffset":6150,"endOffset":8245,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":8339,"endOffset":8384,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8468,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"get available","ranges":[{"startOffset":8635,"endOffset":8693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8340,"count":1}],"isBlockCoverage":true},{"functionName":"RR","ranges":[{"startOffset":281,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"RANDOM","ranges":[{"startOffset":382,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"ORDER","ranges":[{"startOffset":492,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"getMonotonicMilliseconds","ranges":[{"startOffset":586,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"patternRegExp","ranges":[{"startOffset":822,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"PoolNamespace","ranges":[{"startOffset":1069,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":1223,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":2132,"endOffset":2641,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":2745,"endOffset":3133,"count":0}],"isBlockCoverage":false},{"functionName":"_getClusterNode","ranges":[{"startOffset":3137,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"PoolCluster","ranges":[{"startOffset":3497,"endOffset":4003,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":4007,"endOffset":4456,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":4460,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4873,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":5126,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":5496,"endOffset":6151,"count":0}],"isBlockCoverage":false},{"functionName":"_findNodeIds","ranges":[{"startOffset":6155,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"_getNode","ranges":[{"startOffset":6871,"endOffset":6925,"count":0}],"isBlockCoverage":false},{"functionName":"_increaseErrorCount","ranges":[{"startOffset":6929,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"_decreaseErrorCount","ranges":[{"startOffset":7329,"endOffset":7700,"count":0}],"isBlockCoverage":false},{"functionName":"_getConnection","ranges":[{"startOffset":7704,"endOffset":7995,"count":0}],"isBlockCoverage":false},{"functionName":"_removeNode","ranges":[{"startOffset":7999,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"_clearFindCaches","ranges":[{"startOffset":8255,"endOffset":8306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":92,"endOffset":219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"spliceConnection","ranges":[{"startOffset":286,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"BasePool","ranges":[{"startOffset":526,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":974,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":2284,"endOffset":2844,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2848,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":3625,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":4374,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"_removeConnection","ranges":[{"startOffset":4919,"endOffset":5200,"count":0}],"isBlockCoverage":false},{"functionName":"_removeIdleTimeoutConnections","ranges":[{"startOffset":5204,"endOffset":5832,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":5836,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":6023,"endOffset":6188,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":6192,"endOffset":6258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":328,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":133,"endOffset":291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1685,"count":1}],"isBlockCoverage":true},{"functionName":"BasePoolConnection","ranges":[{"startOffset":119,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":662,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":855,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1207,"endOffset":1271,"count":0}],"isBlockCoverage":false},{"functionName":"_removeFromPool","ranges":[{"startOffset":1275,"endOffset":1449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/base/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28563,"count":1}],"isBlockCoverage":true},{"functionName":"BaseConnection","ranges":[{"startOffset":1437,"endOffset":6011,"count":1},{"startOffset":1878,"endOffset":1946,"count":0},{"startOffset":2519,"endOffset":2677,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2160,"endOffset":2258,"count":1}],"isBlockCoverage":true},{"functionName":"onEviction","ranges":[{"startOffset":2944,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3553,"endOffset":3595,"count":197}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3625,"endOffset":3808,"count":41},{"startOffset":3668,"endOffset":3763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3837,"endOffset":3957,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3988,"endOffset":4496,"count":1},{"startOffset":4125,"endOffset":4495,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4671,"endOffset":5247,"count":1},{"startOffset":5027,"endOffset":5056,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5285,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"_addCommandClosedState","ranges":[{"startOffset":6015,"endOffset":6268,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFatalError","ranges":[{"startOffset":6272,"endOffset":6603,"count":0}],"isBlockCoverage":false},{"functionName":"_handleNetworkError","ranges":[{"startOffset":6607,"endOffset":6937,"count":0}],"isBlockCoverage":false},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":6941,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"_notifyError","ranges":[{"startOffset":7443,"endOffset":9009,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9013,"endOffset":9219,"count":41},{"startOffset":9175,"endOffset":9215,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9074,"endOffset":9154,"count":41},{"startOffset":9100,"endOffset":9148,"count":0}],"isBlockCoverage":true},{"functionName":"_resetSequenceId","ranges":[{"startOffset":9531,"endOffset":9615,"count":41}],"isBlockCoverage":true},{"functionName":"_bumpCompressedSequenceId","ranges":[{"startOffset":9619,"endOffset":9745,"count":0}],"isBlockCoverage":false},{"functionName":"_bumpSequenceId","ranges":[{"startOffset":9749,"endOffset":9845,"count":238}],"isBlockCoverage":true},{"functionName":"writePacket","ranges":[{"startOffset":9849,"endOffset":11483,"count":41},{"startOffset":10088,"endOffset":10430,"count":0},{"startOffset":10500,"endOffset":11479,"count":0}],"isBlockCoverage":true},{"functionName":"startTLS","ranges":[{"startOffset":11510,"endOffset":13450,"count":0}],"isBlockCoverage":false},{"functionName":"protocolError","ranges":[{"startOffset":13454,"endOffset":13881,"count":0}],"isBlockCoverage":false},{"functionName":"get fatalError","ranges":[{"startOffset":13885,"endOffset":13936,"count":0}],"isBlockCoverage":false},{"functionName":"handlePacket","ranges":[{"startOffset":13940,"endOffset":16306,"count":238},{"startOffset":13985,"endOffset":14047,"count":0},{"startOffset":14075,"endOffset":14696,"count":0},{"startOffset":14721,"endOffset":15221,"count":0},{"startOffset":15238,"endOffset":15807,"count":197},{"startOffset":15434,"endOffset":15754,"count":0},{"startOffset":15846,"endOffset":15940,"count":0},{"startOffset":16013,"endOffset":16212,"count":41},{"startOffset":16090,"endOffset":16204,"count":0},{"startOffset":16219,"endOffset":16302,"count":0}],"isBlockCoverage":true},{"functionName":"addCommand","ranges":[{"startOffset":16310,"endOffset":16715,"count":41},{"startOffset":16421,"endOffset":16564,"count":0},{"startOffset":16650,"endOffset":16695,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":16719,"endOffset":17171,"count":39},{"startOffset":16796,"endOffset":16927,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":17175,"endOffset":17259,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":17263,"endOffset":17329,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":17333,"endOffset":17378,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveNamedPlaceholders","ranges":[{"startOffset":17382,"endOffset":18037,"count":78},{"startOffset":17504,"endOffset":18033,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":18041,"endOffset":18478,"count":39},{"startOffset":18128,"endOffset":18157,"count":0},{"startOffset":18380,"endOffset":18397,"count":35},{"startOffset":18398,"endOffset":18402,"count":4}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":18482,"endOffset":18545,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":18549,"endOffset":18832,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":18874,"endOffset":19042,"count":0}],"isBlockCoverage":false},{"functionName":"unprepare","ranges":[{"startOffset":19046,"endOffset":19381,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":19385,"endOffset":21833,"count":0}],"isBlockCoverage":false},{"functionName":"changeUser","ranges":[{"startOffset":21837,"endOffset":23154,"count":0}],"isBlockCoverage":false},{"functionName":"beginTransaction","ranges":[{"startOffset":23183,"endOffset":23257,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":23261,"endOffset":23314,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":23318,"endOffset":23375,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":23379,"endOffset":23444,"count":0}],"isBlockCoverage":false},{"functionName":"_registerSlave","ranges":[{"startOffset":23448,"endOffset":23544,"count":0}],"isBlockCoverage":false},{"functionName":"_binlogDump","ranges":[{"startOffset":23548,"endOffset":23638,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":23677,"endOffset":23710,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":23714,"endOffset":23946,"count":0}],"isBlockCoverage":false},{"functionName":"createBinlogStream","ranges":[{"startOffset":23950,"endOffset":24636,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":24640,"endOffset":25266,"count":0}],"isBlockCoverage":false},{"functionName":"writeColumns","ranges":[{"startOffset":25392,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextRow","ranges":[{"startOffset":25708,"endOffset":25830,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryRow","ranges":[{"startOffset":25834,"endOffset":25960,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextResult","ranges":[{"startOffset":25964,"endOffset":26343,"count":0}],"isBlockCoverage":false},{"functionName":"writeEof","ranges":[{"startOffset":26347,"endOffset":26451,"count":0}],"isBlockCoverage":false},{"functionName":"writeOk","ranges":[{"startOffset":26455,"endOffset":26608,"count":0}],"isBlockCoverage":false},{"functionName":"writeError","ranges":[{"startOffset":26612,"endOffset":26859,"count":0}],"isBlockCoverage":false},{"functionName":"serverHandshake","ranges":[{"startOffset":26863,"endOffset":27074,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":27147,"endOffset":27591,"count":1},{"startOffset":27193,"endOffset":27385,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27284,"endOffset":27355,"count":0}],"isBlockCoverage":false},{"functionName":"createQuery","ranges":[{"startOffset":27602,"endOffset":28386,"count":39},{"startOffset":27795,"endOffset":28088,"count":0},{"startOffset":28128,"endOffset":28237,"count":4},{"startOffset":28237,"endOffset":28338,"count":35}],"isBlockCoverage":true},{"functionName":"statementKey","ranges":[{"startOffset":28397,"endOffset":28526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/denque/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12497,"count":1}],"isBlockCoverage":true},{"functionName":"Denque","ranges":[{"startOffset":73,"endOffset":348,"count":2},{"startOffset":241,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"peekAt","ranges":[{"startOffset":746,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1125,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1279,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"peekFront","ranges":[{"startOffset":1458,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"peekBack","ranges":[{"startOffset":1636,"endOffset":1685,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":1818,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":1982,"endOffset":2173,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":2271,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2862,"endOffset":3178,"count":41},{"startOffset":2950,"endOffset":3098,"count":0},{"startOffset":3099,"endOffset":3139,"count":0},{"startOffset":3141,"endOffset":3177,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3270,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":3853,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"removeOne","ranges":[{"startOffset":4379,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":5478,"endOffset":7598,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":7948,"endOffset":9691,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9768,"endOffset":9869,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":9981,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":10137,"endOffset":10192,"count":0}],"isBlockCoverage":false},{"functionName":"_fromArray","ranges":[{"startOffset":10393,"endOffset":10656,"count":0}],"isBlockCoverage":false},{"functionName":"_copyArray","ranges":[{"startOffset":10847,"endOffset":11508,"count":0}],"isBlockCoverage":false},{"functionName":"_growArray","ranges":[{"startOffset":11594,"endOffset":12014,"count":0}],"isBlockCoverage":false},{"functionName":"_shrinkArray","ranges":[{"startOffset":12105,"endOffset":12189,"count":0}],"isBlockCoverage":false},{"functionName":"_nextPowerOf2","ranges":[{"startOffset":12330,"endOffset":12470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packet_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6025,"count":1}],"isBlockCoverage":true},{"functionName":"readPacketLength","ranges":[{"startOffset":100,"endOffset":288,"count":197},{"startOffset":228,"endOffset":248,"count":196},{"startOffset":248,"endOffset":287,"count":1}],"isBlockCoverage":true},{"functionName":"PacketParser","ranges":[{"startOffset":313,"endOffset":1163,"count":1},{"startOffset":1099,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"_flushLargePacket4","ranges":[{"startOffset":1167,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"_flushLargePacket7","ranges":[{"startOffset":1566,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"executeStart","ranges":[{"startOffset":1974,"endOffset":3812,"count":41},{"startOffset":2074,"endOffset":3378,"count":197},{"startOffset":2603,"endOffset":3084,"count":0},{"startOffset":3148,"endOffset":3372,"count":0},{"startOffset":3404,"endOffset":3808,"count":0}],"isBlockCoverage":true},{"functionName":"executePayload","ranges":[{"startOffset":3816,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader2","ranges":[{"startOffset":5500,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader3","ranges":[{"startOffset":5822,"endOffset":5990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/packet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25214,"count":1}],"isBlockCoverage":true},{"functionName":"leftPad","ranges":[{"startOffset":675,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"Packet","ranges":[{"startOffset":1826,"endOffset":2206,"count":240}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":2295,"endOffset":2342,"count":8}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":2346,"endOffset":2394,"count":65}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":2398,"endOffset":2463,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":2467,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"haveMoreData","ranges":[{"startOffset":2694,"endOffset":2749,"count":1}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2753,"endOffset":2792,"count":60}],"isBlockCoverage":true},{"functionName":"readInt8","ranges":[{"startOffset":2796,"endOffset":2851,"count":138}],"isBlockCoverage":true},{"functionName":"readInt16","ranges":[{"startOffset":2855,"endOffset":2948,"count":143}],"isBlockCoverage":true},{"functionName":"readInt24","ranges":[{"startOffset":2952,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32","ranges":[{"startOffset":3028,"endOffset":3121,"count":49}],"isBlockCoverage":true},{"functionName":"readSInt8","ranges":[{"startOffset":3125,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt16","ranges":[{"startOffset":3194,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt32","ranges":[{"startOffset":3291,"endOffset":3384,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64JSNumber","ranges":[{"startOffset":3388,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64JSNumber","ranges":[{"startOffset":3558,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64String","ranges":[{"startOffset":3811,"endOffset":3979,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64String","ranges":[{"startOffset":3983,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64","ranges":[{"startOffset":4157,"endOffset":4452,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64","ranges":[{"startOffset":4456,"endOffset":4753,"count":0}],"isBlockCoverage":false},{"functionName":"isEOF","ranges":[{"startOffset":4757,"endOffset":4838,"count":108},{"startOffset":4812,"endOffset":4833,"count":24}],"isBlockCoverage":true},{"functionName":"eofStatusFlags","ranges":[{"startOffset":4842,"endOffset":4917,"count":12}],"isBlockCoverage":true},{"functionName":"eofWarningCount","ranges":[{"startOffset":4921,"endOffset":4997,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedNumber","ranges":[{"startOffset":5001,"endOffset":5224,"count":788},{"startOffset":5118,"endOffset":5145,"count":737},{"startOffset":5145,"endOffset":5223,"count":51}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberSigned","ranges":[{"startOffset":5228,"endOffset":5342,"count":19}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberExt","ranges":[{"startOffset":5346,"endOffset":6486,"count":51},{"startOffset":5461,"endOffset":5487,"count":47},{"startOffset":5487,"endOffset":5572,"count":4},{"startOffset":5572,"endOffset":6485,"count":0}],"isBlockCoverage":true},{"functionName":"readFloat","ranges":[{"startOffset":6490,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"readDouble","ranges":[{"startOffset":6603,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"readBuffer","ranges":[{"startOffset":6718,"endOffset":6905,"count":10},{"startOffset":6772,"endOffset":6815,"count":0}],"isBlockCoverage":true},{"functionName":"readDateTime","ranges":[{"startOffset":6943,"endOffset":8273,"count":0}],"isBlockCoverage":false},{"functionName":"readDateTimeString","ranges":[{"startOffset":8277,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"readTimeString","ranges":[{"startOffset":9336,"endOffset":10273,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedString","ranges":[{"startOffset":10277,"endOffset":10742,"count":366},{"startOffset":10457,"endOffset":10483,"count":47},{"startOffset":10483,"endOffset":10741,"count":319}],"isBlockCoverage":true},{"functionName":"readLengthCodedBuffer","ranges":[{"startOffset":10746,"endOffset":10903,"count":0}],"isBlockCoverage":false},{"functionName":"readNullTerminatedString","ranges":[{"startOffset":10907,"endOffset":11183,"count":2},{"startOffset":11031,"endOffset":11085,"count":27}],"isBlockCoverage":true},{"functionName":"readString","ranges":[{"startOffset":11204,"endOffset":11577,"count":25},{"startOffset":11264,"endOffset":11298,"count":0},{"startOffset":11300,"endOffset":11352,"count":0}],"isBlockCoverage":true},{"functionName":"parseInt","ranges":[{"startOffset":11581,"endOffset":13062,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntNoBigCheck","ranges":[{"startOffset":13392,"endOffset":13943,"count":84},{"startOffset":13440,"endOffset":13466,"count":0},{"startOffset":13559,"endOffset":13610,"count":0},{"startOffset":13655,"endOffset":13700,"count":0},{"startOffset":13744,"endOffset":13787,"count":0},{"startOffset":13818,"endOffset":13913,"count":261}],"isBlockCoverage":true},{"functionName":"parseGeometryValue","ranges":[{"startOffset":14036,"endOffset":16921,"count":0}],"isBlockCoverage":false},{"functionName":"parseVector","ranges":[{"startOffset":16925,"endOffset":17186,"count":0}],"isBlockCoverage":false},{"functionName":"parseDate","ranges":[{"startOffset":17190,"endOffset":17900,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTime","ranges":[{"startOffset":17904,"endOffset":18157,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloat","ranges":[{"startOffset":18161,"endOffset":19196,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntNoBigCheck","ranges":[{"startOffset":19200,"endOffset":19303,"count":84}],"isBlockCoverage":true},{"functionName":"parseLengthCodedInt","ranges":[{"startOffset":19307,"endOffset":19426,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntString","ranges":[{"startOffset":19430,"endOffset":19512,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedFloat","ranges":[{"startOffset":19516,"endOffset":19603,"count":0}],"isBlockCoverage":false},{"functionName":"peekByte","ranges":[{"startOffset":19607,"endOffset":19660,"count":198}],"isBlockCoverage":true},{"functionName":"isAlt","ranges":[{"startOffset":19778,"endOffset":19828,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":19832,"endOffset":19884,"count":197}],"isBlockCoverage":true},{"functionName":"asError","ranges":[{"startOffset":19888,"endOffset":20385,"count":8}],"isBlockCoverage":true},{"functionName":"writeInt32","ranges":[{"startOffset":20389,"endOffset":20477,"count":4}],"isBlockCoverage":true},{"functionName":"writeInt24","ranges":[{"startOffset":20481,"endOffset":20559,"count":41}],"isBlockCoverage":true},{"functionName":"writeInt16","ranges":[{"startOffset":20563,"endOffset":20651,"count":41}],"isBlockCoverage":true},{"functionName":"writeInt8","ranges":[{"startOffset":20655,"endOffset":20736,"count":141}],"isBlockCoverage":true},{"functionName":"writeDouble","ranges":[{"startOffset":20740,"endOffset":20829,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":20833,"endOffset":20920,"count":41}],"isBlockCoverage":true},{"functionName":"writeNull","ranges":[{"startOffset":20924,"endOffset":20997,"count":0}],"isBlockCoverage":false},{"functionName":"writeNullTerminatedString","ranges":[{"startOffset":21038,"endOffset":21248,"count":6},{"startOffset":21152,"endOffset":21189,"count":3}],"isBlockCoverage":true},{"functionName":"writeString","ranges":[{"startOffset":21252,"endOffset":21678,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedString","ranges":[{"startOffset":21682,"endOffset":21911,"count":8},{"startOffset":21838,"endOffset":21875,"count":4}],"isBlockCoverage":true},{"functionName":"writeLengthCodedBuffer","ranges":[{"startOffset":21915,"endOffset":22056,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedNumber","ranges":[{"startOffset":22060,"endOffset":22636,"count":12},{"startOffset":22145,"endOffset":22635,"count":0}],"isBlockCoverage":true},{"functionName":"writeDate","ranges":[{"startOffset":22640,"endOffset":24038,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeader","ranges":[{"startOffset":24042,"endOffset":24227,"count":41}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":24231,"endOffset":24319,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":24323,"endOffset":24565,"count":0}],"isBlockCoverage":false},{"functionName":"lengthCodedNumberLength","ranges":[{"startOffset":24576,"endOffset":24754,"count":8},{"startOffset":24646,"endOffset":24753,"count":0}],"isBlockCoverage":true},{"functionName":"lengthCodedStringLength","ranges":[{"startOffset":24765,"endOffset":24946,"count":8}],"isBlockCoverage":true},{"functionName":"MockBuffer","ranges":[{"startOffset":24957,"endOffset":25185,"count":1},{"startOffset":25083,"endOffset":25165,"count":95},{"startOffset":25126,"endOffset":25159,"count":93}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":24989,"endOffset":25003,"count":12}],"isBlockCoverage":true}]},{"scriptId":"690","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":184575,"count":1}],"isBlockCoverage":true}]},{"scriptId":"691","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/long/umd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50994,"count":1},{"startOffset":655,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33,"endOffset":595,"count":1},{"startOffset":176,"endOffset":189,"count":0},{"startOffset":191,"endOffset":318,"count":0},{"startOffset":461,"endOffset":593,"count":0}],"isBlockCoverage":true},{"functionName":"preferDefault","ranges":[{"startOffset":64,"endOffset":140,"count":1},{"startOffset":125,"endOffset":135,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":474,"endOffset":585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":714,"endOffset":50989,"count":1},{"startOffset":4313,"endOffset":4354,"count":0}],"isBlockCoverage":true},{"functionName":"Long","ranges":[{"startOffset":4908,"endOffset":5296,"count":9}],"isBlockCoverage":true},{"functionName":"isLong","ranges":[{"startOffset":6699,"endOffset":6777,"count":0}],"isBlockCoverage":false},{"functionName":"ctz32","ranges":[{"startOffset":6886,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"fromInt","ranges":[{"startOffset":7578,"endOffset":8256,"count":6},{"startOffset":7667,"endOffset":7947,"count":2},{"startOffset":7808,"endOffset":7825,"count":0},{"startOffset":7947,"endOffset":8250,"count":4},{"startOffset":8027,"endOffset":8121,"count":3},{"startOffset":8094,"endOffset":8111,"count":0},{"startOffset":8162,"endOffset":8166,"count":1},{"startOffset":8167,"endOffset":8170,"count":3},{"startOffset":8199,"endOffset":8222,"count":3}],"isBlockCoverage":true},{"functionName":"fromNumber","ranges":[{"startOffset":8699,"endOffset":9248,"count":0}],"isBlockCoverage":false},{"functionName":"fromBits","ranges":[{"startOffset":9774,"endOffset":9880,"count":9}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":10673,"endOffset":12117,"count":0}],"isBlockCoverage":false},{"functionName":"fromValue","ranges":[{"startOffset":12775,"endOffset":13149,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":16120,"endOffset":16200,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":16407,"endOffset":16589,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16883,"endOffset":18211,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBits","ranges":[{"startOffset":18375,"endOffset":18429,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBitsUnsigned","ranges":[{"startOffset":18606,"endOffset":18674,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBits","ranges":[{"startOffset":18835,"endOffset":18887,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBitsUnsigned","ranges":[{"startOffset":19061,"endOffset":19127,"count":0}],"isBlockCoverage":false},{"functionName":"getNumBitsAbs","ranges":[{"startOffset":19310,"endOffset":19667,"count":0}],"isBlockCoverage":false},{"functionName":"isSafeInteger","ranges":[{"startOffset":19843,"endOffset":20182,"count":0}],"isBlockCoverage":false},{"functionName":"isZero","ranges":[{"startOffset":20322,"endOffset":20395,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":20716,"endOffset":20791,"count":0}],"isBlockCoverage":false},{"functionName":"isPositive","ranges":[{"startOffset":20943,"endOffset":21018,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":21152,"endOffset":21211,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":21347,"endOffset":21407,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":21619,"endOffset":21917,"count":0}],"isBlockCoverage":false},{"functionName":"notEquals","ranges":[{"startOffset":22403,"endOffset":22482,"count":0}],"isBlockCoverage":false},{"functionName":"lessThan","ranges":[{"startOffset":23257,"endOffset":23340,"count":0}],"isBlockCoverage":false},{"functionName":"lessThanOrEqual","ranges":[{"startOffset":23851,"endOffset":23942,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThan","ranges":[{"startOffset":24765,"endOffset":24851,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThanOrEqual","ranges":[{"startOffset":25377,"endOffset":25471,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":26388,"endOffset":26995,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":27491,"endOffset":27616,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":28012,"endOffset":28861,"count":0}],"isBlockCoverage":false},{"functionName":"subtract","ranges":[{"startOffset":29092,"endOffset":29237,"count":0}],"isBlockCoverage":false},{"functionName":"multiply","ranges":[{"startOffset":29749,"endOffset":31946,"count":0}],"isBlockCoverage":false},{"functionName":"divide","ranges":[{"startOffset":32527,"endOffset":36687,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":37158,"endOffset":37598,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":38253,"endOffset":38336,"count":0}],"isBlockCoverage":false},{"functionName":"countLeadingZeros","ranges":[{"startOffset":38489,"endOffset":38601,"count":0}],"isBlockCoverage":false},{"functionName":"countTrailingZeros","ranges":[{"startOffset":38983,"endOffset":39085,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":39526,"endOffset":39722,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":39931,"endOffset":40126,"count":0}],"isBlockCoverage":false},{"functionName":"xor","ranges":[{"startOffset":40337,"endOffset":40533,"count":0}],"isBlockCoverage":false},{"functionName":"shiftLeft","ranges":[{"startOffset":40768,"endOffset":41164,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRight","ranges":[{"startOffset":41708,"endOffset":42178,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRightUnsigned","ranges":[{"startOffset":42743,"endOffset":43214,"count":0}],"isBlockCoverage":false},{"functionName":"rotateLeft","ranges":[{"startOffset":44095,"endOffset":44752,"count":0}],"isBlockCoverage":false},{"functionName":"rotateRight","ranges":[{"startOffset":45284,"endOffset":45942,"count":0}],"isBlockCoverage":false},{"functionName":"toSigned","ranges":[{"startOffset":46381,"endOffset":46498,"count":0}],"isBlockCoverage":false},{"functionName":"toUnsigned","ranges":[{"startOffset":46646,"endOffset":46763,"count":0}],"isBlockCoverage":false},{"functionName":"toBytes","ranges":[{"startOffset":47020,"endOffset":47103,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesLE","ranges":[{"startOffset":47309,"endOffset":47596,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesBE","ranges":[{"startOffset":47796,"endOffset":48083,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytes","ranges":[{"startOffset":48444,"endOffset":48596,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesLE","ranges":[{"startOffset":48906,"endOffset":49149,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesBE","ranges":[{"startOffset":49453,"endOffset":49696,"count":0}],"isBlockCoverage":false},{"functionName":"fromBigInt","ranges":[{"startOffset":50107,"endOffset":50334,"count":0}],"isBlockCoverage":false},{"functionName":"fromValueWithBigInt","ranges":[{"startOffset":50378,"endOffset":50556,"count":0}],"isBlockCoverage":false},{"functionName":"toBigInt","ranges":[{"startOffset":50722,"endOffset":50932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1348,"count":1}],"isBlockCoverage":true},{"functionName":"exports.decode","ranges":[{"startOffset":162,"endOffset":999,"count":490},{"startOffset":248,"endOffset":303,"count":489},{"startOffset":303,"endOffset":571,"count":1},{"startOffset":571,"endOffset":873,"count":0},{"startOffset":873,"endOffset":977,"count":1},{"startOffset":977,"endOffset":990,"count":0},{"startOffset":991,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":1019,"endOffset":1346,"count":61},{"startOffset":1140,"endOffset":1200,"count":0},{"startOffset":1288,"endOffset":1307,"count":0},{"startOffset":1308,"endOffset":1337,"count":0},{"startOffset":1338,"endOffset":1343,"count":0}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6318,"count":1},{"startOffset":5704,"endOffset":5716,"count":0},{"startOffset":5813,"endOffset":6119,"count":0},{"startOffset":6142,"endOffset":6317,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":440,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":749,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1356,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1734,"endOffset":3444,"count":1},{"startOffset":2124,"endOffset":3442,"count":2},{"startOffset":2205,"endOffset":2218,"count":0},{"startOffset":2313,"endOffset":2417,"count":0},{"startOffset":2431,"endOffset":2760,"count":1},{"startOffset":2547,"endOffset":2581,"count":2},{"startOffset":2774,"endOffset":3299,"count":1},{"startOffset":2876,"endOffset":2908,"count":0},{"startOffset":3313,"endOffset":3426,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3476,"endOffset":3659,"count":1}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3680,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":3977,"endOffset":4266,"count":1},{"startOffset":4150,"endOffset":4179,"count":0}],"isBlockCoverage":true},{"functionName":"enableStreamingAPI","ranges":[{"startOffset":4706,"endOffset":5520,"count":1},{"startOffset":4790,"endOffset":4797,"count":0}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":5170,"endOffset":5313,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":5340,"endOffset":5483,"count":0}],"isBlockCoverage":false},{"functionName":"iconv.encodeStream.iconv.decodeStream","ranges":[{"startOffset":5966,"endOffset":6116,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":1},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":1}],"isBlockCoverage":true}]},{"scriptId":"696","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3380,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":250,"endOffset":3378,"count":1}],"isBlockCoverage":true},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":408,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":851,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1257,"endOffset":1464,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1513,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":1857,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2274,"endOffset":2680,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2728,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3015,"endOffset":3243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2791,"count":1}],"isBlockCoverage":true}]},{"scriptId":"698","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1822,"endOffset":2177,"count":19},{"startOffset":1955,"endOffset":2175,"count":0}],"isBlockCoverage":true},{"functionName":"ctor.toPacket","ranges":[{"startOffset":2067,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2282,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3159,"endOffset":3568,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3615,"endOffset":4040,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":4051,"endOffset":4623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_next_factor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":918,"count":1}],"isBlockCoverage":true},{"functionName":"AuthNextFactor","ranges":[{"startOffset":140,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":245,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":628,"endOffset":881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequest","ranges":[{"startOffset":196,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":301,"endOffset":697,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":708,"endOffset":1016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_request_more_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":793,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequestMoreData","ranges":[{"startOffset":204,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":253,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":526,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"verifyMarker","ranges":[{"startOffset":680,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/auth_switch_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":707,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchResponse","ranges":[{"startOffset":197,"endOffset":314,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":318,"endOffset":552,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":563,"endOffset":666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/binary_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3279,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryRow","ranges":[{"startOffset":164,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":235,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":1524,"endOffset":1952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":984,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogDump","ranges":[{"startOffset":318,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":502,"endOffset":951,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":748,"count":1}],"isBlockCoverage":true}]},{"scriptId":"706","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3308,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":400,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"serializeToBuffer","ranges":[{"startOffset":1262,"endOffset":2825,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2829,"endOffset":3275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2453,"count":1}],"isBlockCoverage":true}]},{"scriptId":"708","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/auth_41.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2332,"count":1}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":719,"endOffset":923,"count":3},{"startOffset":826,"endOffset":854,"count":1},{"startOffset":868,"endOffset":896,"count":1}],"isBlockCoverage":true},{"functionName":"xor","ranges":[{"startOffset":925,"endOffset":1083,"count":1},{"startOffset":1030,"endOffset":1064,"count":20}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":1105,"endOffset":1317,"count":1},{"startOffset":1171,"endOffset":1204,"count":0}],"isBlockCoverage":true},{"functionName":"exports.calculateTokenFromPasswordSha","ranges":[{"startOffset":1359,"endOffset":1717,"count":1}],"isBlockCoverage":true},{"functionName":"exports.verifyToken","ranges":[{"startOffset":1775,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"exports.doubleSha1","ranges":[{"startOffset":2025,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"xorRotating","ranges":[{"startOffset":2082,"endOffset":2296,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/charset_encodings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3456,"count":1}],"isBlockCoverage":true}]},{"scriptId":"710","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":141,"endOffset":180,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":217,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/column_definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9935,"count":1}],"isBlockCoverage":true},{"functionName":"ColumnDefinition","ranges":[{"startOffset":936,"endOffset":2468,"count":48},{"startOffset":2175,"endOffset":2197,"count":12},{"startOffset":2198,"endOffset":2213,"count":36}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":2472,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2869,"endOffset":8244,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":8255,"endOffset":9120,"count":0}],"isBlockCoverage":false},{"functionName":"get db","ranges":[{"startOffset":9178,"endOffset":9216,"count":0}],"isBlockCoverage":false},{"functionName":"addString","ranges":[{"startOffset":9238,"endOffset":9788,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9325,"endOffset":9779,"count":96},{"startOffset":9525,"endOffset":9547,"count":24},{"startOffset":9548,"endOffset":9563,"count":72}],"isBlockCoverage":true}]},{"scriptId":"712","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6603,"count":1}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":284,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"toParameter","ranges":[{"startOffset":578,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"Execute","ranges":[{"startOffset":2186,"endOffset":2380,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":2391,"endOffset":4304,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":4308,"endOffset":6573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"714","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3917,"count":1}],"isBlockCoverage":true},{"functionName":"Handshake","ranges":[{"startOffset":240,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"setScrambleData","ranges":[{"startOffset":682,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":939,"endOffset":2035,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":2046,"endOffset":3885,"count":1},{"startOffset":2915,"endOffset":2993,"count":0},{"startOffset":3022,"endOffset":3103,"count":0},{"startOffset":3330,"endOffset":3503,"count":0}],"isBlockCoverage":true}]},{"scriptId":"715","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/handshake_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5045,"count":1}],"isBlockCoverage":true},{"functionName":"HandshakeResponse","ranges":[{"startOffset":265,"endOffset":1247,"count":1},{"startOffset":321,"endOffset":326,"count":0},{"startOffset":367,"endOffset":372,"count":0},{"startOffset":413,"endOffset":418,"count":0},{"startOffset":736,"endOffset":894,"count":0}],"isBlockCoverage":true},{"functionName":"serializeResponse","ranges":[{"startOffset":1251,"endOffset":3081,"count":2},{"startOffset":1867,"endOffset":2083,"count":0},{"startOffset":2425,"endOffset":2430,"count":0},{"startOffset":2559,"endOffset":2773,"count":4},{"startOffset":2868,"endOffset":3052,"count":4}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":1297,"endOffset":1347,"count":8}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":3085,"endOffset":3525,"count":1},{"startOffset":3137,"endOffset":3221,"count":0},{"startOffset":3265,"endOffset":3353,"count":0}],"isBlockCoverage":true},{"functionName":"fromPacket","ranges":[{"startOffset":3535,"endOffset":5005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/prepare_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"PrepareStatement","ranges":[{"startOffset":269,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":426,"endOffset":761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/prepared_statement_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":375,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementHeader","ranges":[{"startOffset":49,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":263,"endOffset":416,"count":39}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":420,"endOffset":747,"count":39}],"isBlockCoverage":true}]},{"scriptId":"719","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1629,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":312,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":660,"endOffset":1593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/resultset_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4562,"count":1}],"isBlockCoverage":true},{"functionName":"ResultSetHeader","ranges":[{"startOffset":440,"endOffset":3923,"count":31},{"startOffset":781,"endOffset":970,"count":12},{"startOffset":875,"endOffset":950,"count":0},{"startOffset":970,"endOffset":1324,"count":19},{"startOffset":1324,"endOffset":1410,"count":0},{"startOffset":1410,"endOffset":1500,"count":19},{"startOffset":1502,"endOffset":3610,"count":2},{"startOffset":1844,"endOffset":1876,"count":0},{"startOffset":1977,"endOffset":2146,"count":0},{"startOffset":2183,"endOffset":3596,"count":0},{"startOffset":3610,"endOffset":3681,"count":17},{"startOffset":3681,"endOffset":3704,"count":19},{"startOffset":3704,"endOffset":3751,"count":0},{"startOffset":3751,"endOffset":3826,"count":19},{"startOffset":3826,"endOffset":3878,"count":2},{"startOffset":3878,"endOffset":3919,"count":17}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":668,"endOffset":735,"count":38}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":4031,"endOffset":4524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/server_status.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1536,"count":1}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/encoding_charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1}],"isBlockCoverage":true}]},{"scriptId":"723","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/session_track.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true}]},{"scriptId":"724","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/ssl_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"SSLRequest","ranges":[{"startOffset":138,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":255,"endOffset":600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/packets/text_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1200,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":79,"endOffset":139,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":150,"endOffset":381,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":392,"endOffset":1170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":697,"count":1}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/client_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8547,"count":1}],"isBlockCoverage":true},{"functionName":"flagNames","ranges":[{"startOffset":742,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHandshake","ranges":[{"startOffset":984,"endOffset":1125,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1129,"endOffset":1194,"count":1}],"isBlockCoverage":true},{"functionName":"sendSSLRequest","ranges":[{"startOffset":1198,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"sendCredentials","ranges":[{"startOffset":1401,"endOffset":2917,"count":1},{"startOffset":1464,"endOffset":1657,"count":0}],"isBlockCoverage":true},{"functionName":"calculateNativePasswordAuthToken","ranges":[{"startOffset":2921,"endOffset":3539,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeInit","ranges":[{"startOffset":3543,"endOffset":6126,"count":1},{"startOffset":3790,"endOffset":4017,"count":0},{"startOffset":4822,"endOffset":4888,"count":0},{"startOffset":4991,"endOffset":5838,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3605,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5487,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeResult","ranges":[{"startOffset":6130,"endOffset":8510,"count":1},{"startOffset":6367,"endOffset":7704,"count":0},{"startOffset":7727,"endOffset":8050,"count":0},{"startOffset":8277,"endOffset":8425,"count":0},{"startOffset":8455,"endOffset":8489,"count":0}],"isBlockCoverage":true}]},{"scriptId":"728","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1258,"count":1}],"isBlockCoverage":true},{"functionName":"Command","ranges":[{"startOffset":142,"endOffset":196,"count":41}],"isBlockCoverage":true},{"functionName":"stateName","ranges":[{"startOffset":222,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":406,"endOffset":1228,"count":238},{"startOffset":456,"endOffset":530,"count":41},{"startOffset":546,"endOffset":565,"count":197},{"startOffset":567,"endOffset":978,"count":8},{"startOffset":655,"endOffset":668,"count":0},{"startOffset":699,"endOffset":790,"count":0},{"startOffset":879,"endOffset":953,"count":0},{"startOffset":978,"endOffset":1158,"count":230},{"startOffset":1158,"endOffset":1185,"count":197},{"startOffset":1185,"endOffset":1227,"count":33}],"isBlockCoverage":true}]},{"scriptId":"729","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/server_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6621,"count":1}],"isBlockCoverage":true},{"functionName":"ServerHandshake","ranges":[{"startOffset":255,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":626,"endOffset":1054,"count":0}],"isBlockCoverage":false},{"functionName":"readClientReply","ranges":[{"startOffset":1058,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"_isStatement","ranges":[{"startOffset":2247,"endOffset":2366,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchCommands","ranges":[{"startOffset":2370,"endOffset":5864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10347,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":572,"endOffset":1193,"count":39}],"isBlockCoverage":true},{"functionName":"Query._unpipeStream","ranges":[{"startOffset":1090,"endOffset":1104,"count":31}],"isBlockCoverage":true},{"functionName":"then","ranges":[{"startOffset":1197,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1911,"endOffset":2418,"count":39},{"startOffset":1973,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":2422,"endOffset":3187,"count":31},{"startOffset":2528,"endOffset":2549,"count":0},{"startOffset":2551,"endOffset":2577,"count":0},{"startOffset":2629,"endOffset":2714,"count":0},{"startOffset":2872,"endOffset":2945,"count":0},{"startOffset":2964,"endOffset":3063,"count":12},{"startOffset":3063,"endOffset":3160,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2991,"endOffset":3053,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3096,"endOffset":3150,"count":19}],"isBlockCoverage":true},{"functionName":"doneInsert","ranges":[{"startOffset":3191,"endOffset":3702,"count":19},{"startOffset":3240,"endOffset":3419,"count":0},{"startOffset":3605,"endOffset":3674,"count":0}],"isBlockCoverage":true},{"functionName":"resultsetHeader","ranges":[{"startOffset":3706,"endOffset":4346,"count":31},{"startOffset":3879,"endOffset":4046,"count":0},{"startOffset":4079,"endOffset":4120,"count":19},{"startOffset":4120,"endOffset":4156,"count":12},{"startOffset":4156,"endOffset":4228,"count":0},{"startOffset":4228,"endOffset":4345,"count":12}],"isBlockCoverage":true},{"functionName":"_streamLocalInfile","ranges":[{"startOffset":4350,"endOffset":6169,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":6173,"endOffset":7744,"count":48},{"startOffset":6890,"endOffset":7198,"count":0},{"startOffset":7288,"endOffset":7702,"count":12},{"startOffset":7415,"endOffset":7505,"count":0},{"startOffset":7702,"endOffset":7743,"count":36}],"isBlockCoverage":true},{"functionName":"fieldsEOF","ranges":[{"startOffset":7748,"endOffset":7916,"count":12},{"startOffset":7822,"endOffset":7891,"count":0}],"isBlockCoverage":true},{"functionName":"row","ranges":[{"startOffset":7992,"endOffset":8728,"count":96},{"startOffset":8043,"endOffset":8308,"count":12},{"startOffset":8190,"endOffset":8276,"count":0},{"startOffset":8308,"endOffset":8459,"count":84},{"startOffset":8459,"endOffset":8550,"count":0},{"startOffset":8550,"endOffset":8628,"count":84},{"startOffset":8628,"endOffset":8692,"count":0},{"startOffset":8692,"endOffset":8727,"count":84}],"isBlockCoverage":true},{"functionName":"infileOk","ranges":[{"startOffset":8732,"endOffset":8862,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":8866,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"_setTimeout","ranges":[{"startOffset":9662,"endOffset":9852,"count":39},{"startOffset":9700,"endOffset":9848,"count":0}],"isBlockCoverage":true},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":9856,"endOffset":10272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/text_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6941,"count":1},{"startOffset":298,"endOffset":328,"count":57}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":330,"endOffset":2660,"count":24},{"startOffset":632,"endOffset":650,"count":0},{"startOffset":740,"endOffset":756,"count":0},{"startOffset":761,"endOffset":778,"count":0},{"startOffset":783,"endOffset":799,"count":6},{"startOffset":804,"endOffset":821,"count":6},{"startOffset":826,"endOffset":897,"count":6},{"startOffset":902,"endOffset":1099,"count":0},{"startOffset":1104,"endOffset":1121,"count":0},{"startOffset":1126,"endOffset":1191,"count":0},{"startOffset":1196,"endOffset":1259,"count":0},{"startOffset":1264,"endOffset":1283,"count":0},{"startOffset":1288,"endOffset":1456,"count":0},{"startOffset":1461,"endOffset":1663,"count":0},{"startOffset":1668,"endOffset":1688,"count":0},{"startOffset":1693,"endOffset":1904,"count":0},{"startOffset":1909,"endOffset":1979,"count":0},{"startOffset":1984,"endOffset":2048,"count":0},{"startOffset":2053,"endOffset":2108,"count":0},{"startOffset":2113,"endOffset":2481,"count":0},{"startOffset":2486,"endOffset":2654,"count":18},{"startOffset":2534,"endOffset":2592,"count":0}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":2662,"endOffset":6780,"count":6},{"startOffset":2817,"endOffset":2862,"count":0},{"startOffset":2867,"endOffset":2912,"count":0},{"startOffset":4287,"endOffset":4462,"count":0},{"startOffset":4609,"endOffset":4675,"count":0},{"startOffset":4817,"endOffset":5107,"count":0},{"startOffset":5214,"endOffset":6443,"count":24},{"startOffset":5390,"endOffset":5501,"count":0},{"startOffset":5540,"endOffset":5730,"count":0},{"startOffset":5761,"endOffset":5812,"count":0},{"startOffset":5901,"endOffset":5971,"count":0},{"startOffset":6242,"endOffset":6372,"count":0},{"startOffset":6539,"endOffset":6652,"count":0},{"startOffset":6699,"endOffset":6746,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":2916,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"getTextParser","ranges":[{"startOffset":6782,"endOffset":6907,"count":12}],"isBlockCoverage":true}]},{"scriptId":"732","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/charsets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10509,"count":1}],"isBlockCoverage":true}]},{"scriptId":"733","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2213,"count":1}],"isBlockCoverage":true},{"functionName":"srcEscape","ranges":[{"startOffset":488,"endOffset":574,"count":24}],"isBlockCoverage":true},{"functionName":"highlightFn","ranges":[{"startOffset":932,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"printDebugWithCode","ranges":[{"startOffset":1254,"endOffset":1451,"count":0}],"isBlockCoverage":false},{"functionName":"typeMatch","ranges":[{"startOffset":1557,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"fieldEscape","ranges":[{"startOffset":1946,"endOffset":2176,"count":24},{"startOffset":2011,"endOffset":2129,"count":0},{"startOffset":2166,"endOffset":2173,"count":0}],"isBlockCoverage":true}]},{"scriptId":"734","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/generate-function/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3210,"count":1},{"startOffset":837,"endOffset":875,"count":50}],"isBlockCoverage":true},{"functionName":"isVariable","ranges":[{"startOffset":894,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":1000,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":1042,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":1092,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"genfun","ranges":[{"startOffset":1155,"endOffset":3159,"count":6},{"startOffset":3115,"endOffset":3142,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1232,"endOffset":1350,"count":90},{"startOffset":1305,"endOffset":1319,"count":186}],"isBlockCoverage":true},{"functionName":"pushLine","ranges":[{"startOffset":1369,"endOffset":1751,"count":90},{"startOffset":1426,"endOffset":1467,"count":24},{"startOffset":1469,"endOffset":1536,"count":0},{"startOffset":1585,"endOffset":1637,"count":24},{"startOffset":1637,"endOffset":1679,"count":66},{"startOffset":1679,"endOffset":1731,"count":24},{"startOffset":1731,"endOffset":1750,"count":42}],"isBlockCoverage":true},{"functionName":"line","ranges":[{"startOffset":1766,"endOffset":2089,"count":90},{"startOffset":1796,"endOffset":1807,"count":0},{"startOffset":1867,"endOffset":2004,"count":0}],"isBlockCoverage":true},{"functionName":"line.sym","ranges":[{"startOffset":2148,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"line.property","ranges":[{"startOffset":2312,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"line.toString","ranges":[{"startOffset":2596,"endOffset":2640,"count":6}],"isBlockCoverage":true},{"functionName":"line.toFunction","ranges":[{"startOffset":2662,"endOffset":3089,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2790,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2905,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2970,"endOffset":3015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/is-property/is-property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11014,"count":1}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":13,"endOffset":10986,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/static_text_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4961,"count":1},{"startOffset":202,"endOffset":232,"count":57}],"isBlockCoverage":true},{"functionName":"readField","ranges":[{"startOffset":234,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"createTypecastField","ranges":[{"startOffset":2437,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"getTextParser","ranges":[{"startOffset":3395,"endOffset":4927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/prepare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4050,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementInfo","ranges":[{"startOffset":234,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":465,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":551,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"Prepare","ranges":[{"startOffset":842,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1112,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"prepareHeader","ranges":[{"startOffset":1666,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"readParameter","ranges":[{"startOffset":2095,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":2871,"endOffset":3227,"count":0}],"isBlockCoverage":false},{"functionName":"parametersEOF","ranges":[{"startOffset":3231,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"fieldsEOF","ranges":[{"startOffset":3506,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDone","ranges":[{"startOffset":3694,"endOffset":4020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":361,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":143,"endOffset":195,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":199,"endOffset":324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3915,"count":1}],"isBlockCoverage":true},{"functionName":"Execute","ranges":[{"startOffset":318,"endOffset":965,"count":0}],"isBlockCoverage":false},{"functionName":"buildParserFromFields","ranges":[{"startOffset":969,"endOffset":1205,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1209,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":2062,"endOffset":3007,"count":0}],"isBlockCoverage":false},{"functionName":"fieldsEOF","ranges":[{"startOffset":3011,"endOffset":3313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/binary_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7524,"count":1},{"startOffset":356,"endOffset":386,"count":57}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":388,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":3131,"endOffset":7357,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryParser","ranges":[{"startOffset":7359,"endOffset":7488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/constants/field_flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true}]},{"scriptId":"742","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/parsers/static_binary_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7503,"count":1},{"startOffset":261,"endOffset":291,"count":57}],"isBlockCoverage":true},{"functionName":"getBinaryParser","ranges":[{"startOffset":293,"endOffset":7467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/ping.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"Ping","ranges":[{"startOffset":306,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":380,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"pingResponse","ranges":[{"startOffset":602,"endOffset":790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":592,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":133,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":235,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"registerResponse","ranges":[{"startOffset":434,"endOffset":556,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2921,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogEventHeader","ranges":[{"startOffset":147,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"BinlogDump","ranges":[{"startOffset":450,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":545,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"binlogData","ranges":[{"startOffset":732,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"RotateEvent","ranges":[{"startOffset":1347,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"FormatDescriptionEvent","ranges":[{"startOffset":1596,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"QueryEvent","ranges":[{"startOffset":2001,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"XidEvent","ranges":[{"startOffset":2621,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2704,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":644,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1173,"endOffset":2468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/commands/quit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"Quit","ranges":[{"startOffset":193,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":267,"endOffset":548,"count":1}],"isBlockCoverage":true}]},{"scriptId":"748","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/connection_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9580,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionConfig","ranges":[{"startOffset":1662,"endOffset":7011,"count":1},{"startOffset":1722,"endOffset":1781,"count":0},{"startOffset":1815,"endOffset":2087,"count":0},{"startOffset":2119,"endOffset":2603,"count":5},{"startOffset":2184,"endOffset":2193,"count":0},{"startOffset":2229,"endOffset":2597,"count":0},{"startOffset":2705,"endOffset":2719,"count":0},{"startOffset":2785,"endOffset":2813,"count":0},{"startOffset":2838,"endOffset":2845,"count":0},{"startOffset":2964,"endOffset":2976,"count":0},{"startOffset":3199,"endOffset":3219,"count":0},{"startOffset":3220,"endOffset":3232,"count":0},{"startOffset":3517,"endOffset":3541,"count":0},{"startOffset":4206,"endOffset":4269,"count":0},{"startOffset":4276,"endOffset":4808,"count":0},{"startOffset":5021,"endOffset":5066,"count":0},{"startOffset":5357,"endOffset":5377,"count":0},{"startOffset":5437,"endOffset":5455,"count":0},{"startOffset":5544,"endOffset":5731,"count":0},{"startOffset":5750,"endOffset":6043,"count":0},{"startOffset":6119,"endOffset":6171,"count":0}],"isBlockCoverage":true},{"functionName":"mergeFlags","ranges":[{"startOffset":7022,"endOffset":7763,"count":1},{"startOffset":7306,"endOffset":7457,"count":18},{"startOffset":7367,"endOffset":7394,"count":0},{"startOffset":7444,"endOffset":7450,"count":0},{"startOffset":7573,"endOffset":7600,"count":0},{"startOffset":7654,"endOffset":7681,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultFlags","ranges":[{"startOffset":7774,"endOffset":8406,"count":1},{"startOffset":8229,"endOffset":8281,"count":0}],"isBlockCoverage":true},{"functionName":"getCharsetNumber","ranges":[{"startOffset":8417,"endOffset":8607,"count":0}],"isBlockCoverage":false},{"functionName":"getSSLProfile","ranges":[{"startOffset":8618,"endOffset":8879,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":8890,"endOffset":9541,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/pool_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"PoolConfig","ranges":[{"startOffset":97,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":294,"count":1}],"isBlockCoverage":true},{"functionName":"promise","ranges":[{"startOffset":116,"endOffset":261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":260,"count":1}],"isBlockCoverage":true},{"functionName":"createConnection","ranges":[{"startOffset":123,"endOffset":223,"count":1}],"isBlockCoverage":true}]},{"scriptId":"752","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":99,"endOffset":185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/create_pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"createPoolCluster","ranges":[{"startOffset":66,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5648,"count":1}],"isBlockCoverage":true},{"functionName":"PromiseConnection","ranges":[{"startOffset":356,"endOffset":611,"count":1},{"startOffset":473,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"release","ranges":[{"startOffset":615,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":665,"endOffset":1143,"count":39},{"startOffset":791,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":926,"endOffset":1137,"count":39},{"startOffset":1039,"endOffset":1086,"count":35},{"startOffset":1086,"endOffset":1131,"count":4}],"isBlockCoverage":true},{"functionName":"execute","ranges":[{"startOffset":1147,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1635,"endOffset":1733,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1671,"endOffset":1727,"count":1}],"isBlockCoverage":true},{"functionName":"beginTransaction","ranges":[{"startOffset":1737,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":1979,"endOffset":2197,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":2201,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":2427,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":2908,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":3403,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"changeUser","ranges":[{"startOffset":4096,"endOffset":4597,"count":0}],"isBlockCoverage":false},{"functionName":"get config","ranges":[{"startOffset":4601,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":4658,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":5442,"count":1},{"startOffset":4971,"endOffset":5000,"count":11},{"startOffset":5007,"endOffset":5440,"count":10},{"startOffset":5115,"endOffset":5171,"count":9},{"startOffset":5178,"endOffset":5436,"count":9},{"startOffset":5440,"endOffset":5441,"count":10}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":5223,"endOffset":5422,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5267,"endOffset":5413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/prepared_statement_info.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePreparedStatementInfo","ranges":[{"startOffset":104,"endOffset":209,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":213,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":532,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/make_done_cb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"makeDoneCb","ranges":[{"startOffset":15,"endOffset":417,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":73,"endOffset":414,"count":39},{"startOffset":117,"endOffset":366,"count":8},{"startOffset":366,"endOffset":410,"count":31}],"isBlockCoverage":true}]},{"scriptId":"757","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/inherit_events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"inheritEvents","ranges":[{"startOffset":15,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":120,"endOffset":476,"count":1},{"startOffset":178,"endOffset":213,"count":0},{"startOffset":215,"endOffset":470,"count":0}],"isBlockCoverage":true},{"functionName":"source.on.listeners.<computed>","ranges":[{"startOffset":291,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":504,"endOffset":715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2974,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePool","ranges":[{"startOffset":323,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":519,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":846,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":960,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":1443,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1918,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2402,"endOffset":2870,"count":1},{"startOffset":2465,"endOffset":2494,"count":4},{"startOffset":2501,"endOffset":2869,"count":3}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":2699,"endOffset":2850,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2743,"endOffset":2841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":436,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePoolConnection","ranges":[{"startOffset":194,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":276,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/lib/promise/pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1528,"count":1}],"isBlockCoverage":true},{"functionName":"PromisePoolNamespace","ranges":[{"startOffset":153,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":283,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":637,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":1061,"endOffset":1485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9724,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2806,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3168,"endOffset":3698,"count":1},{"startOffset":3219,"endOffset":3305,"count":0},{"startOffset":3590,"endOffset":3611,"count":0},{"startOffset":3613,"endOffset":3695,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":3808,"endOffset":6951,"count":1},{"startOffset":4086,"endOffset":4134,"count":0},{"startOffset":4173,"endOffset":4303,"count":0},{"startOffset":4367,"endOffset":4533,"count":0},{"startOffset":4784,"endOffset":5107,"count":0},{"startOffset":5262,"endOffset":5395,"count":0},{"startOffset":5429,"endOffset":5564,"count":0},{"startOffset":5590,"endOffset":5806,"count":0},{"startOffset":5872,"endOffset":6096,"count":0},{"startOffset":6258,"endOffset":6268,"count":0},{"startOffset":6342,"endOffset":6383,"count":0},{"startOffset":6419,"endOffset":6460,"count":0},{"startOffset":6557,"endOffset":6660,"count":0},{"startOffset":6688,"endOffset":6933,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":7103,"endOffset":7461,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":7467,"endOffset":8298,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":8457,"endOffset":8762,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9577,"endOffset":9710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2889,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":661,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1136,"endOffset":2092,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1172,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2361,"endOffset":2848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1},{"startOffset":569,"endOffset":732,"count":9},{"startOffset":636,"endOffset":730,"count":416}],"isBlockCoverage":true}]},{"scriptId":"764","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6307,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.write","ranges":[{"startOffset":1755,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.end","ranges":[{"startOffset":1914,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder","ranges":[{"startOffset":2073,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":2179,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2269,"endOffset":2283,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2421,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2536,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2802,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2984,"endOffset":3033,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":3074,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3931,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":4080,"endOffset":4250,"count":1}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4291,"endOffset":6152,"count":1},{"startOffset":4445,"endOffset":6060,"count":6},{"startOffset":4565,"endOffset":4687,"count":0},{"startOffset":4809,"endOffset":5208,"count":0},{"startOffset":5218,"endOffset":6054,"count":0}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":6191,"endOffset":6306,"count":1},{"startOffset":6257,"endOffset":6288,"count":0}],"isBlockCoverage":true}]},{"scriptId":"765","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9982,"count":1}],"isBlockCoverage":true},{"functionName":"Utf32Codec","ranges":[{"startOffset":176,"endOffset":305,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder","ranges":[{"startOffset":584,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.write","ranges":[{"startOffset":714,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.end","ranges":[{"startOffset":2589,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder","ranges":[{"startOffset":2954,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.write","ranges":[{"startOffset":3145,"endOffset":4771,"count":0}],"isBlockCoverage":false},{"functionName":"_writeCodepoint","ranges":[{"startOffset":4774,"endOffset":5541,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.end","ranges":[{"startOffset":5573,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoCodec","ranges":[{"startOffset":6097,"endOffset":6164,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder","ranges":[{"startOffset":6289,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.write","ranges":[{"startOffset":6562,"endOffset":6615,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.end","ranges":[{"startOffset":6651,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder","ranges":[{"startOffset":6715,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.write","ranges":[{"startOffset":6942,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.end","ranges":[{"startOffset":7766,"endOffset":8319,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":8322,"endOffset":9981,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5502,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1406,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1948,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2141,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2377,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2461,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2525,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2745,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3571,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":4125,"endOffset":5499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9283,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3383,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4164,"endOffset":4235,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4399,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4605,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6317,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6797,"endOffset":6925,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7048,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":9037,"endOffset":9280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4449,"count":1}],"isBlockCoverage":true}]},{"scriptId":"770","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"771","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23065,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":6184,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":6333,"endOffset":7110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":7151,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":9442,"endOffset":9710,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":9749,"endOffset":10100,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":10143,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":11363,"endOffset":12464,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":12550,"endOffset":12867,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":12899,"endOffset":17831,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":17861,"endOffset":18767,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":18916,"endOffset":19226,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":19258,"endOffset":22162,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":22192,"endOffset":22674,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":22751,"endOffset":23063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9386,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/eventRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7593,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":315,"endOffset":7589,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":588,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":658,"endOffset":2537,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":720,"endOffset":845,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":887,"endOffset":1077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1141,"endOffset":1393,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":1173,"endOffset":1222,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1433,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":1688,"endOffset":1737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":2061,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":2244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2308,"endOffset":2530,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2340,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2564,"endOffset":7584,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2623,"endOffset":2748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2801,"endOffset":3107,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3161,"endOffset":3471,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3510,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3940,"endOffset":4351,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":3972,"endOffset":4021,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4391,"endOffset":4506,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4571,"endOffset":4788,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":4603,"endOffset":4652,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4829,"endOffset":4959,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5013,"endOffset":5135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5190,"endOffset":5313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5378,"endOffset":5597,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":5410,"endOffset":5459,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5645,"endOffset":5978,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6026,"endOffset":6366,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6421,"endOffset":6741,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6797,"endOffset":7219,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":6829,"endOffset":6878,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7259,"endOffset":7392,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7451,"endOffset":7577,"count":1}],"isBlockCoverage":true}]},{"scriptId":"774","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/eventRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":148,"endOffset":811,"count":3},{"startOffset":308,"endOffset":388,"count":1},{"startOffset":388,"endOffset":497,"count":2},{"startOffset":497,"endOffset":680,"count":0},{"startOffset":680,"endOffset":808,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":860,"endOffset":1115,"count":2},{"startOffset":952,"endOffset":1112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1150,"endOffset":1715,"count":3},{"startOffset":1228,"endOffset":1299,"count":1},{"startOffset":1299,"endOffset":1393,"count":2},{"startOffset":1393,"endOffset":1506,"count":1},{"startOffset":1506,"endOffset":1582,"count":0},{"startOffset":1582,"endOffset":1712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1781,"endOffset":3243,"count":5},{"startOffset":1983,"endOffset":1998,"count":4},{"startOffset":1999,"endOffset":2011,"count":4},{"startOffset":2012,"endOffset":2023,"count":4},{"startOffset":2024,"endOffset":2038,"count":4},{"startOffset":2039,"endOffset":2072,"count":4},{"startOffset":2073,"endOffset":2095,"count":4},{"startOffset":2097,"endOffset":2195,"count":2},{"startOffset":2195,"endOffset":2426,"count":3},{"startOffset":2426,"endOffset":2526,"count":1},{"startOffset":2526,"endOffset":2761,"count":2},{"startOffset":2761,"endOffset":3018,"count":1},{"startOffset":3011,"endOffset":3018,"count":0},{"startOffset":3018,"endOffset":3110,"count":0},{"startOffset":3110,"endOffset":3240,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3271,"endOffset":4153,"count":2},{"startOffset":3988,"endOffset":4150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4188,"endOffset":4612,"count":2},{"startOffset":4337,"endOffset":4609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4644,"endOffset":5617,"count":4},{"startOffset":4724,"endOffset":5077,"count":2},{"startOffset":5077,"endOffset":5174,"count":1},{"startOffset":5174,"endOffset":5484,"count":0},{"startOffset":5484,"endOffset":5614,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5651,"endOffset":7146,"count":4},{"startOffset":6112,"endOffset":6215,"count":1},{"startOffset":6215,"endOffset":6465,"count":3},{"startOffset":6465,"endOffset":6618,"count":2},{"startOffset":6618,"endOffset":6941,"count":1},{"startOffset":6684,"endOffset":6782,"count":0},{"startOffset":6925,"endOffset":6941,"count":0},{"startOffset":6941,"endOffset":7013,"count":1},{"startOffset":7013,"endOffset":7143,"count":2}],"isBlockCoverage":true}]},{"scriptId":"776","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/notificationRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4066,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":4062,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":467,"endOffset":817,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":856,"endOffset":1575,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":913,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1272,"endOffset":1568,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1629,"endOffset":2702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1686,"endOffset":2117,"count":1},{"startOffset":2026,"endOffset":2116,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2054,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2204,"endOffset":2695,"count":1},{"startOffset":2640,"endOffset":2694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2748,"endOffset":4057,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2806,"endOffset":3015,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3082,"endOffset":3271,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3357,"endOffset":3783,"count":1},{"startOffset":3643,"endOffset":3782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3857,"endOffset":4050,"count":1}],"isBlockCoverage":true}]},{"scriptId":"777","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/notificationRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2018,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":762,"count":2},{"startOffset":423,"endOffset":759,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":851,"endOffset":1426,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1490,"endOffset":1990,"count":6},{"startOffset":1648,"endOffset":1768,"count":3},{"startOffset":1768,"endOffset":1852,"count":0},{"startOffset":1852,"endOffset":1987,"count":3}],"isBlockCoverage":true}]},{"scriptId":"778","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/cors/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6618,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":256,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"isOriginAllowed","ranges":[{"startOffset":343,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"configureOrigin","ranges":[{"startOffset":834,"endOffset":1719,"count":8},{"startOffset":1137,"endOffset":1694,"count":0}],"isBlockCoverage":true},{"functionName":"configureMethods","ranges":[{"startOffset":1723,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"configureCredentials","ranges":[{"startOffset":2009,"endOffset":2211,"count":8},{"startOffset":2088,"endOffset":2190,"count":0}],"isBlockCoverage":true},{"functionName":"configureAllowedHeaders","ranges":[{"startOffset":2215,"endOffset":2947,"count":0}],"isBlockCoverage":false},{"functionName":"configureExposedHeaders","ranges":[{"startOffset":2951,"endOffset":3354,"count":8},{"startOffset":3081,"endOffset":3231,"count":0},{"startOffset":3233,"endOffset":3353,"count":0}],"isBlockCoverage":true},{"functionName":"configureMaxAge","ranges":[{"startOffset":3358,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"applyHeaders","ranges":[{"startOffset":3645,"endOffset":4070,"count":24},{"startOffset":3735,"endOffset":4066,"count":40},{"startOffset":3786,"endOffset":4060,"count":24},{"startOffset":3823,"endOffset":3871,"count":16},{"startOffset":3871,"endOffset":4052,"count":8},{"startOffset":3903,"endOffset":3918,"count":0},{"startOffset":3920,"endOffset":3966,"count":0}],"isBlockCoverage":true},{"functionName":"cors","ranges":[{"startOffset":4074,"endOffset":5224,"count":8},{"startOffset":4249,"endOffset":4968,"count":0}],"isBlockCoverage":true},{"functionName":"middlewareWrapper","ranges":[{"startOffset":5228,"endOffset":6506,"count":1},{"startOffset":5424,"endOffset":5458,"count":0}],"isBlockCoverage":true},{"functionName":"optionsCallback","ranges":[{"startOffset":5490,"endOffset":5539,"count":8}],"isBlockCoverage":true},{"functionName":"corsMiddleware","ranges":[{"startOffset":5559,"endOffset":6501,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5628,"endOffset":6493,"count":8},{"startOffset":5671,"endOffset":5703,"count":0},{"startOffset":5885,"endOffset":5947,"count":0},{"startOffset":6436,"endOffset":6475,"count":0}],"isBlockCoverage":true},{"functionName":"originCallback","ranges":[{"startOffset":6008,"endOffset":6089,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6183,"endOffset":6422,"count":8},{"startOffset":6244,"endOffset":6289,"count":0}],"isBlockCoverage":true}]},{"scriptId":"779","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/profileRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3399,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":436,"endOffset":3395,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":458,"endOffset":563,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":653,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1989,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2048,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2523,"endOffset":3390,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2583,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2816,"endOffset":3383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/profileRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6086,"count":1}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":270,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"validateProfile","ranges":[{"startOffset":541,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3677,"endOffset":4975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5041,"endOffset":6058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9962,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":382,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"_parseVault","ranges":[{"startOffset":1163,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":2302,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":2386,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":2472,"endOffset":2896,"count":1},{"startOffset":2580,"endOffset":2601,"count":0},{"startOffset":2602,"endOffset":2634,"count":0},{"startOffset":2636,"endOffset":2671,"count":0},{"startOffset":2774,"endOffset":2810,"count":0},{"startOffset":2812,"endOffset":2851,"count":0}],"isBlockCoverage":true},{"functionName":"_instructions","ranges":[{"startOffset":2898,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":4179,"endOffset":4826,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveHome","ranges":[{"startOffset":4828,"endOffset":4945,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":4947,"endOffset":5349,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":5351,"endOffset":6948,"count":1},{"startOffset":5498,"endOffset":5514,"count":0},{"startOffset":5531,"endOffset":5550,"count":0},{"startOffset":5552,"endOffset":5589,"count":0},{"startOffset":5612,"endOffset":5686,"count":0},{"startOffset":5765,"endOffset":5780,"count":0},{"startOffset":5782,"endOffset":6037,"count":0},{"startOffset":6558,"endOffset":6621,"count":0},{"startOffset":6698,"endOffset":6727,"count":0},{"startOffset":6729,"endOffset":6770,"count":0},{"startOffset":6902,"endOffset":6946,"count":0}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":6990,"endOffset":7499,"count":1},{"startOffset":7167,"endOffset":7498,"count":0}],"isBlockCoverage":true},{"functionName":"decrypt","ranges":[{"startOffset":7501,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":8617,"endOffset":9469,"count":1},{"startOffset":8813,"endOffset":8973,"count":0},{"startOffset":9037,"endOffset":9467,"count":0}],"isBlockCoverage":true}]},{"scriptId":"782","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"783","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"784","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"785","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"786","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"787","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/reportRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2752,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":332,"endOffset":2748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":575,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":987,"endOffset":1202,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1037,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1238,"endOffset":1665,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1282,"endOffset":1479,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1536,"endOffset":1658,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1698,"endOffset":1949,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1743,"endOffset":1942,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1988,"endOffset":2597,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2409,"count":1},{"startOffset":2362,"endOffset":2408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2465,"endOffset":2590,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2648,"endOffset":2743,"count":1}],"isBlockCoverage":true}]},{"scriptId":"788","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/reportRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2515,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1315,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1927,"endOffset":2483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":902,"count":1}],"isBlockCoverage":true},{"functionName":"exports.createArrayCsvStringifier","ranges":[{"startOffset":423,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createObjectCsvStringifier","ranges":[{"startOffset":551,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createArrayCsvWriter","ranges":[{"startOffset":674,"endOffset":753,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createObjectCsvWriter","ranges":[{"startOffset":787,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"791","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"792","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26,"count":1}],"isBlockCoverage":true}]},{"scriptId":"793","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/js/pdfkit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195539,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":336,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"PDFTree","ranges":[{"startOffset":432,"endOffset":564,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":567,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":624,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":670,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"_compareKeys","ranges":[{"startOffset":1296,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"_keysName","ranges":[{"startOffset":1377,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"_dataForKey","ranges":[{"startOffset":1455,"endOffset":1532,"count":0}],"isBlockCoverage":false},{"functionName":"SpotColor","ranges":[{"startOffset":1556,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1972,"endOffset":2021,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2037,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"swapBytes","ranges":[{"startOffset":2306,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"convert","ranges":[{"startOffset":2613,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":4710,"endOffset":4853,"count":0}],"isBlockCoverage":false},{"functionName":"PDFReference","ranges":[{"startOffset":4909,"endOffset":5172,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5175,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":5548,"endOffset":5633,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":5636,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6476,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"PDFNumber","ranges":[{"startOffset":6535,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSides","ranges":[{"startOffset":6586,"endOffset":7594,"count":0}],"isBlockCoverage":false},{"functionName":"cosine","ranges":[{"startOffset":7714,"endOffset":7880,"count":0}],"isBlockCoverage":false},{"functionName":"sine","ranges":[{"startOffset":7881,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"PDFPage","ranges":[{"startOffset":9428,"endOffset":10504,"count":0}],"isBlockCoverage":false},{"functionName":"get fonts","ranges":[{"startOffset":10507,"endOffset":10621,"count":0}],"isBlockCoverage":false},{"functionName":"get xobjects","ranges":[{"startOffset":10624,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"get ext_gstates","ranges":[{"startOffset":10753,"endOffset":10888,"count":0}],"isBlockCoverage":false},{"functionName":"get patterns","ranges":[{"startOffset":10891,"endOffset":11017,"count":0}],"isBlockCoverage":false},{"functionName":"get colorSpaces","ranges":[{"startOffset":11020,"endOffset":11135,"count":0}],"isBlockCoverage":false},{"functionName":"get annotations","ranges":[{"startOffset":11138,"endOffset":11265,"count":0}],"isBlockCoverage":false},{"functionName":"get structParentTreeKey","ranges":[{"startOffset":11268,"endOffset":11467,"count":0}],"isBlockCoverage":false},{"functionName":"get contentWidth","ranges":[{"startOffset":11470,"endOffset":11558,"count":0}],"isBlockCoverage":false},{"functionName":"get contentHeight","ranges":[{"startOffset":11561,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"maxY","ranges":[{"startOffset":11654,"endOffset":11712,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":11715,"endOffset":11771,"count":0}],"isBlockCoverage":false},{"functionName":"_setTabOrder","ranges":[{"startOffset":11774,"endOffset":11913,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":11916,"endOffset":12238,"count":0}],"isBlockCoverage":false},{"functionName":"_compareKeys","ranges":[{"startOffset":12280,"endOffset":12335,"count":0}],"isBlockCoverage":false},{"functionName":"_keysName","ranges":[{"startOffset":12338,"endOffset":12375,"count":0}],"isBlockCoverage":false},{"functionName":"_dataForKey","ranges":[{"startOffset":12378,"endOffset":12424,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":12428,"endOffset":12974,"count":0}],"isBlockCoverage":false},{"functionName":"isUnassignedCodePoint","ranges":[{"startOffset":19469,"endOffset":19524,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonlyMappedToNothing","ranges":[{"startOffset":20029,"endOffset":20088,"count":0}],"isBlockCoverage":false},{"functionName":"isNonASCIISpaceCharacter","ranges":[{"startOffset":20432,"endOffset":20491,"count":0}],"isBlockCoverage":false},{"functionName":"isProhibitedCharacter","ranges":[{"startOffset":21661,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"isBidirectionalRAL","ranges":[{"startOffset":22468,"endOffset":22519,"count":0}],"isBlockCoverage":false},{"functionName":"isBidirectionalL","ranges":[{"startOffset":28408,"endOffset":28456,"count":0}],"isBlockCoverage":false},{"functionName":"getCodePoint","ranges":[{"startOffset":28579,"endOffset":28616,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":28632,"endOffset":28641,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":28656,"endOffset":28676,"count":0}],"isBlockCoverage":false},{"functionName":"toCodePoints","ranges":[{"startOffset":28678,"endOffset":29176,"count":0}],"isBlockCoverage":false},{"functionName":"saslprep","ranges":[{"startOffset":29177,"endOffset":30810,"count":0}],"isBlockCoverage":false},{"functionName":"generateFileID","ranges":[{"startOffset":30841,"endOffset":31131,"count":0}],"isBlockCoverage":false},{"functionName":"generateRandomWordArray","ranges":[{"startOffset":31141,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":31236,"endOffset":31403,"count":0}],"isBlockCoverage":false},{"functionName":"PDFSecurity","ranges":[{"startOffset":31406,"endOffset":31657,"count":0}],"isBlockCoverage":false},{"functionName":"_setupEncryption","ranges":[{"startOffset":31660,"endOffset":32348,"count":0}],"isBlockCoverage":false},{"functionName":"_setupEncryptionV1V2V4","ranges":[{"startOffset":32351,"endOffset":33981,"count":0}],"isBlockCoverage":false},{"functionName":"_setupEncryptionV5","ranges":[{"startOffset":33984,"endOffset":35777,"count":0}],"isBlockCoverage":false},{"functionName":"getEncryptFn","ranges":[{"startOffset":35780,"endOffset":36801,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":36804,"endOffset":36842,"count":0}],"isBlockCoverage":false},{"functionName":"getPermissionsR2","ranges":[{"startOffset":36845,"endOffset":37254,"count":0}],"isBlockCoverage":false},{"functionName":"getPermissionsR3","ranges":[{"startOffset":37255,"endOffset":38025,"count":0}],"isBlockCoverage":false},{"functionName":"getUserPasswordR2","ranges":[{"startOffset":38026,"endOffset":38153,"count":0}],"isBlockCoverage":false},{"functionName":"getUserPasswordR3R4","ranges":[{"startOffset":38154,"endOffset":38692,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnerPasswordR2R3R4","ranges":[{"startOffset":38693,"endOffset":39331,"count":0}],"isBlockCoverage":false},{"functionName":"getEncryptionKeyR2R3R4","ranges":[{"startOffset":39332,"endOffset":39779,"count":0}],"isBlockCoverage":false},{"functionName":"getUserPasswordR5","ranges":[{"startOffset":39780,"endOffset":40076,"count":0}],"isBlockCoverage":false},{"functionName":"getUserEncryptionKeyR5","ranges":[{"startOffset":40077,"endOffset":40455,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnerPasswordR5","ranges":[{"startOffset":40456,"endOffset":40800,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnerEncryptionKeyR5","ranges":[{"startOffset":40801,"endOffset":41229,"count":0}],"isBlockCoverage":false},{"functionName":"getEncryptionKeyR5","ranges":[{"startOffset":41230,"endOffset":41324,"count":0}],"isBlockCoverage":false},{"functionName":"getEncryptedPermissionsR5","ranges":[{"startOffset":41325,"endOffset":41720,"count":0}],"isBlockCoverage":false},{"functionName":"processPasswordR2R3R4","ranges":[{"startOffset":41721,"endOffset":42220,"count":0}],"isBlockCoverage":false},{"functionName":"processPasswordR5","ranges":[{"startOffset":42221,"endOffset":42537,"count":0}],"isBlockCoverage":false},{"functionName":"lsbFirstWord","ranges":[{"startOffset":42538,"endOffset":42663,"count":0}],"isBlockCoverage":false},{"functionName":"wordArrayToBuffer","ranges":[{"startOffset":42664,"endOffset":42897,"count":0}],"isBlockCoverage":false},{"functionName":"PDFGradient$1","ranges":[{"startOffset":43184,"endOffset":43315,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":43318,"endOffset":44166,"count":0}],"isBlockCoverage":false},{"functionName":"setTransform","ranges":[{"startOffset":44169,"endOffset":44283,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":44286,"endOffset":47224,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":47227,"endOffset":47737,"count":0}],"isBlockCoverage":false},{"functionName":"PDFLinearGradient$1","ranges":[{"startOffset":47792,"endOffset":47918,"count":0}],"isBlockCoverage":false},{"functionName":"shader","ranges":[{"startOffset":47921,"endOffset":48128,"count":0}],"isBlockCoverage":false},{"functionName":"opacityGradient","ranges":[{"startOffset":48131,"endOffset":48236,"count":0}],"isBlockCoverage":false},{"functionName":"PDFRadialGradient$1","ranges":[{"startOffset":48291,"endOffset":48481,"count":0}],"isBlockCoverage":false},{"functionName":"shader","ranges":[{"startOffset":48484,"endOffset":48709,"count":0}],"isBlockCoverage":false},{"functionName":"opacityGradient","ranges":[{"startOffset":48712,"endOffset":48835,"count":0}],"isBlockCoverage":false},{"functionName":"PDFTilingPattern$1","ranges":[{"startOffset":49060,"endOffset":49226,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":49229,"endOffset":49890,"count":0}],"isBlockCoverage":false},{"functionName":"embedPatternColorSpaces","ranges":[{"startOffset":49893,"endOffset":50197,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternColorSpaceId","ranges":[{"startOffset":50200,"endOffset":50291,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":50294,"endOffset":50585,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":50588,"endOffset":51085,"count":0}],"isBlockCoverage":false},{"functionName":"initColor","ranges":[{"startOffset":51286,"endOffset":51442,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeColor","ranges":[{"startOffset":51446,"endOffset":52205,"count":0}],"isBlockCoverage":false},{"functionName":"_setColor","ranges":[{"startOffset":52209,"endOffset":52515,"count":0}],"isBlockCoverage":false},{"functionName":"_setColorCore","ranges":[{"startOffset":52519,"endOffset":52973,"count":0}],"isBlockCoverage":false},{"functionName":"_setColorSpace","ranges":[{"startOffset":52977,"endOffset":53096,"count":0}],"isBlockCoverage":false},{"functionName":"_getColorSpace","ranges":[{"startOffset":53100,"endOffset":53254,"count":0}],"isBlockCoverage":false},{"functionName":"fillColor","ranges":[{"startOffset":53258,"endOffset":53446,"count":0}],"isBlockCoverage":false},{"functionName":"strokeColor","ranges":[{"startOffset":53450,"endOffset":53601,"count":0}],"isBlockCoverage":false},{"functionName":"opacity","ranges":[{"startOffset":53605,"endOffset":53683,"count":0}],"isBlockCoverage":false},{"functionName":"fillOpacity","ranges":[{"startOffset":53687,"endOffset":53766,"count":0}],"isBlockCoverage":false},{"functionName":"strokeOpacity","ranges":[{"startOffset":53770,"endOffset":53851,"count":0}],"isBlockCoverage":false},{"functionName":"_doOpacity","ranges":[{"startOffset":53855,"endOffset":54850,"count":0}],"isBlockCoverage":false},{"functionName":"linearGradient","ranges":[{"startOffset":54854,"endOffset":54946,"count":0}],"isBlockCoverage":false},{"functionName":"radialGradient","ranges":[{"startOffset":54950,"endOffset":55058,"count":0}],"isBlockCoverage":false},{"functionName":"pattern","ranges":[{"startOffset":55062,"endOffset":55170,"count":0}],"isBlockCoverage":false},{"functionName":"addSpotColor","ranges":[{"startOffset":55174,"endOffset":55319,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":59853,"endOffset":61387,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":61403,"endOffset":61632,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":61654,"endOffset":61776,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":61780,"endOffset":61904,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":61908,"endOffset":62019,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":62023,"endOffset":62206,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":62210,"endOffset":62430,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":62434,"endOffset":62686,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":62690,"endOffset":62818,"count":0}],"isBlockCoverage":false},{"functionName":"q","ranges":[{"startOffset":62822,"endOffset":62986,"count":0}],"isBlockCoverage":false},{"functionName":"T","ranges":[{"startOffset":62990,"endOffset":63264,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":63268,"endOffset":63504,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":63508,"endOffset":63590,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":63594,"endOffset":63708,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":63712,"endOffset":63808,"count":0}],"isBlockCoverage":false},{"functionName":"l","ranges":[{"startOffset":63812,"endOffset":63910,"count":0}],"isBlockCoverage":false},{"functionName":"H","ranges":[{"startOffset":63914,"endOffset":63995,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":63999,"endOffset":64081,"count":0}],"isBlockCoverage":false},{"functionName":"V","ranges":[{"startOffset":64085,"endOffset":64166,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":64170,"endOffset":64252,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":64256,"endOffset":64322,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":64326,"endOffset":64392,"count":0}],"isBlockCoverage":false},{"functionName":"solveArc","ranges":[{"startOffset":64413,"endOffset":64672,"count":0}],"isBlockCoverage":false},{"functionName":"arcToSegments","ranges":[{"startOffset":64696,"endOffset":66277,"count":0}],"isBlockCoverage":false},{"functionName":"segmentToBezier","ranges":[{"startOffset":66303,"endOffset":66978,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":67005,"endOffset":67087,"count":0}],"isBlockCoverage":false},{"functionName":"initVector","ranges":[{"startOffset":67205,"endOffset":67284,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":67288,"endOffset":67377,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":67381,"endOffset":67489,"count":0}],"isBlockCoverage":false},{"functionName":"closePath","ranges":[{"startOffset":67493,"endOffset":67543,"count":0}],"isBlockCoverage":false},{"functionName":"lineWidth","ranges":[{"startOffset":67547,"endOffset":67613,"count":0}],"isBlockCoverage":false},{"functionName":"lineCap","ranges":[{"startOffset":67680,"endOffset":67818,"count":0}],"isBlockCoverage":false},{"functionName":"lineJoin","ranges":[{"startOffset":67886,"endOffset":68026,"count":0}],"isBlockCoverage":false},{"functionName":"miterLimit","ranges":[{"startOffset":68030,"endOffset":68097,"count":0}],"isBlockCoverage":false},{"functionName":"dash","ranges":[{"startOffset":68101,"endOffset":68619,"count":0}],"isBlockCoverage":false},{"functionName":"undash","ranges":[{"startOffset":68623,"endOffset":68675,"count":0}],"isBlockCoverage":false},{"functionName":"moveTo","ranges":[{"startOffset":68679,"endOffset":68760,"count":0}],"isBlockCoverage":false},{"functionName":"lineTo","ranges":[{"startOffset":68764,"endOffset":68845,"count":0}],"isBlockCoverage":false},{"functionName":"bezierCurveTo","ranges":[{"startOffset":68849,"endOffset":69033,"count":0}],"isBlockCoverage":false},{"functionName":"quadraticCurveTo","ranges":[{"startOffset":69037,"endOffset":69172,"count":0}],"isBlockCoverage":false},{"functionName":"rect","ranges":[{"startOffset":69176,"endOffset":69292,"count":0}],"isBlockCoverage":false},{"functionName":"roundedRect","ranges":[{"startOffset":69296,"endOffset":69884,"count":0}],"isBlockCoverage":false},{"functionName":"ellipse","ranges":[{"startOffset":69888,"endOffset":70417,"count":0}],"isBlockCoverage":false},{"functionName":"circle","ranges":[{"startOffset":70421,"endOffset":70486,"count":0}],"isBlockCoverage":false},{"functionName":"arc","ranges":[{"startOffset":70490,"endOffset":71815,"count":0}],"isBlockCoverage":false},{"functionName":"polygon","ranges":[{"startOffset":71819,"endOffset":71991,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":71995,"endOffset":72059,"count":0}],"isBlockCoverage":false},{"functionName":"_windingRule","ranges":[{"startOffset":72063,"endOffset":72160,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":72164,"endOffset":72393,"count":0}],"isBlockCoverage":false},{"functionName":"stroke","ranges":[{"startOffset":72397,"endOffset":72503,"count":0}],"isBlockCoverage":false},{"functionName":"fillAndStroke","ranges":[{"startOffset":72507,"endOffset":73025,"count":0}],"isBlockCoverage":false},{"functionName":"clip","ranges":[{"startOffset":73029,"endOffset":73106,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":73110,"endOffset":73650,"count":0}],"isBlockCoverage":false},{"functionName":"translate","ranges":[{"startOffset":73654,"endOffset":73720,"count":0}],"isBlockCoverage":false},{"functionName":"rotate","ranges":[{"startOffset":73724,"endOffset":74115,"count":0}],"isBlockCoverage":false},{"functionName":"scale","ranges":[{"startOffset":74119,"endOffset":74521,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":78313,"endOffset":78392,"count":0}],"isBlockCoverage":false},{"functionName":"AFMFont","ranges":[{"startOffset":78395,"endOffset":79117,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":79120,"endOffset":80331,"count":0}],"isBlockCoverage":false},{"functionName":"encodeText","ranges":[{"startOffset":80334,"endOffset":80566,"count":0}],"isBlockCoverage":false},{"functionName":"glyphsForString","ranges":[{"startOffset":80569,"endOffset":80800,"count":0}],"isBlockCoverage":false},{"functionName":"characterToGlyph","ranges":[{"startOffset":80803,"endOffset":80910,"count":0}],"isBlockCoverage":false},{"functionName":"widthOfGlyph","ranges":[{"startOffset":80913,"endOffset":80979,"count":0}],"isBlockCoverage":false},{"functionName":"getKernPair","ranges":[{"startOffset":80982,"endOffset":81065,"count":0}],"isBlockCoverage":false},{"functionName":"advancesForGlyphs","ranges":[{"startOffset":81068,"endOffset":81360,"count":0}],"isBlockCoverage":false},{"functionName":"PDFFont","ranges":[{"startOffset":81382,"endOffset":81398,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":81401,"endOffset":81473,"count":0}],"isBlockCoverage":false},{"functionName":"widthOfString","ranges":[{"startOffset":81476,"endOffset":81555,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":81558,"endOffset":81663,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":81666,"endOffset":81798,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":81801,"endOffset":81872,"count":0}],"isBlockCoverage":false},{"functionName":"lineHeight","ranges":[{"startOffset":81875,"endOffset":82029,"count":0}],"isBlockCoverage":false},{"functionName":"Courier","ranges":[{"startOffset":82060,"endOffset":82144,"count":0}],"isBlockCoverage":false},{"functionName":"Courier-Bold","ranges":[{"startOffset":82148,"endOffset":82244,"count":0}],"isBlockCoverage":false},{"functionName":"Courier-Oblique","ranges":[{"startOffset":82248,"endOffset":82350,"count":0}],"isBlockCoverage":false},{"functionName":"Courier-BoldOblique","ranges":[{"startOffset":82354,"endOffset":82464,"count":0}],"isBlockCoverage":false},{"functionName":"Helvetica","ranges":[{"startOffset":82468,"endOffset":82556,"count":0}],"isBlockCoverage":false},{"functionName":"Helvetica-Bold","ranges":[{"startOffset":82560,"endOffset":82660,"count":0}],"isBlockCoverage":false},{"functionName":"Helvetica-Oblique","ranges":[{"startOffset":82664,"endOffset":82770,"count":0}],"isBlockCoverage":false},{"functionName":"Helvetica-BoldOblique","ranges":[{"startOffset":82774,"endOffset":82888,"count":0}],"isBlockCoverage":false},{"functionName":"Times-Roman","ranges":[{"startOffset":82892,"endOffset":82986,"count":0}],"isBlockCoverage":false},{"functionName":"Times-Bold","ranges":[{"startOffset":82990,"endOffset":83082,"count":0}],"isBlockCoverage":false},{"functionName":"Times-Italic","ranges":[{"startOffset":83086,"endOffset":83182,"count":0}],"isBlockCoverage":false},{"functionName":"Times-BoldItalic","ranges":[{"startOffset":83186,"endOffset":83290,"count":0}],"isBlockCoverage":false},{"functionName":"Symbol","ranges":[{"startOffset":83294,"endOffset":83376,"count":0}],"isBlockCoverage":false},{"functionName":"ZapfDingbats","ranges":[{"startOffset":83380,"endOffset":83474,"count":0}],"isBlockCoverage":false},{"functionName":"StandardFont","ranges":[{"startOffset":83517,"endOffset":83899,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":83902,"endOffset":84090,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":84093,"endOffset":84593,"count":0}],"isBlockCoverage":false},{"functionName":"widthOfString","ranges":[{"startOffset":84596,"endOffset":84888,"count":0}],"isBlockCoverage":false},{"functionName":"isStandardFont","ranges":[{"startOffset":84898,"endOffset":84959,"count":0}],"isBlockCoverage":false},{"functionName":"toHex","ranges":[{"startOffset":84977,"endOffset":85041,"count":0}],"isBlockCoverage":false},{"functionName":"EmbeddedFont","ranges":[{"startOffset":85082,"endOffset":85815,"count":0}],"isBlockCoverage":false},{"functionName":"layoutRun","ranges":[{"startOffset":85818,"endOffset":86165,"count":0}],"isBlockCoverage":false},{"functionName":"layoutCached","ranges":[{"startOffset":86168,"endOffset":86436,"count":0}],"isBlockCoverage":false},{"functionName":"layout","ranges":[{"startOffset":86439,"endOffset":87245,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":87248,"endOffset":87793,"count":0}],"isBlockCoverage":false},{"functionName":"widthOfString","ranges":[{"startOffset":87796,"endOffset":87964,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":87967,"endOffset":90492,"count":0}],"isBlockCoverage":false},{"functionName":"toUnicodeCmap","ranges":[{"startOffset":90495,"endOffset":91697,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":91733,"endOffset":92308,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualFont","ranges":[{"startOffset":92332,"endOffset":92628,"count":0}],"isBlockCoverage":false},{"functionName":"initFonts","ranges":[{"startOffset":92651,"endOffset":93081,"count":0}],"isBlockCoverage":false},{"functionName":"font","ranges":[{"startOffset":93085,"endOffset":94147,"count":0}],"isBlockCoverage":false},{"functionName":"fontSize","ranges":[{"startOffset":94151,"endOffset":94243,"count":0}],"isBlockCoverage":false},{"functionName":"currentLineHeight","ranges":[{"startOffset":94247,"endOffset":94344,"count":0}],"isBlockCoverage":false},{"functionName":"registerFont","ranges":[{"startOffset":94348,"endOffset":94469,"count":0}],"isBlockCoverage":false},{"functionName":"sizeToPoint","ranges":[{"startOffset":94473,"endOffset":96246,"count":0}],"isBlockCoverage":false},{"functionName":"LineWrapper","ranges":[{"startOffset":96351,"endOffset":98314,"count":0}],"isBlockCoverage":false},{"functionName":"wordWidth","ranges":[{"startOffset":98317,"endOffset":98433,"count":0}],"isBlockCoverage":false},{"functionName":"canFit","ranges":[{"startOffset":98436,"endOffset":98602,"count":0}],"isBlockCoverage":false},{"functionName":"eachWord","ranges":[{"startOffset":98605,"endOffset":100475,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":100478,"endOffset":104084,"count":0}],"isBlockCoverage":false},{"functionName":"nextSection","ranges":[{"startOffset":104087,"endOffset":104835,"count":0}],"isBlockCoverage":false},{"functionName":"initText","ranges":[{"startOffset":104891,"endOffset":105002,"count":0}],"isBlockCoverage":false},{"functionName":"lineGap","ranges":[{"startOffset":105006,"endOffset":105076,"count":0}],"isBlockCoverage":false},{"functionName":"moveDown","ranges":[{"startOffset":105080,"endOffset":105234,"count":0}],"isBlockCoverage":false},{"functionName":"moveUp","ranges":[{"startOffset":105238,"endOffset":105390,"count":0}],"isBlockCoverage":false},{"functionName":"_text","ranges":[{"startOffset":105394,"endOffset":106543,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":106547,"endOffset":106634,"count":0}],"isBlockCoverage":false},{"functionName":"widthOfString","ranges":[{"startOffset":106638,"endOffset":106906,"count":0}],"isBlockCoverage":false},{"functionName":"boundsOfString","ranges":[{"startOffset":106910,"endOffset":109964,"count":0}],"isBlockCoverage":false},{"functionName":"heightOfString","ranges":[{"startOffset":109968,"endOffset":110378,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":110382,"endOffset":113843,"count":0}],"isBlockCoverage":false},{"functionName":"_initOptions","ranges":[{"startOffset":113847,"endOffset":114832,"count":0}],"isBlockCoverage":false},{"functionName":"_line","ranges":[{"startOffset":114836,"endOffset":115132,"count":0}],"isBlockCoverage":false},{"functionName":"_fragment","ranges":[{"startOffset":115136,"endOffset":121466,"count":0}],"isBlockCoverage":false},{"functionName":"JPEG","ranges":[{"startOffset":121708,"endOffset":122532,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":122535,"endOffset":123011,"count":0}],"isBlockCoverage":false},{"functionName":"PNGImage","ranges":[{"startOffset":123034,"endOffset":123252,"count":0}],"isBlockCoverage":false},{"functionName":"embed","ranges":[{"startOffset":123255,"endOffset":125042,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":125045,"endOffset":125531,"count":0}],"isBlockCoverage":false},{"functionName":"splitAlphaChannel","ranges":[{"startOffset":125534,"endOffset":126346,"count":0}],"isBlockCoverage":false},{"functionName":"loadIndexedAlphaChannel","ranges":[{"startOffset":126349,"endOffset":126785,"count":0}],"isBlockCoverage":false},{"functionName":"decodeData","ranges":[{"startOffset":126788,"endOffset":126924,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":126954,"endOffset":127649,"count":0}],"isBlockCoverage":false},{"functionName":"initImages","ranges":[{"startOffset":127675,"endOffset":127749,"count":0}],"isBlockCoverage":false},{"functionName":"image","ranges":[{"startOffset":127753,"endOffset":132069,"count":0}],"isBlockCoverage":false},{"functionName":"openImage","ranges":[{"startOffset":132073,"endOffset":132378,"count":0}],"isBlockCoverage":false},{"functionName":"annotate","ranges":[{"startOffset":132410,"endOffset":133168,"count":0}],"isBlockCoverage":false},{"functionName":"note","ranges":[{"startOffset":133172,"endOffset":133487,"count":0}],"isBlockCoverage":false},{"functionName":"goTo","ranges":[{"startOffset":133491,"endOffset":133709,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":133713,"endOffset":134319,"count":0}],"isBlockCoverage":false},{"functionName":"_markup","ranges":[{"startOffset":134323,"endOffset":134565,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":134569,"endOffset":134769,"count":0}],"isBlockCoverage":false},{"functionName":"underline","ranges":[{"startOffset":134773,"endOffset":134895,"count":0}],"isBlockCoverage":false},{"functionName":"strike","ranges":[{"startOffset":134899,"endOffset":135018,"count":0}],"isBlockCoverage":false},{"functionName":"lineAnnotation","ranges":[{"startOffset":135022,"endOffset":135262,"count":0}],"isBlockCoverage":false},{"functionName":"rectAnnotation","ranges":[{"startOffset":135266,"endOffset":135428,"count":0}],"isBlockCoverage":false},{"functionName":"ellipseAnnotation","ranges":[{"startOffset":135432,"endOffset":135597,"count":0}],"isBlockCoverage":false},{"functionName":"textAnnotation","ranges":[{"startOffset":135601,"endOffset":135806,"count":0}],"isBlockCoverage":false},{"functionName":"fileAnnotation","ranges":[{"startOffset":135810,"endOffset":136243,"count":0}],"isBlockCoverage":false},{"functionName":"_convertRect","ranges":[{"startOffset":136247,"endOffset":136539,"count":0}],"isBlockCoverage":false},{"functionName":"PDFOutline","ranges":[{"startOffset":136565,"endOffset":137069,"count":0}],"isBlockCoverage":false},{"functionName":"addItem","ranges":[{"startOffset":137072,"endOffset":137283,"count":0}],"isBlockCoverage":false},{"functionName":"endOutline","ranges":[{"startOffset":137286,"endOffset":138031,"count":0}],"isBlockCoverage":false},{"functionName":"initOutline","ranges":[{"startOffset":138058,"endOffset":138136,"count":0}],"isBlockCoverage":false},{"functionName":"endOutline","ranges":[{"startOffset":138140,"endOffset":138352,"count":0}],"isBlockCoverage":false},{"functionName":"PDFStructureContent","ranges":[{"startOffset":138387,"endOffset":138472,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":138475,"endOffset":138560,"count":0}],"isBlockCoverage":false},{"functionName":"PDFStructureElement","ranges":[{"startOffset":138594,"endOffset":139675,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":139678,"endOffset":140317,"count":0}],"isBlockCoverage":false},{"functionName":"_addContentToParentTree","ranges":[{"startOffset":140320,"endOffset":140582,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":140585,"endOffset":140784,"count":0}],"isBlockCoverage":false},{"functionName":"setAttached","ranges":[{"startOffset":140787,"endOffset":141153,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":141156,"endOffset":141357,"count":0}],"isBlockCoverage":false},{"functionName":"_isValidChild","ranges":[{"startOffset":141360,"endOffset":141506,"count":0}],"isBlockCoverage":false},{"functionName":"_contentForClosure","ranges":[{"startOffset":141509,"endOffset":141738,"count":0}],"isBlockCoverage":false},{"functionName":"_isFlushable","ranges":[{"startOffset":141741,"endOffset":142074,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":142077,"endOffset":142368,"count":0}],"isBlockCoverage":false},{"functionName":"_flushChild","ranges":[{"startOffset":142371,"endOffset":142983,"count":0}],"isBlockCoverage":false},{"functionName":"_compareKeys","ranges":[{"startOffset":143027,"endOffset":143089,"count":0}],"isBlockCoverage":false},{"functionName":"_keysName","ranges":[{"startOffset":143092,"endOffset":143128,"count":0}],"isBlockCoverage":false},{"functionName":"_dataForKey","ranges":[{"startOffset":143131,"endOffset":143175,"count":0}],"isBlockCoverage":false},{"functionName":"initMarkings","ranges":[{"startOffset":143203,"endOffset":143379,"count":0}],"isBlockCoverage":false},{"functionName":"markContent","ranges":[{"startOffset":143383,"endOffset":145003,"count":0}],"isBlockCoverage":false},{"functionName":"markStructureContent","ranges":[{"startOffset":145007,"endOffset":145459,"count":0}],"isBlockCoverage":false},{"functionName":"endMarkedContent","ranges":[{"startOffset":145463,"endOffset":145562,"count":0}],"isBlockCoverage":false},{"functionName":"struct","ranges":[{"startOffset":145566,"endOffset":145682,"count":0}],"isBlockCoverage":false},{"functionName":"addStructure","ranges":[{"startOffset":145686,"endOffset":146029,"count":0}],"isBlockCoverage":false},{"functionName":"initPageMarkings","ranges":[{"startOffset":146033,"endOffset":146489,"count":0}],"isBlockCoverage":false},{"functionName":"endPageMarkings","ranges":[{"startOffset":146493,"endOffset":146660,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkInfoDictionary","ranges":[{"startOffset":146664,"endOffset":146820,"count":0}],"isBlockCoverage":false},{"functionName":"hasMarkInfoDictionary","ranges":[{"startOffset":146824,"endOffset":146892,"count":0}],"isBlockCoverage":false},{"functionName":"getStructTreeRoot","ranges":[{"startOffset":146896,"endOffset":147175,"count":0}],"isBlockCoverage":false},{"functionName":"getStructParentTree","ranges":[{"startOffset":147179,"endOffset":147259,"count":0}],"isBlockCoverage":false},{"functionName":"createStructParentTreeNextKey","ranges":[{"startOffset":147263,"endOffset":147509,"count":0}],"isBlockCoverage":false},{"functionName":"endMarkings","ranges":[{"startOffset":147513,"endOffset":147798,"count":0}],"isBlockCoverage":false},{"functionName":"initForm","ranges":[{"startOffset":148526,"endOffset":149093,"count":0}],"isBlockCoverage":false},{"functionName":"endAcroForm","ranges":[{"startOffset":149097,"endOffset":149657,"count":0}],"isBlockCoverage":false},{"functionName":"_endChild","ranges":[{"startOffset":149661,"endOffset":149847,"count":0}],"isBlockCoverage":false},{"functionName":"formField","ranges":[{"startOffset":149851,"endOffset":150038,"count":0}],"isBlockCoverage":false},{"functionName":"formAnnotation","ranges":[{"startOffset":150042,"endOffset":150416,"count":0}],"isBlockCoverage":false},{"functionName":"formText","ranges":[{"startOffset":150420,"endOffset":150533,"count":0}],"isBlockCoverage":false},{"functionName":"formPushButton","ranges":[{"startOffset":150537,"endOffset":150662,"count":0}],"isBlockCoverage":false},{"functionName":"formCombo","ranges":[{"startOffset":150666,"endOffset":150781,"count":0}],"isBlockCoverage":false},{"functionName":"formList","ranges":[{"startOffset":150785,"endOffset":150898,"count":0}],"isBlockCoverage":false},{"functionName":"formRadioButton","ranges":[{"startOffset":150902,"endOffset":151029,"count":0}],"isBlockCoverage":false},{"functionName":"formCheckbox","ranges":[{"startOffset":151033,"endOffset":151154,"count":0}],"isBlockCoverage":false},{"functionName":"_addToParent","ranges":[{"startOffset":151158,"endOffset":151447,"count":0}],"isBlockCoverage":false},{"functionName":"_fieldDict","ranges":[{"startOffset":151451,"endOffset":152108,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveType","ranges":[{"startOffset":152112,"endOffset":152679,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveFormat","ranges":[{"startOffset":152683,"endOffset":154119,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveColors","ranges":[{"startOffset":154123,"endOffset":154542,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveFlags","ranges":[{"startOffset":154546,"endOffset":154913,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveJustify","ranges":[{"startOffset":154917,"endOffset":155233,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveFont","ranges":[{"startOffset":155237,"endOffset":155692,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveStrings","ranges":[{"startOffset":155696,"endOffset":156818,"count":0}],"isBlockCoverage":false},{"functionName":"file","ranges":[{"startOffset":156850,"endOffset":159292,"count":0}],"isBlockCoverage":false},{"functionName":"isEqual","ranges":[{"startOffset":159296,"endOffset":159658,"count":0}],"isBlockCoverage":false},{"functionName":"initPDFA","ranges":[{"startOffset":159675,"endOffset":160022,"count":0}],"isBlockCoverage":false},{"functionName":"endSubset","ranges":[{"startOffset":160026,"endOffset":160106,"count":0}],"isBlockCoverage":false},{"functionName":"_addColorOutputIntent","ranges":[{"startOffset":160110,"endOffset":160692,"count":0}],"isBlockCoverage":false},{"functionName":"_getPdfaid","ranges":[{"startOffset":160696,"endOffset":160985,"count":0}],"isBlockCoverage":false},{"functionName":"_addPdfaMetadata","ranges":[{"startOffset":160989,"endOffset":161052,"count":0}],"isBlockCoverage":false},{"functionName":"initPDFUA","ranges":[{"startOffset":161073,"endOffset":161111,"count":0}],"isBlockCoverage":false},{"functionName":"endSubset","ranges":[{"startOffset":161115,"endOffset":161162,"count":0}],"isBlockCoverage":false},{"functionName":"_addPdfuaMetadata","ranges":[{"startOffset":161166,"endOffset":161231,"count":0}],"isBlockCoverage":false},{"functionName":"_getPdfuaid","ranges":[{"startOffset":161235,"endOffset":161449,"count":0}],"isBlockCoverage":false},{"functionName":"_importSubset","ranges":[{"startOffset":161476,"endOffset":161536,"count":0}],"isBlockCoverage":false},{"functionName":"initSubset","ranges":[{"startOffset":161540,"endOffset":161990,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":162109,"endOffset":162391,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":162392,"endOffset":162486,"count":0}],"isBlockCoverage":false},{"functionName":"deepMerge","ranges":[{"startOffset":162487,"endOffset":162984,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":162985,"endOffset":163190,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedDefaultStyle","ranges":[{"startOffset":163192,"endOffset":163945,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedRowStyle","ranges":[{"startOffset":163946,"endOffset":164937,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedColumnStyle","ranges":[{"startOffset":164938,"endOffset":165868,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlignment","ranges":[{"startOffset":165869,"endOffset":166003,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTable","ranges":[{"startOffset":166005,"endOffset":167495,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeText","ranges":[{"startOffset":167496,"endOffset":167581,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeCell","ranges":[{"startOffset":167582,"endOffset":169839,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeRow","ranges":[{"startOffset":169840,"endOffset":170434,"count":0}],"isBlockCoverage":false},{"functionName":"ensure","ranges":[{"startOffset":170436,"endOffset":170660,"count":0}],"isBlockCoverage":false},{"functionName":"ensureColumnWidths","ranges":[{"startOffset":170661,"endOffset":171796,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":171797,"endOffset":173398,"count":0}],"isBlockCoverage":false},{"functionName":"measureCell","ranges":[{"startOffset":173399,"endOffset":175510,"count":0}],"isBlockCoverage":false},{"functionName":"computeBounds","ranges":[{"startOffset":175511,"endOffset":177009,"count":0}],"isBlockCoverage":false},{"functionName":"accommodateTable","ranges":[{"startOffset":177011,"endOffset":177500,"count":0}],"isBlockCoverage":false},{"functionName":"accommodateCleanup","ranges":[{"startOffset":177501,"endOffset":177584,"count":0}],"isBlockCoverage":false},{"functionName":"accessibleRow","ranges":[{"startOffset":177585,"endOffset":177865,"count":0}],"isBlockCoverage":false},{"functionName":"accessibleCell","ranges":[{"startOffset":177866,"endOffset":180374,"count":0}],"isBlockCoverage":false},{"functionName":"renderRow","ranges":[{"startOffset":180376,"endOffset":180640,"count":0}],"isBlockCoverage":false},{"functionName":"renderCell","ranges":[{"startOffset":180641,"endOffset":181381,"count":0}],"isBlockCoverage":false},{"functionName":"renderCellText","ranges":[{"startOffset":181382,"endOffset":183019,"count":0}],"isBlockCoverage":false},{"functionName":"renderBorder","ranges":[{"startOffset":183020,"endOffset":184070,"count":0}],"isBlockCoverage":false},{"functionName":"PDFTable","ranges":[{"startOffset":184091,"endOffset":184415,"count":0}],"isBlockCoverage":false},{"functionName":"row","ranges":[{"startOffset":184418,"endOffset":185067,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":185070,"endOffset":185214,"count":0}],"isBlockCoverage":false},{"functionName":"initTables","ranges":[{"startOffset":185239,"endOffset":185283,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":185287,"endOffset":185341,"count":0}],"isBlockCoverage":false},{"functionName":"PDFMetadata","ranges":[{"startOffset":185368,"endOffset":185617,"count":0}],"isBlockCoverage":false},{"functionName":"_closeTags","ranges":[{"startOffset":185620,"endOffset":185775,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":185778,"endOffset":185923,"count":0}],"isBlockCoverage":false},{"functionName":"getXML","ranges":[{"startOffset":185926,"endOffset":185967,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":185970,"endOffset":186021,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":186024,"endOffset":186102,"count":0}],"isBlockCoverage":false},{"functionName":"initMetadata","ranges":[{"startOffset":186130,"endOffset":186189,"count":0}],"isBlockCoverage":false},{"functionName":"appendXML","ranges":[{"startOffset":186193,"endOffset":186269,"count":0}],"isBlockCoverage":false},{"functionName":"_addInfo","ranges":[{"startOffset":186273,"endOffset":188075,"count":0}],"isBlockCoverage":false},{"functionName":"endMetadata","ranges":[{"startOffset":188079,"endOffset":188517,"count":0}],"isBlockCoverage":false},{"functionName":"PDFDocument","ranges":[{"startOffset":188568,"endOffset":190528,"count":0}],"isBlockCoverage":false},{"functionName":"addPage","ranges":[{"startOffset":190531,"endOffset":191094,"count":0}],"isBlockCoverage":false},{"functionName":"continueOnNewPage","ranges":[{"startOffset":191097,"endOffset":191294,"count":0}],"isBlockCoverage":false},{"functionName":"bufferedPageRange","ranges":[{"startOffset":191297,"endOffset":191415,"count":0}],"isBlockCoverage":false},{"functionName":"switchToPage","ranges":[{"startOffset":191418,"endOffset":191724,"count":0}],"isBlockCoverage":false},{"functionName":"flushPages","ranges":[{"startOffset":191727,"endOffset":191939,"count":0}],"isBlockCoverage":false},{"functionName":"addNamedDestination","ranges":[{"startOffset":191942,"endOffset":192250,"count":0}],"isBlockCoverage":false},{"functionName":"addNamedEmbeddedFile","ranges":[{"startOffset":192253,"endOffset":192509,"count":0}],"isBlockCoverage":false},{"functionName":"addNamedJavaScript","ranges":[{"startOffset":192512,"endOffset":192798,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":192801,"endOffset":192955,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":192958,"endOffset":192968,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":192971,"endOffset":193132,"count":0}],"isBlockCoverage":false},{"functionName":"addContent","ranges":[{"startOffset":193135,"endOffset":193201,"count":0}],"isBlockCoverage":false},{"functionName":"_refEnd","ranges":[{"startOffset":193204,"endOffset":193371,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":193374,"endOffset":194305,"count":0}],"isBlockCoverage":false},{"functionName":"_finalize","ranges":[{"startOffset":194308,"endOffset":195026,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":195029,"endOffset":195080,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":195097,"endOffset":195160,"count":13}],"isBlockCoverage":true}]},{"scriptId":"794","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"795","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"796","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"797","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"798","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"799","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"800","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"801","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"802","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1668,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":1615,"count":1},{"startOffset":945,"endOffset":1613,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1622,"endOffset":1665,"count":1}],"isBlockCoverage":true}]},{"scriptId":"803","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23629,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":276,"count":1},{"startOffset":121,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":283,"endOffset":23626,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405,"endOffset":23595,"count":1},{"startOffset":536,"endOffset":552,"count":0},{"startOffset":554,"endOffset":595,"count":0},{"startOffset":680,"endOffset":694,"count":0},{"startOffset":696,"endOffset":735,"count":0},{"startOffset":965,"endOffset":997,"count":0},{"startOffset":998,"endOffset":1016,"count":0},{"startOffset":1018,"endOffset":1061,"count":0},{"startOffset":1123,"endOffset":1155,"count":0},{"startOffset":1156,"endOffset":1172,"count":0},{"startOffset":1174,"endOffset":1215,"count":0},{"startOffset":1284,"endOffset":1316,"count":0},{"startOffset":1318,"endOffset":1408,"count":0},{"startOffset":2350,"endOffset":2604,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoSecureRandomInt","ranges":[{"startOffset":1593,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2354,"endOffset":2601,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2842,"endOffset":6478,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":3472,"endOffset":4238,"count":270},{"startOffset":3627,"endOffset":3694,"count":47},{"startOffset":3796,"endOffset":3825,"count":10},{"startOffset":3827,"endOffset":3990,"count":260}],"isBlockCoverage":true},{"functionName":"subtype.init","ranges":[{"startOffset":3865,"endOffset":3970,"count":215}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":4636,"endOffset":4805,"count":215}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":5245,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"mixIn","ranges":[{"startOffset":5622,"endOffset":6102,"count":47},{"startOffset":5700,"endOffset":5883,"count":153},{"startOffset":6009,"endOffset":6087,"count":2}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":6373,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":7304,"endOffset":7564,"count":6},{"startOffset":7373,"endOffset":7378,"count":0},{"startOffset":7421,"endOffset":7480,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":8056,"endOffset":8141,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":8477,"endOffset":9500,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":9665,"endOffset":9950,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":10189,"endOffset":10337,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":10740,"endOffset":10976,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":11511,"endOffset":12017,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12380,"endOffset":12766,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":13246,"endOffset":13701,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":14079,"endOffset":14472,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":14941,"endOffset":15174,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":15544,"endOffset":15648,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":16229,"endOffset":16367,"count":0}],"isBlockCoverage":false},{"functionName":"_append","ranges":[{"startOffset":16759,"endOffset":17073,"count":0}],"isBlockCoverage":false},{"functionName":"_process","ranges":[{"startOffset":17652,"endOffset":19228,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":19473,"endOffset":19620,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":20297,"endOffset":20471,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":20646,"endOffset":20835,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":21199,"endOffset":21417,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":21959,"endOffset":22246,"count":0}],"isBlockCoverage":false},{"functionName":"_createHelper","ranges":[{"startOffset":22711,"endOffset":22867,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22751,"endOffset":22855,"count":0}],"isBlockCoverage":false},{"functionName":"_createHmacHelper","ranges":[{"startOffset":23319,"endOffset":23488,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23359,"endOffset":23476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/x64-core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8888,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":8885,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":8858,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":977,"endOffset":1070,"count":209}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":7152,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"toX32","ranges":[{"startOffset":7731,"endOffset":8202,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":8447,"endOffset":8846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/lib-typedarrays.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":2225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":2184,"count":1},{"startOffset":431,"endOffset":456,"count":0}],"isBlockCoverage":true},{"functionName":"WordArray.init","ranges":[{"startOffset":722,"endOffset":2143,"count":6},{"startOffset":831,"endOffset":897,"count":0},{"startOffset":1418,"endOffset":1537,"count":0},{"startOffset":1616,"endOffset":2033,"count":0}],"isBlockCoverage":true}]},{"scriptId":"806","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/enc-utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4086,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":4083,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":4046,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":965,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1813,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":2668,"endOffset":3147,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3527,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"swapEndian","ranges":[{"startOffset":3935,"endOffset":4043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/enc-base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4081,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":4078,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":4040,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":942,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2507,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"parseLoop","ranges":[{"startOffset":3456,"endOffset":4037,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/enc-base64url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4605,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":4602,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":4561,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":1033,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2805,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"parseLoop","ranges":[{"startOffset":3953,"endOffset":4558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9418,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":9415,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":9380,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":584,"endOffset":722,"count":1},{"startOffset":636,"endOffset":715,"count":64}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":837,"endOffset":1006,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":1035,"endOffset":6297,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":6322,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":7837,"endOffset":7986,"count":0}],"isBlockCoverage":false},{"functionName":"FF","ranges":[{"startOffset":8002,"endOffset":8145,"count":0}],"isBlockCoverage":false},{"functionName":"GG","ranges":[{"startOffset":8152,"endOffset":8295,"count":0}],"isBlockCoverage":false},{"functionName":"HH","ranges":[{"startOffset":8302,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"II","ranges":[{"startOffset":8443,"endOffset":8580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4063,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":4060,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":4028,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":661,"endOffset":859,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":888,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":2345,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":3063,"endOffset":3212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha256.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5538,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":5535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":5497,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":627,"endOffset":1408,"count":1},{"startOffset":1102,"endOffset":1401,"count":310},{"startOffset":1133,"endOffset":1371,"count":64},{"startOffset":1168,"endOffset":1260,"count":8}],"isBlockCoverage":true},{"functionName":"isPrime","ranges":[{"startOffset":650,"endOffset":918,"count":310},{"startOffset":772,"endOffset":880,"count":1118},{"startOffset":810,"endOffset":865,"count":246},{"startOffset":880,"endOffset":917,"count":64}],"isBlockCoverage":true},{"functionName":"getFractionalBits","ranges":[{"startOffset":929,"endOffset":1026,"count":72}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":1575,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":1686,"endOffset":3775,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":3800,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":4518,"endOffset":4667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha224.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1915,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":338,"count":1},{"startOffset":166,"endOffset":336,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":345,"endOffset":1912,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":370,"endOffset":1878,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":666,"endOffset":883,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":908,"endOffset":1048,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha512.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13469,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":342,"count":1},{"startOffset":168,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":349,"endOffset":13466,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":374,"endOffset":13432,"count":1}],"isBlockCoverage":true},{"functionName":"X64Word_create","ranges":[{"startOffset":613,"endOffset":705,"count":160}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4356,"endOffset":4465,"count":1},{"startOffset":4408,"endOffset":4458,"count":80}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":4590,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":5113,"endOffset":11570,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":11595,"endOffset":12404,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":12423,"endOffset":12572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha384.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":375,"count":1},{"startOffset":189,"endOffset":373,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":382,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":407,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":737,"endOffset":1231,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":1256,"endOffset":1397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/sha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10645,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":342,"count":1},{"startOffset":168,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":349,"endOffset":10642,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":374,"endOffset":10606,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":752,"endOffset":2292,"count":1},{"startOffset":872,"endOffset":1075,"count":24},{"startOffset":1153,"endOffset":1295,"count":5},{"startOffset":1196,"endOffset":1284,"count":25},{"startOffset":1397,"endOffset":2285,"count":24},{"startOffset":1519,"endOffset":2187,"count":168},{"startOffset":1555,"endOffset":1888,"count":86},{"startOffset":1653,"endOffset":1740,"count":73},{"startOffset":1740,"endOffset":1869,"count":13},{"startOffset":1962,"endOffset":2113,"count":85},{"startOffset":2113,"endOffset":2172,"count":83}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2367,"endOffset":2476,"count":1},{"startOffset":2419,"endOffset":2469,"count":25}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":2940,"endOffset":3185,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":3214,"endOffset":7722,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":7747,"endOffset":9501,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9520,"endOffset":9790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"816","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/ripemd160.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9386,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":9383,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1645,"endOffset":9342,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":3767,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":3927,"endOffset":6673,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":6698,"endOffset":7864,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":7883,"endOffset":8032,"count":0}],"isBlockCoverage":false},{"functionName":"f1","ranges":[{"startOffset":8049,"endOffset":8114,"count":0}],"isBlockCoverage":false},{"functionName":"f2","ranges":[{"startOffset":8121,"endOffset":8192,"count":0}],"isBlockCoverage":false},{"functionName":"f3","ranges":[{"startOffset":8199,"endOffset":8268,"count":0}],"isBlockCoverage":false},{"functionName":"f4","ranges":[{"startOffset":8275,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"f5","ranges":[{"startOffset":8357,"endOffset":8426,"count":0}],"isBlockCoverage":false},{"functionName":"rotl","ranges":[{"startOffset":8433,"endOffset":8499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/hmac.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":298,"count":1},{"startOffset":138,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":330,"endOffset":3973,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":953,"endOffset":2207,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":2384,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2940,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":3633,"endOffset":3961,"count":0}],"isBlockCoverage":false}]},{"scriptId":"818","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4558,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":367,"count":1},{"startOffset":185,"endOffset":365,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":374,"endOffset":4555,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":399,"endOffset":4521,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1705,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"compute","ranges":[{"startOffset":2177,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"C.PBKDF2","ranges":[{"startOffset":4418,"endOffset":4517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"819","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/evpkdf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3993,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":363,"count":1},{"startOffset":183,"endOffset":361,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":370,"endOffset":3990,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":395,"endOffset":3956,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1732,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"compute","ranges":[{"startOffset":2180,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"C.EvpKDF","ranges":[{"startOffset":3853,"endOffset":3952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/cipher-core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29875,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":338,"count":1},{"startOffset":166,"endOffset":336,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":345,"endOffset":29872,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":431,"endOffset":29864,"count":1}],"isBlockCoverage":true},{"functionName":"createEncryptor","ranges":[{"startOffset":1917,"endOffset":2014,"count":0}],"isBlockCoverage":false},{"functionName":"createDecryptor","ranges":[{"startOffset":2509,"endOffset":2606,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":3123,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3606,"endOffset":3795,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":4218,"endOffset":4393,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":4986,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":6607,"count":1}],"isBlockCoverage":true},{"functionName":"selectCipherStrategy","ranges":[{"startOffset":5889,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoJS.lib.Cipher.C_lib.Cipher.BufferedBlockAlgorithm.extend._createHelper","ranges":[{"startOffset":6151,"endOffset":6595,"count":8}],"isBlockCoverage":true},{"functionName":"encrypt","ranges":[{"startOffset":6227,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":6407,"endOffset":6560,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":6886,"endOffset":7058,"count":0}],"isBlockCoverage":false},{"functionName":"createEncryptor","ranges":[{"startOffset":7671,"endOffset":7760,"count":0}],"isBlockCoverage":false},{"functionName":"createDecryptor","ranges":[{"startOffset":8134,"endOffset":8223,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":8555,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8747,"endOffset":11454,"count":1}],"isBlockCoverage":true},{"functionName":"processBlock","ranges":[{"startOffset":9346,"endOffset":9806,"count":0}],"isBlockCoverage":false},{"functionName":"processBlock","ranges":[{"startOffset":10298,"endOffset":10861,"count":0}],"isBlockCoverage":false},{"functionName":"xorBlock","ranges":[{"startOffset":10885,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":12008,"endOffset":12722,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":13051,"endOffset":13294,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":13888,"endOffset":14829,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":14858,"endOffset":14948,"count":0}],"isBlockCoverage":false},{"functionName":"_doFinalize","ranges":[{"startOffset":14973,"endOffset":15712,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":17316,"endOffset":17391,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":17985,"endOffset":18085,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":18722,"endOffset":19192,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":19627,"endOffset":20310,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":21693,"endOffset":22467,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":23312,"endOffset":23706,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":24339,"endOffset":24560,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":25585,"endOffset":26347,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":27710,"endOffset":28328,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":29197,"endOffset":29852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/mode-cfb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2115,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":2112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":442,"endOffset":2076,"count":1}],"isBlockCoverage":true},{"functionName":"processBlock","ranges":[{"startOffset":568,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"processBlock","ranges":[{"startOffset":1006,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeystreamAndEncrypt","ranges":[{"startOffset":1487,"endOffset":2055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/mode-ctr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1467,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1464,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"processBlock","ranges":[{"startOffset":576,"endOffset":1365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/mode-ctr-gladman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2335,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":2332,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":564,"endOffset":2287,"count":1}],"isBlockCoverage":true},{"functionName":"incWord","ranges":[{"startOffset":642,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"incCounter","ranges":[{"startOffset":1184,"endOffset":1420,"count":0}],"isBlockCoverage":false},{"functionName":"processBlock","ranges":[{"startOffset":1509,"endOffset":2210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/mode-ofb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1330,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1327,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":442,"endOffset":1291,"count":1}],"isBlockCoverage":true},{"functionName":"processBlock","ranges":[{"startOffset":584,"endOffset":1228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"825","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/mode-ecb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":893,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":446,"endOffset":854,"count":1}],"isBlockCoverage":true},{"functionName":"processBlock","ranges":[{"startOffset":572,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"processBlock","ranges":[{"startOffset":732,"endOffset":824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pad-ansix923.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":458,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":999,"endOffset":1222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"827","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pad-iso10126.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1115,"count":1}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":457,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":852,"endOffset":1075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"828","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pad-iso97971.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":918,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":915,"count":1}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":462,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":695,"endOffset":875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pad-zeropadding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1110,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1107,"count":1}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":455,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":708,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/pad-nopadding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":554,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":551,"count":1}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":455,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"unpad","ranges":[{"startOffset":490,"endOffset":510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"831","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/format-hex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":348,"count":1},{"startOffset":171,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":380,"endOffset":1781,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":1091,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1624,"endOffset":1770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/aes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8649,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":8646,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":8615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":948,"endOffset":2530,"count":1},{"startOffset":1055,"endOffset":1206,"count":256},{"startOffset":1083,"endOffset":1195,"count":128},{"startOffset":1313,"endOffset":2523,"count":256},{"startOffset":2368,"endOffset":2413,"count":1},{"startOffset":2413,"endOffset":2512,"count":255}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":2775,"endOffset":5302,"count":0}],"isBlockCoverage":false},{"functionName":"encryptBlock","ranges":[{"startOffset":5328,"endOffset":5474,"count":0}],"isBlockCoverage":false},{"functionName":"decryptBlock","ranges":[{"startOffset":5500,"endOffset":5975,"count":0}],"isBlockCoverage":false},{"functionName":"_doCryptBlock","ranges":[{"startOffset":6002,"endOffset":8275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"833","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/tripledes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24878,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":24875,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":24838,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":18369,"endOffset":20250,"count":0}],"isBlockCoverage":false},{"functionName":"encryptBlock","ranges":[{"startOffset":20276,"endOffset":20368,"count":0}],"isBlockCoverage":false},{"functionName":"decryptBlock","ranges":[{"startOffset":20394,"endOffset":20489,"count":0}],"isBlockCoverage":false},{"functionName":"_doCryptBlock","ranges":[{"startOffset":20516,"endOffset":22076,"count":0}],"isBlockCoverage":false},{"functionName":"exchangeLR","ranges":[{"startOffset":22221,"endOffset":22397,"count":0}],"isBlockCoverage":false},{"functionName":"exchangeRL","ranges":[{"startOffset":22404,"endOffset":22580,"count":0}],"isBlockCoverage":false},{"functionName":"_doReset","ranges":[{"startOffset":23024,"endOffset":24009,"count":0}],"isBlockCoverage":false},{"functionName":"encryptBlock","ranges":[{"startOffset":24035,"endOffset":24215,"count":0}],"isBlockCoverage":false},{"functionName":"decryptBlock","ranges":[{"startOffset":24241,"endOffset":24421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"834","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/rc4.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3569,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":3566,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":3535,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":755,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":1578,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeystreamWord","ranges":[{"startOffset":1735,"endOffset":2336,"count":0}],"isBlockCoverage":false},{"functionName":"_doReset","ranges":[{"startOffset":3000,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"835","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/rabbit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6678,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":6675,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":6641,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":843,"endOffset":3330,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":3359,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"nextState","ranges":[{"startOffset":4166,"endOffset":6324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"836","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/rabbit-legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6714,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":6711,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":6671,"count":1}],"isBlockCoverage":true},{"functionName":"_doReset","ranges":[{"startOffset":1079,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"_doProcessBlock","ranges":[{"startOffset":3365,"endOffset":4102,"count":0}],"isBlockCoverage":false},{"functionName":"nextState","ranges":[{"startOffset":4172,"endOffset":6330,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/crypto-js/blowfish.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21076,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2,"endOffset":449,"count":1},{"startOffset":235,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":21073,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":21037,"count":1}],"isBlockCoverage":true},{"functionName":"F","ranges":[{"startOffset":16721,"endOffset":17015,"count":0}],"isBlockCoverage":false},{"functionName":"BlowFish_Encrypt","ranges":[{"startOffset":17022,"endOffset":17500,"count":0}],"isBlockCoverage":false},{"functionName":"BlowFish_Decrypt","ranges":[{"startOffset":17507,"endOffset":17985,"count":0}],"isBlockCoverage":false},{"functionName":"BlowFishInit","ranges":[{"startOffset":18311,"endOffset":19584,"count":0}],"isBlockCoverage":false},{"functionName":"_doReset","ranges":[{"startOffset":19723,"endOffset":20194,"count":0}],"isBlockCoverage":false},{"functionName":"encryptBlock","ranges":[{"startOffset":20220,"endOffset":20409,"count":0}],"isBlockCoverage":false},{"functionName":"decryptBlock","ranges":[{"startOffset":20435,"endOffset":20624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/main.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":566980,"count":1},{"startOffset":181268,"endOffset":181344,"count":64},{"startOffset":206014,"endOffset":206239,"count":127},{"startOffset":206105,"endOffset":206174,"count":10},{"startOffset":206123,"endOffset":206174,"count":20},{"startOffset":206174,"endOffset":206237,"count":117},{"startOffset":228341,"endOffset":228475,"count":99},{"startOffset":228591,"endOffset":228809,"count":182},{"startOffset":228702,"endOffset":228748,"count":25},{"startOffset":451255,"endOffset":451470,"count":5}],"isBlockCoverage":true},{"functionName":"$parcel$exportWildcard","ranges":[{"startOffset":618,"endOffset":995,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":696,"endOffset":975,"count":7},{"startOffset":814,"endOffset":835,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":911,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"$parcel$export","ranges":[{"startOffset":997,"endOffset":1123,"count":7}],"isBlockCoverage":true},{"functionName":"$parcel$interopDefault","ranges":[{"startOffset":1125,"endOffset":1207,"count":9},{"startOffset":1189,"endOffset":1200,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1511,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1622,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1736,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"$59aa4ed98453e1d4$export$36b2f24e97d43be","ranges":[{"startOffset":1882,"endOffset":1991,"count":5}],"isBlockCoverage":true},{"functionName":"$59aa4ed98453e1d4$export$185802fd694ee1f5","ranges":[{"startOffset":1992,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"$59aa4ed98453e1d4$export$5157e7780d44cc36","ranges":[{"startOffset":2522,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2737,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2837,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"$f39726ff40304956$export$fa5499edb1ab414a","ranges":[{"startOffset":2889,"endOffset":3134,"count":0}],"isBlockCoverage":false},{"functionName":"$f39726ff40304956$export$3ce6949f20cea765","ranges":[{"startOffset":3135,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"$3bda6911913b43f0$export$69a3209f1a06c04d","ranges":[{"startOffset":3680,"endOffset":4691,"count":17},{"startOffset":3782,"endOffset":4030,"count":13},{"startOffset":4030,"endOffset":4689,"count":4}],"isBlockCoverage":true},{"functionName":"descriptor.get","ranges":[{"startOffset":3843,"endOffset":4023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4146,"endOffset":4672,"count":0}],"isBlockCoverage":false},{"functionName":"subHeaderCount","ranges":[{"startOffset":6663,"endOffset":6705,"count":0}],"isBlockCoverage":false},{"functionName":"segCount","ranges":[{"startOffset":7084,"endOffset":7106,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.4.glyphIndexArray","ranges":[{"startOffset":7786,"endOffset":7824,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.metrics","ranges":[{"startOffset":12548,"endOffset":12582,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.bearings","ranges":[{"startOffset":12658,"endOffset":12718,"count":0}],"isBlockCoverage":false},{"functionName":"$e2613b812f052cbe$export$badc544e0651b6b1","ranges":[{"startOffset":13743,"endOffset":14060,"count":0}],"isBlockCoverage":false},{"functionName":"$e2613b812f052cbe$export$1dceb3c14ed68bee","ranges":[{"startOffset":19676,"endOffset":20841,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.string.$elh9A$restructure.Pointer.type","ranges":[{"startOffset":30837,"endOffset":30930,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":30979,"endOffset":31009,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":31325,"endOffset":31348,"count":0}],"isBlockCoverage":false},{"functionName":"$51a9f4feb3a3b2b1$var$NameTable.process","ranges":[{"startOffset":32619,"endOffset":33595,"count":0}],"isBlockCoverage":false},{"functionName":"$51a9f4feb3a3b2b1$var$NameTable.preEncode","ranges":[{"startOffset":33641,"endOffset":34527,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.4.map","ranges":[{"startOffset":39530,"endOffset":39558,"count":0}],"isBlockCoverage":false},{"functionName":"$83c4155666d50c37$var$loca.process","ranges":[{"startOffset":40511,"endOffset":40688,"count":0}],"isBlockCoverage":false},{"functionName":"$83c4155666d50c37$var$loca.preEncode","ranges":[{"startOffset":40729,"endOffset":40917,"count":0}],"isBlockCoverage":false},{"functionName":"getCFFVersion","ranges":[{"startOffset":41440,"endOffset":41557,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":41562,"endOffset":42895,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":42900,"endOffset":43751,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":43756,"endOffset":44916,"count":0}],"isBlockCoverage":false},{"functionName":"$9eaea3754914a290$export$2e2bcd8739ae039","ranges":[{"startOffset":44921,"endOffset":44971,"count":10}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":45375,"endOffset":46300,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":46312,"endOffset":46864,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":46876,"endOffset":48574,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOperands","ranges":[{"startOffset":48632,"endOffset":49177,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOperands","ranges":[{"startOffset":49182,"endOffset":49718,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":49723,"endOffset":50974,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":50979,"endOffset":51819,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":51824,"endOffset":52813,"count":0}],"isBlockCoverage":false},{"functionName":"$efe622f40a9c35bd$export$2e2bcd8739ae039","ranges":[{"startOffset":52818,"endOffset":53067,"count":4},{"startOffset":52921,"endOffset":53061,"count":64},{"startOffset":52969,"endOffset":53001,"count":37},{"startOffset":53002,"endOffset":53012,"count":27}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":53162,"endOffset":53332,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":53337,"endOffset":53888,"count":0}],"isBlockCoverage":false},{"functionName":"$4aa1b0749c2770f8$export$2e2bcd8739ae039","ranges":[{"startOffset":53893,"endOffset":54026,"count":11},{"startOffset":53960,"endOffset":53984,"count":10}],"isBlockCoverage":true},{"functionName":"valueOf","ranges":[{"startOffset":54067,"endOffset":54109,"count":0}],"isBlockCoverage":false},{"functionName":"$4aa1b0749c2770f8$var$Ptr","ranges":[{"startOffset":54114,"endOffset":54193,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":54253,"endOffset":54512,"count":0}],"isBlockCoverage":false},{"functionName":"$b6dd765146ad212a$export$df0008c6ff2da22a","ranges":[{"startOffset":80503,"endOffset":81170,"count":4}],"isBlockCoverage":true},{"functionName":"$elh9A$restructure.Struct.markFilteringSet","ranges":[{"startOffset":80982,"endOffset":81020,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.input","ranges":[{"startOffset":83371,"endOffset":83392,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.classes","ranges":[{"startOffset":83904,"endOffset":83925,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.input","ranges":[{"startOffset":86010,"endOffset":86036,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.shortDeltas","ranges":[{"startOffset":89412,"endOffset":89441,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.regionDeltas","ranges":[{"startOffset":89516,"endOffset":89573,"count":0}],"isBlockCoverage":false},{"functionName":"deltas","ranges":[{"startOffset":89588,"endOffset":89629,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":92746,"endOffset":92930,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":92935,"endOffset":93002,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":93007,"endOffset":93189,"count":0}],"isBlockCoverage":false},{"functionName":"$5b547cf9e5da519b$var$PredefinedOp","ranges":[{"startOffset":93194,"endOffset":93303,"count":2}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":93393,"endOffset":93478,"count":0}],"isBlockCoverage":false},{"functionName":"$5b547cf9e5da519b$var$CFFEncodingVersion","ranges":[{"startOffset":93483,"endOffset":93527,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":94709,"endOffset":95093,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.0.glyphs","ranges":[{"startOffset":95289,"endOffset":95325,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.1.ranges","ranges":[{"startOffset":95426,"endOffset":95462,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.2.ranges","ranges":[{"startOffset":95563,"endOffset":95599,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.0.fds","ranges":[{"startOffset":96431,"endOffset":96463,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97038,"endOffset":97217,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":97222,"endOffset":97412,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":97417,"endOffset":97627,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":105012,"endOffset":105092,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":105097,"endOffset":105603,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":105608,"endOffset":105895,"count":0}],"isBlockCoverage":false},{"functionName":"get postscriptName","ranges":[{"startOffset":105900,"endOffset":106005,"count":0}],"isBlockCoverage":false},{"functionName":"get fullName","ranges":[{"startOffset":106010,"endOffset":106083,"count":0}],"isBlockCoverage":false},{"functionName":"get familyName","ranges":[{"startOffset":106088,"endOffset":106165,"count":0}],"isBlockCoverage":false},{"functionName":"getCharString","ranges":[{"startOffset":106170,"endOffset":106343,"count":0}],"isBlockCoverage":false},{"functionName":"getGlyphName","ranges":[{"startOffset":106348,"endOffset":107199,"count":0}],"isBlockCoverage":false},{"functionName":"fdForGlyph","ranges":[{"startOffset":107204,"endOffset":108005,"count":0}],"isBlockCoverage":false},{"functionName":"privateDictForGlyph","ranges":[{"startOffset":108010,"endOffset":108347,"count":0}],"isBlockCoverage":false},{"functionName":"$f717432b360040c7$var$CFFFont","ranges":[{"startOffset":108352,"endOffset":108431,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.1.offsetArray","ranges":[{"startOffset":112895,"endOffset":112954,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.3.offsetArray","ranges":[{"startOffset":113178,"endOffset":113237,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.4.glyphArray","ranges":[{"startOffset":113388,"endOffset":113408,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.imageOffsets","ranges":[{"startOffset":115338,"endOffset":115377,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":126273,"endOffset":126287,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":126464,"endOffset":126478,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":126655,"endOffset":126669,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":126846,"endOffset":126860,"count":0}],"isBlockCoverage":false},{"functionName":"buildStruct","ranges":[{"startOffset":126917,"endOffset":127344,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":127349,"endOffset":127424,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":127429,"endOffset":127570,"count":0}],"isBlockCoverage":false},{"functionName":"$b687332511a4da75$var$ValueRecord","ranges":[{"startOffset":127575,"endOffset":127638,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":129868,"endOffset":129892,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130186,"endOffset":130217,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.components","ranges":[{"startOffset":136470,"endOffset":136490,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":143548,"endOffset":143887,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":143892,"endOffset":143997,"count":0}],"isBlockCoverage":false},{"functionName":"$a5875b80d6087f61$var$VariableSizeNumber","ranges":[{"startOffset":144002,"endOffset":144053,"count":1}],"isBlockCoverage":true},{"functionName":"$elh9A$restructure.Struct.entry","ranges":[{"startOffset":144185,"endOffset":144232,"count":0}],"isBlockCoverage":false},{"functionName":"outerIndex","ranges":[{"startOffset":144251,"endOffset":144302,"count":0}],"isBlockCoverage":false},{"functionName":"innerIndex","ranges":[{"startOffset":144320,"endOffset":144381,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.widths","ranges":[{"startOffset":146999,"endOffset":147034,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":147878,"endOffset":147934,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":148019,"endOffset":148069,"count":0}],"isBlockCoverage":false},{"functionName":"len","ranges":[{"startOffset":148080,"endOffset":148169,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.3.kernIndex","ranges":[{"startOffset":149742,"endOffset":149783,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.0.padding","ranges":[{"startOffset":150414,"endOffset":150446,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.1.padding","ranges":[{"startOffset":151024,"endOffset":151056,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.metrics","ranges":[{"startOffset":155466,"endOffset":155500,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.bearings","ranges":[{"startOffset":155576,"endOffset":155636,"count":0}],"isBlockCoverage":false},{"functionName":"getItem","ranges":[{"startOffset":156426,"endOffset":156771,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":156776,"endOffset":156858,"count":0}],"isBlockCoverage":false},{"functionName":"$22801616bd931ca3$var$UnboundedArrayAccessor","ranges":[{"startOffset":156863,"endOffset":157052,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":157142,"endOffset":157264,"count":0}],"isBlockCoverage":false},{"functionName":"$22801616bd931ca3$export$c5af1eebc882e39a","ranges":[{"startOffset":157269,"endOffset":157317,"count":26}],"isBlockCoverage":true},{"functionName":"$22801616bd931ca3$export$8351f8c2ae2f103c","ranges":[{"startOffset":157368,"endOffset":159929,"count":11}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":157518,"endOffset":157636,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":157645,"endOffset":157753,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":157762,"endOffset":157890,"count":0}],"isBlockCoverage":false},{"functionName":"Shadow","ranges":[{"startOffset":157899,"endOffset":157957,"count":11}],"isBlockCoverage":true},{"functionName":"$elh9A$restructure.Struct.values.$elh9A$restructure.Pointer.type","ranges":[{"startOffset":158760,"endOffset":158795,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.2.segments","ranges":[{"startOffset":159330,"endOffset":159362,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.4.segments","ranges":[{"startOffset":159511,"endOffset":159543,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.VersionedStruct.6.segments","ranges":[{"startOffset":159686,"endOffset":159718,"count":0}],"isBlockCoverage":false},{"functionName":"$22801616bd931ca3$export$79f7d93d790934ba","ranges":[{"startOffset":159931,"endOffset":160866,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160354,"endOffset":160369,"count":0}],"isBlockCoverage":false},{"functionName":"$22801616bd931ca3$export$105027425199cc51","ranges":[{"startOffset":160867,"endOffset":162196,"count":1}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":161043,"endOffset":161087,"count":0}],"isBlockCoverage":false},{"functionName":"newState","ranges":[{"startOffset":161389,"endOffset":161485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161723,"endOffset":161738,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":163396,"endOffset":163462,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":164113,"endOffset":164172,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":164934,"endOffset":164990,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":165113,"endOffset":165169,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.coord","ranges":[{"startOffset":165277,"endOffset":165300,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.postscriptNameID","ranges":[{"startOffset":165384,"endOffset":165433,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":166135,"endOffset":166414,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":167149,"endOffset":167172,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.offsets","ranges":[{"startOffset":167207,"endOffset":167228,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.padding","ranges":[{"startOffset":169348,"endOffset":169386,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":170434,"endOffset":170454,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.padding","ranges":[{"startOffset":173247,"endOffset":173279,"count":0}],"isBlockCoverage":false},{"functionName":"$df50e1efe10a1247$var$Directory.process","ranges":[{"startOffset":179301,"endOffset":179423,"count":0}],"isBlockCoverage":false},{"functionName":"$df50e1efe10a1247$var$Directory.preEncode","ranges":[{"startOffset":179469,"endOffset":180339,"count":0}],"isBlockCoverage":false},{"functionName":"$66a5b9fb5318558a$export$2e0ae67339d5f1ac","ranges":[{"startOffset":180425,"endOffset":180749,"count":0}],"isBlockCoverage":false},{"functionName":"$66a5b9fb5318558a$export$d02631cccf789723","ranges":[{"startOffset":180750,"endOffset":180897,"count":0}],"isBlockCoverage":false},{"functionName":"$66a5b9fb5318558a$export$94fdf11bafc8de6b","ranges":[{"startOffset":181345,"endOffset":182214,"count":3},{"startOffset":181494,"endOffset":181588,"count":2},{"startOffset":181567,"endOffset":181582,"count":1},{"startOffset":181706,"endOffset":182194,"count":2698}],"isBlockCoverage":true},{"functionName":"findSubtable","ranges":[{"startOffset":182272,"endOffset":182529,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":182534,"endOffset":185304,"count":0}],"isBlockCoverage":false},{"functionName":"getVariationSelector","ranges":[{"startOffset":185309,"endOffset":186069,"count":0}],"isBlockCoverage":false},{"functionName":"getCharacterSet","ranges":[{"startOffset":186074,"endOffset":187485,"count":0}],"isBlockCoverage":false},{"functionName":"codePointsForGlyph","ranges":[{"startOffset":187490,"endOffset":189530,"count":0}],"isBlockCoverage":false},{"functionName":"$0d6e160064c86e50$export$2e2bcd8739ae039","ranges":[{"startOffset":189535,"endOffset":191072,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":191488,"endOffset":191784,"count":0}],"isBlockCoverage":false},{"functionName":"getKerning","ranges":[{"startOffset":191789,"endOffset":194068,"count":0}],"isBlockCoverage":false},{"functionName":"$4646d52c2a559cdb$export$2e2bcd8739ae039","ranges":[{"startOffset":194073,"endOffset":194128,"count":0}],"isBlockCoverage":false},{"functionName":"positionGlyphs","ranges":[{"startOffset":194187,"endOffset":194865,"count":0}],"isBlockCoverage":false},{"functionName":"positionCluster","ranges":[{"startOffset":194870,"endOffset":198536,"count":0}],"isBlockCoverage":false},{"functionName":"getCombiningClass","ranges":[{"startOffset":198541,"endOffset":201110,"count":0}],"isBlockCoverage":false},{"functionName":"$a57a26817cd35108$export$2e2bcd8739ae039","ranges":[{"startOffset":201115,"endOffset":201165,"count":0}],"isBlockCoverage":false},{"functionName":"get width","ranges":[{"startOffset":201331,"endOffset":201388,"count":0}],"isBlockCoverage":false},{"functionName":"get height","ranges":[{"startOffset":201459,"endOffset":201517,"count":0}],"isBlockCoverage":false},{"functionName":"addPoint","ranges":[{"startOffset":201522,"endOffset":201828,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":201833,"endOffset":201952,"count":0}],"isBlockCoverage":false},{"functionName":"$0e2da1c4ce69e8ad$export$2e2bcd8739ae039","ranges":[{"startOffset":201957,"endOffset":202487,"count":0}],"isBlockCoverage":false},{"functionName":"$e38a1a895f6aeb54$export$b32f0b5f69d65e51","ranges":[{"startOffset":206240,"endOffset":206360,"count":0}],"isBlockCoverage":false},{"functionName":"$e38a1a895f6aeb54$export$ce50e82f12a827a4","ranges":[{"startOffset":206361,"endOffset":206476,"count":0}],"isBlockCoverage":false},{"functionName":"$e38a1a895f6aeb54$export$e5cb25e204fb8450","ranges":[{"startOffset":206477,"endOffset":207295,"count":0}],"isBlockCoverage":false},{"functionName":"$e38a1a895f6aeb54$export$16fab0757cfc223d","ranges":[{"startOffset":207296,"endOffset":207723,"count":0}],"isBlockCoverage":false},{"functionName":"$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54","ranges":[{"startOffset":208334,"endOffset":208471,"count":0}],"isBlockCoverage":false},{"functionName":"get advanceWidth","ranges":[{"startOffset":208598,"endOffset":208741,"count":0}],"isBlockCoverage":false},{"functionName":"get advanceHeight","ranges":[{"startOffset":208815,"endOffset":208962,"count":0}],"isBlockCoverage":false},{"functionName":"get bbox","ranges":[{"startOffset":209048,"endOffset":209597,"count":0}],"isBlockCoverage":false},{"functionName":"$b19c79ec7a94fa39$export$2e2bcd8739ae039","ranges":[{"startOffset":209602,"endOffset":210947,"count":0}],"isBlockCoverage":false},{"functionName":"$9195cf1266c12ea5$export$2e2bcd8739ae039","ranges":[{"startOffset":211078,"endOffset":211776,"count":0}],"isBlockCoverage":false},{"functionName":"$2b7f887ebcb5888a$var$feature","ranges":[{"startOffset":220722,"endOffset":220853,"count":83}],"isBlockCoverage":true},{"functionName":"$2b7f887ebcb5888a$export$b813f7d2a1677c16","ranges":[{"startOffset":228810,"endOffset":229115,"count":0}],"isBlockCoverage":false},{"functionName":"$2b7f887ebcb5888a$var$mapFeatureStrings","ranges":[{"startOffset":229203,"endOffset":229659,"count":0}],"isBlockCoverage":false},{"functionName":"$2b7f887ebcb5888a$export$bd6df347a4f391c4","ranges":[{"startOffset":229660,"endOffset":230505,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":230566,"endOffset":232425,"count":0}],"isBlockCoverage":false},{"functionName":"glyphsForValue","ranges":[{"startOffset":232430,"endOffset":233488,"count":0}],"isBlockCoverage":false},{"functionName":"$f3d63ae925545400$export$2e2bcd8739ae039","ranges":[{"startOffset":233493,"endOffset":233546,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":234145,"endOffset":235725,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":235838,"endOffset":236652,"count":0}],"isBlockCoverage":false},{"functionName":"$860c6347bb941b91$export$2e2bcd8739ae039","ranges":[{"startOffset":236657,"endOffset":236826,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":238176,"endOffset":239242,"count":0}],"isBlockCoverage":false},{"functionName":"processSubtable","ranges":[{"startOffset":239247,"endOffset":239926,"count":0}],"isBlockCoverage":false},{"functionName":"getStateMachine","ranges":[{"startOffset":239931,"endOffset":240057,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessor","ranges":[{"startOffset":240062,"endOffset":240609,"count":0}],"isBlockCoverage":false},{"functionName":"processIndicRearragement","ranges":[{"startOffset":240614,"endOffset":240968,"count":0}],"isBlockCoverage":false},{"functionName":"processContextualSubstitution","ranges":[{"startOffset":240973,"endOffset":241979,"count":0}],"isBlockCoverage":false},{"functionName":"processLigature","ranges":[{"startOffset":241984,"endOffset":243771,"count":0}],"isBlockCoverage":false},{"functionName":"processNoncontextualSubstitutions","ranges":[{"startOffset":243776,"endOffset":244245,"count":0}],"isBlockCoverage":false},{"functionName":"_insertGlyphs","ranges":[{"startOffset":244250,"endOffset":244626,"count":0}],"isBlockCoverage":false},{"functionName":"processGlyphInsertion","ranges":[{"startOffset":244631,"endOffset":245418,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedFeatures","ranges":[{"startOffset":245423,"endOffset":245679,"count":0}],"isBlockCoverage":false},{"functionName":"generateInputs","ranges":[{"startOffset":245684,"endOffset":245811,"count":0}],"isBlockCoverage":false},{"functionName":"generateInputCache","ranges":[{"startOffset":245816,"endOffset":246102,"count":0}],"isBlockCoverage":false},{"functionName":"generateInputsForSubtable","ranges":[{"startOffset":246107,"endOffset":248089,"count":0}],"isBlockCoverage":false},{"functionName":"$99be642f82069918$export$2e2bcd8739ae039","ranges":[{"startOffset":248094,"endOffset":248621,"count":0}],"isBlockCoverage":false},{"functionName":"$99be642f82069918$var$swap","ranges":[{"startOffset":248948,"endOffset":249325,"count":0}],"isBlockCoverage":false},{"functionName":"$99be642f82069918$var$reorderGlyphs","ranges":[{"startOffset":249326,"endOffset":252630,"count":0}],"isBlockCoverage":false},{"functionName":"substitute","ranges":[{"startOffset":252686,"endOffset":253045,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableFeatures","ranges":[{"startOffset":253050,"endOffset":253197,"count":0}],"isBlockCoverage":false},{"functionName":"stringsForGlyph","ranges":[{"startOffset":253202,"endOffset":253431,"count":0}],"isBlockCoverage":false},{"functionName":"_addStrings","ranges":[{"startOffset":253436,"endOffset":253812,"count":0}],"isBlockCoverage":false},{"functionName":"$860fcbd64bc12fbc$export$2e2bcd8739ae039","ranges":[{"startOffset":253817,"endOffset":253992,"count":0}],"isBlockCoverage":false},{"functionName":"_addFeatures","ranges":[{"startOffset":254163,"endOffset":254529,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":254580,"endOffset":255036,"count":0}],"isBlockCoverage":false},{"functionName":"addStage","ranges":[{"startOffset":255072,"endOffset":255261,"count":0}],"isBlockCoverage":false},{"functionName":"setFeatureOverrides","ranges":[{"startOffset":255266,"endOffset":255769,"count":0}],"isBlockCoverage":false},{"functionName":"assignGlobalFeatures","ranges":[{"startOffset":255837,"endOffset":255977,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":256053,"endOffset":256351,"count":0}],"isBlockCoverage":false},{"functionName":"$d7e93cca3cf8ce8a$export$2e2bcd8739ae039","ranges":[{"startOffset":256356,"endOffset":256582,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":257257,"endOffset":257644,"count":0}],"isBlockCoverage":false},{"functionName":"planPreprocessing","ranges":[{"startOffset":257656,"endOffset":257955,"count":0}],"isBlockCoverage":false},{"functionName":"planFeatures","ranges":[{"startOffset":257967,"endOffset":258053,"count":0}],"isBlockCoverage":false},{"functionName":"planPostprocessing","ranges":[{"startOffset":258065,"endOffset":258301,"count":0}],"isBlockCoverage":false},{"functionName":"assignFeatures","ranges":[{"startOffset":258313,"endOffset":259334,"count":0}],"isBlockCoverage":false},{"functionName":"planFeatures","ranges":[{"startOffset":266655,"endOffset":266968,"count":0}],"isBlockCoverage":false},{"functionName":"assignFeatures","ranges":[{"startOffset":266980,"endOffset":268107,"count":0}],"isBlockCoverage":false},{"functionName":"$17ba6019f27bfcf9$var$getShapingClass","ranges":[{"startOffset":268110,"endOffset":268517,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":268576,"endOffset":268783,"count":0}],"isBlockCoverage":false},{"functionName":"get cur","ranges":[{"startOffset":268788,"endOffset":268853,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":268858,"endOffset":269136,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":269141,"endOffset":269432,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":269437,"endOffset":269480,"count":0}],"isBlockCoverage":false},{"functionName":"prev","ranges":[{"startOffset":269485,"endOffset":269529,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":269534,"endOffset":269674,"count":0}],"isBlockCoverage":false},{"functionName":"peekIndex","ranges":[{"startOffset":269679,"endOffset":269844,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":269849,"endOffset":270026,"count":0}],"isBlockCoverage":false},{"functionName":"$d6368085223f631e$export$2e2bcd8739ae039","ranges":[{"startOffset":270031,"endOffset":270125,"count":0}],"isBlockCoverage":false},{"functionName":"findScript","ranges":[{"startOffset":270270,"endOffset":270578,"count":0}],"isBlockCoverage":false},{"functionName":"selectScript","ranges":[{"startOffset":270583,"endOffset":272301,"count":0}],"isBlockCoverage":false},{"functionName":"lookupsForFeatures","ranges":[{"startOffset":272306,"endOffset":272938,"count":0}],"isBlockCoverage":false},{"functionName":"substituteFeatureForVariations","ranges":[{"startOffset":272943,"endOffset":273404,"count":0}],"isBlockCoverage":false},{"functionName":"findVariationsIndex","ranges":[{"startOffset":273409,"endOffset":273817,"count":0}],"isBlockCoverage":false},{"functionName":"variationConditionsMatch","ranges":[{"startOffset":273822,"endOffset":274129,"count":0}],"isBlockCoverage":false},{"functionName":"applyFeatures","ranges":[{"startOffset":274134,"endOffset":274302,"count":0}],"isBlockCoverage":false},{"functionName":"applyLookups","ranges":[{"startOffset":274307,"endOffset":275144,"count":0}],"isBlockCoverage":false},{"functionName":"applyLookup","ranges":[{"startOffset":275149,"endOffset":275257,"count":0}],"isBlockCoverage":false},{"functionName":"applyLookupList","ranges":[{"startOffset":275262,"endOffset":276146,"count":0}],"isBlockCoverage":false},{"functionName":"coverageIndex","ranges":[{"startOffset":276151,"endOffset":276631,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":276636,"endOffset":277154,"count":0}],"isBlockCoverage":false},{"functionName":"sequenceMatches","ranges":[{"startOffset":277159,"endOffset":277303,"count":0}],"isBlockCoverage":false},{"functionName":"sequenceMatchIndices","ranges":[{"startOffset":277308,"endOffset":277632,"count":0}],"isBlockCoverage":false},{"functionName":"coverageSequenceMatches","ranges":[{"startOffset":277637,"endOffset":277809,"count":0}],"isBlockCoverage":false},{"functionName":"getClassID","ranges":[{"startOffset":277814,"endOffset":278321,"count":0}],"isBlockCoverage":false},{"functionName":"classSequenceMatches","ranges":[{"startOffset":278326,"endOffset":278508,"count":0}],"isBlockCoverage":false},{"functionName":"applyContext","ranges":[{"startOffset":278513,"endOffset":279640,"count":0}],"isBlockCoverage":false},{"functionName":"applyChainingContext","ranges":[{"startOffset":279645,"endOffset":281282,"count":0}],"isBlockCoverage":false},{"functionName":"$7b226e6bbeadedeb$export$2e2bcd8739ae039","ranges":[{"startOffset":281287,"endOffset":281993,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":282051,"endOffset":282092,"count":0}],"isBlockCoverage":false},{"functionName":"set id","ranges":[{"startOffset":282097,"endOffset":282977,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":282982,"endOffset":283110,"count":0}],"isBlockCoverage":false},{"functionName":"$f22bb23c9fd478d8$export$2e2bcd8739ae039","ranges":[{"startOffset":283115,"endOffset":283822,"count":0}],"isBlockCoverage":false},{"functionName":"planFeatures","ranges":[{"startOffset":283941,"endOffset":284064,"count":0}],"isBlockCoverage":false},{"functionName":"assignFeatures","ranges":[{"startOffset":284076,"endOffset":285588,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isL","ranges":[{"startOffset":286602,"endOffset":286678,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isV","ranges":[{"startOffset":286714,"endOffset":286790,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isT","ranges":[{"startOffset":286826,"endOffset":286902,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isTone","ranges":[{"startOffset":286941,"endOffset":286981,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isLVT","ranges":[{"startOffset":287019,"endOffset":287112,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isLV","ranges":[{"startOffset":287149,"endOffset":287318,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isCombiningL","ranges":[{"startOffset":287363,"endOffset":287446,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isCombiningV","ranges":[{"startOffset":287491,"endOffset":287574,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$isCombiningT","ranges":[{"startOffset":287619,"endOffset":287711,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$getType","ranges":[{"startOffset":288197,"endOffset":288728,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$getGlyph","ranges":[{"startOffset":291687,"endOffset":291885,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$decompose","ranges":[{"startOffset":291886,"endOffset":293219,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$compose","ranges":[{"startOffset":293220,"endOffset":295622,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$getLength","ranges":[{"startOffset":295623,"endOffset":295949,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$reorderToneMark","ranges":[{"startOffset":295950,"endOffset":296405,"count":0}],"isBlockCoverage":false},{"functionName":"$fa1d9fd80dd7279e$var$insertDottedCircle","ranges":[{"startOffset":296406,"endOffset":296984,"count":0}],"isBlockCoverage":false},{"functionName":"planFeatures","ranges":[{"startOffset":359857,"endOffset":361387,"count":0}],"isBlockCoverage":false},{"functionName":"assignFeatures","ranges":[{"startOffset":361399,"endOffset":362156,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$indicCategory","ranges":[{"startOffset":362275,"endOffset":362399,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$indicPosition","ranges":[{"startOffset":362400,"endOffset":362533,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$IndicInfo","ranges":[{"startOffset":362578,"endOffset":362784,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$setupSyllables","ranges":[{"startOffset":362787,"endOffset":363918,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$isConsonant","ranges":[{"startOffset":363919,"endOffset":364058,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$isJoiner","ranges":[{"startOffset":364059,"endOffset":364196,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$isHalantOrCoeng","ranges":[{"startOffset":364197,"endOffset":364340,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$wouldSubstitute","ranges":[{"startOffset":364341,"endOffset":364643,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$consonantPosition","ranges":[{"startOffset":364644,"endOffset":365492,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$initialReordering","ranges":[{"startOffset":365493,"endOffset":382107,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$finalReordering","ranges":[{"startOffset":382108,"endOffset":397400,"count":0}],"isBlockCoverage":false},{"functionName":"$d203e6b9523d0071$var$nextSyllable","ranges":[{"startOffset":397401,"endOffset":397667,"count":0}],"isBlockCoverage":false},{"functionName":"planFeatures","ranges":[{"startOffset":403084,"endOffset":404479,"count":0}],"isBlockCoverage":false},{"functionName":"assignFeatures","ranges":[{"startOffset":404491,"endOffset":405210,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$useCategory","ranges":[{"startOffset":405336,"endOffset":405453,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$USEInfo","ranges":[{"startOffset":405496,"endOffset":405658,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$setupSyllables","ranges":[{"startOffset":405661,"endOffset":406332,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$clearSubstitutionFlags","ranges":[{"startOffset":406333,"endOffset":406460,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$recordRphf","ranges":[{"startOffset":406461,"endOffset":406661,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$recordPref","ranges":[{"startOffset":406662,"endOffset":406878,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$reorder","ranges":[{"startOffset":406879,"endOffset":409194,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$nextSyllable","ranges":[{"startOffset":409195,"endOffset":409461,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$isHalant","ranges":[{"startOffset":409462,"endOffset":409578,"count":0}],"isBlockCoverage":false},{"functionName":"$9b772791ccede8a5$var$isBase","ranges":[{"startOffset":409579,"endOffset":409686,"count":0}],"isBlockCoverage":false},{"functionName":"$fdb4471fc82bc2c2$export$7877a478dd30fd3d","ranges":[{"startOffset":413941,"endOffset":414247,"count":0}],"isBlockCoverage":false},{"functionName":"applyLookup","ranges":[{"startOffset":414360,"endOffset":423327,"count":0}],"isBlockCoverage":false},{"functionName":"applyPositionValue","ranges":[{"startOffset":423440,"endOffset":424706,"count":0}],"isBlockCoverage":false},{"functionName":"applyLookup","ranges":[{"startOffset":424711,"endOffset":432796,"count":0}],"isBlockCoverage":false},{"functionName":"applyAnchor","ranges":[{"startOffset":432801,"endOffset":433269,"count":0}],"isBlockCoverage":false},{"functionName":"getAnchor","ranges":[{"startOffset":433274,"endOffset":433997,"count":0}],"isBlockCoverage":false},{"functionName":"applyFeatures","ranges":[{"startOffset":434002,"endOffset":434231,"count":0}],"isBlockCoverage":false},{"functionName":"fixCursiveAttachment","ranges":[{"startOffset":434236,"endOffset":434559,"count":0}],"isBlockCoverage":false},{"functionName":"fixMarkAttachment","ranges":[{"startOffset":434564,"endOffset":435421,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":435479,"endOffset":436714,"count":0}],"isBlockCoverage":false},{"functionName":"substitute","ranges":[{"startOffset":436719,"endOffset":437039,"count":0}],"isBlockCoverage":false},{"functionName":"position","ranges":[{"startOffset":437044,"endOffset":437655,"count":0}],"isBlockCoverage":false},{"functionName":"zeroMarkAdvances","ranges":[{"startOffset":437660,"endOffset":437871,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":437876,"endOffset":437979,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableFeatures","ranges":[{"startOffset":437984,"endOffset":438440,"count":0}],"isBlockCoverage":false},{"functionName":"$b2f26a32cb9ab2fa$export$2e2bcd8739ae039","ranges":[{"startOffset":438445,"endOffset":438885,"count":0}],"isBlockCoverage":false},{"functionName":"layout","ranges":[{"startOffset":438943,"endOffset":440681,"count":0}],"isBlockCoverage":false},{"functionName":"substitute","ranges":[{"startOffset":440686,"endOffset":440864,"count":0}],"isBlockCoverage":false},{"functionName":"position","ranges":[{"startOffset":440869,"endOffset":442097,"count":0}],"isBlockCoverage":false},{"functionName":"hideDefaultIgnorables","ranges":[{"startOffset":442102,"endOffset":442426,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultIgnorable","ranges":[{"startOffset":442431,"endOffset":443727,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableFeatures","ranges":[{"startOffset":443732,"endOffset":444011,"count":0}],"isBlockCoverage":false},{"functionName":"stringsForGlyph","ranges":[{"startOffset":444016,"endOffset":444398,"count":0}],"isBlockCoverage":false},{"functionName":"$9d641258c9d7180d$export$2e2bcd8739ae039","ranges":[{"startOffset":444403,"endOffset":444941,"count":0}],"isBlockCoverage":false},{"functionName":"toFunction","ranges":[{"startOffset":445313,"endOffset":445483,"count":0}],"isBlockCoverage":false},{"functionName":"toSVG","ranges":[{"startOffset":445570,"endOffset":445830,"count":0}],"isBlockCoverage":false},{"functionName":"get cbox","ranges":[{"startOffset":446077,"endOffset":446425,"count":0}],"isBlockCoverage":false},{"functionName":"get bbox","ranges":[{"startOffset":446597,"endOffset":449726,"count":0}],"isBlockCoverage":false},{"functionName":"mapPoints","ranges":[{"startOffset":449846,"endOffset":450227,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":450288,"endOffset":450546,"count":0}],"isBlockCoverage":false},{"functionName":"translate","ranges":[{"startOffset":450607,"endOffset":450679,"count":0}],"isBlockCoverage":false},{"functionName":"rotate","ranges":[{"startOffset":450749,"endOffset":450898,"count":0}],"isBlockCoverage":false},{"functionName":"scale","ranges":[{"startOffset":450935,"endOffset":451032,"count":0}],"isBlockCoverage":false},{"functionName":"$67ee4828d81adb28$export$2e2bcd8739ae039","ranges":[{"startOffset":451037,"endOffset":451139,"count":0}],"isBlockCoverage":false},{"functionName":"$67ee4828d81adb28$export$2e2bcd8739ae039.<computed>","ranges":[{"startOffset":451317,"endOffset":451469,"count":0}],"isBlockCoverage":false},{"functionName":"_getPath","ranges":[{"startOffset":455236,"endOffset":455322,"count":0}],"isBlockCoverage":false},{"functionName":"_getCBox","ranges":[{"startOffset":455327,"endOffset":455376,"count":0}],"isBlockCoverage":false},{"functionName":"_getBBox","ranges":[{"startOffset":455381,"endOffset":455430,"count":0}],"isBlockCoverage":false},{"functionName":"_getTableMetrics","ranges":[{"startOffset":455435,"endOffset":455789,"count":0}],"isBlockCoverage":false},{"functionName":"_getMetrics","ranges":[{"startOffset":455794,"endOffset":457113,"count":0}],"isBlockCoverage":false},{"functionName":"get cbox","ranges":[{"startOffset":457612,"endOffset":457662,"count":0}],"isBlockCoverage":false},{"functionName":"get bbox","ranges":[{"startOffset":457806,"endOffset":457856,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":457947,"endOffset":458105,"count":0}],"isBlockCoverage":false},{"functionName":"getScaledPath","ranges":[{"startOffset":458217,"endOffset":458337,"count":0}],"isBlockCoverage":false},{"functionName":"get advanceWidth","ranges":[{"startOffset":458404,"endOffset":458478,"count":0}],"isBlockCoverage":false},{"functionName":"get advanceHeight","ranges":[{"startOffset":458546,"endOffset":458622,"count":0}],"isBlockCoverage":false},{"functionName":"get ligatureCaretPositions","ranges":[{"startOffset":458627,"endOffset":458658,"count":0}],"isBlockCoverage":false},{"functionName":"_getName","ranges":[{"startOffset":458663,"endOffset":459407,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":459464,"endOffset":459514,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":459680,"endOffset":459918,"count":0}],"isBlockCoverage":false},{"functionName":"$0e4f52d7996e478b$export$2e2bcd8739ae039","ranges":[{"startOffset":459923,"endOffset":460581,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":462942,"endOffset":463065,"count":0}],"isBlockCoverage":false},{"functionName":"$f680320fa07ef53d$export$baf26146a414f24a","ranges":[{"startOffset":463070,"endOffset":463233,"count":0}],"isBlockCoverage":false},{"functionName":"$f680320fa07ef53d$var$Component","ranges":[{"startOffset":463327,"endOffset":463540,"count":0}],"isBlockCoverage":false},{"functionName":"_getCBox","ranges":[{"startOffset":463715,"endOffset":464310,"count":0}],"isBlockCoverage":false},{"functionName":"_parseGlyphCoord","ranges":[{"startOffset":464355,"endOffset":464642,"count":0}],"isBlockCoverage":false},{"functionName":"_decode","ranges":[{"startOffset":464750,"endOffset":465371,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeSimple","ranges":[{"startOffset":465376,"endOffset":467285,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeComposite","ranges":[{"startOffset":467290,"endOffset":470050,"count":0}],"isBlockCoverage":false},{"functionName":"_getPhantomPoints","ranges":[{"startOffset":470055,"endOffset":470864,"count":0}],"isBlockCoverage":false},{"functionName":"_getContours","ranges":[{"startOffset":470955,"endOffset":472713,"count":0}],"isBlockCoverage":false},{"functionName":"_getMetrics","ranges":[{"startOffset":472718,"endOffset":473050,"count":0}],"isBlockCoverage":false},{"functionName":"_getPath","ranges":[{"startOffset":473118,"endOffset":475214,"count":0}],"isBlockCoverage":false},{"functionName":"$f680320fa07ef53d$export$2e2bcd8739ae039","ranges":[{"startOffset":475219,"endOffset":475347,"count":0}],"isBlockCoverage":false},{"functionName":"_getName","ranges":[{"startOffset":475462,"endOffset":475591,"count":0}],"isBlockCoverage":false},{"functionName":"bias","ranges":[{"startOffset":475596,"endOffset":475727,"count":0}],"isBlockCoverage":false},{"functionName":"_getPath","ranges":[{"startOffset":475732,"endOffset":497274,"count":0}],"isBlockCoverage":false},{"functionName":"$7ee0705195f3b047$export$2e2bcd8739ae039","ranges":[{"startOffset":497279,"endOffset":497407,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.data","ranges":[{"startOffset":497649,"endOffset":497688,"count":0}],"isBlockCoverage":false},{"functionName":"getImageForSize","ranges":[{"startOffset":498067,"endOffset":498592,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":498597,"endOffset":499004,"count":0}],"isBlockCoverage":false},{"functionName":"$55855d6d316b015e$export$2e2bcd8739ae039","ranges":[{"startOffset":499009,"endOffset":499138,"count":0}],"isBlockCoverage":false},{"functionName":"$42d9dbd2de9ee2d8$var$COLRLayer","ranges":[{"startOffset":499190,"endOffset":499278,"count":0}],"isBlockCoverage":false},{"functionName":"_getBBox","ranges":[{"startOffset":499388,"endOffset":499724,"count":0}],"isBlockCoverage":false},{"functionName":"get layers","ranges":[{"startOffset":499875,"endOffset":501258,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":501263,"endOffset":501568,"count":0}],"isBlockCoverage":false},{"functionName":"$42d9dbd2de9ee2d8$export$2e2bcd8739ae039","ranges":[{"startOffset":501573,"endOffset":501702,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeCoords","ranges":[{"startOffset":502383,"endOffset":503835,"count":0}],"isBlockCoverage":false},{"functionName":"transformPoints","ranges":[{"startOffset":503840,"endOffset":507914,"count":0}],"isBlockCoverage":false},{"functionName":"decodePoints","ranges":[{"startOffset":507919,"endOffset":508698,"count":0}],"isBlockCoverage":false},{"functionName":"decodeDeltas","ranges":[{"startOffset":508703,"endOffset":509328,"count":0}],"isBlockCoverage":false},{"functionName":"tupleFactor","ranges":[{"startOffset":509333,"endOffset":510444,"count":0}],"isBlockCoverage":false},{"functionName":"interpolateMissingDeltas","ranges":[{"startOffset":510576,"endOffset":512144,"count":0}],"isBlockCoverage":false},{"functionName":"deltaInterpolate","ranges":[{"startOffset":512149,"endOffset":513342,"count":0}],"isBlockCoverage":false},{"functionName":"deltaShift","ranges":[{"startOffset":513347,"endOffset":513703,"count":0}],"isBlockCoverage":false},{"functionName":"getAdvanceAdjustment","ranges":[{"startOffset":513708,"endOffset":514298,"count":0}],"isBlockCoverage":false},{"functionName":"getDelta","ranges":[{"startOffset":514396,"endOffset":514965,"count":0}],"isBlockCoverage":false},{"functionName":"getBlendVector","ranges":[{"startOffset":514970,"endOffset":516933,"count":0}],"isBlockCoverage":false},{"functionName":"$7586bb9ea67c41d8$export$2e2bcd8739ae039","ranges":[{"startOffset":516938,"endOffset":517095,"count":0}],"isBlockCoverage":false},{"functionName":"includeGlyph","ranges":[{"startOffset":517213,"endOffset":517481,"count":0}],"isBlockCoverage":false},{"functionName":"$a8ac370803cb82cf$export$2e2bcd8739ae039","ranges":[{"startOffset":517486,"endOffset":517663,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":518005,"endOffset":518069,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":518081,"endOffset":518217,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSimple","ranges":[{"startOffset":518953,"endOffset":522087,"count":0}],"isBlockCoverage":false},{"functionName":"_encodePoint","ranges":[{"startOffset":522092,"endOffset":522495,"count":0}],"isBlockCoverage":false},{"functionName":"_addGlyph","ranges":[{"startOffset":522607,"endOffset":523908,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":523913,"endOffset":526101,"count":0}],"isBlockCoverage":false},{"functionName":"$fe042f4b88f46896$export$2e2bcd8739ae039","ranges":[{"startOffset":526106,"endOffset":526230,"count":0}],"isBlockCoverage":false},{"functionName":"subsetCharstrings","ranges":[{"startOffset":526346,"endOffset":526804,"count":0}],"isBlockCoverage":false},{"functionName":"subsetSubrs","ranges":[{"startOffset":526809,"endOffset":527209,"count":0}],"isBlockCoverage":false},{"functionName":"subsetFontdict","ranges":[{"startOffset":527214,"endOffset":528483,"count":0}],"isBlockCoverage":false},{"functionName":"createCIDFontdict","ranges":[{"startOffset":528488,"endOffset":529390,"count":0}],"isBlockCoverage":false},{"functionName":"addString","ranges":[{"startOffset":529395,"endOffset":529630,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":529635,"endOffset":531205,"count":0}],"isBlockCoverage":false},{"functionName":"$ec40f80c07a4e08a$export$2e2bcd8739ae039","ranges":[{"startOffset":531210,"endOffset":531351,"count":0}],"isBlockCoverage":false},{"functionName":"probe","ranges":[{"startOffset":531418,"endOffset":531636,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultLanguage","ranges":[{"startOffset":531641,"endOffset":531717,"count":0}],"isBlockCoverage":false},{"functionName":"_getTable","ranges":[{"startOffset":531722,"endOffset":532113,"count":0}],"isBlockCoverage":false},{"functionName":"_getTableStream","ranges":[{"startOffset":532118,"endOffset":532322,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeDirectory","ranges":[{"startOffset":532327,"endOffset":532493,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeTable","ranges":[{"startOffset":532498,"endOffset":532782,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":532906,"endOffset":533400,"count":0}],"isBlockCoverage":false},{"functionName":"get postscriptName","ranges":[{"startOffset":533504,"endOffset":533579,"count":0}],"isBlockCoverage":false},{"functionName":"get fullName","ranges":[{"startOffset":533663,"endOffset":533726,"count":0}],"isBlockCoverage":false},{"functionName":"get familyName","ranges":[{"startOffset":533807,"endOffset":533874,"count":0}],"isBlockCoverage":false},{"functionName":"get subfamilyName","ranges":[{"startOffset":533950,"endOffset":534023,"count":0}],"isBlockCoverage":false},{"functionName":"get copyright","ranges":[{"startOffset":534096,"endOffset":534161,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":534227,"endOffset":534288,"count":0}],"isBlockCoverage":false},{"functionName":"get ascent","ranges":[{"startOffset":534403,"endOffset":534456,"count":0}],"isBlockCoverage":false},{"functionName":"get descent","ranges":[{"startOffset":534560,"endOffset":534615,"count":0}],"isBlockCoverage":false},{"functionName":"get lineGap","ranges":[{"startOffset":534713,"endOffset":534768,"count":0}],"isBlockCoverage":false},{"functionName":"get underlinePosition","ranges":[{"startOffset":534874,"endOffset":534949,"count":0}],"isBlockCoverage":false},{"functionName":"get underlineThickness","ranges":[{"startOffset":535037,"endOffset":535114,"count":0}],"isBlockCoverage":false},{"functionName":"get italicAngle","ranges":[{"startOffset":535246,"endOffset":535309,"count":0}],"isBlockCoverage":false},{"functionName":"get capHeight","ranges":[{"startOffset":535475,"endOffset":535580,"count":0}],"isBlockCoverage":false},{"functionName":"get xHeight","ranges":[{"startOffset":535740,"endOffset":535831,"count":0}],"isBlockCoverage":false},{"functionName":"get numGlyphs","ranges":[{"startOffset":535905,"endOffset":535964,"count":0}],"isBlockCoverage":false},{"functionName":"get unitsPerEm","ranges":[{"startOffset":536052,"endOffset":536113,"count":0}],"isBlockCoverage":false},{"functionName":"get bbox","ranges":[{"startOffset":536227,"endOffset":536390,"count":0}],"isBlockCoverage":false},{"functionName":"get _cmapProcessor","ranges":[{"startOffset":536395,"endOffset":536500,"count":0}],"isBlockCoverage":false},{"functionName":"get characterSet","ranges":[{"startOffset":536608,"endOffset":536688,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlyphForCodePoint","ranges":[{"startOffset":536844,"endOffset":536939,"count":0}],"isBlockCoverage":false},{"functionName":"glyphForCodePoint","ranges":[{"startOffset":537149,"endOffset":537289,"count":0}],"isBlockCoverage":false},{"functionName":"glyphsForString","ranges":[{"startOffset":537639,"endOffset":539074,"count":0}],"isBlockCoverage":false},{"functionName":"get _layoutEngine","ranges":[{"startOffset":539079,"endOffset":539178,"count":0}],"isBlockCoverage":false},{"functionName":"layout","ranges":[{"startOffset":539490,"endOffset":539648,"count":0}],"isBlockCoverage":false},{"functionName":"stringsForGlyph","ranges":[{"startOffset":539764,"endOffset":539848,"count":0}],"isBlockCoverage":false},{"functionName":"get availableFeatures","ranges":[{"startOffset":540239,"endOffset":540328,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableFeatures","ranges":[{"startOffset":540333,"endOffset":540453,"count":0}],"isBlockCoverage":false},{"functionName":"_getBaseGlyph","ranges":[{"startOffset":540458,"endOffset":540915,"count":0}],"isBlockCoverage":false},{"functionName":"getGlyph","ranges":[{"startOffset":541202,"endOffset":541707,"count":0}],"isBlockCoverage":false},{"functionName":"createSubset","ranges":[{"startOffset":541781,"endOffset":541982,"count":0}],"isBlockCoverage":false},{"functionName":"get variationAxes","ranges":[{"startOffset":542203,"endOffset":542523,"count":0}],"isBlockCoverage":false},{"functionName":"get namedVariations","ranges":[{"startOffset":542757,"endOffset":543188,"count":0}],"isBlockCoverage":false},{"functionName":"getVariation","ranges":[{"startOffset":543464,"endOffset":544502,"count":0}],"isBlockCoverage":false},{"functionName":"get _variationProcessor","ranges":[{"startOffset":544507,"endOffset":544924,"count":0}],"isBlockCoverage":false},{"functionName":"getFont","ranges":[{"startOffset":544967,"endOffset":545028,"count":0}],"isBlockCoverage":false},{"functionName":"$0a8ef2660a6ce4b6$export$2e2bcd8739ae039","ranges":[{"startOffset":545033,"endOffset":545770,"count":0}],"isBlockCoverage":false},{"functionName":"$89f72d2d7c9afc0d$var$WOFFDirectory.process","ranges":[{"startOffset":548178,"endOffset":548300,"count":0}],"isBlockCoverage":false},{"functionName":"probe","ranges":[{"startOffset":548506,"endOffset":548628,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeDirectory","ranges":[{"startOffset":548633,"endOffset":548792,"count":0}],"isBlockCoverage":false},{"functionName":"_getTableStream","ranges":[{"startOffset":548797,"endOffset":549381,"count":0}],"isBlockCoverage":false},{"functionName":"$8a0a49baaf5d834d$export$2e2bcd8739ae039","ranges":[{"startOffset":549386,"endOffset":549515,"count":0}],"isBlockCoverage":false},{"functionName":"_decode","ranges":[{"startOffset":549634,"endOffset":549799,"count":0}],"isBlockCoverage":false},{"functionName":"_getCBox","ranges":[{"startOffset":549804,"endOffset":549853,"count":0}],"isBlockCoverage":false},{"functionName":"$44b9edca0e403d6d$export$2e2bcd8739ae039","ranges":[{"startOffset":549858,"endOffset":549988,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":550038,"endOffset":550627,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.customTag","ranges":[{"startOffset":551627,"endOffset":551657,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":551669,"endOffset":551736,"count":0}],"isBlockCoverage":false},{"functionName":"transformVersion","ranges":[{"startOffset":551803,"endOffset":551828,"count":0}],"isBlockCoverage":false},{"functionName":"transformed","ranges":[{"startOffset":551847,"endOffset":551942,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.transformLength","ranges":[{"startOffset":552028,"endOffset":552046,"count":0}],"isBlockCoverage":false},{"functionName":"$2f0bfd9a5c1d7b58$var$WOFF2Directory.process","ranges":[{"startOffset":552919,"endOffset":553113,"count":0}],"isBlockCoverage":false},{"functionName":"probe","ranges":[{"startOffset":553317,"endOffset":553439,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeDirectory","ranges":[{"startOffset":553444,"endOffset":553603,"count":0}],"isBlockCoverage":false},{"functionName":"_decompress","ranges":[{"startOffset":553608,"endOffset":554513,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeTable","ranges":[{"startOffset":554518,"endOffset":554615,"count":0}],"isBlockCoverage":false},{"functionName":"_getBaseGlyph","ranges":[{"startOffset":554727,"endOffset":555167,"count":0}],"isBlockCoverage":false},{"functionName":"_transformGlyfTable","ranges":[{"startOffset":555172,"endOffset":556664,"count":0}],"isBlockCoverage":false},{"functionName":"$333fb94547d9fb5c$export$2e2bcd8739ae039","ranges":[{"startOffset":556669,"endOffset":556799,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":556924,"endOffset":557040,"count":0}],"isBlockCoverage":false},{"functionName":"$333fb94547d9fb5c$var$Substream","ranges":[{"startOffset":557045,"endOffset":557160,"count":7}],"isBlockCoverage":true},{"functionName":"$333fb94547d9fb5c$var$read255UInt16","ranges":[{"startOffset":558465,"endOffset":558907,"count":0}],"isBlockCoverage":false},{"functionName":"$333fb94547d9fb5c$var$withSign","ranges":[{"startOffset":558908,"endOffset":559008,"count":0}],"isBlockCoverage":false},{"functionName":"$333fb94547d9fb5c$var$decodeTriplet","ranges":[{"startOffset":559009,"endOffset":560769,"count":0}],"isBlockCoverage":false},{"functionName":"probe","ranges":[{"startOffset":561395,"endOffset":561517,"count":0}],"isBlockCoverage":false},{"functionName":"getFont","ranges":[{"startOffset":561522,"endOffset":562006,"count":0}],"isBlockCoverage":false},{"functionName":"get fonts","ranges":[{"startOffset":562011,"endOffset":562333,"count":0}],"isBlockCoverage":false},{"functionName":"$e0b2de9958441c02$export$2e2bcd8739ae039","ranges":[{"startOffset":562338,"endOffset":562632,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.refList.$elh9A$restructure.Pointer.type","ranges":[{"startOffset":563434,"endOffset":563457,"count":0}],"isBlockCoverage":false},{"functionName":"$elh9A$restructure.Struct.types","ranges":[{"startOffset":563672,"endOffset":563689,"count":0}],"isBlockCoverage":false},{"functionName":"probe","ranges":[{"startOffset":564399,"endOffset":564769,"count":0}],"isBlockCoverage":false},{"functionName":"getFont","ranges":[{"startOffset":564774,"endOffset":565335,"count":0}],"isBlockCoverage":false},{"functionName":"get fonts","ranges":[{"startOffset":565340,"endOffset":565702,"count":0}],"isBlockCoverage":false},{"functionName":"$d0fe640dc6c78783$export$2e2bcd8739ae039","ranges":[{"startOffset":565707,"endOffset":566310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/main.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40955,"count":1},{"startOffset":3175,"endOffset":3860,"count":24},{"startOffset":3206,"endOffset":3860,"count":10},{"startOffset":3285,"endOffset":3300,"count":1},{"startOffset":3300,"endOffset":3350,"count":9},{"startOffset":3334,"endOffset":3350,"count":1},{"startOffset":3507,"endOffset":3511,"count":2},{"startOffset":3512,"endOffset":3518,"count":8},{"startOffset":3664,"endOffset":3858,"count":8},{"startOffset":6809,"endOffset":7461,"count":24},{"startOffset":6840,"endOffset":7461,"count":10},{"startOffset":6919,"endOffset":6934,"count":1},{"startOffset":6934,"endOffset":6984,"count":9},{"startOffset":6968,"endOffset":6984,"count":1},{"startOffset":7147,"endOffset":7151,"count":2},{"startOffset":7152,"endOffset":7158,"count":8},{"startOffset":7284,"endOffset":7459,"count":8}],"isBlockCoverage":true},{"functionName":"$parcel$exportWildcard","ranges":[{"startOffset":1,"endOffset":378,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79,"endOffset":358,"count":38},{"startOffset":197,"endOffset":218,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":294,"endOffset":346,"count":1384}],"isBlockCoverage":true},{"functionName":"$parcel$export","ranges":[{"startOffset":380,"endOffset":506,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":555,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":652,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":742,"endOffset":789,"count":235}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":836,"endOffset":883,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":929,"endOffset":976,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1021,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1112,"endOffset":1159,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1201,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1294,"endOffset":1341,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1387,"endOffset":1433,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1477,"endOffset":1524,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1568,"endOffset":1615,"count":204}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1668,"endOffset":1715,"count":47}],"isBlockCoverage":true},{"functionName":"$8ae20583b93e4933$export$c18b354bac7948e9","ranges":[{"startOffset":1916,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":2128,"endOffset":2463,"count":0}],"isBlockCoverage":false},{"functionName":"readBuffer","ranges":[{"startOffset":2468,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":2563,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":2652,"endOffset":2737,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":2742,"endOffset":2824,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":2829,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"$8ae20583b93e4933$export$c18b354bac7948e9.<computed>","ranges":[{"startOffset":3523,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"$8ae20583b93e4933$export$c18b354bac7948e9.<computed>","ranges":[{"startOffset":3740,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"$1ed46182c1410e1d$export$9b4f661deaa36c3e","ranges":[{"startOffset":4087,"endOffset":4267,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":4272,"endOffset":4377,"count":0}],"isBlockCoverage":false},{"functionName":"writeString","ranges":[{"startOffset":4382,"endOffset":5230,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt24BE","ranges":[{"startOffset":5235,"endOffset":5412,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt24LE","ranges":[{"startOffset":5417,"endOffset":5594,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt24BE","ranges":[{"startOffset":5599,"endOffset":5724,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt24LE","ranges":[{"startOffset":5729,"endOffset":5854,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5859,"endOffset":6160,"count":0}],"isBlockCoverage":false},{"functionName":"$1ed46182c1410e1d$var$stringToUtf16","ranges":[{"startOffset":6163,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"$1ed46182c1410e1d$var$stringToAscii","ranges":[{"startOffset":6482,"endOffset":6745,"count":0}],"isBlockCoverage":false},{"functionName":"$1ed46182c1410e1d$export$9b4f661deaa36c3e.<computed>","ranges":[{"startOffset":7163,"endOffset":7261,"count":0}],"isBlockCoverage":false},{"functionName":"$1ed46182c1410e1d$export$9b4f661deaa36c3e.<computed>","ranges":[{"startOffset":7361,"endOffset":7458,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":7521,"endOffset":7664,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer","ranges":[{"startOffset":7669,"endOffset":7912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8006,"endOffset":8053,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8107,"endOffset":8154,"count":77}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8211,"endOffset":8258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8313,"endOffset":8360,"count":750}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8417,"endOffset":8464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8521,"endOffset":8568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8623,"endOffset":8670,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8727,"endOffset":8774,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8831,"endOffset":8878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8933,"endOffset":8980,"count":185}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9037,"endOffset":9084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9137,"endOffset":9184,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9240,"endOffset":9287,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9341,"endOffset":9388,"count":108}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9444,"endOffset":9491,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9547,"endOffset":9594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9648,"endOffset":9695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9751,"endOffset":9797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9853,"endOffset":9900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9954,"endOffset":10000,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10056,"endOffset":10103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10159,"endOffset":10206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10260,"endOffset":10307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10363,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10467,"endOffset":10514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10569,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10673,"endOffset":10720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10774,"endOffset":10821,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10879,"endOffset":10926,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10982,"endOffset":11029,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11134,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11192,"endOffset":11239,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11342,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11400,"endOffset":11447,"count":0}],"isBlockCoverage":false},{"functionName":"$af65abf7bf65ac42$export$fffa67e515d04022","ranges":[{"startOffset":11561,"endOffset":11779,"count":26},{"startOffset":11750,"endOffset":11773,"count":23}],"isBlockCoverage":true},{"functionName":"size","ranges":[{"startOffset":11784,"endOffset":11878,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11883,"endOffset":11948,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":11953,"endOffset":12027,"count":0}],"isBlockCoverage":false},{"functionName":"$af65abf7bf65ac42$export$13475bbd2a37a9b4","ranges":[{"startOffset":14887,"endOffset":15015,"count":7}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":15020,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":15098,"endOffset":15185,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15900,"endOffset":15947,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16014,"endOffset":16061,"count":0}],"isBlockCoverage":false},{"functionName":"$4559ecf940edc78d$export$83b6dc3503c1fda6","ranges":[{"startOffset":16065,"endOffset":16548,"count":0}],"isBlockCoverage":false},{"functionName":"$4559ecf940edc78d$export$41705b1d644e0f14","ranges":[{"startOffset":16603,"endOffset":16802,"count":0}],"isBlockCoverage":false},{"functionName":"$8ea28a08eae2a116$export$c4be6576ca6fe4aa","ranges":[{"startOffset":16916,"endOffset":17081,"count":293}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":17086,"endOffset":18338,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":18343,"endOffset":18986,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":18991,"endOffset":19768,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":19885,"endOffset":20448,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":20453,"endOffset":20598,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":20603,"endOffset":20768,"count":0}],"isBlockCoverage":false},{"functionName":"$444f112d3cbc7e9f$var$LazyArrayValue","ranges":[{"startOffset":20820,"endOffset":21037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21042,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":21451,"endOffset":21599,"count":0}],"isBlockCoverage":false},{"functionName":"$3def237a34a226b5$export$96b43b8a49f688ea","ranges":[{"startOffset":21714,"endOffset":21821,"count":11}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":21826,"endOffset":22100,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":22105,"endOffset":22152,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":22157,"endOffset":22447,"count":0}],"isBlockCoverage":false},{"functionName":"$8415e91bb83faf74$export$ff887cefee4d61ec","ranges":[{"startOffset":22562,"endOffset":22629,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":22634,"endOffset":22715,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":22720,"endOffset":22789,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":22794,"endOffset":22884,"count":0}],"isBlockCoverage":false},{"functionName":"$08d28604119af47e$export$7d22a0eea6656474","ranges":[{"startOffset":23001,"endOffset":23074,"count":14}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":23079,"endOffset":23246,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":23251,"endOffset":23531,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":23536,"endOffset":23734,"count":0}],"isBlockCoverage":false},{"functionName":"$070ce31ea947467f$export$deb82508dd66d288","ranges":[{"startOffset":23849,"endOffset":23962,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":23967,"endOffset":24082,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":24087,"endOffset":24134,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":24139,"endOffset":24340,"count":0}],"isBlockCoverage":false},{"functionName":"$80703542fcfb6ff0$export$7acb7b24c478f9c6","ranges":[{"startOffset":24455,"endOffset":24576,"count":7}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":24581,"endOffset":24809,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":24814,"endOffset":25055,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":25060,"endOffset":25298,"count":0}],"isBlockCoverage":false},{"functionName":"$f4fd49878232508a$export$da9b5fe187a9aa1","ranges":[{"startOffset":25413,"endOffset":25519,"count":25}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":25524,"endOffset":25627,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":25632,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":25795,"endOffset":25885,"count":0}],"isBlockCoverage":false},{"functionName":"$d8705cd4022e7dcf$export$89b8e0fa65f6a914","ranges":[{"startOffset":26002,"endOffset":26129,"count":30}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":26134,"endOffset":26960,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":26965,"endOffset":27721,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":27726,"endOffset":28319,"count":0}],"isBlockCoverage":false},{"functionName":"$d8705cd4022e7dcf$var$encodingWidth","ranges":[{"startOffset":28322,"endOffset":28826,"count":0}],"isBlockCoverage":false},{"functionName":"$d8705cd4022e7dcf$var$byteLength","ranges":[{"startOffset":28827,"endOffset":29939,"count":0}],"isBlockCoverage":false},{"functionName":"$aa8b66bae6abe658$export$eabc71f011df675a","ranges":[{"startOffset":30053,"endOffset":30131,"count":251}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":30136,"endOffset":30374,"count":0}],"isBlockCoverage":false},{"functionName":"_setup","ranges":[{"startOffset":30379,"endOffset":30861,"count":0}],"isBlockCoverage":false},{"functionName":"_parseFields","ranges":[{"startOffset":30866,"endOffset":31396,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":31401,"endOffset":31913,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":31918,"endOffset":32610,"count":0}],"isBlockCoverage":false},{"functionName":"$fcb208a95f6d048b$var$getPath","ranges":[{"startOffset":32654,"endOffset":32756,"count":0}],"isBlockCoverage":false},{"functionName":"$fcb208a95f6d048b$export$95a8b60f4da7dec8","ranges":[{"startOffset":32867,"endOffset":33057,"count":47},{"startOffset":33016,"endOffset":33051,"count":9}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":33062,"endOffset":33791,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":33796,"endOffset":34739,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":34744,"endOffset":35757,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35854,"endOffset":35901,"count":206}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35961,"endOffset":36008,"count":0}],"isBlockCoverage":false},{"functionName":"$92184962f8f0d5e2$export$b56007f12edf0c17","ranges":[{"startOffset":36122,"endOffset":36843,"count":216},{"startOffset":36314,"endOffset":36331,"count":5},{"startOffset":36371,"endOffset":36399,"count":160},{"startOffset":36444,"endOffset":36474,"count":214},{"startOffset":36586,"endOffset":36612,"count":212},{"startOffset":36650,"endOffset":36837,"count":8},{"startOffset":36715,"endOffset":36771,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":36848,"endOffset":38415,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":38420,"endOffset":39279,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":39284,"endOffset":40571,"count":0}],"isBlockCoverage":false},{"functionName":"$92184962f8f0d5e2$export$df5cb1f3d04f5a0f","ranges":[{"startOffset":40628,"endOffset":40713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/@swc/helpers/cjs/_define_property.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":273,"count":1}],"isBlockCoverage":true},{"functionName":"_define_property","ranges":[{"startOffset":15,"endOffset":242,"count":4},{"startOffset":80,"endOffset":200,"count":3},{"startOffset":200,"endOffset":223,"count":1}],"isBlockCoverage":true}]},{"scriptId":"841","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/@swc/helpers/cjs/_ts_decorate.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56,"count":1}],"isBlockCoverage":true}]},{"scriptId":"842","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/tslib/tslib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23382,"count":1},{"startOffset":22189,"endOffset":23379,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1565,"endOffset":2537,"count":1},{"startOffset":1638,"endOffset":1710,"count":0},{"startOffset":1750,"endOffset":1763,"count":0},{"startOffset":1765,"endOffset":1892,"count":0},{"startOffset":2053,"endOffset":2112,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1805,"endOffset":1883,"count":0}],"isBlockCoverage":false},{"functionName":"createExporter","ranges":[{"startOffset":2118,"endOffset":2534,"count":2},{"startOffset":2194,"endOffset":2436,"count":1},{"startOffset":2346,"endOffset":2425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2453,"endOffset":2526,"count":64},{"startOffset":2502,"endOffset":2519,"count":32},{"startOffset":2520,"endOffset":2523,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2541,"endOffset":22181,"count":1},{"startOffset":2610,"endOffset":2698,"count":0},{"startOffset":2699,"endOffset":2808,"count":0},{"startOffset":3217,"endOffset":3457,"count":0},{"startOffset":10778,"endOffset":10874,"count":0},{"startOffset":15589,"endOffset":15641,"count":0},{"startOffset":18937,"endOffset":18954,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":2661,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":2711,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":2829,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"__assign","ranges":[{"startOffset":3220,"endOffset":3457,"count":0}],"isBlockCoverage":false},{"functionName":"__rest","ranges":[{"startOffset":3475,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"__decorate","ranges":[{"startOffset":3998,"endOffset":4547,"count":17},{"startOffset":4086,"endOffset":4094,"count":0},{"startOffset":4165,"endOffset":4171,"count":0},{"startOffset":4260,"endOffset":4312,"count":0},{"startOffset":4410,"endOffset":4416,"count":0},{"startOffset":4445,"endOffset":4461,"count":0},{"startOffset":4463,"endOffset":4467,"count":13}],"isBlockCoverage":true},{"functionName":"__param","ranges":[{"startOffset":4566,"endOffset":4686,"count":0}],"isBlockCoverage":false},{"functionName":"__esDecorate","ranges":[{"startOffset":4710,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"__runInitializers","ranges":[{"startOffset":6598,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"__propKey","ranges":[{"startOffset":6926,"endOffset":7005,"count":0}],"isBlockCoverage":false},{"functionName":"__setFunctionName","ranges":[{"startOffset":7034,"endOffset":7301,"count":0}],"isBlockCoverage":false},{"functionName":"__metadata","ranges":[{"startOffset":7323,"endOffset":7506,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":7527,"endOffset":8202,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":8225,"endOffset":10211,"count":0}],"isBlockCoverage":false},{"functionName":"__exportStar","ranges":[{"startOffset":10235,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10422,"endOffset":10776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10781,"endOffset":10873,"count":0}],"isBlockCoverage":true},{"functionName":"__values","ranges":[{"startOffset":10894,"endOffset":11362,"count":0}],"isBlockCoverage":false},{"functionName":"__read","ranges":[{"startOffset":11380,"endOffset":11905,"count":0}],"isBlockCoverage":false},{"functionName":"__spread","ranges":[{"startOffset":11949,"endOffset":12101,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArrays","ranges":[{"startOffset":12151,"endOffset":12453,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArray","ranges":[{"startOffset":12478,"endOffset":12845,"count":0}],"isBlockCoverage":false},{"functionName":"__await","ranges":[{"startOffset":12864,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncGenerator","ranges":[{"startOffset":12992,"endOffset":14154,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncDelegator","ranges":[{"startOffset":14182,"endOffset":14516,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncValues","ranges":[{"startOffset":14541,"endOffset":15227,"count":0}],"isBlockCoverage":false},{"functionName":"__makeTemplateObject","ranges":[{"startOffset":15259,"endOffset":15435,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15486,"endOffset":15587,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":15591,"endOffset":15641,"count":0}],"isBlockCoverage":false},{"functionName":"ownKeys","ranges":[{"startOffset":15664,"endOffset":15935,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":15959,"endOffset":16261,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":16288,"endOffset":16379,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":16413,"endOffset":16853,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":16887,"endOffset":17427,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldIn","ranges":[{"startOffset":17460,"endOffset":17746,"count":0}],"isBlockCoverage":false},{"functionName":"__addDisposableResource","ranges":[{"startOffset":17781,"endOffset":18867,"count":0}],"isBlockCoverage":false},{"functionName":"_SuppressedError","ranges":[{"startOffset":18957,"endOffset":19131,"count":0}],"isBlockCoverage":false},{"functionName":"__disposeResources","ranges":[{"startOffset":19161,"endOffset":20184,"count":0}],"isBlockCoverage":false},{"functionName":"__rewriteRelativeImportExtension","ranges":[{"startOffset":20228,"endOffset":20627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"843","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fast-deep-equal/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1177,"count":1}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":90,"endOffset":1175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"844","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-properties/dist/main.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24366,"count":1},{"startOffset":17639,"endOffset":17671,"count":0}],"isBlockCoverage":true},{"functionName":"$parcel$interopDefault","ranges":[{"startOffset":95,"endOffset":177,"count":6},{"startOffset":159,"endOffset":170,"count":0}],"isBlockCoverage":true},{"functionName":"$parcel$defineInteropFlag","ranges":[{"startOffset":178,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"$parcel$export","ranges":[{"startOffset":297,"endOffset":423,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":515,"endOffset":562,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":617,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":711,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":813,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":913,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1102,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1200,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1296,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1392,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1488,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1585,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1680,"endOffset":1727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1771,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1863,"endOffset":1909,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$var$log2","ranges":[{"startOffset":17643,"endOffset":17670,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$var$bits","ranges":[{"startOffset":17708,"endOffset":17750,"count":4}],"isBlockCoverage":true},{"functionName":"$43d7963e56408b24$export$410364bbb673ddbc","ranges":[{"startOffset":19516,"endOffset":19816,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$c03b919c6651ed55","ranges":[{"startOffset":19817,"endOffset":20125,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$941569448d136665","ranges":[{"startOffset":20126,"endOffset":20419,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$92f6187db8ca6d26","ranges":[{"startOffset":20420,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$7d1258ebb7625a0d","ranges":[{"startOffset":20704,"endOffset":21483,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$52c8ea63abd07594","ranges":[{"startOffset":21484,"endOffset":21759,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$727d9dbc4fbb948f","ranges":[{"startOffset":21760,"endOffset":21899,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$a5b49f4dc6a07d2c","ranges":[{"startOffset":21900,"endOffset":22196,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$7b6804e8df61fcf5","ranges":[{"startOffset":22197,"endOffset":22336,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$aebd617640818cda","ranges":[{"startOffset":22337,"endOffset":22476,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$de8b4ee23b2cf823","ranges":[{"startOffset":22477,"endOffset":22616,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$3c52dd84024ae72c","ranges":[{"startOffset":22617,"endOffset":22829,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$a11bdcffe109e74b","ranges":[{"startOffset":22830,"endOffset":23189,"count":0}],"isBlockCoverage":false},{"functionName":"$43d7963e56408b24$export$e33ad6871e762338","ranges":[{"startOffset":23190,"endOffset":23402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"845","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/base64-js/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3932,"count":1},{"startOffset":211,"endOffset":218,"count":0},{"startOffset":347,"endOffset":408,"count":64}],"isBlockCoverage":true},{"functionName":"getLens","ranges":[{"startOffset":603,"endOffset":1054,"count":1},{"startOffset":671,"endOffset":746,"count":0},{"startOffset":994,"endOffset":1014,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":1117,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"_byteLength","ranges":[{"startOffset":1297,"endOffset":1420,"count":1}],"isBlockCoverage":true},{"functionName":"toByteArray","ranges":[{"startOffset":1422,"endOffset":2556,"count":1},{"startOffset":1739,"endOffset":1753,"count":0},{"startOffset":1809,"endOffset":2116,"count":3232},{"startOffset":2147,"endOffset":2284,"count":0},{"startOffset":2315,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"tripletToBase64","ranges":[{"startOffset":2558,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"encodeChunk","ranges":[{"startOffset":2714,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"fromByteArray","ranges":[{"startOffset":3011,"endOffset":3931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"846","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-trie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5265,"count":1}],"isBlockCoverage":true},{"functionName":"UnicodeTrie","ranges":[{"startOffset":2720,"endOffset":3835,"count":5},{"startOffset":2803,"endOffset":2840,"count":0},{"startOffset":2971,"endOffset":3157,"count":0},{"startOffset":3701,"endOffset":3831,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3839,"endOffset":5232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/tiny-inflate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9183,"count":1}],"isBlockCoverage":true},{"functionName":"Tree","ranges":[{"startOffset":44,"endOffset":212,"count":23}],"isBlockCoverage":true},{"functionName":"Data","ranges":[{"startOffset":214,"endOffset":493,"count":10}],"isBlockCoverage":true},{"functionName":"tinf_build_bits_base","ranges":[{"startOffset":1383,"endOffset":1709,"count":2},{"startOffset":1511,"endOffset":1523,"count":6},{"startOffset":1559,"endOffset":1591,"count":54},{"startOffset":1658,"endOffset":1707,"count":60}],"isBlockCoverage":true},{"functionName":"tinf_build_fixed_trees","ranges":[{"startOffset":1747,"endOffset":2309,"count":1},{"startOffset":1857,"endOffset":1873,"count":7},{"startOffset":1965,"endOffset":1987,"count":24},{"startOffset":2016,"endOffset":2037,"count":144},{"startOffset":2064,"endOffset":2097,"count":8},{"startOffset":2126,"endOffset":2163,"count":112},{"startOffset":2225,"endOffset":2241,"count":5},{"startOffset":2291,"endOffset":2307,"count":32}],"isBlockCoverage":true},{"functionName":"tinf_build_tree","ranges":[{"startOffset":2395,"endOffset":2981,"count":18},{"startOffset":2524,"endOffset":2539,"count":288},{"startOffset":2625,"endOffset":2653,"count":1985},{"startOffset":2761,"endOffset":2808,"count":288},{"startOffset":2909,"endOffset":2979,"count":1985},{"startOffset":2937,"endOffset":2975,"count":1592}],"isBlockCoverage":true},{"functionName":"tinf_getbit","ranges":[{"startOffset":3106,"endOffset":3357,"count":10}],"isBlockCoverage":true},{"functionName":"tinf_read_bits","ranges":[{"startOffset":3413,"endOffset":3697,"count":18699},{"startOffset":3469,"endOffset":3481,"count":8060},{"startOffset":3481,"endOffset":3509,"count":10639},{"startOffset":3509,"endOffset":3589,"count":7069},{"startOffset":3589,"endOffset":3696,"count":10639}],"isBlockCoverage":true},{"functionName":"tinf_decode_symbol","ranges":[{"startOffset":3753,"endOffset":4212,"count":35043},{"startOffset":3815,"endOffset":3895,"count":24614},{"startOffset":4009,"endOffset":4123,"count":204452}],"isBlockCoverage":true},{"functionName":"tinf_decode_trees","ranges":[{"startOffset":4270,"endOffset":5935,"count":6},{"startOffset":4593,"endOffset":4608,"count":114},{"startOffset":4691,"endOffset":4806,"count":97},{"startOffset":4973,"endOffset":5818,"count":1544},{"startOffset":5049,"endOffset":5283,"count":52},{"startOffset":5224,"endOffset":5268,"count":222},{"startOffset":5290,"endOffset":5484,"count":38},{"startOffset":5428,"endOffset":5469,"count":195},{"startOffset":5491,"endOffset":5688,"count":0},{"startOffset":5695,"endOffset":5808,"count":1454}],"isBlockCoverage":true},{"functionName":"tinf_inflate_block_data","ranges":[{"startOffset":6104,"endOffset":6848,"count":6},{"startOffset":6162,"endOffset":6846,"count":24257},{"startOffset":6260,"endOffset":6289,"count":6},{"startOffset":6289,"endOffset":6310,"count":24251},{"startOffset":6310,"endOffset":6350,"count":15009},{"startOffset":6350,"endOffset":6842,"count":9242},{"startOffset":6786,"endOffset":6836,"count":267578}],"isBlockCoverage":true},{"functionName":"tinf_inflate_uncompressed_block","ranges":[{"startOffset":6894,"endOffset":7648,"count":4},{"startOffset":7032,"endOffset":7079,"count":12},{"startOffset":7405,"endOffset":7428,"count":0},{"startOffset":7503,"endOffset":7551,"count":11893}],"isBlockCoverage":true},{"functionName":"tinf_uncompress","ranges":[{"startOffset":7691,"endOffset":8780,"count":10},{"startOffset":7989,"endOffset":8105,"count":4},{"startOffset":8112,"endOffset":8248,"count":0},{"startOffset":8255,"endOffset":8443,"count":6},{"startOffset":8450,"endOffset":8489,"count":0},{"startOffset":8528,"endOffset":8558,"count":0},{"startOffset":8615,"endOffset":8758,"count":5},{"startOffset":8701,"endOffset":8754,"count":0},{"startOffset":8758,"endOffset":8779,"count":5}],"isBlockCoverage":true}]},{"scriptId":"848","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-trie/swap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":102,"endOffset":161,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":179,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"swap32LE","ranges":[{"startOffset":338,"endOffset":394,"count":5},{"startOffset":368,"endOffset":392,"count":0}],"isBlockCoverage":true}]},{"scriptId":"849","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/dfa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2462,"count":1}],"isBlockCoverage":true},{"functionName":"StateMachine","ranges":[{"startOffset":239,"endOffset":361,"count":2}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":522,"endOffset":1941,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":2146,"endOffset":2392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"850","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7293,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13,"endOffset":7207,"count":1},{"startOffset":166,"endOffset":323,"count":0},{"startOffset":367,"endOffset":408,"count":0},{"startOffset":464,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"_instanceof","ranges":[{"startOffset":41,"endOffset":122,"count":0}],"isBlockCoverage":false},{"functionName":"nativeMap","ranges":[{"startOffset":307,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"nativeSet","ranges":[{"startOffset":392,"endOffset":405,"count":0}],"isBlockCoverage":false},{"functionName":"nativePromise","ranges":[{"startOffset":493,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":1551,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"clonePrototype","ranges":[{"startOffset":6322,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"__objToStr","ranges":[{"startOffset":6499,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"__isDate","ranges":[{"startOffset":6602,"endOffset":6695,"count":0}],"isBlockCoverage":false},{"functionName":"__isArray","ranges":[{"startOffset":6724,"endOffset":6819,"count":0}],"isBlockCoverage":false},{"functionName":"__isRegExp","ranges":[{"startOffset":6850,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"__getRegExpFlags","ranges":[{"startOffset":6980,"endOffset":7147,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/decompress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65,"count":1}],"isBlockCoverage":true}]},{"scriptId":"852","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/decode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29916,"count":1}],"isBlockCoverage":true},{"functionName":"DecodeWindowBits","ranges":[{"startOffset":2033,"endOffset":2265,"count":0}],"isBlockCoverage":false},{"functionName":"DecodeVarLenUint8","ranges":[{"startOffset":2337,"endOffset":2549,"count":0}],"isBlockCoverage":false},{"functionName":"MetaBlockLength","ranges":[{"startOffset":2551,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"DecodeMetaBlockLength","ranges":[{"startOffset":2691,"endOffset":3859,"count":0}],"isBlockCoverage":false},{"functionName":"ReadSymbol","ranges":[{"startOffset":3914,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"ReadHuffmanCodeLengths","ranges":[{"startOffset":4352,"endOffset":6284,"count":0}],"isBlockCoverage":false},{"functionName":"ReadHuffmanCode","ranges":[{"startOffset":6286,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"ReadBlockLength","ranges":[{"startOffset":9727,"endOffset":9964,"count":0}],"isBlockCoverage":false},{"functionName":"TranslateShortCodes","ranges":[{"startOffset":9966,"endOffset":10284,"count":0}],"isBlockCoverage":false},{"functionName":"MoveToFront","ranges":[{"startOffset":10286,"endOffset":10411,"count":0}],"isBlockCoverage":false},{"functionName":"InverseMoveToFrontTransform","ranges":[{"startOffset":10413,"endOffset":10676,"count":0}],"isBlockCoverage":false},{"functionName":"HuffmanTreeGroup","ranges":[{"startOffset":10752,"endOffset":11027,"count":0}],"isBlockCoverage":false},{"functionName":"HuffmanTreeGroup.decode","ranges":[{"startOffset":11065,"endOffset":11297,"count":0}],"isBlockCoverage":false},{"functionName":"DecodeContextMap","ranges":[{"startOffset":11300,"endOffset":12653,"count":0}],"isBlockCoverage":false},{"functionName":"DecodeBlockType","ranges":[{"startOffset":12655,"endOffset":13352,"count":0}],"isBlockCoverage":false},{"functionName":"CopyUncompressedBlockToOutput","ranges":[{"startOffset":13354,"endOffset":15854,"count":0}],"isBlockCoverage":false},{"functionName":"JumpToByteBoundary","ranges":[{"startOffset":15976,"endOffset":16136,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompressedSize","ranges":[{"startOffset":16138,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompressBuffer","ranges":[{"startOffset":16414,"endOffset":16871,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":16931,"endOffset":29843,"count":0}],"isBlockCoverage":false}]},{"scriptId":"853","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"BrotliInput","ranges":[{"startOffset":0,"endOffset":72,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliInput.read","ranges":[{"startOffset":103,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliOutput","ranges":[{"startOffset":383,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliOutput.write","ranges":[{"startOffset":483,"endOffset":703,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/bit_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4092,"count":1}],"isBlockCoverage":true},{"functionName":"BrotliBitReader","ranges":[{"startOffset":1090,"endOffset":1239,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliBitReader.reset","ranges":[{"startOffset":1368,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliBitReader.readMoreInput","ranges":[{"startOffset":2447,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliBitReader.fillBitWindow","ranges":[{"startOffset":3507,"endOffset":3761,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliBitReader.readBits","ranges":[{"startOffset":3860,"endOffset":4055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"855","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/dictionary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":702,"endOffset":752,"count":1}],"isBlockCoverage":true}]},{"scriptId":"856","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/dictionary-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756374,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":756329,"endOffset":756372,"count":1}],"isBlockCoverage":true}]},{"scriptId":"857","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/huffman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4252,"count":1}],"isBlockCoverage":true},{"functionName":"HuffmanCode","ranges":[{"startOffset":0,"endOffset":158,"count":0}],"isBlockCoverage":false},{"functionName":"GetNextKey","ranges":[{"startOffset":363,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"ReplicateValue","ranges":[{"startOffset":635,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"NextTableBitSize","ranges":[{"startOffset":979,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"exports.BrotliBuildHuffmanTable","ranges":[{"startOffset":1240,"endOffset":4251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"858","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12215,"count":1}],"isBlockCoverage":true}]},{"scriptId":"859","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/prefix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3330,"count":1}],"isBlockCoverage":true},{"functionName":"PrefixCodeRange","ranges":[{"startOffset":854,"endOffset":943,"count":74}],"isBlockCoverage":true}]},{"scriptId":"860","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/brotli/dec/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10930,"count":1}],"isBlockCoverage":true},{"functionName":"Transform","ranges":[{"startOffset":1230,"endOffset":1579,"count":121},{"startOffset":1451,"endOffset":1489,"count":55},{"startOffset":1539,"endOffset":1577,"count":230}],"isBlockCoverage":true},{"functionName":"ToUpperCase","ranges":[{"startOffset":9550,"endOffset":9890,"count":0}],"isBlockCoverage":false},{"functionName":"exports.transformDictionaryWord","ranges":[{"startOffset":9926,"endOffset":10929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"861","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/main.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71542,"count":1}],"isBlockCoverage":true},{"functionName":"$parcel$interopDefault","ranges":[{"startOffset":95,"endOffset":177,"count":2},{"startOffset":159,"endOffset":170,"count":0}],"isBlockCoverage":true},{"functionName":"$f898ea50f3b38ab8$var$mapClass","ranges":[{"startOffset":65410,"endOffset":65950,"count":0}],"isBlockCoverage":false},{"functionName":"$f898ea50f3b38ab8$var$mapFirst","ranges":[{"startOffset":65991,"endOffset":66358,"count":0}],"isBlockCoverage":false},{"functionName":"$f898ea50f3b38ab8$var$Break","ranges":[{"startOffset":66400,"endOffset":66514,"count":0}],"isBlockCoverage":false},{"functionName":"nextCodePoint","ranges":[{"startOffset":66563,"endOffset":66940,"count":0}],"isBlockCoverage":false},{"functionName":"nextCharClass","ranges":[{"startOffset":66945,"endOffset":67074,"count":0}],"isBlockCoverage":false},{"functionName":"getSimpleBreak","ranges":[{"startOffset":67079,"endOffset":67762,"count":0}],"isBlockCoverage":false},{"functionName":"getPairTableBreak","ranges":[{"startOffset":67767,"endOffset":69624,"count":0}],"isBlockCoverage":false},{"functionName":"nextBreak","ranges":[{"startOffset":69629,"endOffset":71202,"count":0}],"isBlockCoverage":false},{"functionName":"$f898ea50f3b38ab8$var$LineBreaker","ranges":[{"startOffset":71207,"endOffset":71451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"862","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/node_modules/base64-js/lib/b64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3574,"count":1},{"startOffset":3539,"endOffset":3561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84,"endOffset":3507,"count":1},{"startOffset":190,"endOffset":197,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":440,"endOffset":851,"count":5160},{"startOffset":515,"endOffset":546,"count":5053},{"startOffset":551,"endOffset":560,"count":107},{"startOffset":560,"endOffset":589,"count":5053},{"startOffset":589,"endOffset":621,"count":4923},{"startOffset":626,"endOffset":635,"count":130},{"startOffset":635,"endOffset":667,"count":4923},{"startOffset":667,"endOffset":676,"count":0},{"startOffset":676,"endOffset":717,"count":4923},{"startOffset":717,"endOffset":747,"count":966},{"startOffset":747,"endOffset":776,"count":3957},{"startOffset":776,"endOffset":795,"count":1854},{"startOffset":795,"endOffset":848,"count":2103}],"isBlockCoverage":true},{"functionName":"b64ToByteArray","ranges":[{"startOffset":854,"endOffset":2315,"count":1},{"startOffset":951,"endOffset":1025,"count":0},{"startOffset":1372,"endOffset":1375,"count":0},{"startOffset":1406,"endOffset":1409,"count":0},{"startOffset":1626,"endOffset":1642,"count":0},{"startOffset":1757,"endOffset":1981,"count":1290},{"startOffset":2009,"endOffset":2107,"count":0},{"startOffset":2137,"endOffset":2298,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1672,"endOffset":1711,"count":3870}],"isBlockCoverage":true},{"functionName":"uint8ToBase64","ranges":[{"startOffset":2318,"endOffset":3427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"863","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/jpeg-exif/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10361,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":82,"endOffset":177,"count":1},{"startOffset":150,"endOffset":155,"count":0}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":857,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isTiff","ranges":[{"startOffset":1127,"endOffset":1339,"count":0}],"isBlockCoverage":false},{"functionName":"checkAPPn","ranges":[{"startOffset":1550,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"IFDHandler","ranges":[{"startOffset":2166,"endOffset":6155,"count":0}],"isBlockCoverage":false},{"functionName":"EXIFHandler","ranges":[{"startOffset":6348,"endOffset":7722,"count":0}],"isBlockCoverage":false},{"functionName":"APPnHandler","ranges":[{"startOffset":7918,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":8400,"endOffset":8722,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":8880,"endOffset":9040,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":9320,"endOffset":10243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/png-js/png-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12198,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1219,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":1391,"endOffset":1473,"count":0}],"isBlockCoverage":false},{"functionName":"PNG","ranges":[{"startOffset":1477,"endOffset":5283,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5287,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32","ranges":[{"startOffset":5449,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16","ranges":[{"startOffset":5670,"endOffset":5789,"count":0}],"isBlockCoverage":false},{"functionName":"decodePixels","ranges":[{"startOffset":5793,"endOffset":10545,"count":0}],"isBlockCoverage":false},{"functionName":"decodePalette","ranges":[{"startOffset":10549,"endOffset":11031,"count":0}],"isBlockCoverage":false},{"functionName":"copyToImageData","ranges":[{"startOffset":11035,"endOffset":12004,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12008,"endOffset":12194,"count":0}],"isBlockCoverage":false}]},{"scriptId":"865","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifier-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":282,"endOffset":1033,"count":1}],"isBlockCoverage":true},{"functionName":"CsvStringifierFactory","ranges":[{"startOffset":300,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"CsvStringifierFactory.createArrayCsvStringifier","ranges":[{"startOffset":405,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"CsvStringifierFactory.createObjectCsvStringifier","ranges":[{"startOffset":720,"endOffset":996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"866","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1378,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":97,"endOffset":385,"count":1},{"startOffset":161,"endOffset":252,"count":0},{"startOffset":253,"endOffset":342,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":215,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":268,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":398,"endOffset":592,"count":1},{"startOffset":526,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":453,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":744,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayCsvStringifier","ranges":[{"startOffset":812,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayCsvStringifier.getHeaderRecord","ranges":[{"startOffset":1079,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayCsvStringifier.getRecordAsArray","ranges":[{"startOffset":1181,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"867","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/abstract.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":216,"endOffset":1458,"count":1}],"isBlockCoverage":true},{"functionName":"CsvStringifier","ranges":[{"startOffset":234,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"CsvStringifier.getHeaderString","ranges":[{"startOffset":585,"endOffset":743,"count":0}],"isBlockCoverage":false},{"functionName":"CsvStringifier.stringifyRecords","ranges":[{"startOffset":793,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"CsvStringifier.getCsvLine","ranges":[{"startOffset":1056,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"CsvStringifier.joinRecords","ranges":[{"startOffset":1328,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"_validateRecordDelimiter","ranges":[{"startOffset":1504,"endOffset":1705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/field-stringifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":97,"endOffset":385,"count":1},{"startOffset":161,"endOffset":252,"count":0},{"startOffset":253,"endOffset":342,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":215,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":268,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":398,"endOffset":592,"count":2},{"startOffset":526,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":453,"endOffset":492,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":1213,"count":1}],"isBlockCoverage":true},{"functionName":"FieldStringifier","ranges":[{"startOffset":815,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"FieldStringifier.isEmpty","ranges":[{"startOffset":952,"endOffset":1055,"count":0}],"isBlockCoverage":false},{"functionName":"FieldStringifier.quoteField","ranges":[{"startOffset":1101,"endOffset":1181,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1932,"count":1}],"isBlockCoverage":true},{"functionName":"DefaultFieldStringifier","ranges":[{"startOffset":1380,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultFieldStringifier.stringify","ranges":[{"startOffset":1546,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultFieldStringifier.needsQuote","ranges":[{"startOffset":1778,"endOffset":1893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2001,"endOffset":2388,"count":1}],"isBlockCoverage":true},{"functionName":"ForceQuoteFieldStringifier","ranges":[{"startOffset":2076,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"ForceQuoteFieldStringifier.stringify","ranges":[{"startOffset":2248,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"createFieldStringifier","ranges":[{"startOffset":2409,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"_validateFieldDelimiter","ranges":[{"startOffset":2833,"endOffset":3031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"869","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2516,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":97,"endOffset":385,"count":1},{"startOffset":161,"endOffset":252,"count":0},{"startOffset":253,"endOffset":342,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":215,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":268,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":398,"endOffset":592,"count":1},{"startOffset":526,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":453,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":787,"endOffset":2399,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectCsvStringifier","ranges":[{"startOffset":856,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectCsvStringifier.getHeaderRecord","ranges":[{"startOffset":1197,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectCsvStringifier.getRecordAsArray","ranges":[{"startOffset":1405,"endOffset":1560,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectCsvStringifier.getNestedValue","ranges":[{"startOffset":1614,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1920,"endOffset":2056,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2210,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"870","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/lang/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":96,"endOffset":188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"871","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-writer-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1407,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159,"endOffset":1311,"count":1}],"isBlockCoverage":true},{"functionName":"CsvWriterFactory","ranges":[{"startOffset":177,"endOffset":293,"count":1}],"isBlockCoverage":true},{"functionName":"CsvWriterFactory.createArrayCsvWriter","ranges":[{"startOffset":348,"endOffset":756,"count":0}],"isBlockCoverage":false},{"functionName":"CsvWriterFactory.createObjectCsvWriter","ranges":[{"startOffset":813,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"872","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4103,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":743,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2667,"endOffset":4029,"count":1}],"isBlockCoverage":true},{"functionName":"CsvWriter","ranges":[{"startOffset":2685,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"CsvWriter.writeRecords","ranges":[{"startOffset":3025,"endOffset":3715,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3795,"endOffset":3943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"873","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/file-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3758,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":743,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2741,"endOffset":3681,"count":1}],"isBlockCoverage":true},{"functionName":"FileWriter","ranges":[{"startOffset":2759,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"FileWriter.write","ranges":[{"startOffset":3000,"endOffset":3485,"count":0}],"isBlockCoverage":false},{"functionName":"FileWriter.getWriteOption","ranges":[{"startOffset":3529,"endOffset":3655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"874","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/lang/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":978,"count":1}],"isBlockCoverage":true},{"functionName":"__spreadArrays","ranges":[{"startOffset":68,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":405,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":441,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"875","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/userRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3351,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":301,"endOffset":3347,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434,"endOffset":902,"count":1},{"startOffset":837,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":933,"endOffset":1221,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":982,"endOffset":1214,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1161,"endOffset":1193,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1259,"endOffset":1960,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1306,"endOffset":1679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1758,"endOffset":1953,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2018,"endOffset":3096,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2062,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2164,"endOffset":2246,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2306,"endOffset":2680,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2401,"endOffset":2455,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":3089,"count":1}],"isBlockCoverage":true},{"functionName":"db.query","ranges":[{"startOffset":2828,"endOffset":2882,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3182,"endOffset":3342,"count":1}],"isBlockCoverage":true}]},{"scriptId":"876","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/userRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":458,"count":2},{"startOffset":297,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":522,"endOffset":862,"count":3},{"startOffset":648,"endOffset":723,"count":2},{"startOffset":723,"endOffset":859,"count":1}],"isBlockCoverage":true}]},{"scriptId":"878","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/test/volunteeraddRoutes.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":3049,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":499,"endOffset":777,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813,"endOffset":1146,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":867,"endOffset":1139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1188,"endOffset":2231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1248,"endOffset":1526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1589,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1941,"endOffset":2224,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2301,"endOffset":3044,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2363,"endOffset":2768,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2828,"endOffset":3037,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3061,"endOffset":3135,"count":1}],"isBlockCoverage":true}]},{"scriptId":"879","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/Routes/volunteeraddRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2402,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":221,"endOffset":523,"count":1},{"startOffset":387,"endOffset":520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":589,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":956,"endOffset":1671,"count":4},{"startOffset":1043,"endOffset":1072,"count":3},{"startOffset":1073,"endOffset":1099,"count":3},{"startOffset":1101,"endOffset":1453,"count":2},{"startOffset":1453,"endOffset":1549,"count":0},{"startOffset":1549,"endOffset":1668,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1294,"endOffset":1348,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1808,"endOffset":2374,"count":2},{"startOffset":2154,"endOffset":2371,"count":0}],"isBlockCoverage":true}]},{"scriptId":"880","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":false}]},{"scriptId":"881","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10437,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1899,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3666,"endOffset":3741,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3745,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4576,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4823,"endOffset":5003,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5022,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6694,"endOffset":6759,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6784,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7270,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7450,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7571,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7706,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9316,"endOffset":9608,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9767,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9939,"endOffset":10045,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10151,"endOffset":10314,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10346,"endOffset":10434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"882","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3592,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":392,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1401,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2096,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2520,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2996,"endOffset":3589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"883","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":179,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":676,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"884","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1156,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":209,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":736,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":921,"endOffset":1153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"885","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1436,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":294,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1051,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1143,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1257,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1384,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":546,"endOffset":709,"count":8},{"startOffset":613,"endOffset":707,"count":408}],"isBlockCoverage":true}]},{"scriptId":"887","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6113,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0},{"startOffset":815,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1711,"count":26}],"isBlockCoverage":true},{"functionName":"InternalEncoder","ranges":[{"startOffset":1879,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":1985,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2075,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2227,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2342,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2608,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2790,"endOffset":2839,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":2880,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3737,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":3886,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4097,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":5997,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"888","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2113,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2349,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2433,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2497,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2719,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3418,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":3821,"endOffset":5008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9215,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3349,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4130,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4365,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4571,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6283,"endOffset":6744,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6763,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7014,"endOffset":8935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":8969,"endOffset":9212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"890","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"891","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":true}]},{"scriptId":"892","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"893","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21415,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":5438,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":6255,"endOffset":8486,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":8546,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":8853,"endOffset":9204,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":9247,"endOffset":10426,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":10467,"endOffset":11039,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":11125,"endOffset":11442,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":11474,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":16204,"endOffset":17110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":17259,"endOffset":17580,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":17612,"endOffset":20538,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":20568,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":21094,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8288,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":517,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":7}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":510,"count":3}],"isBlockCoverage":true}]},{"scriptId":"896","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":379,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":366,"count":15}],"isBlockCoverage":true}]},{"scriptId":"897","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":762,"count":52}],"isBlockCoverage":true}]},{"scriptId":"898","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":685,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":447,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":433,"count":14}],"isBlockCoverage":true}]},{"scriptId":"900","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":374,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":77,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":109,"endOffset":360,"count":0}],"isBlockCoverage":false}]}],"timestamp":151165.331173,"source-map-cache":{"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/index.js":{"lineLengths":[25,13,0,46,13,3,40,19,23,28,3,3,45,19,23,32,3,3,45,19,23,27,3,3,54,19,23,36,3,3,45,19,23,27,3,3,52,19,23,34,3,3,49,19,23,35,3,3,43,19,23,24,3,3,44,19,23,26,3,3,48,19,23,30,3,3,46,19,23,29,3,3,46,19,23,29,3,3,48,19,23,31,3,3,46,19,23,29,3,3,41,19,23,24,3,3,48,19,23,33,3,3,51,19,23,35,3,3,55,19,23,39,3,3,47,19,23,31,3,3,47,19,23,31,3,3,55,19,23,36,3,3,55,19,23,36,3,3,0,23,3,25,54,23,1,0,3,25,40,23,1,0,3,25,30,23,1,0,3,25,30,23,1,0,3,25,38,23,1,0,3,25,28,23,1,0,3,25,30,23,1,0,3,25,32,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,37,23,1,0,3,25,35,23,1,0,3,25,31,23,1,0,3,25,31,23,1,0,123,0,23,3176,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/base.js":{"lineLengths":[25,13,0,46,13,3,26,0,23,18,0,18,27,0,25,45,29,25,0,7,27,85,36,0,40,25,19,5,0,27,20,0,26,21,32,37,14,20,14,21,7,63,0,0,42,42,59,59,34,34,23,40,0,32,69,5,0,26,29,23,27,91,60,21,17,30,76,0,74,0,67,48,20,36,31,10,80,77,79,63,77,50,63,76,22,79,78,74,79,78,71,77,59,0,0,42,127,0,31,157,22,33,14,31,9,52,49,0,25,72,49,9,0,27,0,22,58,60,75,9,0,69,0,36,50,45,19,81,80,57,77,64,0,0,77,65,16,68,9,0,82,0,68,69,109,16,44,0,46,86,11,0,37,86,11,9,7,0,19,89,86,86,46,0,0,19,24,32,79,30,11,0,34,19,11,14,11,12,80,35,0,18,21,9,7,5,4,0,27,0,25,66,34,0,67,14,40,24,32,23,27,51,9,8,12,14,40,24,19,23,27,33,9,8,5,4,0,27,0,25,87,34,34,33,39,24,0,117,15,15,20,5,0,22,32,27,49,8,5,0,29,18,4,0,27,0,25,40,34,50,12,101,5,4,0,27,0,25,44,17,0,44,21,27,7,5,0,15,4,0,27,0,25,40,17,4,0,27,0,25,38,27,4,0,27,0,25,30,26,3,2,0,82,74,30,22,20,0,25,35,52,43,34,3,0,23,23,39,17,17,0,55,45,0,29,48,70,47,47,67,11,43,14,87,7,0,47,0,29,34,7,12,85,113,89,63,0,63,47,64,39,7,5,78,83,44,0,0,52,0,162,63,21,3,0,20,1,27108,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","Math","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","Date","now","bestPath","oldPos","lastComponent","newPos","extractCommon","join","count","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","buildValues","useLongestToken","exec","ret","path","added","removed","oldPosInc","last","previousComponent","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","push","split","chars","components","nextComponent","reverse","componentPos","componentLen","component","slice","map","oldValue","tmp","finalComponent","pop"],"mappings":"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","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/character.js":{"lineLengths":[25,13,0,46,13,3,30,31,0,23,3,25,49,23,1,0,123,0,23,23,25,5,23,1,25,9,23,4,0,25,38,0,23,45,53,1,880,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/word.js":{"lineLengths":[25,13,0,46,13,3,30,48,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,65,2,25,32,35,29,30,30,28,38,29,29,33,34,30,35,43,39,88,24,18,25,5,23,1,25,9,23,4,0,25,28,0,23,42,32,30,32,3,0,114,2,0,38,97,184,0,47,103,120,33,30,10,5,3,0,16,2,0,45,11,27,5,25,0,27,9,25,3,27,18,25,13,26,5,48,1,0,54,48,1,5824,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/params.js":{"lineLengths":[25,13,0,46,13,3,42,0,23,45,38,32,23,31,32,41,39,7,5,3,0,18,1,1248,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/line.js":{"lineLengths":[25,13,0,46,13,3,30,44,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,18,25,5,23,1,25,9,23,4,0,25,28,0,23,38,37,79,41,3,0,20,129,0,55,27,63,0,0,53,35,0,48,44,12,42,27,7,0,26,5,3,0,18,2,0,46,49,1,0,53,15,27,5,25,0,27,9,25,3,27,18,25,14,26,5,48,1,4160,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","options","stripTrailingCr","replace","retLines","linesAndNewlines","split","length","pop","i","line","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAG,KAAKC,OAAL,CAAaC,eAAhB,EAAiC;AAC/B;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,OAAd,EAAuB,IAAvB,CAAR;AACD;;AAED,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAY,WAAZ,CADvB,CANkC,CASlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAZiC,CAclC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKR,OAAL,CAAaU,cAA3B,EAA2C;AACzCP,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKT,OAAL,CAAaW,gBAAjB,EAAmC;AACjCF,QAAAA,IAAI,GAAGA,IAAI,CAACG,IAAL,EAAP;AACD;;AACDT,MAAAA,QAAQ,CAACU,IAAT,CAAcJ,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CA7BD;;AA+BO,SAASW,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOrB,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIjB,OAAO;AAAG;AAAA;AAAA;;AAAAoB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOf,QAAQ,CAACsB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BhB,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[25,13,0,46,13,3,38,30,0,23,3,25,49,23,1,0,123,0,23,22,25,5,23,1,25,9,23,4,0,25,36,0,23,42,46,2,0,50,53,1,1196,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/css.js":{"lineLengths":[25,13,0,46,13,3,26,25,0,23,3,25,49,23,1,0,123,0,23,17,25,5,23,1,25,9,23,4,0,25,26,0,23,37,38,2,0,44,48,1,1128,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/json.js":{"lineLengths":[25,13,0,46,13,3,28,36,26,0,23,3,25,49,23,1,0,3,25,25,23,1,0,123,0,378,0,23,56,18,25,5,23,1,25,9,23,97,105,0,25,28,0,23,32,19,25,5,23,1,25,8,23,10,0,39,27,21,25,15,64,62,76,27,3,12,29,57,6,28,137,2,0,42,10,29,9,27,5,29,13,27,106,4,2,0,44,48,98,95,0,0,68,22,44,0,17,29,3,0,8,0,41,27,33,5,3,0,23,0,63,20,45,44,0,41,89,5,0,16,27,28,3,0,26,23,3,0,6,27,10,25,38,20,26,44,0,24,13,0,23,32,37,30,7,5,0,22,0,48,27,96,5,0,16,27,10,27,3,0,26,1,8576,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":"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","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/diff/array.js":{"lineLengths":[25,13,0,46,13,3,32,27,0,23,3,25,49,23,1,0,123,0,23,19,25,5,23,1,25,9,23,4,0,25,30,0,23,39,23,2,0,59,15,2,0,47,50,1,1376,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/apply.js":{"lineLengths":[25,13,0,46,13,3,32,36,0,23,3,25,27,23,1,0,3,25,80,23,1,0,123,0,23,38,27,5,25,83,0,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,31,29,68,5,0,25,34,0,0,50,62,28,95,27,3,12,29,27,6,4,21,43,18,17,18,15,5,61,5,0,0,34,49,31,54,60,0,51,31,72,23,0,40,25,11,9,0,16,7,5,0,16,71,0,0,42,24,47,24,43,18,29,7,27,0,29,21,27,5,29,13,27,32,0,65,48,44,14,7,5,0,36,19,80,39,0,0,58,24,0,0,21,0,45,26,64,0,50,0,50,32,54,60,78,0,30,17,37,32,37,34,37,41,48,17,38,82,0,40,29,47,26,9,7,5,37,0,0,20,38,18,23,5,24,19,26,3,0,49,43,3,0,24,63,0,0,41,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,23,0,27,40,0,17,32,5,0,50,16,37,7,0,60,61,18,39,9,0,23,9,7,3,0,17,1,14288,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":"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","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/parse.js":{"lineLengths":[25,13,0,46,13,3,32,0,23,30,27,5,25,83,53,63,16,12,0,25,19,44,0,32,76,0,47,14,21,0,0,73,0,19,32,7,0,10,80,79,0,0,27,42,0,21,0,32,29,0,57,14,37,38,43,58,81,14,12,7,5,66,18,0,0,35,62,0,21,62,46,52,0,36,59,7,0,47,59,10,5,20,53,0,0,24,29,39,90,16,32,76,32,76,16,24,60,59,64,0,30,25,5,0,30,25,5,0,21,24,0,37,84,88,149,14,7,0,94,0,94,36,56,0,32,21,39,24,39,21,24,9,14,14,7,42,0,0,43,24,5,0,46,24,41,0,0,25,39,101,7,0,42,103,7,5,0,16,3,0,30,17,3,0,14,1,13176,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":";;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,OAApB,EAA2C;AAAA;AAAA;AAAA;AAAdC,EAAAA,OAAc,uEAAJ,EAAI;AAChD,MAAIC,OAAO,GAAGF,OAAO,CAACG,KAAR,CAAc,qBAAd,CAAd;AAAA,MACIC,UAAU,GAAGJ,OAAO,CAACK,KAAR,CAAc,sBAAd,KAAyC,EAD1D;AAAA,MAEIC,IAAI,GAAG,EAFX;AAAA,MAGIC,CAAC,GAAG,CAHR;;AAKA,WAASC,UAAT,GAAsB;AACpB,QAAIC,KAAK,GAAG,EAAZ;AACAH,IAAAA,IAAI,CAACI,IAAL,CAAUD,KAAV,EAFoB,CAIpB;;AACA,WAAOF,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzB,UAAIC,IAAI,GAAGV,OAAO,CAACK,CAAD,CAAlB,CADyB,CAGzB;;AACA,UAAK,uBAAD,CAA0BM,IAA1B,CAA+BD,IAA/B,CAAJ,EAA0C;AACxC;AACD,OANwB,CAQzB;;;AACA,UAAIE,MAAM,GAAI,0CAAD,CAA6CC,IAA7C,CAAkDH,IAAlD,CAAb;;AACA,UAAIE,MAAJ,EAAY;AACVL,QAAAA,KAAK,CAACA,KAAN,GAAcK,MAAM,CAAC,CAAD,CAApB;AACD;;AAEDP,MAAAA,CAAC;AACF,KApBmB,CAsBpB;AACA;;;AACAS,IAAAA,eAAe,CAACP,KAAD,CAAf;AACAO,IAAAA,eAAe,CAACP,KAAD,CAAf,CAzBoB,CA2BpB;;AACAA,IAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;;AAEA,WAAOV,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzB,UAAIC,KAAI,GAAGV,OAAO,CAACK,CAAD,CAAlB;;AAEA,UAAK,gCAAD,CAAmCM,IAAnC,CAAwCD,KAAxC,CAAJ,EAAmD;AACjD;AACD,OAFD,MAEO,IAAK,KAAD,CAAQC,IAAR,CAAaD,KAAb,CAAJ,EAAwB;AAC7BH,QAAAA,KAAK,CAACQ,KAAN,CAAYP,IAAZ,CAAiBQ,SAAS,EAA1B;AACD,OAFM,MAEA,IAAIN,KAAI,IAAIX,OAAO,CAACkB,MAApB,EAA4B;AACjC;AACA,cAAM,IAAIC,KAAJ,CAAU,mBAAmBb,CAAC,GAAG,CAAvB,IAA4B,GAA5B,GAAkCc,IAAI,CAACC,SAAL,CAAeV,KAAf,CAA5C,CAAN;AACD,OAHM,MAGA;AACLL,QAAAA,CAAC;AACF;AACF;AACF,GAlD+C,CAoDhD;AACA;;;AACA,WAASS,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,QAAMc,UAAU,GAAI,uBAAD,CAA0BR,IAA1B,CAA+Bb,OAAO,CAACK,CAAD,CAAtC,CAAnB;;AACA,QAAIgB,UAAJ,EAAgB;AACd,UAAIC,SAAS,GAAGD,UAAU,CAAC,CAAD,CAAV,KAAkB,KAAlB,GAA0B,KAA1B,GAAkC,KAAlD;AACA,UAAME,IAAI,GAAGF,UAAU,CAAC,CAAD,CAAV,CAAcpB,KAAd,CAAoB,IAApB,EAA0B,CAA1B,CAAb;AACA,UAAIuB,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,OAAhB,EAAyB,IAAzB,CAAf;;AACA,UAAK,QAAD,CAAWd,IAAX,CAAgBa,QAAhB,CAAJ,EAA+B;AAC7BA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBF,QAAQ,CAACf,MAAT,GAAkB,CAArC,CAAX;AACD;;AACDF,MAAAA,KAAK,CAACe,SAAS,GAAG,UAAb,CAAL,GAAgCE,QAAhC;AACAjB,MAAAA,KAAK,CAACe,SAAS,GAAG,QAAb,CAAL,GAA8B,CAACC,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAZ,EAAgBI,IAAhB,EAA9B;AAEAtB,MAAAA,CAAC;AACF;AACF,GApE+C,CAsEhD;AACA;;;AACA,WAASW,SAAT,GAAqB;AACnB,QAAIY,gBAAgB,GAAGvB,CAAvB;AAAA,QACIwB,eAAe,GAAG7B,OAAO,CAACK,CAAC,EAAF,CAD7B;AAAA,QAEIyB,WAAW,GAAGD,eAAe,CAAC5B,KAAhB,CAAsB,4CAAtB,CAFlB;AAIA,QAAI8B,IAAI,GAAG;AACTC,MAAAA,QAAQ,EAAE,CAACF,WAAW,CAAC,CAAD,CADb;AAETG,MAAAA,QAAQ,EAAE,OAAOH,WAAW,CAAC,CAAD,CAAlB,KAA0B,WAA1B,GAAwC,CAAxC,GAA4C,CAACA,WAAW,CAAC,CAAD,CAFzD;AAGTI,MAAAA,QAAQ,EAAE,CAACJ,WAAW,CAAC,CAAD,CAHb;AAITK,MAAAA,QAAQ,EAAE,OAAOL,WAAW,CAAC,CAAD,CAAlB,KAA0B,WAA1B,GAAwC,CAAxC,GAA4C,CAACA,WAAW,CAAC,CAAD,CAJzD;AAKTM,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,cAAc,EAAE;AANP,KAAX,CALmB,CAcnB;AACA;AACA;;AACA,QAAIN,IAAI,CAACE,QAAL,KAAkB,CAAtB,EAAyB;AACvBF,MAAAA,IAAI,CAACC,QAAL,IAAiB,CAAjB;AACD;;AACD,QAAID,IAAI,CAACI,QAAL,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,IAAI,CAACG,QAAL,IAAiB,CAAjB;AACD;;AAED,QAAII,QAAQ,GAAG,CAAf;AAAA,QACIC,WAAW,GAAG,CADlB;;AAEA,WAAOlC,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2BJ,CAAC,EAA5B,EAAgC;AAC9B;AACA;AACA,UAAIL,OAAO,CAACK,CAAD,CAAP,CAAWmC,OAAX,CAAmB,MAAnB,MAA+B,CAA/B,IACMnC,CAAC,GAAG,CAAJ,GAAQL,OAAO,CAACS,MADtB,IAEKT,OAAO,CAACK,CAAC,GAAG,CAAL,CAAP,CAAemC,OAAf,CAAuB,MAAvB,MAAmC,CAFxC,IAGKxC,OAAO,CAACK,CAAC,GAAG,CAAL,CAAP,CAAemC,OAAf,CAAuB,IAAvB,MAAiC,CAH1C,EAG6C;AACzC;AACH;;AACD,UAAIC,SAAS,GAAIzC,OAAO,CAACK,CAAD,CAAP,CAAWI,MAAX,IAAqB,CAArB,IAA0BJ,CAAC,IAAKL,OAAO,CAACS,MAAR,GAAiB,CAAlD,GAAwD,GAAxD,GAA8DT,OAAO,CAACK,CAAD,CAAP,CAAW,CAAX,CAA9E;;AAEA,UAAIoC,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,GAAnC,IAA0CA,SAAS,KAAK,GAAxD,IAA+DA,SAAS,KAAK,IAAjF,EAAuF;AACrFV,QAAAA,IAAI,CAACK,KAAL,CAAW5B,IAAX,CAAgBR,OAAO,CAACK,CAAD,CAAvB;AACA0B,QAAAA,IAAI,CAACM,cAAL,CAAoB7B,IAApB,CAAyBN,UAAU,CAACG,CAAD,CAAV,IAAiB,IAA1C;;AAEA,YAAIoC,SAAS,KAAK,GAAlB,EAAuB;AACrBH,UAAAA,QAAQ;AACT,SAFD,MAEO,IAAIG,SAAS,KAAK,GAAlB,EAAuB;AAC5BF,UAAAA,WAAW;AACZ,SAFM,MAEA,IAAIE,SAAS,KAAK,GAAlB,EAAuB;AAC5BH,UAAAA,QAAQ;AACRC,UAAAA,WAAW;AACZ;AACF,OAZD,MAYO;AACL;AACD;AACF,KApDkB,CAsDnB;;;AACA,QAAI,CAACD,QAAD,IAAaP,IAAI,CAACI,QAAL,KAAkB,CAAnC,EAAsC;AACpCJ,MAAAA,IAAI,CAACI,QAAL,GAAgB,CAAhB;AACD;;AACD,QAAI,CAACI,WAAD,IAAgBR,IAAI,CAACE,QAAL,KAAkB,CAAtC,EAAyC;AACvCF,MAAAA,IAAI,CAACE,QAAL,GAAgB,CAAhB;AACD,KA5DkB,CA8DnB;;;AACA,QAAIlC,OAAO,CAACkB,MAAZ,EAAoB;AAClB,UAAIqB,QAAQ,KAAKP,IAAI,CAACI,QAAtB,EAAgC;AAC9B,cAAM,IAAIjB,KAAJ,CAAU,sDAAsDU,gBAAgB,GAAG,CAAzE,CAAV,CAAN;AACD;;AACD,UAAIW,WAAW,KAAKR,IAAI,CAACE,QAAzB,EAAmC;AACjC,cAAM,IAAIf,KAAJ,CAAU,wDAAwDU,gBAAgB,GAAG,CAA3E,CAAV,CAAN;AACD;AACF;;AAED,WAAOG,IAAP;AACD;;AAED,SAAO1B,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzBH,IAAAA,UAAU;AACX;;AAED,SAAOF,IAAP;AACD","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[25,13,0,46,13,3,30,0,23,63,65,47,8,25,8,23,27,25,32,31,22,30,43,30,22,14,28,79,71,0,0,43,27,7,0,30,5,0,29,30,27,82,31,0,0,43,30,7,0,31,24,80,51,0,4,1,3156,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/merge.js":{"lineLengths":[25,13,0,46,13,3,38,22,0,23,3,25,29,23,1,0,3,25,27,23,1,0,3,25,33,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,30,27,28,25,34,47,47,0,31,29,10,25,3,0,31,29,10,25,3,1,0,36,31,35,98,83,34,0,35,43,3,0,47,33,87,63,63,57,57,42,51,41,41,37,37,12,38,79,79,73,73,5,3,0,17,20,22,21,23,0,78,48,24,6,54,24,6,0,49,65,57,18,66,56,65,61,20,68,12,38,24,73,20,101,20,17,8,115,20,18,33,5,3,0,13,1,0,33,34,55,14,33,11,31,0,33,14,31,9,33,19,31,18,8,5,0,16,74,5,0,12,31,9,29,0,31,13,29,7,31,22,29,41,6,3,0,15,1,0,33,70,1,0,43,24,16,10,26,12,17,20,6,3,1,0,34,90,1,0,34,10,28,28,37,28,21,4,1,0,75,91,74,14,23,21,12,4,15,24,22,12,34,0,35,118,0,78,45,48,0,117,26,38,67,31,22,0,29,22,0,31,0,29,0,31,20,29,29,31,17,29,7,31,25,29,28,67,31,23,0,29,24,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,29,67,31,33,67,32,39,46,25,35,19,20,12,25,64,5,46,0,0,29,30,22,1,0,42,38,42,0,58,72,8,29,7,27,0,29,10,27,5,29,20,27,112,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,18,0,13,15,29,7,27,0,29,10,27,5,29,20,27,114,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,21,0,13,5,13,27,5,25,0,27,8,25,3,27,13,25,30,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,16,0,11,3,0,42,1,0,43,38,54,0,28,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,26,10,85,3,1,0,38,23,19,19,15,17,5,1,0,45,78,44,26,20,3,1,0,39,46,44,26,3,1,0,31,15,46,0,44,145,0,47,22,5,0,32,21,20,12,12,5,3,0,13,1,0,46,19,18,21,29,25,0,80,42,85,0,27,12,5,0,57,23,86,50,0,28,24,0,33,29,44,7,5,0,47,27,20,12,24,5,3,0,70,22,3,0,19,19,3,0,44,44,3,0,10,19,20,4,1,0,30,49,37,11,1,0,58,35,82,0,63,19,5,3,0,23,14,1,0,37,19,19,33,35,51,56,0,35,55,39,16,31,9,7,0,35,55,39,16,31,9,7,12,75,19,7,0,75,19,7,5,5,10,23,22,4,1,34588,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/create.js":{"lineLengths":[25,13,0,46,13,3,42,34,50,34,0,23,3,25,31,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,99,17,17,3,0,47,24,3,0,12,27,5,25,0,27,7,25,3,27,12,25,28,0,14,11,3,0,13,14,13,53,0,32,39,25,7,3,0,17,24,24,20,18,18,0,27,29,25,6,26,78,26,0,43,31,20,0,29,53,27,31,32,32,0,19,97,43,43,9,29,0,0,31,0,29,0,31,18,29,27,31,15,29,7,31,25,29,34,51,46,0,0,26,32,14,32,7,12,52,26,76,73,35,25,0,33,24,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,32,16,35,25,0,33,37,68,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,54,0,22,36,60,36,60,27,12,0,72,38,51,51,86,0,72,99,80,80,13,0,70,60,13,11,0,27,28,28,24,9,7,0,30,30,5,4,0,41,29,10,27,7,3,0,10,29,29,25,25,16,4,1,0,28,28,44,3,0,15,0,45,43,3,0,82,109,109,0,47,83,59,64,0,30,25,5,0,30,25,5,0,112,36,3,0,31,1,0,103,111,1,0,79,96,1,15624,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","Array","isArray","join","ret","apply","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/util/array.js":{"lineLengths":[25,13,0,46,13,3,32,42,0,23,27,30,17,3,0,31,1,0,40,36,17,3,0,42,32,19,5,3,0,14,1,1476,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/patch/reverse.js":{"lineLengths":[25,13,0,46,13,3,36,0,341,0,534,0,209,0,23,40,39,55,3,0,10,29,35,27,27,47,43,47,43,56,16,34,34,34,34,46,46,36,22,41,27,39,27,16,13,0,36,22,41,27,39,27,16,13,0,21,12,10,8,6,4,1,3000,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/patch/reverse.js"],"names":["reversePatch","structuredPatch","Array","isArray","map","reverse","oldFileName","newFileName","oldHeader","newHeader","hunks","hunk","oldLines","newLines","oldStart","newStart","linedelimiters","lines","l","startsWith","slice"],"mappings":";;;;;;;;;;;;;;;AAAO,SAASA,YAAT,CAAsBC,eAAtB,EAAuC;AAC5C,MAAIC,KAAK,CAACC,OAAN,CAAcF,eAAd,CAAJ,EAAoC;AAClC,WAAOA,eAAe,CAACG,GAAhB,CAAoBJ,YAApB,EAAkCK,OAAlC,EAAP;AACD;;AAED;AAAA;AAAA;AAAA;AACKJ,IAAAA,eADL;AAEEK,MAAAA,WAAW,EAAEL,eAAe,CAACM,WAF/B;AAGEC,MAAAA,SAAS,EAAEP,eAAe,CAACQ,SAH7B;AAIEF,MAAAA,WAAW,EAAEN,eAAe,CAACK,WAJ/B;AAKEG,MAAAA,SAAS,EAAER,eAAe,CAACO,SAL7B;AAMEE,MAAAA,KAAK,EAAET,eAAe,CAACS,KAAhB,CAAsBN,GAAtB,CAA0B,UAAAO,IAAI,EAAI;AACvC,eAAO;AACLC,UAAAA,QAAQ,EAAED,IAAI,CAACE,QADV;AAELC,UAAAA,QAAQ,EAAEH,IAAI,CAACI,QAFV;AAGLF,UAAAA,QAAQ,EAAEF,IAAI,CAACC,QAHV;AAILG,UAAAA,QAAQ,EAAEJ,IAAI,CAACG,QAJV;AAKLE,UAAAA,cAAc,EAAEL,IAAI,CAACK,cALhB;AAMLC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWb,GAAX,CAAe,UAAAc,CAAC,EAAI;AACzB,gBAAIA,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,gBAAIF,CAAC,CAACC,UAAF,CAAa,GAAb,CAAJ,EAAuB;AAAE;AAAA;AAAA;AAAA;AAAWD,gBAAAA,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAX;AAAA;AAA0B;;AACnD,mBAAOF,CAAP;AACD,WAJM;AANF,SAAP;AAYD,OAbM;AANT;AAAA;AAqBD","sourcesContent":["export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,65,39,15,13,16,0,44,24,0,23,20,32,21,12,20,5,0,40,3,0,13,1,1644,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/lib/convert/xml.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,39,15,0,44,28,0,23,24,32,24,5,0,39,0,23,25,32,25,5,3,0,22,1,0,24,12,31,30,30,32,11,1,2564,0],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/index.js":{"lineLengths":[13,62,202,40,32,28,42,34,41,39,49,39,112,116,37,106,47,119,41,112,48,61,1,44,57,1,42,59,1,45,55,1,49,62,1,45,58,1,65,36,69,38,46,26,3,40,27,29,3,37,16,13,23,15,27,19,35,16,29,20,37,25,38,31,35,3,33,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAqDA,wCAKC;AAsBD,gCAKC;AAqBD,4BAKC;AAkDD,0CAKC;AAqBD,kCAKC;AAhMD,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAEzC,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AAQzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AACjB,yCAAoC;AAA3B,mGAAA,MAAM,OAAA;AAyBf,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/index.js":{"lineLengths":[13,72,62,2,62,221,70,71,37,43,47,49,63,40,58,21,5,52,2,30,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,76,36,41,46,32,49,21,32,26,60,63,45,61,34,45,47,93,24,42,51,27,70,33,5,35,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,35,7,2,28,46,19,21,19,30,35,43,2,33,21,17,48,63,60,60,63,39,25,5,51,2,34,52,41,50,68,68,61,66,2,74,72,69,62,83,24,42,48,47,41,44,27,5,16,2,22,40,31,44,74,17,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,67,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,58,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,30,38,43,26,17,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,41,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,68,5,20,67,37,20,29,36,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,78,49,55,68,9,18,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,44,42,33,15,34,39,39,74,27,17,41,74,73,21,26,40,21,17,46,66,17,53,78,49,17,15,68,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,57,5,1,30,21,35,103,41,112,45,118,20,37,40,46,52,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js":{"lineLengths":[13,62,36,37,41,38,47,5,46,51,5,2,48,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AAC7B,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA;AAVY,QAAA,kBAAkB,sBAU9B","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js":{"lineLengths":[13,30,62,21,65,47,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,11,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,19,29,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,49,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,83,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,46,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,106,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,74,5,1,18,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":";AAAA,8BAA8B;;;AAE9B,iEAAmD;AAEnD,+CAAwC;AAwCxC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAc,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;AAC7D,MAAM,aAAa,GAAG,CAAC,CAAS,EAAoB,EAAE,CACpD,KAAK,CAAC,GAAG,CAAC,CAAgB,CAAC,CAAA;AAE7B,iEAAiE;AACjE,gEAAgE;AAChE,0CAA0C;AAC1C,uEAAuE;AACvE,MAAM,gBAAgB,GAAG,2BAA2B,CAAA;AACpD,MAAM,UAAU,GAAG,SAAS,CAAA;AAE5B,uEAAuE;AACvE,qEAAqE;AACrE,qEAAqE;AACrE,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;AAC3C,0DAA0D;AAC1D,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;AACrC,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAA;AAC7C,MAAM,YAAY,GAAG,CAAC,CAAS,EAAE,EAAE,CACjC,CAAC,CAAC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAA;AAE/C,gCAAgC;AAChC,MAAM,KAAK,GAAG,MAAM,CAAA;AAEpB,gCAAgC;AAChC,MAAM,IAAI,GAAG,KAAK,GAAG,IAAI,CAAA;AACzB,0EAA0E;AAC1E,sCAAsC;AACtC,MAAM,WAAW,GAAG,KAAK,GAAG,IAAI,CAAA;AAEhC,yEAAyE;AACzE,2DAA2D;AAE3D,MAAa,GAAG;IACd,IAAI,CAAoB;IACf,KAAK,CAAK;IAEnB,SAAS,CAAU;IACnB,MAAM,GAAY,KAAK,CAAA;IACvB,MAAM,GAAqB,EAAE,CAAA;IACpB,OAAO,CAAM;IACb,YAAY,CAAQ;IAC7B,KAAK,CAAO;IACZ,WAAW,GAAY,KAAK,CAAA;IAC5B,QAAQ,CAAkB;IAC1B,SAAS,CAAS;IAClB,kDAAkD;IAClD,uCAAuC;IACvC,SAAS,GAAY,KAAK,CAAA;IAE1B,YACE,IAAwB,EACxB,MAAY,EACZ,UAA4B,EAAE;QAE9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,kCAAkC;QAClC,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAA;QACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA;QACxD,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IACnE,CAAC;IAED,IAAI,QAAQ;QACV,qBAAqB;QACrB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC,SAAS,CAAA;QACvD,oBAAoB;QACpB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,IAAI,OAAO,CAAC,KAAK,QAAQ;gBAAE,SAAQ;YACnC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ;gBAAE,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAA;SACzD;QACD,wEAAwE;QACxE,OAAO,IAAI,CAAC,SAAS,CAAA;IACvB,CAAC;IAED,2BAA2B;IAC3B,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC,SAAS,CAAA;QACvD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;SACnE;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,SAAS;gBACpB,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAA;SACrE;IACH,CAAC;IAED,SAAS;QACP,qBAAqB;QACrB,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;QACpE,IAAI,IAAI,CAAC,WAAW;YAAE,OAAO,IAAI,CAAA;QACjC,oBAAoB;QAEpB,wCAAwC;QACxC,IAAI,CAAC,QAAQ,EAAE,CAAA;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAAkB,CAAA;QACtB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE;YAC7B,IAAI,CAAC,CAAC,IAAI,KAAK,GAAG;gBAAE,SAAQ;YAC5B,qEAAqE;YACrE,IAAI,CAAC,GAAoB,CAAC,CAAA;YAC1B,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAA;YAClB,OAAO,EAAE,EAAE;gBACT,KACE,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,EAC1B,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,EAChC,CAAC,EAAE,EACH;oBACA,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE;wBAC3B,qBAAqB;wBACrB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;4BAC5B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;yBAChD;wBACD,oBAAoB;wBACpB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;qBAC1B;iBACF;gBACD,CAAC,GAAG,EAAE,CAAA;gBACN,EAAE,GAAG,CAAC,CAAC,OAAO,CAAA;aACf;SACF;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,IAAI,CAAC,GAAG,KAAuB;QAC7B,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;YACrB,IAAI,CAAC,KAAK,EAAE;gBAAE,SAAQ;YACtB,qBAAqB;YACrB,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE;gBACtE,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAA;aACtC;YACD,oBAAoB;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACpB;IACH,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GACP,IAAI,CAAC,IAAI,KAAK,IAAI;YAChB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAE,CAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAC/D,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACjD,IACE,IAAI,CAAC,KAAK,EAAE;YACZ,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK;gBAClB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,EACzD;YACA,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;SACb;QACD,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI;YAAE,OAAO,IAAI,CAAA;QACpC,kDAAkD;QAClD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;YAAE,OAAO,KAAK,CAAA;QAC1C,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC;YAAE,OAAO,IAAI,CAAA;QACxC,yEAAyE;QACzE,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAA;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;YAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACtB,IAAI,CAAC,CAAC,EAAE,YAAY,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;gBAC3C,OAAO,KAAK,CAAA;aACb;SACF;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,KAAK;QACH,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI;YAAE,OAAO,IAAI,CAAA;QACpC,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,GAAG;YAAE,OAAO,IAAI,CAAA;QAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE;YAAE,OAAO,KAAK,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAA;QAC5C,0CAA0C;QAC1C,qBAAqB;QACrB,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QACxD,oBAAoB;QACpB,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,GAAG,CAAC,CAAA;IACrC,CAAC;IAED,MAAM,CAAC,IAAkB;QACvB,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;IAClC,CAAC;IAED,KAAK,CAAC,MAAW;QACf,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;QACpC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACZ;QACD,OAAO,CAAC,CAAA;IACV,CAAC;IAED,MAAM,CAAC,SAAS,CACd,GAAW,EACX,GAAQ,EACR,GAAW,EACX,GAAqB;QAErB,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,OAAO,GAAG,KAAK,CAAA;QACnB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAA;QACnB,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE;YACrB,qDAAqD;YACrD,IAAI,CAAC,GAAG,GAAG,CAAA;YACX,IAAI,GAAG,GAAG,EAAE,CAAA;YACZ,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;gBACrB,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAA;gBACzB,2DAA2D;gBAC3D,0BAA0B;gBAC1B,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;oBAC1B,QAAQ,GAAG,CAAC,QAAQ,CAAA;oBACpB,GAAG,IAAI,CAAC,CAAA;oBACR,SAAQ;iBACT;gBAED,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,UAAU,GAAG,CAAC,EAAE;wBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;4BAC1B,QAAQ,GAAG,IAAI,CAAA;yBAChB;qBACF;yBAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAE;wBAC3D,OAAO,GAAG,KAAK,CAAA;qBAChB;oBACD,GAAG,IAAI,CAAC,CAAA;oBACR,SAAQ;iBACT;qBAAM,IAAI,CAAC,KAAK,GAAG,EAAE;oBACpB,OAAO,GAAG,IAAI,CAAA;oBACd,UAAU,GAAG,CAAC,CAAA;oBACd,QAAQ,GAAG,KAAK,CAAA;oBAChB,GAAG,IAAI,CAAC,CAAA;oBACR,SAAQ;iBACT;gBAED,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBAC3D,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;oBACb,GAAG,GAAG,EAAE,CAAA;oBACR,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;oBAC3B,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;oBACnC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;oBACb,SAAQ;iBACT;gBACD,GAAG,IAAI,CAAC,CAAA;aACT;YACD,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACb,OAAO,CAAC,CAAA;SACT;QAED,wCAAwC;QACxC,uBAAuB;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;QACf,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC7B,MAAM,KAAK,GAAU,EAAE,CAAA;QACvB,IAAI,GAAG,GAAG,EAAE,CAAA;QACZ,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;YACrB,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAA;YACzB,2DAA2D;YAC3D,0BAA0B;YAC1B,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;gBAC1B,QAAQ,GAAG,CAAC,QAAQ,CAAA;gBACpB,GAAG,IAAI,CAAC,CAAA;gBACR,SAAQ;aACT;YAED,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,KAAK,UAAU,GAAG,CAAC,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;wBAC1B,QAAQ,GAAG,IAAI,CAAA;qBAChB;iBACF;qBAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAE;oBAC3D,OAAO,GAAG,KAAK,CAAA;iBAChB;gBACD,GAAG,IAAI,CAAC,CAAA;gBACR,SAAQ;aACT;iBAAM,IAAI,CAAC,KAAK,GAAG,EAAE;gBACpB,OAAO,GAAG,IAAI,CAAA;gBACd,UAAU,GAAG,CAAC,CAAA;gBACd,QAAQ,GAAG,KAAK,CAAA;gBAChB,GAAG,IAAI,CAAC,CAAA;gBACR,SAAQ;aACT;YAED,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACd,GAAG,GAAG,EAAE,CAAA;gBACR,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACd,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;gBACnC,SAAQ;aACT;YACD,IAAI,CAAC,KAAK,GAAG,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACd,GAAG,GAAG,EAAE,CAAA;gBACR,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;gBAChB,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;gBACzB,SAAQ;aACT;YACD,IAAI,CAAC,KAAK,GAAG,EAAE;gBACb,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAA;iBACrB;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACd,GAAG,GAAG,EAAE,CAAA;gBACR,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,CAAA;gBACxB,OAAO,CAAC,CAAA;aACT;YACD,GAAG,IAAI,CAAC,CAAA;SACT;QAED,qBAAqB;QACrB,kEAAkE;QAClE,iCAAiC;QACjC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAA;QACf,GAAG,CAAC,SAAS,GAAG,SAAS,CAAA;QACzB,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;QACrC,OAAO,CAAC,CAAA;IACV,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAAe,EAAE,UAA4B,EAAE;QAC7D,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;QAC7C,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;QACvC,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,oEAAoE;IACpE,iBAAiB;IACjB,WAAW;QACT,gCAAgC;QAChC,qBAAqB;QACrB,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QACxD,oBAAoB;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;QAC5B,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;QACzD,+DAA+D;QAC/D,mEAAmE;QACnE,sCAAsC;QACtC,MAAM,QAAQ,GACZ,QAAQ;YACR,IAAI,CAAC,SAAS;YACd,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;gBACnB,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe;gBAC9B,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;QAC9C,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;QACpE,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;YACjD,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,IAAI;SACZ,CAAC,CAAA;IACJ,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAA;IACtB,CAAC;IAED,qEAAqE;IACrE,qEAAqE;IACrE,yEAAyE;IACzE,sEAAsE;IACtE,qEAAqE;IACrE,wEAAwE;IACxE,oEAAoE;IACpE,0DAA0D;IAC1D,EAAE;IACF,uCAAuC;IACvC,4BAA4B;IAC5B,wDAAwD;IACxD,uCAAuC;IACvC,8CAA8C;IAC9C,UAAU;IACV,4BAA4B;IAC5B,YAAY;IACZ,EAAE;IACF,mEAAmE;IACnE,wBAAwB;IACxB,iDAAiD;IACjD,8BAA8B;IAC9B,8DAA8D;IAC9D,uCAAuC;IACvC,8CAA8C;IAC9C,UAAU;IACV,gDAAgD;IAChD,iBAAiB;IACjB,EAAE;IACF,0EAA0E;IAC1E,2EAA2E;IAC3E,2EAA2E;IAC3E,eAAe;IACf,EAAE;IACF,wEAAwE;IACxE,4DAA4D;IAC5D,iEAAiE;IACjE,4BAA4B;IAC5B,8DAA8D;IAC9D,6CAA6C;IAC7C,oDAAoD;IACpD,EAAE;IACF,uEAAuE;IACvE,gEAAgE;IAChE,EAAE;IACF,sEAAsE;IACtE,qCAAqC;IACrC,EAAE;IACF,0EAA0E;IAC1E,2EAA2E;IAC3E,EAAE;IACF,kBAAkB;IAClB,+CAA+C;IAC/C,4CAA4C;IAC5C,uEAAuE;IACvE,EAAE;IACF,6EAA6E;IAC7E,0EAA0E;IAC1E,sEAAsE;IACtE,sCAAsC;IACtC,EAAE;IACF,yEAAyE;IACzE,oEAAoE;IACpE,0CAA0C;IAC1C,EAAE;IACF,2BAA2B;IAC3B,sEAAsE;IACtE,qEAAqE;IACrE,uEAAuE;IACvE,cAAc,CACZ,QAAkB;QAElB,MAAM,GAAG,GAAG,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAA;QAC3C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI;YAAE,IAAI,CAAC,SAAS,EAAE,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,CAAA;YAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;iBACpB,GAAG,CAAC,CAAC,CAAC,EAAE;gBACP,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,GAC5B,OAAO,CAAC,KAAK,QAAQ;oBACnB,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;oBAC5C,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;gBAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAA;gBAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAA;gBAClC,OAAO,EAAE,CAAA;YACX,CAAC,CAAC;iBACD,IAAI,CAAC,EAAE,CAAC,CAAA;YAEX,IAAI,KAAK,GAAG,EAAE,CAAA;YACd,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBAClB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACtC,+DAA+D;oBAC/D,+CAA+C;oBAE/C,gEAAgE;oBAChE,+CAA+C;oBAC/C,MAAM,cAAc,GAClB,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;oBAC1D,IAAI,CAAC,cAAc,EAAE;wBACnB,MAAM,GAAG,GAAG,eAAe,CAAA;wBAC3B,sDAAsD;wBACtD,oBAAoB;wBACpB,MAAM,UAAU;wBACd,uDAAuD;wBACvD,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/B,8CAA8C;4BAC9C,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;4BACjD,gDAAgD;4BAChD,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;wBACtD,2DAA2D;wBAC3D,4CAA4C;wBAC5C,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;wBAE7D,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAA;qBACpE;iBACF;aACF;YAED,6DAA6D;YAC7D,IAAI,GAAG,GAAG,EAAE,CAAA;YACZ,IACE,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,WAAW;gBACtB,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,GAAG,EAC1B;gBACA,GAAG,GAAG,WAAW,CAAA;aAClB;YACD,MAAM,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAA;YAC/B,OAAO;gBACL,KAAK;gBACL,IAAA,sBAAQ,EAAC,GAAG,CAAC;gBACb,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;gBACnC,IAAI,CAAC,MAAM;aACZ,CAAA;SACF;QAED,iEAAiE;QACjE,iEAAiE;QACjE,oCAAoC;QAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,CAAA;QACvD,uBAAuB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAA;QACrD,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;QAEnC,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;YAChE,mEAAmE;YACnE,2BAA2B;YAC3B,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;YACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;YAC1B,OAAO,CAAC,CAAC,EAAE,IAAA,sBAAQ,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;SACpD;QAED,mCAAmC;QACnC,IAAI,cAAc,GAChB,CAAC,QAAQ,IAAI,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU;YACzC,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;QAC/B,IAAI,cAAc,KAAK,IAAI,EAAE;YAC3B,cAAc,GAAG,EAAE,CAAA;SACpB;QACD,IAAI,cAAc,EAAE;YAClB,IAAI,GAAG,MAAM,IAAI,OAAO,cAAc,KAAK,CAAA;SAC5C;QAED,sDAAsD;QACtD,IAAI,KAAK,GAAG,EAAE,CAAA;QACd,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YACvC,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAA;SACjE;aAAM;YACL,MAAM,KAAK,GACT,IAAI,CAAC,IAAI,KAAK,GAAG;gBACf,CAAC,CAAC,iDAAiD;oBACjD,IAAI;wBACJ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;wBACvD,IAAI;wBACJ,GAAG;gBACL,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG;oBACnB,CAAC,CAAC,GAAG;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG;wBACnB,CAAC,CAAC,IAAI;wBACN,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,cAAc;4BACrC,CAAC,CAAC,GAAG;4BACL,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,cAAc;gCACrC,CAAC,CAAC,IAAI;gCACN,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAA;YACrB,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAA;SAC7B;QACD,OAAO;YACL,KAAK;YACL,IAAA,sBAAQ,EAAC,IAAI,CAAC;YACd,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YACnC,IAAI,CAAC,MAAM;SACZ,CAAA;IACH,CAAC;IAED,cAAc,CAAC,GAAY;QACzB,OAAO,IAAI,CAAC,MAAM;aACf,GAAG,CAAC,CAAC,CAAC,EAAE;YACP,+CAA+C;YAC/C,qBAAqB;YACrB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;aAChD;YACD,oBAAoB;YACpB,iEAAiE;YACjE,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAA;YAClC,OAAO,EAAE,CAAA;QACX,CAAC,CAAC;aACD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrD,IAAI,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED,MAAM,CAAC,UAAU,CACf,IAAY,EACZ,QAA6B,EAC7B,UAAmB,KAAK;QAExB,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,EAAE,GAAG,EAAE,CAAA;QACX,IAAI,KAAK,GAAG,KAAK,CAAA;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACxB,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,KAAK,CAAA;gBAChB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;gBACzC,SAAQ;aACT;YACD,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,EAAE,IAAI,MAAM,CAAA;iBACb;qBAAM;oBACL,QAAQ,GAAG,IAAI,CAAA;iBAChB;gBACD,SAAQ;aACT;YACD,IAAI,CAAC,KAAK,GAAG,EAAE;gBACb,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAA,iCAAU,EAAC,IAAI,EAAE,CAAC,CAAC,CAAA;gBAC7D,IAAI,QAAQ,EAAE;oBACZ,EAAE,IAAI,GAAG,CAAA;oBACT,KAAK,GAAG,KAAK,IAAI,SAAS,CAAA;oBAC1B,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAA;oBACjB,QAAQ,GAAG,QAAQ,IAAI,KAAK,CAAA;oBAC5B,SAAQ;iBACT;aACF;YACD,IAAI,CAAC,KAAK,GAAG,EAAE;gBACb,IAAI,OAAO,IAAI,IAAI,KAAK,GAAG;oBAAE,EAAE,IAAI,WAAW,CAAA;;oBACzC,EAAE,IAAI,IAAI,CAAA;gBACf,QAAQ,GAAG,IAAI,CAAA;gBACf,SAAQ;aACT;YACD,IAAI,CAAC,KAAK,GAAG,EAAE;gBACb,EAAE,IAAI,KAAK,CAAA;gBACX,QAAQ,GAAG,IAAI,CAAA;gBACf,SAAQ;aACT;YACD,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;SACtB;QACD,OAAO,CAAC,EAAE,EAAE,IAAA,sBAAQ,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;IAChD,CAAC;CACF;AA/kBD,kBA+kBC","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js":{"lineLengths":[13,72,40,62,28,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,40,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,32,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js":{"lineLengths":[13,62,26,3,64,2,72,77,72,66,2,70,33,2,77,16,3,65,31,43,85,2,28,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;;;;;;GAaG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA;AATY,QAAA,QAAQ,YASpB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js":{"lineLengths":[13,62,24,3,49,2,73,75,74,75,73,3,63,60,64,58,31,41,44,2,24,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACI,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA;AAZY,QAAA,MAAM,UAYlB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/glob.js":{"lineLengths":[13,62,22,41,39,45,45,43,44,48,55,14,43,20,14,3,54,3,12,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,24,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,63,9,34,30,50,38,34,40,38,70,44,42,23,73,32,34,64,74,9,42,32,9,35,42,43,26,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,84,77,67,51,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,77,62,34,40,23,21,50,35,33,19,58,32,70,11,5,18,74,73,79,46,16,82,29,54,59,31,40,36,62,23,10,5,16,16,75,29,54,59,31,40,36,62,26,10,5,14,75,25,50,55,27,36,32,58,20,5,18,75,25,50,55,27,36,32,58,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,20,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/dist/commonjs/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,253,41,41,39,27,50,46,57,46,47,39,19,30,26,34,36,17,15,32,36,38,38,6,2,58,97,13,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,40,33,38,66,33,57,64,32,74,29,37,38,37,48,34,43,29,36,43,43,43,44,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,49,19,28,5,1,36,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,50,38,15,20,32,47,11,5,1,38,47,3,48,78,2,78,74,75,19,2,75,75,16,3,16,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,7,73,53,7,18,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,69,76,27,7,22,48,5,7,77,77,7,16,31,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,33,58,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,83,35,40,25,13,9,71,67,34,46,84,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,23,22,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,23,22,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,44,46,40,60,48,74,70,86,53,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,29,44,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,77,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,73,29,55,13,9,20,40,29,9,5,31,45,37,60,70,34,18,32,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,83,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,29,26,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,28,3,35,2,79,43,3,34,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,50,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,30,3,40,2,36,3,34,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,30,3,78,40,2,78,77,36,3,22,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,53,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,70,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,70,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,40,3,51,2,75,38,3,46,7,44,7,15,49,39,65,29,49,35,9,5,7,16,7,24,80,73,58,63,5,7,16,7,17,117,5,7,66,7,19,86,5,1,42,3,81,2,76,2,43,3,46,7,44,7,14,49,40,64,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,42,3,68,2,72,11,2,43,3,48,49,39,40,5,1,44,3,68,2,73,3,68,3,74,2,74,65,3,67,54,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.js":{"lineLengths":[13,3,19,3,62,26,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,74,72,38,2,57,2,71,76,78,2,77,3,16,54,9,13,13,18,17,16,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,22,32,5,7,55,7,19,29,5,7,60,7,24,34,5,26,360,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,39,47,76,9,38,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,79,81,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,69,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,36,35,27,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,33,32,13,56,29,10,34,36,34,65,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,72,62,35,7,38,7,76,74,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,79,44,6,49,6,79,74,6,75,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,57,31,13,9,23,5,7,77,78,6,81,80,74,6,78,80,19,7,15,40,28,29,35,48,36,16,32,29,32,41,38,42,31,58,35,41,13,9,26,40,9,21,5,7,75,40,6,76,59,6,63,56,6,77,28,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,6,80,31,6,77,72,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,6,76,74,40,6,69,70,72,27,6,65,72,69,63,18,6,71,70,26,6,44,6,61,69,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,35,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,70,80,58,6,81,77,57,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,19,9,39,76,71,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,49,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,45,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,44,52,28,58,17,5,31,44,26,69,9,66,39,45,21,37,20,20,11,33,18,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,50,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,6,60,7,15,41,5,24,28,31,46,38,31,39,40,17,22,48,51,53,72,21,73,47,58,25,52,65,25,21,43,53,53,47,55,21,52,55,21,26,53,59,53,59,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,37,5,20,67,43,45,64,13,18,47,39,50,17,44,57,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/path-scurry/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoerOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown>\n  implements Map<K, V>\n{\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRLUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/dist/commonjs/index.js":{"lineLengths":[13,72,62,2,62,87,51,13,7,21,21,6,45,62,61,3,78,40,3,30,28,29,45,37,36,28,3,67,3,32,28,46,35,69,61,32,3,67,3,32,28,46,36,32,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,51,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,69,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,32,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/pattern.js":{"lineLengths":[13,73,62,25,41,45,42,3,67,10,3,15,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,71,5,7,41,7,16,64,5,7,63,7,18,34,31,36,39,77,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,42,23,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,44,25,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,47,28,33,50,37,34,5,7,53,7,12,39,82,13,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,26,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/walker.js":{"lineLengths":[13,62,68,3,74,11,2,10,3,39,43,49,104,66,17,3,61,3,16,9,13,9,21,19,20,19,12,9,11,13,24,39,33,25,25,74,70,55,63,44,57,84,35,13,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,49,73,46,33,67,37,13,32,9,45,5,30,20,73,41,53,32,36,38,54,32,13,24,5,30,37,29,16,33,57,21,33,20,9,57,47,73,44,68,35,13,9,45,5,30,29,19,69,61,50,34,9,85,25,72,36,38,30,9,23,75,39,9,14,75,84,31,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,84,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,88,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,28,35,24,39,36,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,32,35,12,39,36,48,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,32,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/ignore.js":{"lineLengths":[13,54,34,66,45,62,24,41,45,55,14,43,20,14,3,41,3,14,13,21,13,21,13,11,95,27,27,35,35,33,23,22,20,19,18,23,33,21,28,27,10,34,26,5,14,75,72,75,47,75,77,31,79,76,29,78,48,63,49,37,46,33,40,58,13,44,61,63,31,34,13,32,84,77,70,44,25,38,16,38,27,29,50,20,50,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,28,9,21,5,1,24,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/processor.js":{"lineLengths":[13,69,62,93,41,3,65,3,22,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,40,3,66,72,66,3,19,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,34,3,71,20,3,16,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,28,3,54,2,66,35,3,17,19,32,30,13,11,8,9,39,25,36,30,29,74,5,39,33,61,72,47,49,56,40,82,46,23,76,34,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,50,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,49,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,30,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/dist/commonjs/has-magic.js":{"lineLengths":[13,62,26,41,3,74,30,2,78,77,74,78,78,77,3,45,34,28,5,30,61,24,5,17,2,28,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/index.js":{"lineLengths":[13,0,3,23,3,0,7,8,19,33,31,29,25,29,29,25,29,33,38,41,45,39,53,34,47,40,7,7,23,39,7,8,8,10,31,13,34,55,3,0,14,31,46,3,42,1,25,25,0,3,20,3,0,26,0,3,28,3,0,35,0,3,8,3,0,18,0,3,21,3,0,28,0,3,27,3,0,13,74,9,0,3,16,3,0,21,16,18,17,2,0,3,29,2,63,37,9,2,3,0,21,52,35,2,0,3,19,2,63,23,9,2,3,0,37,0,3,52,39,2,51,3,20,0,3,72,2,35,15,3,33,22,40,4,21,33,4,1,0,3,64,2,25,29,14,3,0,31,20,49,71,22,24,23,17,21,23,22,44,20,15,19,71,26,30,27,49,1,0,3,62,23,3,31,48,0,3,27,2,16,2,9,35,13,20,2,35,17,20,6,2,17,2,9,29,35,18,20,6,2,26,33,14,3,0,43,50,82,3,55,14,2,0,3,68,41,2,9,42,70,20,6,2,31,2,9,42,34,20,6,2,24,44,33,33,14,3,0,60,13,21,68,5,26,38,11,25,8,5,35,41,68,39,33,45,38,9,42,29,5,47,3,14,2,46,24,36,41,37,24,72,37,15,7,27,19,7,3,24,2,0,3,75,80,2,28,23,14,3,0,44,49,22,14,2,0,3,62,2,27,21,14,3,0,46,50,24,14,2,0,3,70,2,12,2,25,22,26,25,2,25,23,27,25,2,25,35,27,25,2,23,33,14,3,0,42,82,2,0,3,64,2,12,2,51,2,29,25,25,2,29,37,25,2,25,33,14,3,0,44,76,2,0,3,26,2,12,2,26,24,32,2,29,33,14,3,0,44,34,28,10,34,3,14,2,0,3,47,2,30,27,20,14,3,0,53,34,29,31,3,40,2,0,3,37,2,25,26,19,14,3,0,53,31,21,13,45,2,62,36,15,81,92,5,19,25,30,33,45,40,52,67,29,17,9,36,9,50,79,54,12,32,46,5,5,16,2,0,3,30,2,26,33,14,3,0,45,33,14,2,0,3,19,2,31,33,15,3,0,46,33,13,76,3,44,0,13,36,0,42,37,15,80,69,0,53,57,37,26,56,0,16,58,0,17,22,3,0,22,31,37,26,56,0,19,24,0,17,22,3,0,25,25,22,18,24,0,44,21,0,13,17,26,17,15,25,20,23,36,27,14,2,0,3,56,2,12,2,32,29,18,43,2,23,25,101,33,14,3,0,57,40,50,56,19,14,3,17,15,19,6,3,67,50,2,0,3,58,2,31,33,14,3,0,40,18,14,2,0,3,59,2,32,33,14,3,0,41,19,14,2,0,3,80,2,32,33,14,3,0,41,59,25,39,10,21,3,14,2,0,3,55,2,32,33,14,3,0,42,20,14,2,0,3,46,75,2,33,14,3,0,49,31,14,2,0,3,29,2,28,15,3,0,38,41,32,21,7,41,21,30,7,16,19,30,5,32,17,35,3,7,18,11,32,0,23,73,33,7,12,10,44,0,25,49,23,44,0,26,59,18,22,3,0,38,30,11,14,12,115,16,29,31,35,7,18,18,38,29,29,14,24,27,7,0,20,62,20,34,27,7,29,5,3,0,12,31,26,22,30,24,26,26,28,40,30,32,150,0,70,26,64,3,95,39,3,0,21,118,0,12,38,9,7,11,0,21,23,34,54,3,27,23,0,18,27,23,5,28,42,59,58,30,66,46,42,61,51,30,25,5,0,9,37,42,3,39,44,3,34,71,3,0,16,21,41,14,53,63,56,103,12,44,5,3,13,2,0,3,43,26,2,21,24,15,3,0,52,38,25,3,0,106,36,22,74,21,15,9,37,51,18,61,9,35,52,7,19,18,68,5,3,0,65,29,15,25,3,23,58,0,49,68,52,30,3,17,2,0,3,35,2,34,37,15,3,47,91,2,0,3,53,33,2,23,33,14,3,0,58,38,27,42,27,25,3,25,24,33,89,6,3,34,18,2,0,3,59,2,15,3,0,47,38,42,34,2,39,17,40,24,84,3,25,0,19,30,14,2,38,115,24,9,7,11,9,10,11,22,0,9,46,22,35,54,77,63,73,46,58,7,44,5,0,21,51,101,5,3,0,13,40,31,64,37,47,5,21,13,5,35,79,34,47,43,48,44,19,0,15,48,33,5,33,23,48,13,5,0,19,33,22,5,30,57,45,5,30,41,207,20,5,18,25,71,22,29,45,39,22,34,37,96,39,37,35,36,34,54,32,51,34,26,36,40,71,22,7,5,0,72,63,20,5,31,33,17,57,65,29,79,36,52,67,35,60,48,35,38,29,34,37,9,9,5,17,11,66,68,34,47,30,56,19,11,0,86,38,40,40,11,33,28,75,41,27,43,44,67,43,26,40,19,17,15,26,42,43,67,42,26,39,19,17,15,13,29,67,11,11,21,27,15,7,5,19,0,17,18,55,48,67,29,50,25,9,13,5,0,25,32,31,33,7,50,48,54,23,48,7,5,29,36,34,50,19,44,58,29,29,28,25,15,13,9,28,6,20,4,36,63,43,38,46,43,49,51,27,5,24,55,37,5,40,0,20,4,0,78,34,17,18,42,30,31,66,37,7,5,0,45,43,59,70,55,39,48,7,52,7,37,62,10,18,3,2,0,61,41,57,45,17,3,0,88,46,97,17,3,0,22,74,2,0,3,88,2,87,85,2,70,2,25,42,36,10,3,56,44,29,26,6,51,44,10,38,3,14,2,54,62,14,2,0,29,31,51,49,12,25,22,1,29,22,48,32,38,42,37,16,18,5,15,50,29,14,28,7,5,29,20,4,1,0,3,50,2,23,20,14,3,0,23,32,22,45,25,54,64,1,0,58,56,84,25,41,57,45,97,1,0,3,65,2,23,20,15,3,0,23,32,22,42,1,0,3,49,2,23,20,15,3,0,27,55,1,92496],"data":{"version":3,"names":["format","require","Stream","https","http","fs","zlib","util","qs","mime","methods","FormData","formidable","debug","CookieJar","safeStringify","utils","RequestBase","http2","unzip","Response","mixin","hasOwn","request","method","url","exports","Request","end","arguments","length","module","agent","noop","define","protocols","serialize","stringify","parse","buffer","_initHeaders","request_","_header","header","call","_enableHttp2","Boolean","process","env","HTTP2_TEST","_agent","_formData","writable","_redirects","redirects","cookies","_query","qsRaw","_redirectList","_streamRequest","_lookup","undefined","once","clearTimeout","bind","inherits","prototype","bool","Error","attach","field","file","options","_data","o","filename","createReadStream","on","error","formData","_getFormData","emit","path","append","called","callback","abort","lookup","type","set","includes","getType","accept","query","value","push","Object","assign","write","data","encoding","pipe","stream","piped","_pipeContinue","req","res","isRedirect","statusCode","_maxRedirects","_redirect","_emitResponse","_aborted","_shouldUnzip","unzipObject","createUnzip","code","_buffer","headers","location","URL","href","resume","getHeaders","_headers","changesOrigin","host","cleanHeader","_endCalled","_emitRedirect","_callback","auth","user","pass","encoder","string","Buffer","from","toString","_auth","ca","cert","_ca","key","_key","pfx","isBuffer","_pfx","_passphrase","passphrase","_cert","disableTLSCerts","_disableTLSCerts","indices","strictNullHandling","_finalizeQueryString","err","urlString","retries","_retries","indexOf","protocol","pathname","search","test","split","socketPath","hostname","replace","_connectOverride","match","newHost","newPort","port","rejectUnauthorized","NODE_TLS_REJECT_UNAUTHORIZED","servername","_trustLocalhost","module_","setProtocol","setNoDelay","setHeader","response","username","password","temporaryJar","setCookies","cookie","getCookies","CookieAccessInfo","All","toValueString","_shouldRetry","_retry","fn","console","warn","_isResponseOK","message","STATUS_CODES","status","_maxRetries","listeners","_isHost","object","body","files","_end","_setTimeouts","_headerSent","contentType","getHeader","_serializer","isJSON","byteLength","_responseTimeoutTimer","max","toLowerCase","trim","multipart","redirect","responseType","_responseType","parser","_parser","image","form","isBinary","text","isText","_resBuffered","parserHandlesEnd","responseBytesLeft","_maxResponseSize","buf","destroy","timedout","Array","isArray","getProgressMonitor","lengthComputable","total","loaded","progress","Transform","_transform","chunk","direction","bufferToChunks","chunkSize","chunking","Readable","totalLength","remainder","cutoff","i","slice","remainderBuffer","getLength","connect","connectOverride","trustLocalhost","toggle","name","toUpperCase","send","parts","subtype","registry"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { format } = require('url');\nconst Stream = require('stream');\nconst https = require('https');\nconst http = require('http');\nconst fs = require('fs');\nconst zlib = require('zlib');\nconst util = require('util');\nconst qs = require('qs');\nconst mime = require('mime');\nlet methods = require('methods');\nconst FormData = require('form-data');\nconst formidable = require('formidable');\nconst debug = require('debug')('superagent');\nconst CookieJar = require('cookiejar');\nconst safeStringify = require('fast-safe-stringify');\n\nconst utils = require('../utils');\nconst RequestBase = require('../request-base');\nconst http2 = require('./http2wrapper');\nconst { unzip } = require('./unzip');\nconst Response = require('./response');\n\nconst { mixin, hasOwn } = utils;\n\nfunction request(method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nmodule.exports = request;\nexports = module.exports;\n\n/**\n * Expose `Request`.\n */\n\nexports.Request = Request;\n\n/**\n * Expose the agent function\n */\n\nexports.agent = require('./agent');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `Response`.\n */\n\nexports.Response = Response;\n\n/**\n * Define \"form\" mime type.\n */\n\nmime.define(\n  {\n    'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n  },\n  true\n);\n\n/**\n * Protocol map.\n */\n\nexports.protocols = {\n  'http:': http,\n  'https:': https,\n  'http2:': http2\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nexports.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(res, fn){\n *       fn(null, res);\n *     };\n *\n */\n\nexports.parse = require('./parsers');\n\n/**\n * Default buffering map. Can be used to set certain\n * response types to buffer/not buffer.\n *\n *     superagent.buffer['application/xml'] = true;\n */\nexports.buffer = {};\n\n/**\n * Initialize internal header tracking properties on a request instance.\n *\n * @param {Object} req the instance\n * @api private\n */\nfunction _initHeaders(request_) {\n  request_._header = {\n    // coerces header names to lowercase\n  };\n  request_.header = {\n    // preserves header name case\n  };\n}\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String|Object} url\n * @api public\n */\n\nfunction Request(method, url) {\n  Stream.call(this);\n  if (typeof url !== 'string') url = format(url);\n  this._enableHttp2 = Boolean(process.env.HTTP2_TEST); // internal only\n  this._agent = false;\n  this._formData = null;\n  this.method = method;\n  this.url = url;\n  _initHeaders(this);\n  this.writable = true;\n  this._redirects = 0;\n  this.redirects(method === 'HEAD' ? 0 : 5);\n  this.cookies = '';\n  this.qs = {};\n  this._query = [];\n  this.qsRaw = this._query; // Unused, for backwards compatibility only\n  this._redirectList = [];\n  this._streamRequest = false;\n  this._lookup = undefined;\n  this.once('end', this.clearTimeout.bind(this));\n}\n\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n * Mixin `RequestBase`.\n */\nutil.inherits(Request, Stream);\n\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Enable or Disable http2.\n *\n * Enable http2.\n *\n * ``` js\n * request.get('http://localhost/')\n *   .http2()\n *   .end(callback);\n *\n * request.get('http://localhost/')\n *   .http2(true)\n *   .end(callback);\n * ```\n *\n * Disable http2.\n *\n * ``` js\n * request = request.http2();\n * request.get('http://localhost/')\n *   .http2(false)\n *   .end(callback);\n * ```\n *\n * @param {Boolean} enable\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.http2 = function (bool) {\n  if (exports.protocols['http2:'] === undefined) {\n    throw new Error(\n      'superagent: this version of Node.js does not support http2'\n    );\n  }\n\n  this._enableHttp2 = bool === undefined ? true : bool;\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('field', Buffer.from('<b>Hello world</b>'), 'hello.html')\n *   .end(callback);\n * ```\n *\n * A filename may also be used:\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('files', 'image.jpg')\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {String|fs.ReadStream|Buffer} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    let o = options || {};\n    if (typeof options === 'string') {\n      o = { filename: options };\n    }\n\n    if (typeof file === 'string') {\n      if (!o.filename) o.filename = file;\n      debug('creating `fs.ReadStream` instance for file: %s', file);\n      file = fs.createReadStream(file);\n      file.on('error', (error) => {\n        const formData = this._getFormData();\n        formData.emit('error', error);\n      });\n    } else if (!o.filename && file.path) {\n      o.filename = file.path;\n    }\n\n    this._getFormData().append(field, file, o);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new FormData();\n    this._formData.on('error', (error) => {\n      debug('FormData error', error);\n      if (this.called) {\n        // The request has already finished and the callback was called.\n        // Silently ignore the error.\n        return;\n      }\n\n      this.callback(error);\n      this.abort();\n    });\n  }\n\n  return this._formData;\n};\n\n/**\n * Gets/sets the `Agent` to use for this HTTP request. The default (if this\n * function is not called) is to opt out of connection pooling (`agent: false`).\n *\n * @param {http.Agent} agent\n * @return {http.Agent}\n * @api public\n */\n\nRequest.prototype.agent = function (agent) {\n  if (arguments.length === 0) return this._agent;\n  this._agent = agent;\n  return this;\n};\n\n/**\n * Gets/sets the `lookup` function to use custom DNS resolver.\n *\n * @param {Function} lookup\n * @return {Function}\n * @api public\n */\n\nRequest.prototype.lookup = function (lookup) {\n  if (arguments.length === 0) return this._lookup;\n  this._lookup = lookup;\n  return this;\n};\n\n/**\n * Set _Content-Type_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  return this.set(\n    'Content-Type',\n    type.includes('/') ? type : mime.getType(type)\n  );\n};\n\n/**\n * Set _Accept_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  return this.set('Accept', type.includes('/') ? type : mime.getType(type));\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value === 'string') {\n    this._query.push(value);\n  } else {\n    Object.assign(this.qs, value);\n  }\n\n  return this;\n};\n\n/**\n * Write raw `data` / `encoding` to the socket.\n *\n * @param {Buffer|String} data\n * @param {String} encoding\n * @return {Boolean}\n * @api public\n */\n\nRequest.prototype.write = function (data, encoding) {\n  const request_ = this.request();\n  if (!this._streamRequest) {\n    this._streamRequest = true;\n  }\n\n  return request_.write(data, encoding);\n};\n\n/**\n * Pipe the request body to `stream`.\n *\n * @param {Stream} stream\n * @param {Object} options\n * @return {Stream}\n * @api public\n */\n\nRequest.prototype.pipe = function (stream, options) {\n  this.piped = true; // HACK...\n  this.buffer(false);\n  this.end();\n  return this._pipeContinue(stream, options);\n};\n\nRequest.prototype._pipeContinue = function (stream, options) {\n  this.req.once('response', (res) => {\n    // redirect\n    if (\n      isRedirect(res.statusCode) &&\n      this._redirects++ !== this._maxRedirects\n    ) {\n      return this._redirect(res) === this\n        ? this._pipeContinue(stream, options)\n        : undefined;\n    }\n\n    this.res = res;\n    this._emitResponse();\n    if (this._aborted) return;\n\n    if (this._shouldUnzip(res)) {\n      const unzipObject = zlib.createUnzip();\n      unzipObject.on('error', (error) => {\n        if (error && error.code === 'Z_BUF_ERROR') {\n          // unexpected end of file is ignored by browsers and curl\n          stream.emit('end');\n          return;\n        }\n\n        stream.emit('error', error);\n      });\n      res.pipe(unzipObject).pipe(stream, options);\n      // don't emit 'end' until unzipObject has completed writing all its data.\n      unzipObject.once('end', () => this.emit('end'));\n    } else {\n      res.pipe(stream, options);\n      res.once('end', () => this.emit('end'));\n    }\n  });\n  return stream;\n};\n\n/**\n * Enable / disable buffering.\n *\n * @return {Boolean} [val]\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.buffer = function (value) {\n  this._buffer = value !== false;\n  return this;\n};\n\n/**\n * Redirect to `url\n *\n * @param {IncomingMessage} res\n * @return {Request} for chaining\n * @api private\n */\n\nRequest.prototype._redirect = function (res) {\n  let url = res.headers.location;\n  if (!url) {\n    return this.callback(new Error('No location header for redirect'), res);\n  }\n\n  debug('redirect %s -> %s', this.url, url);\n\n  // location\n  url = new URL(url, this.url).href;\n\n  // ensure the response is being consumed\n  // this is required for Node v0.10+\n  res.resume();\n\n  let headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;\n\n  const changesOrigin = new URL(url).host !== new URL(this.url).host;\n\n  // implementation of 302 following defacto standard\n  if (res.statusCode === 301 || res.statusCode === 302) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force GET\n    this.method = this.method === 'HEAD' ? 'HEAD' : 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 303 is always GET\n  if (res.statusCode === 303) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force method\n    this.method = 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 307 preserves method\n  // 308 preserves method\n  delete headers.host;\n\n  delete this.req;\n  delete this._formData;\n\n  // remove all add header except User-Agent\n  _initHeaders(this);\n\n  // redirect\n  this.res = res;\n  this._endCalled = false;\n  this.url = url;\n  this.qs = {};\n  this._query.length = 0;\n  this.set(headers);\n  this._emitRedirect();\n  this._redirectList.push(this.url);\n  this.end(this._callback);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * Examples:\n *\n *   .auth('tobi', 'learnboost')\n *   .auth('tobi:learnboost')\n *   .auth('tobi')\n *   .auth(accessToken, { type: 'bearer' })\n *\n * @param {String} user\n * @param {String} [pass]\n * @param {Object} [options] options with authorization type 'basic' or 'bearer' ('basic' is default)\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = { type: 'basic' };\n  }\n\n  const encoder = (string) => Buffer.from(string).toString('base64');\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Set the certificate authority option for https request.\n *\n * @param {Buffer | Array} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.ca = function (cert) {\n  this._ca = cert;\n  return this;\n};\n\n/**\n * Set the client certificate key option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.key = function (cert) {\n  this._key = cert;\n  return this;\n};\n\n/**\n * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.pfx = function (cert) {\n  if (typeof cert === 'object' && !Buffer.isBuffer(cert)) {\n    this._pfx = cert.pfx;\n    this._passphrase = cert.passphrase;\n  } else {\n    this._pfx = cert;\n  }\n\n  return this;\n};\n\n/**\n * Set the client certificate option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.cert = function (cert) {\n  this._cert = cert;\n  return this;\n};\n\n/**\n * Do not reject expired or invalid TLS certs.\n * sets `rejectUnauthorized=true`. Be warned that this allows MITM attacks.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.disableTLSCerts = function () {\n  this._disableTLSCerts = true;\n  return this;\n};\n\n/**\n * Return an http[s] request.\n *\n * @return {OutgoingMessage}\n * @api private\n */\n\n// eslint-disable-next-line complexity\nRequest.prototype.request = function () {\n  if (this.req) return this.req;\n\n  const options = {};\n\n  try {\n    const query = qs.stringify(this.qs, {\n      indices: false,\n      strictNullHandling: true\n    });\n    if (query) {\n      this.qs = {};\n      this._query.push(query);\n    }\n\n    this._finalizeQueryString();\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  let { url: urlString } = this;\n  const retries = this._retries;\n\n  // default to http://\n  if (urlString.indexOf('http') !== 0) urlString = `http://${urlString}`;\n  const url = new URL(urlString);\n  let { protocol } = url;\n  let path = `${url.pathname}${url.search}`;\n\n  // support unix sockets\n  if (/^https?\\+unix:/.test(protocol) === true) {\n    // get the protocol\n    protocol = `${protocol.split('+')[0]}:`;\n\n    // get the socket path\n    options.socketPath = url.hostname.replace(/%2F/g, '/');\n    url.host = '';\n    url.hostname = '';\n  }\n\n  // Override IP address of a hostname\n  if (this._connectOverride) {\n    const { hostname } = url;\n    const match =\n      hostname in this._connectOverride\n        ? this._connectOverride[hostname]\n        : this._connectOverride['*'];\n    if (match) {\n      // backup the real host\n      if (!this._header.host) {\n        this.set('host', url.host);\n      }\n\n      let newHost;\n      let newPort;\n\n      if (typeof match === 'object') {\n        newHost = match.host;\n        newPort = match.port;\n      } else {\n        newHost = match;\n        newPort = url.port;\n      }\n\n      // wrap [ipv6]\n      url.host = /:/.test(newHost) ? `[${newHost}]` : newHost;\n      if (newPort) {\n        url.host += `:${newPort}`;\n        url.port = newPort;\n      }\n\n      url.hostname = newHost;\n    }\n  }\n\n  // options\n  options.method = this.method;\n  options.port = url.port;\n  options.path = path;\n  options.host = url.hostname;\n  options.ca = this._ca;\n  options.key = this._key;\n  options.pfx = this._pfx;\n  options.cert = this._cert;\n  options.passphrase = this._passphrase;\n  options.agent = this._agent;\n  options.lookup = this._lookup;\n  options.rejectUnauthorized =\n    typeof this._disableTLSCerts === 'boolean'\n      ? !this._disableTLSCerts\n      : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0';\n\n  // Allows request.get('https://1.2.3.4/').set('Host', 'example.com')\n  if (this._header.host) {\n    options.servername = this._header.host.replace(/:\\d+$/, '');\n  }\n\n  if (\n    this._trustLocalhost &&\n    /^(?:localhost|127\\.0\\.0\\.\\d+|(0*:)+:0*1)$/.test(url.hostname)\n  ) {\n    options.rejectUnauthorized = false;\n  }\n\n  // initiate request\n  const module_ = this._enableHttp2\n    ? exports.protocols['http2:'].setProtocol(protocol)\n    : exports.protocols[protocol];\n\n  // request\n  this.req = module_.request(options);\n  const { req } = this;\n\n  // set tcp no delay\n  req.setNoDelay(true);\n\n  if (options.method !== 'HEAD') {\n    req.setHeader('Accept-Encoding', 'gzip, deflate');\n  }\n\n  this.protocol = protocol;\n  this.host = url.host;\n\n  // expose events\n  req.once('drain', () => {\n    this.emit('drain');\n  });\n\n  req.on('error', (error) => {\n    // flag abortion here for out timeouts\n    // because node will emit a faux-error \"socket hang up\"\n    // when request is aborted before a connection is made\n    if (this._aborted) return;\n    // if not the same, we are in the **old** (cancelled) request,\n    // so need to continue (same as for above)\n    if (this._retries !== retries) return;\n    // if we've received a response then we don't want to let\n    // an error in the request blow up the response\n    if (this.response) return;\n    this.callback(error);\n  });\n\n  // auth\n  if (url.username || url.password) {\n    this.auth(url.username, url.password);\n  }\n\n  if (this.username && this.password) {\n    this.auth(this.username, this.password);\n  }\n\n  for (const key in this.header) {\n    if (hasOwn(this.header, key)) req.setHeader(key, this.header[key]);\n  }\n\n  // add cookies\n  if (this.cookies) {\n    if (hasOwn(this._header, 'cookie')) {\n      // merge\n      const temporaryJar = new CookieJar.CookieJar();\n      temporaryJar.setCookies(this._header.cookie.split('; '));\n      temporaryJar.setCookies(this.cookies.split('; '));\n      req.setHeader(\n        'Cookie',\n        temporaryJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString()\n      );\n    } else {\n      req.setHeader('Cookie', this.cookies);\n    }\n  }\n\n  return req;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  // Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.\n  const fn = this._callback || noop;\n  this.clearTimeout();\n  if (this.called) return console.warn('superagent: double callback bug');\n  this.called = true;\n\n  if (!error) {\n    try {\n      if (!this._isResponseOK(res)) {\n        let message = 'Unsuccessful HTTP response';\n        if (res) {\n          message = http.STATUS_CODES[res.status] || message;\n        }\n\n        error = new Error(message);\n        error.status = res ? res.status : undefined;\n      }\n    } catch (err) {\n      error = err;\n      error.status = error.status || (res ? res.status : undefined);\n    }\n  }\n\n  // It's important that the callback is called outside try/catch\n  // to avoid double callback\n  if (!error) {\n    return fn(null, res);\n  }\n\n  error.response = res;\n  if (this._maxRetries) error.retries = this._retries - 1;\n\n  // only emit error event if there is a listener\n  // otherwise we assume the callback to `.end()` will get the error\n  if (error && this.listeners('error').length > 0) {\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n\n/**\n * Check if `obj` is a host object,\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  return (\n    Buffer.isBuffer(object) ||\n    object instanceof Stream ||\n    object instanceof FormData\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(err, res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype._emitResponse = function (body, files) {\n  const response = new Response(this);\n  this.response = response;\n  response.redirects = this._redirectList;\n  if (undefined !== body) {\n    response.body = body;\n  }\n\n  response.files = files;\n  if (this._endCalled) {\n    response.pipe = function () {\n      throw new Error(\n        \"end() has already been called, so it's too late to start piping\"\n      );\n    };\n  }\n\n  this.emit('response', response);\n  return response;\n};\n\n/**\n * Emit `redirect` event, passing an instanceof `Response`.\n *\n * @api private\n */\n\nRequest.prototype._emitRedirect = function () {\n  const response = new Response(this);\n  response.redirects = this._redirectList;\n  this.emit('redirect', response);\n};\n\nRequest.prototype.end = function (fn) {\n  this.request();\n  debug('%s %s', this.method, this.url);\n\n  if (this._endCalled) {\n    throw new Error(\n      '.end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  this._end();\n};\n\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  let data = this._data;\n  const { req } = this;\n  const { method } = this;\n\n  this._setTimeouts();\n\n  // body\n  if (method !== 'HEAD' && !req._headerSent) {\n    // serialize stuff\n    if (typeof data !== 'string') {\n      let contentType = req.getHeader('Content-Type');\n      // Parse out just the content type from the header (ignore the charset)\n      if (contentType) contentType = contentType.split(';')[0];\n      let serialize = this._serializer || exports.serialize[contentType];\n      if (!serialize && isJSON(contentType)) {\n        serialize = exports.serialize['application/json'];\n      }\n\n      if (serialize) data = serialize(data);\n    }\n\n    // content-length\n    if (data && !req.getHeader('Content-Length')) {\n      req.setHeader(\n        'Content-Length',\n        Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)\n      );\n    }\n  }\n\n  // response\n  // eslint-disable-next-line complexity\n  req.once('response', (res) => {\n    debug('%s %s -> %s', this.method, this.url, res.statusCode);\n\n    if (this._responseTimeoutTimer) {\n      clearTimeout(this._responseTimeoutTimer);\n    }\n\n    if (this.piped) {\n      return;\n    }\n\n    const max = this._maxRedirects;\n    const mime = utils.type(res.headers['content-type'] || '') || 'text/plain';\n    let type = mime.split('/')[0];\n    if (type) type = type.toLowerCase().trim();\n    const multipart = type === 'multipart';\n    const redirect = isRedirect(res.statusCode);\n    const responseType = this._responseType;\n\n    this.res = res;\n\n    // redirect\n    if (redirect && this._redirects++ !== max) {\n      return this._redirect(res);\n    }\n\n    if (this.method === 'HEAD') {\n      this.emit('end');\n      this.callback(null, this._emitResponse());\n      return;\n    }\n\n    // zlib support\n    if (this._shouldUnzip(res)) {\n      unzip(req, res);\n    }\n\n    let buffer = this._buffer;\n    if (buffer === undefined && mime in exports.buffer) {\n      buffer = Boolean(exports.buffer[mime]);\n    }\n\n    let parser = this._parser;\n    if (undefined === buffer && parser) {\n      console.warn(\n        \"A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`\"\n      );\n      buffer = true;\n    }\n\n    if (!parser) {\n      if (responseType) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      } else if (multipart) {\n        const form = formidable.formidable();\n        parser = form.parse.bind(form);\n        buffer = true;\n      } else if (isBinary(mime)) {\n        parser = exports.parse.image;\n        buffer = true; // For backwards-compatibility buffering default is ad-hoc MIME-dependent\n      } else if (exports.parse[mime]) {\n        parser = exports.parse[mime];\n      } else if (type === 'text') {\n        parser = exports.parse.text;\n        buffer = buffer !== false;\n        // everyone wants their own white-labeled json\n      } else if (isJSON(mime)) {\n        parser = exports.parse['application/json'];\n        buffer = buffer !== false;\n      } else if (buffer) {\n        parser = exports.parse.text;\n      } else if (undefined === buffer) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      }\n    }\n\n    // by default only buffer text/*, json and messed up thing from hell\n    if ((undefined === buffer && isText(mime)) || isJSON(mime)) {\n      buffer = true;\n    }\n\n    this._resBuffered = buffer;\n    let parserHandlesEnd = false;\n    if (buffer) {\n      // Protectiona against zip bombs and other nuisance\n      let responseBytesLeft = this._maxResponseSize || 200000000;\n      res.on('data', (buf) => {\n        responseBytesLeft -= buf.byteLength || buf.length > 0 ? buf.length : 0;\n        if (responseBytesLeft < 0) {\n          // This will propagate through error event\n          const error = new Error('Maximum response size reached');\n          error.code = 'ETOOLARGE';\n          // Parsers aren't required to observe error event,\n          // so would incorrectly report success\n          parserHandlesEnd = false;\n          // Will not emit error event\n          res.destroy(error);\n          // so we do callback now\n          this.callback(error, null);\n        }\n      });\n    }\n\n    if (parser) {\n      try {\n        // Unbuffered parsers are supposed to emit response early,\n        // which is weird BTW, because response.body won't be there.\n        parserHandlesEnd = buffer;\n\n        parser(res, (error, object, files) => {\n          if (this.timedout) {\n            // Timeout has already handled all callbacks\n            return;\n          }\n\n          // Intentional (non-timeout) abort is supposed to preserve partial response,\n          // even if it doesn't parse.\n          if (error && !this._aborted) {\n            return this.callback(error);\n          }\n\n          if (parserHandlesEnd) {\n            if (multipart) {\n              // formidable v3 always returns an array with the value in it\n              // so we need to flatten it\n              if (object) {\n                for (const key in object) {\n                  const value = object[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    object[key] = value[0];\n                  } else {\n                    object[key] = value;\n                  }\n                }\n              }\n\n              if (files) {\n                for (const key in files) {\n                  const value = files[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    files[key] = value[0];\n                  } else {\n                    files[key] = value;\n                  }\n                }\n              }\n            }\n            this.emit('end');\n            this.callback(null, this._emitResponse(object, files));\n          }\n        });\n      } catch (err) {\n        this.callback(err);\n        return;\n      }\n    }\n\n    this.res = res;\n\n    // unbuffered\n    if (!buffer) {\n      debug('unbuffered %s %s', this.method, this.url);\n      this.callback(null, this._emitResponse());\n      if (multipart) return; // allow multipart to handle end event\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        this.emit('end');\n      });\n      return;\n    }\n\n    // terminating events\n    res.once('error', (error) => {\n      parserHandlesEnd = false;\n      this.callback(error, null);\n    });\n    if (!parserHandlesEnd)\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        // TODO: unless buffering emit earlier to stream\n        this.emit('end');\n        this.callback(null, this._emitResponse());\n      });\n  });\n\n  this.emit('request', this);\n\n  const getProgressMonitor = () => {\n    const lengthComputable = true;\n    const total = req.getHeader('Content-Length');\n    let loaded = 0;\n\n    const progress = new Stream.Transform();\n    progress._transform = (chunk, encoding, callback) => {\n      loaded += chunk.length;\n      this.emit('progress', {\n        direction: 'upload',\n        lengthComputable,\n        loaded,\n        total\n      });\n      callback(null, chunk);\n    };\n\n    return progress;\n  };\n\n  const bufferToChunks = (buffer) => {\n    const chunkSize = 16 * 1024; // default highWaterMark value\n    const chunking = new Stream.Readable();\n    const totalLength = buffer.length;\n    const remainder = totalLength % chunkSize;\n    const cutoff = totalLength - remainder;\n\n    for (let i = 0; i < cutoff; i += chunkSize) {\n      const chunk = buffer.slice(i, i + chunkSize);\n      chunking.push(chunk);\n    }\n\n    if (remainder > 0) {\n      const remainderBuffer = buffer.slice(-remainder);\n      chunking.push(remainderBuffer);\n    }\n\n    chunking.push(null); // no more data\n\n    return chunking;\n  };\n\n  // if a FormData instance got created, then we send that as the request body\n  const formData = this._formData;\n  if (formData) {\n    // set headers\n    const headers = formData.getHeaders();\n    for (const i in headers) {\n      if (hasOwn(headers, i)) {\n        debug('setting FormData header: \"%s: %s\"', i, headers[i]);\n        req.setHeader(i, headers[i]);\n      }\n    }\n\n    // attempt to get \"Content-Length\" header\n    formData.getLength((error, length) => {\n      // TODO: Add chunked encoding when no length (if err)\n      if (error) debug('formData.getLength had error', error, length);\n\n      debug('got FormData Content-Length: %s', length);\n      if (typeof length === 'number') {\n        req.setHeader('Content-Length', length);\n      }\n\n      formData.pipe(getProgressMonitor()).pipe(req);\n    });\n  } else if (Buffer.isBuffer(data)) {\n    bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);\n  } else {\n    req.end(data);\n  }\n};\n\n// Check whether response has a non-0-sized gzip-encoded body\nRequest.prototype._shouldUnzip = (res) => {\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    // These aren't supposed to have any body\n    return false;\n  }\n\n  // header content is a string, and distinction between 0 and no information is crucial\n  if (res.headers['content-length'] === '0') {\n    // We know that the body is empty (unfortunately, this check does not cover chunked encoding)\n    return false;\n  }\n\n  // console.log(res);\n  return /^\\s*(?:deflate|gzip)\\s*$/.test(res.headers['content-encoding']);\n};\n\n/**\n * Overrides DNS for selected hostnames. Takes object mapping hostnames to IP addresses.\n *\n * When making a request to a URL with a hostname exactly matching a key in the object,\n * use the given IP address to connect, instead of using DNS to resolve the hostname.\n *\n * A special host `*` matches every hostname (keep redirects in mind!)\n *\n *      request.connect({\n *        'test.example.com': '127.0.0.1',\n *        'ipv6.example.com': '::1',\n *      })\n */\nRequest.prototype.connect = function (connectOverride) {\n  if (typeof connectOverride === 'string') {\n    this._connectOverride = { '*': connectOverride };\n  } else if (typeof connectOverride === 'object') {\n    this._connectOverride = connectOverride;\n  } else {\n    this._connectOverride = undefined;\n  }\n\n  return this;\n};\n\nRequest.prototype.trustLocalhost = function (toggle) {\n  this._trustLocalhost = toggle === undefined ? true : toggle;\n  return this;\n};\n\n// generate HTTP verb methods\nif (!methods.includes('del')) {\n  // create a copy so we don't cause conflicts with\n  // other packages using the methods package and\n  // npm 3.x\n  methods = [...methods];\n  methods.push('del');\n}\n\nfor (let method of methods) {\n  const name = method;\n  method = method === 'del' ? 'delete' : method;\n\n  method = method.toUpperCase();\n  request[name] = (url, data, fn) => {\n    const request_ = request(method, url);\n    if (typeof data === 'function') {\n      fn = data;\n      data = null;\n    }\n\n    if (data) {\n      if (method === 'GET' || method === 'HEAD') {\n        request_.query(data);\n      } else {\n        request_.send(data);\n      }\n    }\n\n    if (fn) request_.end(fn);\n    return request_;\n  };\n}\n\n/**\n * Check if `mime` is text and should be buffered.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api public\n */\n\nfunction isText(mime) {\n  const parts = mime.split('/');\n  let type = parts[0];\n  if (type) type = type.toLowerCase().trim();\n  let subtype = parts[1];\n  if (subtype) subtype = subtype.toLowerCase().trim();\n\n  return type === 'text' || subtype === 'x-www-form-urlencoded';\n}\n\n// This is not a catchall, but a start. It might be useful\n// in the long run to have file that includes all binary\n// content types from https://www.iana.org/assignments/media-types/media-types.xhtml\nfunction isBinary(mime) {\n  let [registry, name] = mime.split('/');\n  if (registry) registry = registry.toLowerCase().trim();\n  if (name) name = name.toLowerCase().trim();\n  return (\n    ['audio', 'font', 'image', 'video'].includes(registry) ||\n    ['gz', 'gzip'].includes(name)\n  );\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Check if we should follow the redirect `code`.\n *\n * @param {Number} code\n * @return {Boolean}\n * @api private\n */\n\nfunction isRedirect(code) {\n  return [301, 302, 303, 305, 307, 308].includes(code);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/sha3.js":{"lineLengths":[13,62,222,26,3,72,78,2,82,46,177,2,62,10,3,39,18,41,42,46,43,22,22,22,22,26,28,19,21,22,65,9,38,34,17,59,11,16,33,57,20,67,5,23,1,53,29,29,36,102,102,82,34,37,98,56,18,36,72,41,38,38,31,35,50,54,46,31,35,13,9,29,24,24,38,39,48,48,34,25,29,23,27,9,18,42,40,32,40,63,9,19,35,35,5,29,1,30,38,63,78,16,21,24,30,31,31,33,29,35,35,29,43,43,63,29,46,71,41,55,5,13,33,5,14,49,43,49,24,21,5,18,38,45,37,41,32,39,66,42,49,38,30,9,20,5,14,26,19,29,54,25,29,58,26,36,22,5,20,45,36,22,37,34,57,40,30,69,78,32,24,9,19,5,18,90,28,69,35,5,16,39,51,5,21,43,26,59,28,23,19,5,14,63,5,15,30,42,5,20,72,80,37,26,32,36,27,38,27,33,33,38,18,5,1,24,121,30,53,57,53,30,53,30,52,32,55,57,55,32,55,32,54,180,42,58,42,58,32],"data":{"version":3,"file":"sha3.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/src/sha3.ts"],"names":[],"mappings":"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"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/_u64.js":{"lineLengths":[13,62,323,18,26,22,3,106,61,10,3,55,40,33,11,82,86,1,33,27,34,34,35,45,32,5,20,1,68,22,23,36,22,55,22,36,56,24,56,24,64,63,24,63,24,47,29,26,29,26,35,56,24,56,24,63,63,24,63,24,78,74,30,38,64,1,37,67,22,78,22,84,22,87,22,101,22,96,22,18,13,26,17,35,21,35,50,2,22,32],"data":{"version":3,"file":"_u64.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/src/_u64.ts"],"names":[],"mappings":";;;AA+EE,kBAAG;AAA4C,0BAAO;AAAkG,sBAAK;AA/E/J;;;;GAIG;AACH,MAAM,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAExC,SAAS,OAAO,CACd,CAAS,EACT,EAAE,GAAG,KAAK;IAKV,IAAI,EAAE;QAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC;IAClF,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;AACpF,CAAC;AAED,SAAS,KAAK,CAAC,GAAa,EAAE,EAAE,GAAG,KAAK;IACtC,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACvB,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC;IACD,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAClB,CAAC;AAED,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAiDqE,sBAAK;AAhDtK,uBAAuB;AACvB,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,EAAU,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AA+CwE,sBAAK;AA9CjJ,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AA8C4D,sBAAK;AA7CxJ,oCAAoC;AACpC,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AA4CoC,wBAAM;AA3ClI,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AA2C4C,wBAAM;AA1C1I,gEAAgE;AAChE,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAyCa,wBAAM;AAxClH,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAwCqB,wBAAM;AAvC1H,+CAA+C;AAC/C,MAAM,OAAO,GAAG,CAAC,EAAU,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC;AAsCqC,0BAAO;AArCjG,MAAM,OAAO,GAAG,CAAC,CAAS,EAAE,EAAU,EAAU,EAAE,CAAC,CAAC,CAAC;AAqC8C,0BAAO;AApC1G,mCAAmC;AACnC,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAmCd,wBAAM;AAlChF,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAkCN,wBAAM;AAjCxF,+DAA+D;AAC/D,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAgCrC,wBAAM;AA/BhE,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AA+B7B,wBAAM;AA7BxE,8EAA8E;AAC9E,0EAA0E;AAC1E,SAAS,GAAG,CACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU;IAKV,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAClC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;AAC9D,CAAC;AACD,qCAAqC;AACrC,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAcrF,sBAAK;AAbnB,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CACxE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAYtC,sBAAK;AAXZ,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CACvE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAUxB,sBAAK;AATjC,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CACpF,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAQ7B,sBAAK;AAP1B,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CACnF,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAMvB,sBAAK;AAL/C,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE,CAChG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAIpB,sBAAK;AAExC,kBAAkB;AAClB,MAAM,GAAG,GAAkpC;IACzpC,OAAO,EAAE,KAAK,EAAE,KAAK;IACrB,KAAK,EAAE,KAAK;IACZ,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9B,OAAO,EAAE,OAAO;IAChB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9B,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;CAC9C,CAAC;AACF,kBAAe,GAAG,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/utils.js":{"lineLengths":[13,3,36,10,3,70,62,217,26,26,24,22,26,26,16,18,22,32,20,20,28,32,32,32,30,34,34,26,42,34,30,36,42,34,34,84,70,66,62,63,75,49,85,21,101,1,45,21,42,63,1,39,32,20,47,58,97,1,32,19,66,72,25,24,1,64,50,27,60,43,65,1,50,33,16,35,27,88,5,1,33,18,70,1,34,19,87,1,64,27,45,26,5,1,68,26,68,1,67,28,53,1,65,28,61,1,76,90,41,25,41,34,33,32,1,58,32,14,25,18,41,41,26,42,34,5,15,1,33,14,17,89,45,13,95,56,101,3,76,79,3,28,18,17,22,29,40,17,44,31,5,15,1,65,63,28,43,46,41,57,41,57,11,1,3,76,79,3,26,32,66,17,22,39,26,22,15,81,37,54,53,57,51,47,104,9,97,5,17,1,3,62,72,73,3,33,28,66,43,24,37,14,103,37,37,21,38,19,5,1,3,48,63,3,27,32,43,86,1,3,48,63,3,29,43,1,3,59,63,46,3,24,33,33,17,16,1,3,50,64,3,32,33,33,17,16,1,43,33,16,45,28,18,24,5,36,54,28,24,24,5,15,1,36,75,65,49,18,1,54,12,1,20,62,33,68,27,36,34,36,17,1,36,78,29,36,34,44,17,1,32,78,29,36,34,44,17,1,39,50,49,86,40,83,76,5,35,79,73,5,62,1,33],"data":{"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/src/utils.ts"],"names":[],"mappings":"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"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/cryptoNode.js":{"lineLengths":[13,62,24,3,28,74,59,28,10,3,13,34,66,18,57,12,20,38],"data":{"version":3,"file":"cryptoNode.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/@noble/hashes/src/cryptoNode.ts"],"names":[],"mappings":";;;AAAA;;;;;;GAMG;AACH,aAAa;AACb,kCAAkC;AACrB,QAAA,MAAM,GACjB,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,WAAW,IAAI,EAAE;IAC/C,CAAC,CAAE,EAAE,CAAC,SAAiB;IACvB,CAAC,CAAC,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,aAAa,IAAI,EAAE;QACnD,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,SAAS,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/utils.js":{"lineLengths":[13,0,3,44,2,22,19,15,3,0,57,0,3,34,2,22,19,15,3,0,27,20,47,41,30,32,42,3,16,2,0,3,28,2,22,19,15,3,0,31,20,47,41,38,56,22,3,16,2,0,3,46,2,25,26,15,3,0,50,32,34,37,21,13,22,32,25,3,16,2,0,3,31,2,25,20,15,3,30,55,2,0,3,35,2,63,15,3,63,23,70,3,76,2,37,29,38,32,5,3,2,6320],"data":{"version":3,"names":["exports","type","string_","split","shift","params","value","object","parts","key","parseLinks","url","slice","rel","cleanHeader","header","changesOrigin","host","authorization","cookie","isObject","hasOwn","Object","property","TypeError","prototype","hasOwnProperty","call","mixin","target","source"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/utils.js"],"sourcesContent":["/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (string_) => string_.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *; */)) {\n    const parts = string_.split(/ *= */);\n    const key = parts.shift();\n    const value = parts.shift();\n\n    if (key && value) object[key] = value;\n  }\n\n  return object;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *, */)) {\n    const parts = string_.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    object[rel] = url;\n  }\n\n  return object;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\nexports.isObject = (object) => {\n  return object !== null && typeof object === 'object';\n};\n\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\nexports.hasOwn =\n  Object.hasOwn ||\n  function (object, property) {\n    if (object == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    return Object.prototype.hasOwnProperty.call(new Object(object), property);\n  };\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/request-base.js":{"lineLengths":[13,0,3,67,3,7,11,8,23,0,3,24,3,0,29,0,3,34,2,14,3,0,25,0,3,26,2,33,14,3,0,50,28,43,41,21,36,34,14,2,0,3,40,2,74,2,20,14,3,0,45,20,14,2,0,3,38,57,51,2,39,2,12,2,20,31,25,2,22,33,14,3,0,55,29,14,2,0,3,43,2,93,2,20,14,3,0,49,24,14,2,0,3,16,2,133,169,120,2,40,2,52,33,14,3,0,52,48,28,30,28,16,3,33,34,23,24,43,16,24,51,16,22,47,16,16,57,7,5,3,14,2,0,3,41,2,79,2,24,25,33,14,3,0,52,44,58,28,27,20,27,14,2,0,2,81,55,2,78,89,97,2,2,46,2,137,81,0,110,81,0,3,44,58,2,30,35,50,3,60,65,17,3,28,9,55,41,43,41,19,25,5,3,0,112,4,6,15,22,47,3,17,4,69,14,63,25,68,39,3,15,2,0,3,16,2,33,15,3,0,44,22,0,9,17,20,30,3,24,24,28,21,2,0,3,18,2,28,29,20,3,0,57,33,22,26,149,5,64,30,67,17,9,50,37,17,9,43,31,35,35,29,22,9,32,51,9,7,3,55,2,51,40,2,0,3,22,3,0,43,11,14,2,48,75,30,14,2,54,13,17,3,25,33,3,47,2,0,3,30,20,2,24,19,14,3,0,46,43,2,0,3,45,64,2,71,2,24,19,15,14,3,0,60,0,3,67,20,2,12,2,20,44,37,25,2,20,69,25,2,31,22,33,14,3,0,53,24,30,56,5,16,3,44,29,14,2,0,3,25,20,2,11,2,20,30,25,2,35,3,48,43,28,14,2,0,3,71,44,2,9,26,25,20,2,26,39,20,6,2,44,68,53,33,14,3,63,49,44,63,3,19,119,3,23,29,56,5,16,3,29,28,55,5,16,3,0,30,46,62,3,35,26,3,0,56,109,14,2,0,3,50,2,28,14,3,43,22,16,3,23,44,17,29,3,22,21,14,2,77,25,17,77,12,16,27,27,12,18,62,50,12,12,12,3,14,2,0,3,57,2,52,55,55,13,59,33,14,3,0,55,60,34,29,14,2,0,3,76,2,20,33,14,3,0,48,25,14,2,0,3,78,17,2,36,33,3,54,30,44,3,28,14,2,0,3,79,69,24,2,68,14,3,0,44,10,24,18,21,25,4,2,0,3,75,22,2,12,2,23,30,24,33,25,2,21,30,32,25,2,40,30,24,27,25,2,38,30,24,32,25,2,45,29,28,33,24,2,30,33,14,3,0,38,46,35,42,23,132,3,33,30,22,37,22,5,62,52,3,0,10,42,29,118,57,5,127,39,33,40,47,55,63,12,45,5,10,22,3,41,16,3,0,20,31,14,2,0,3,42,2,2,12,2,25,29,30,33,23,25,2,36,29,30,33,37,40,13,25,2,2,25,33,14,3,0,51,69,57,14,2,0,3,43,2,15,3,58,38,14,61,3,54,0,19,40,21,62,45,36,14,26,7,71,5,3,2,0,28,50,30,2,0,3,38,2,15,3,0,73,22,11,3,60,26,30,22,23,29,15,23,2,50,20,0,13,38,36,64,22,3,0,21,61,51,85,30,3,2,46028],"data":{"version":3,"names":["isObject","hasOwn","require","module","exports","RequestBase","prototype","clearTimeout","_timer","_responseTimeoutTimer","_uploadTimeoutTimer","parse","fn","_parser","responseType","value","_responseType","serialize","_serializer","timeout","options","_timeout","_responseTimeout","_uploadTimeout","option","deadline","response","upload","console","warn","retry","count","arguments","length","_maxRetries","_retries","_retryCallback","ERROR_CODES","Set","STATUS_CODES","_shouldRetry","error","res","override","err","status","has","code","crossDomain","_retry","req","request","_aborted","timedout","timedoutError","_end","then","resolve","reject","_fullfilledPromise","self","_endCalled","Promise","on","Error","method","url","end","catch","callback","undefined","use","ok","_okCallback","_isResponseOK","get","field","_header","toLowerCase","getHeader","set","key","header","unset","name","_data","Array","isArray","i","String","_getFormData","append","abort","xhr","emit","_auth","user","pass","base64Encoder","type","username","password","withCredentials","_withCredentials","redirects","n","_maxRedirects","maxResponseSize","TypeError","_maxResponseSize","toJSON","data","headers","send","isObject_","_formData","_isHost","trim","sortQuery","sort","_sort","_finalizeQueryString","query","_query","join","includes","index","indexOf","queryArray","slice","split","_appendQueryString","_timeoutError","reason","errno","_setTimeouts","setTimeout"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/request-base.js"],"sourcesContent":["/**\n * Module of mixed-in functions shared between node and client code\n */\nconst { isObject, hasOwn } = require('./utils');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase() {}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (hasOwn(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\n//\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\nconst ERROR_CODES = new Set([\n  'ETIMEDOUT',\n  'ECONNRESET',\n  'EADDRINUSE',\n  'ECONNREFUSED',\n  'EPIPE',\n  'ENOTFOUND',\n  'ENETUNREACH',\n  'EAI_AGAIN'\n]);\n\nconst STATUS_CODES = new Set([\n  408, 413, 429, 500, 502, 503, 504, 521, 522, 524\n]);\n\n// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function (error, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(error, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n  if (error) {\n    if (error.code && ERROR_CODES.has(error.code)) return true;\n    // Superagent timeout\n    if (error.timeout && error.code === 'ECONNABORTED') return true;\n    if (error.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        if (this._maxRetries && this._maxRetries > this._retries) {\n          return;\n        }\n\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const error = new Error('Aborted');\n        error.code = 'ABORTED';\n        error.status = this.status;\n        error.method = this.method;\n        error.url = this.url;\n        reject(error);\n      });\n      self.end((error, res) => {\n        if (error) reject(error);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (callback) {\n  return this.then(undefined, callback);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (callback) {\n  if (typeof callback !== 'function') throw new Error('Callback required');\n  this._okCallback = callback;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (hasOwn(field, key)) this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @param {String} options extra options, e.g. 'blob'\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function (name, value, options) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\n      \".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (hasOwn(name, key)) this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      if (hasOwn(value, i)) this.field(name, value[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (value === null || undefined === value) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  // fix https://github.com/ladjs/superagent/issues/1680\n  if (options) this._getFormData().append(name, value, options);\n  else this._getFormData().append(name, value);\n\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) {\n    this.req.abort(); // node\n  }\n\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n * @param {Boolean} [on=true] - Set 'withCredentials' state\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function (data) {\n  const isObject_ = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\n      \".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObject_ && isObject(this._data)) {\n    for (const key in data) {\n      if (typeof data[key] == 'bigint' && !data[key].toJSON)\n        throw new Error('Cannot serialize BigInt value to json');\n      if (hasOwn(data, key)) this._data[key] = data[key];\n    }\n  }\n  else if (typeof data === 'bigint') throw new Error(\"Cannot send value of type BigInt\");\n  else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type) type = type.toLowerCase().trim();\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArray = this.url.slice(index + 1).split('&');\n      if (typeof this._sort === 'function') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArray.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const error = new Error(`${reason + timeout}ms exceeded`);\n  error.timeout = timeout;\n  error.code = 'ECONNABORTED';\n  error.errno = errno;\n  this.timedout = true;\n  this.timedoutError = error;\n  this.abort();\n  this.callback(error);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Response timeout of ',\n        self._responseTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._responseTimeout);\n  }\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA,MAAM;EAAEA,QAAQ;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE/C;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGC,WAAW;;AAE5B;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAWA,CAAA,EAAG,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEAA,WAAW,CAACC,SAAS,CAACC,YAAY,GAAG,YAAY;EAC/CA,YAAY,CAAC,IAAI,CAACC,MAAM,CAAC;EACzBD,YAAY,CAAC,IAAI,CAACE,qBAAqB,CAAC;EACxCF,YAAY,CAAC,IAAI,CAACG,mBAAmB,CAAC;EACtC,OAAO,IAAI,CAACF,MAAM;EAClB,OAAO,IAAI,CAACC,qBAAqB;EACjC,OAAO,IAAI,CAACC,mBAAmB;EAC/B,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,WAAW,CAACC,SAAS,CAACK,KAAK,GAAG,UAAUC,EAAE,EAAE;EAC1C,IAAI,CAACC,OAAO,GAAGD,EAAE;EACjB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,WAAW,CAACC,SAAS,CAACQ,YAAY,GAAG,UAAUC,KAAK,EAAE;EACpD,IAAI,CAACC,aAAa,GAAGD,KAAK;EAC1B,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAV,WAAW,CAACC,SAAS,CAACW,SAAS,GAAG,UAAUL,EAAE,EAAE;EAC9C,IAAI,CAACM,WAAW,GAAGN,EAAE;EACrB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,WAAW,CAACC,SAAS,CAACa,OAAO,GAAG,UAAUC,OAAO,EAAE;EACjD,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC3C,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,OAAO,IAAI;EACb;EAEA,KAAK,MAAMC,MAAM,IAAIJ,OAAO,EAAE;IAC5B,IAAInB,MAAM,CAACmB,OAAO,EAAEI,MAAM,CAAC,EAAE;MAC3B,QAAQA,MAAM;QACZ,KAAK,UAAU;UACb,IAAI,CAACH,QAAQ,GAAGD,OAAO,CAACK,QAAQ;UAChC;QACF,KAAK,UAAU;UACb,IAAI,CAACH,gBAAgB,GAAGF,OAAO,CAACM,QAAQ;UACxC;QACF,KAAK,QAAQ;UACX,IAAI,CAACH,cAAc,GAAGH,OAAO,CAACO,MAAM;UACpC;QACF;UACEC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEL,MAAM,CAAC;MAClD;IACF;EACF;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAnB,WAAW,CAACC,SAAS,CAACwB,KAAK,GAAG,UAAUC,KAAK,EAAEnB,EAAE,EAAE;EACjD;EACA,IAAIoB,SAAS,CAACC,MAAM,KAAK,CAAC,IAAIF,KAAK,KAAK,IAAI,EAAEA,KAAK,GAAG,CAAC;EACvD,IAAIA,KAAK,IAAI,CAAC,EAAEA,KAAK,GAAG,CAAC;EACzB,IAAI,CAACG,WAAW,GAAGH,KAAK;EACxB,IAAI,CAACI,QAAQ,GAAG,CAAC;EACjB,IAAI,CAACC,cAAc,GAAGxB,EAAE;EACxB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMyB,WAAW,GAAG,IAAIC,GAAG,CAAC,CAC1B,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,cAAc,EACd,OAAO,EACP,WAAW,EACX,aAAa,EACb,WAAW,CACZ,CAAC;AAEF,MAAMC,YAAY,GAAG,IAAID,GAAG,CAAC,CAC3B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CACjD,CAAC;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjC,WAAW,CAACC,SAAS,CAACkC,YAAY,GAAG,UAAUC,KAAK,EAAEC,GAAG,EAAE;EACzD,IAAI,CAAC,IAAI,CAACR,WAAW,IAAI,IAAI,CAACC,QAAQ,EAAE,IAAI,IAAI,CAACD,WAAW,EAAE;IAC5D,OAAO,KAAK;EACd;EAEA,IAAI,IAAI,CAACE,cAAc,EAAE;IACvB,IAAI;MACF,MAAMO,QAAQ,GAAG,IAAI,CAACP,cAAc,CAACK,KAAK,EAAEC,GAAG,CAAC;MAChD,IAAIC,QAAQ,KAAK,IAAI,EAAE,OAAO,IAAI;MAClC,IAAIA,QAAQ,KAAK,KAAK,EAAE,OAAO,KAAK;MACpC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZhB,OAAO,CAACa,KAAK,CAACG,GAAG,CAAC;IACpB;EACF;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIF,GAAG,IAAIA,GAAG,CAACG,MAAM,IAAIN,YAAY,CAACO,GAAG,CAACJ,GAAG,CAACG,MAAM,CAAC,EAAE,OAAO,IAAI;EAClE,IAAIJ,KAAK,EAAE;IACT,IAAIA,KAAK,CAACM,IAAI,IAAIV,WAAW,CAACS,GAAG,CAACL,KAAK,CAACM,IAAI,CAAC,EAAE,OAAO,IAAI;IAC1D;IACA,IAAIN,KAAK,CAACtB,OAAO,IAAIsB,KAAK,CAACM,IAAI,KAAK,cAAc,EAAE,OAAO,IAAI;IAC/D,IAAIN,KAAK,CAACO,WAAW,EAAE,OAAO,IAAI;EACpC;EAEA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA3C,WAAW,CAACC,SAAS,CAAC2C,MAAM,GAAG,YAAY;EACzC,IAAI,CAAC1C,YAAY,CAAC,CAAC;;EAEnB;EACA,IAAI,IAAI,CAAC2C,GAAG,EAAE;IACZ,IAAI,CAACA,GAAG,GAAG,IAAI;IACf,IAAI,CAACA,GAAG,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;EAC3B;EAEA,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,aAAa,GAAG,IAAI;EAEzB,OAAO,IAAI,CAACC,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlD,WAAW,CAACC,SAAS,CAACkD,IAAI,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAE;EACtD,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAAE;IAC5B,MAAMC,IAAI,GAAG,IAAI;IACjB,IAAI,IAAI,CAACC,UAAU,EAAE;MACnBjC,OAAO,CAACC,IAAI,CACV,gIACF,CAAC;IACH;IAEA,IAAI,CAAC8B,kBAAkB,GAAG,IAAIG,OAAO,CAAC,CAACL,OAAO,EAAEC,MAAM,KAAK;MACzDE,IAAI,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;QACrB,IAAI,IAAI,CAAC7B,WAAW,IAAI,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,QAAQ,EAAE;UACxD;QACF;QAEA,IAAI,IAAI,CAACkB,QAAQ,IAAI,IAAI,CAACC,aAAa,EAAE;UACvCI,MAAM,CAAC,IAAI,CAACJ,aAAa,CAAC;UAC1B;QACF;QAEA,MAAMb,KAAK,GAAG,IAAIuB,KAAK,CAAC,SAAS,CAAC;QAClCvB,KAAK,CAACM,IAAI,GAAG,SAAS;QACtBN,KAAK,CAACI,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1BJ,KAAK,CAACwB,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1BxB,KAAK,CAACyB,GAAG,GAAG,IAAI,CAACA,GAAG;QACpBR,MAAM,CAACjB,KAAK,CAAC;MACf,CAAC,CAAC;MACFmB,IAAI,CAACO,GAAG,CAAC,CAAC1B,KAAK,EAAEC,GAAG,KAAK;QACvB,IAAID,KAAK,EAAEiB,MAAM,CAACjB,KAAK,CAAC,CAAC,KACpBgB,OAAO,CAACf,GAAG,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAO,IAAI,CAACiB,kBAAkB,CAACH,IAAI,CAACC,OAAO,EAAEC,MAAM,CAAC;AACtD,CAAC;AAEDrD,WAAW,CAACC,SAAS,CAAC8D,KAAK,GAAG,UAAUC,QAAQ,EAAE;EAChD,OAAO,IAAI,CAACb,IAAI,CAACc,SAAS,EAAED,QAAQ,CAAC;AACvC,CAAC;;AAED;AACA;AACA;;AAEAhE,WAAW,CAACC,SAAS,CAACiE,GAAG,GAAG,UAAU3D,EAAE,EAAE;EACxCA,EAAE,CAAC,IAAI,CAAC;EACR,OAAO,IAAI;AACb,CAAC;AAEDP,WAAW,CAACC,SAAS,CAACkE,EAAE,GAAG,UAAUH,QAAQ,EAAE;EAC7C,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE,MAAM,IAAIL,KAAK,CAAC,mBAAmB,CAAC;EACxE,IAAI,CAACS,WAAW,GAAGJ,QAAQ;EAC3B,OAAO,IAAI;AACb,CAAC;AAEDhE,WAAW,CAACC,SAAS,CAACoE,aAAa,GAAG,UAAUhC,GAAG,EAAE;EACnD,IAAI,CAACA,GAAG,EAAE;IACR,OAAO,KAAK;EACd;EAEA,IAAI,IAAI,CAAC+B,WAAW,EAAE;IACpB,OAAO,IAAI,CAACA,WAAW,CAAC/B,GAAG,CAAC;EAC9B;EAEA,OAAOA,GAAG,CAACG,MAAM,IAAI,GAAG,IAAIH,GAAG,CAACG,MAAM,GAAG,GAAG;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAxC,WAAW,CAACC,SAAS,CAACqE,GAAG,GAAG,UAAUC,KAAK,EAAE;EAC3C,OAAO,IAAI,CAACC,OAAO,CAACD,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAzE,WAAW,CAACC,SAAS,CAACyE,SAAS,GAAG1E,WAAW,CAACC,SAAS,CAACqE,GAAG;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAtE,WAAW,CAACC,SAAS,CAAC0E,GAAG,GAAG,UAAUJ,KAAK,EAAE7D,KAAK,EAAE;EAClD,IAAIf,QAAQ,CAAC4E,KAAK,CAAC,EAAE;IACnB,KAAK,MAAMK,GAAG,IAAIL,KAAK,EAAE;MACvB,IAAI3E,MAAM,CAAC2E,KAAK,EAAEK,GAAG,CAAC,EAAE,IAAI,CAACD,GAAG,CAACC,GAAG,EAAEL,KAAK,CAACK,GAAG,CAAC,CAAC;IACnD;IAEA,OAAO,IAAI;EACb;EAEA,IAAI,CAACJ,OAAO,CAACD,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC,GAAG/D,KAAK;EACzC,IAAI,CAACmE,MAAM,CAACN,KAAK,CAAC,GAAG7D,KAAK;EAC1B,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,WAAW,CAACC,SAAS,CAAC6E,KAAK,GAAG,UAAUP,KAAK,EAAE;EAC7C,OAAO,IAAI,CAACC,OAAO,CAACD,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC;EACxC,OAAO,IAAI,CAACI,MAAM,CAACN,KAAK,CAAC;EACzB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvE,WAAW,CAACC,SAAS,CAACsE,KAAK,GAAG,UAAUQ,IAAI,EAAErE,KAAK,EAAEK,OAAO,EAAE;EAC5D;EACA,IAAIgE,IAAI,KAAK,IAAI,IAAId,SAAS,KAAKc,IAAI,EAAE;IACvC,MAAM,IAAIpB,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,IAAI,IAAI,CAACqB,KAAK,EAAE;IACd,MAAM,IAAIrB,KAAK,CACb,iGACF,CAAC;EACH;EAEA,IAAIhE,QAAQ,CAACoF,IAAI,CAAC,EAAE;IAClB,KAAK,MAAMH,GAAG,IAAIG,IAAI,EAAE;MACtB,IAAInF,MAAM,CAACmF,IAAI,EAAEH,GAAG,CAAC,EAAE,IAAI,CAACL,KAAK,CAACK,GAAG,EAAEG,IAAI,CAACH,GAAG,CAAC,CAAC;IACnD;IAEA,OAAO,IAAI;EACb;EAEA,IAAIK,KAAK,CAACC,OAAO,CAACxE,KAAK,CAAC,EAAE;IACxB,KAAK,MAAMyE,CAAC,IAAIzE,KAAK,EAAE;MACrB,IAAId,MAAM,CAACc,KAAK,EAAEyE,CAAC,CAAC,EAAE,IAAI,CAACZ,KAAK,CAACQ,IAAI,EAAErE,KAAK,CAACyE,CAAC,CAAC,CAAC;IAClD;IAEA,OAAO,IAAI;EACb;;EAEA;EACA,IAAIzE,KAAK,KAAK,IAAI,IAAIuD,SAAS,KAAKvD,KAAK,EAAE;IACzC,MAAM,IAAIiD,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA,IAAI,OAAOjD,KAAK,KAAK,SAAS,EAAE;IAC9BA,KAAK,GAAG0E,MAAM,CAAC1E,KAAK,CAAC;EACvB;;EAEA;EACA,IAAIK,OAAO,EAAE,IAAI,CAACsE,YAAY,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI,EAAErE,KAAK,EAAEK,OAAO,CAAC,CAAC,KACzD,IAAI,CAACsE,YAAY,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI,EAAErE,KAAK,CAAC;EAE5C,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAV,WAAW,CAACC,SAAS,CAACsF,KAAK,GAAG,YAAY;EACxC,IAAI,IAAI,CAACxC,QAAQ,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,IAAI,CAACA,QAAQ,GAAG,IAAI;EACpB,IAAI,IAAI,CAACyC,GAAG,EAAE,IAAI,CAACA,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,IAAI,IAAI,CAAC1C,GAAG,EAAE;IACZ,IAAI,CAACA,GAAG,CAAC0C,KAAK,CAAC,CAAC,CAAC,CAAC;EACpB;EAEA,IAAI,CAACrF,YAAY,CAAC,CAAC;EACnB,IAAI,CAACuF,IAAI,CAAC,OAAO,CAAC;EAClB,OAAO,IAAI;AACb,CAAC;AAEDzF,WAAW,CAACC,SAAS,CAACyF,KAAK,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE7E,OAAO,EAAE8E,aAAa,EAAE;EAC1E,QAAQ9E,OAAO,CAAC+E,IAAI;IAClB,KAAK,OAAO;MACV,IAAI,CAACnB,GAAG,CAAC,eAAe,EAAG,SAAQkB,aAAa,CAAE,GAAEF,IAAK,IAAGC,IAAK,EAAC,CAAE,EAAC,CAAC;MACtE;IAEF,KAAK,MAAM;MACT,IAAI,CAACG,QAAQ,GAAGJ,IAAI;MACpB,IAAI,CAACK,QAAQ,GAAGJ,IAAI;MACpB;IAEF,KAAK,QAAQ;MAAE;MACb,IAAI,CAACjB,GAAG,CAAC,eAAe,EAAG,UAASgB,IAAK,EAAC,CAAC;MAC3C;IACF;MACE;EACJ;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3F,WAAW,CAACC,SAAS,CAACgG,eAAe,GAAG,UAAUvC,EAAE,EAAE;EACpD;EACA,IAAIA,EAAE,KAAKO,SAAS,EAAEP,EAAE,GAAG,IAAI;EAC/B,IAAI,CAACwC,gBAAgB,GAAGxC,EAAE;EAC1B,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA1D,WAAW,CAACC,SAAS,CAACkG,SAAS,GAAG,UAAUC,CAAC,EAAE;EAC7C,IAAI,CAACC,aAAa,GAAGD,CAAC;EACtB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACApG,WAAW,CAACC,SAAS,CAACqG,eAAe,GAAG,UAAUF,CAAC,EAAE;EACnD,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIG,SAAS,CAAC,kBAAkB,CAAC;EACzC;EAEA,IAAI,CAACC,gBAAgB,GAAGJ,CAAC;EACzB,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEApG,WAAW,CAACC,SAAS,CAACwG,MAAM,GAAG,YAAY;EACzC,OAAO;IACL7C,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,GAAG,EAAE,IAAI,CAACA,GAAG;IACb6C,IAAI,EAAE,IAAI,CAAC1B,KAAK;IAChB2B,OAAO,EAAE,IAAI,CAACnC;EAChB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAxE,WAAW,CAACC,SAAS,CAAC2G,IAAI,GAAG,UAAUF,IAAI,EAAE;EAC3C,MAAMG,SAAS,GAAGlH,QAAQ,CAAC+G,IAAI,CAAC;EAChC,IAAIZ,IAAI,GAAG,IAAI,CAACtB,OAAO,CAAC,cAAc,CAAC;EAEvC,IAAI,IAAI,CAACsC,SAAS,EAAE;IAClB,MAAM,IAAInD,KAAK,CACb,8GACF,CAAC;EACH;EAEA,IAAIkD,SAAS,IAAI,CAAC,IAAI,CAAC7B,KAAK,EAAE;IAC5B,IAAIC,KAAK,CAACC,OAAO,CAACwB,IAAI,CAAC,EAAE;MACvB,IAAI,CAAC1B,KAAK,GAAG,EAAE;IACjB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC+B,OAAO,CAACL,IAAI,CAAC,EAAE;MAC9B,IAAI,CAAC1B,KAAK,GAAG,CAAC,CAAC;IACjB;EACF,CAAC,MAAM,IAAI0B,IAAI,IAAI,IAAI,CAAC1B,KAAK,IAAI,IAAI,CAAC+B,OAAO,CAAC,IAAI,CAAC/B,KAAK,CAAC,EAAE;IACzD,MAAM,IAAIrB,KAAK,CAAC,8BAA8B,CAAC;EACjD;;EAEA;EACA,IAAIkD,SAAS,IAAIlH,QAAQ,CAAC,IAAI,CAACqF,KAAK,CAAC,EAAE;IACrC,KAAK,MAAMJ,GAAG,IAAI8B,IAAI,EAAE;MACtB,IAAI,OAAOA,IAAI,CAAC9B,GAAG,CAAC,IAAI,QAAQ,IAAI,CAAC8B,IAAI,CAAC9B,GAAG,CAAC,CAAC6B,MAAM,EACnD,MAAM,IAAI9C,KAAK,CAAC,uCAAuC,CAAC;MAC1D,IAAI/D,MAAM,CAAC8G,IAAI,EAAE9B,GAAG,CAAC,EAAE,IAAI,CAACI,KAAK,CAACJ,GAAG,CAAC,GAAG8B,IAAI,CAAC9B,GAAG,CAAC;IACpD;EACF,CAAC,MACI,IAAI,OAAO8B,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI/C,KAAK,CAAC,kCAAkC,CAAC,CAAC,KAClF,IAAI,OAAO+C,IAAI,KAAK,QAAQ,EAAE;IACjC;IACA,IAAI,CAACZ,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC;IAC5BA,IAAI,GAAG,IAAI,CAACtB,OAAO,CAAC,cAAc,CAAC;IACnC,IAAIsB,IAAI,EAAEA,IAAI,GAAGA,IAAI,CAACrB,WAAW,CAAC,CAAC,CAACuC,IAAI,CAAC,CAAC;IAC1C,IAAIlB,IAAI,KAAK,mCAAmC,EAAE;MAChD,IAAI,CAACd,KAAK,GAAG,IAAI,CAACA,KAAK,GAAI,GAAE,IAAI,CAACA,KAAM,IAAG0B,IAAK,EAAC,GAAGA,IAAI;IAC1D,CAAC,MAAM;MACL,IAAI,CAAC1B,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,IAAI,EAAE,IAAI0B,IAAI;IACxC;EACF,CAAC,MAAM;IACL,IAAI,CAAC1B,KAAK,GAAG0B,IAAI;EACnB;EAEA,IAAI,CAACG,SAAS,IAAI,IAAI,CAACE,OAAO,CAACL,IAAI,CAAC,EAAE;IACpC,OAAO,IAAI;EACb;;EAEA;EACA,IAAI,CAACZ,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC;EAC5B,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA9F,WAAW,CAACC,SAAS,CAACgH,SAAS,GAAG,UAAUC,IAAI,EAAE;EAChD;EACA,IAAI,CAACC,KAAK,GAAG,OAAOD,IAAI,KAAK,WAAW,GAAG,IAAI,GAAGA,IAAI;EACtD,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAlH,WAAW,CAACC,SAAS,CAACmH,oBAAoB,GAAG,YAAY;EACvD,MAAMC,KAAK,GAAG,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;EACnC,IAAIF,KAAK,EAAE;IACT,IAAI,CAACxD,GAAG,IAAI,CAAC,IAAI,CAACA,GAAG,CAAC2D,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIH,KAAK;EAC1D;EAEA,IAAI,CAACC,MAAM,CAAC1F,MAAM,GAAG,CAAC,CAAC,CAAC;;EAExB,IAAI,IAAI,CAACuF,KAAK,EAAE;IACd,MAAMM,KAAK,GAAG,IAAI,CAAC5D,GAAG,CAAC6D,OAAO,CAAC,GAAG,CAAC;IACnC,IAAID,KAAK,IAAI,CAAC,EAAE;MACd,MAAME,UAAU,GAAG,IAAI,CAAC9D,GAAG,CAAC+D,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;MACvD,IAAI,OAAO,IAAI,CAACV,KAAK,KAAK,UAAU,EAAE;QACpCQ,UAAU,CAACT,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLQ,UAAU,CAACT,IAAI,CAAC,CAAC;MACnB;MAEA,IAAI,CAACrD,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC+D,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,GAAG,GAAG,GAAGE,UAAU,CAACJ,IAAI,CAAC,GAAG,CAAC;IAClE;EACF;AACF,CAAC;;AAED;AACAvH,WAAW,CAACC,SAAS,CAAC6H,kBAAkB,GAAG,MAAM;EAC/CvG,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAxB,WAAW,CAACC,SAAS,CAAC8H,aAAa,GAAG,UAAUC,MAAM,EAAElH,OAAO,EAAEmH,KAAK,EAAE;EACtE,IAAI,IAAI,CAAClF,QAAQ,EAAE;IACjB;EACF;EAEA,MAAMX,KAAK,GAAG,IAAIuB,KAAK,CAAE,GAAEqE,MAAM,GAAGlH,OAAQ,aAAY,CAAC;EACzDsB,KAAK,CAACtB,OAAO,GAAGA,OAAO;EACvBsB,KAAK,CAACM,IAAI,GAAG,cAAc;EAC3BN,KAAK,CAAC6F,KAAK,GAAGA,KAAK;EACnB,IAAI,CAACjF,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACC,aAAa,GAAGb,KAAK;EAC1B,IAAI,CAACmD,KAAK,CAAC,CAAC;EACZ,IAAI,CAACvB,QAAQ,CAAC5B,KAAK,CAAC;AACtB,CAAC;AAEDpC,WAAW,CAACC,SAAS,CAACiI,YAAY,GAAG,YAAY;EAC/C,MAAM3E,IAAI,GAAG,IAAI;;EAEjB;EACA,IAAI,IAAI,CAACvC,QAAQ,IAAI,CAAC,IAAI,CAACb,MAAM,EAAE;IACjC,IAAI,CAACA,MAAM,GAAGgI,UAAU,CAAC,MAAM;MAC7B5E,IAAI,CAACwE,aAAa,CAAC,aAAa,EAAExE,IAAI,CAACvC,QAAQ,EAAE,OAAO,CAAC;IAC3D,CAAC,EAAE,IAAI,CAACA,QAAQ,CAAC;EACnB;;EAEA;EACA,IAAI,IAAI,CAACC,gBAAgB,IAAI,CAAC,IAAI,CAACb,qBAAqB,EAAE;IACxD,IAAI,CAACA,qBAAqB,GAAG+H,UAAU,CAAC,MAAM;MAC5C5E,IAAI,CAACwE,aAAa,CAChB,sBAAsB,EACtBxE,IAAI,CAACtC,gBAAgB,EACrB,WACF,CAAC;IACH,CAAC,EAAE,IAAI,CAACA,gBAAgB,CAAC;EAC3B;AACF,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/http2wrapper.js":{"lineLengths":[13,0,31,33,27,27,7,20,22,22,25,20,26,16,20,32,10,22,44,5,4,1,30,34,12,57,36,45,45,24,24,33,29,29,21,26,24,28,16,6,29,53,77,5,23,82,46,60,27,3,44,28,19,47,20,39,39,37,56,14,63,5,3,20,45,82,75,3,14,21,24,5,20,37,40,6,55,45,48,48,46,30,54,38,35,7,28,50,58,50,23,17,3,28,38,28,27,31,30,20,37,57,16,16,16,7,32,5,24,3,29,38,28,27,31,30,20,31,39,85,16,16,16,7,32,5,24,3,26,46,3,19,45,3,25,34,39,3,25,34,39,3,13,34,20,3,15,34,32,27,3,1,34,14072],"data":{"version":3,"names":["http2","require","Stream","net","tls","HTTP2_HEADER_PATH","HTTP2_HEADER_STATUS","HTTP2_HEADER_METHOD","HTTP2_HEADER_AUTHORITY","HTTP2_HEADER_HOST","HTTP2_HEADER_SET_COOKIE","NGHTTP2_CANCEL","constants","setProtocol","protocol","request","options","Request","constructor","defaultPort","defaultHost","port","host","method","path","sessionOptions","socketPath","createConnection","createUnixConnection","bind","_headers","session","connect","setHeader","on","error","emit","authority","ALPNProtocols","servername","allowHalfOpen","Error","setNoDelay","bool","getFrame","frame","headers","mapToHttp2Header","Object","assign","once","flags","mapToHttpHeader","statusCode","status","_headerSent","close","keys","http2Headers","key","value","toLowerCase","Array","isArray","test","URL","name","getHeader","write","data","encoding","pipe","stream","end","abort","destroy","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/http2wrapper.js"],"sourcesContent":["const http2 = require('http2');\nconst Stream = require('stream');\nconst net = require('net');\nconst tls = require('tls');\n\nconst {\n  HTTP2_HEADER_PATH,\n  HTTP2_HEADER_STATUS,\n  HTTP2_HEADER_METHOD,\n  HTTP2_HEADER_AUTHORITY,\n  HTTP2_HEADER_HOST,\n  HTTP2_HEADER_SET_COOKIE,\n  NGHTTP2_CANCEL\n} = http2.constants;\n\nfunction setProtocol(protocol) {\n  return {\n    request(options) {\n      return new Request(protocol, options);\n    }\n  };\n}\n\nclass Request extends Stream {\n  constructor(protocol, options) {\n    super();\n    const defaultPort = protocol === 'https:' ? 443 : 80;\n    const defaultHost = 'localhost';\n    const port = options.port || defaultPort;\n    const host = options.host || defaultHost;\n\n    delete options.port;\n    delete options.host;\n\n    this.method = options.method;\n    this.path = options.path;\n    this.protocol = protocol;\n    this.host = host;\n\n    delete options.method;\n    delete options.path;\n\n    const sessionOptions = { ...options };\n    if (options.socketPath) {\n      sessionOptions.socketPath = options.socketPath;\n      sessionOptions.createConnection = this.createUnixConnection.bind(this);\n    }\n\n    this._headers = {};\n\n    const session = http2.connect(\n      `${protocol}//${host}:${port}`,\n      sessionOptions\n    );\n    this.setHeader('host', `${host}:${port}`);\n\n    session.on('error', (error) => this.emit('error', error));\n\n    this.session = session;\n  }\n\n  createUnixConnection(authority, options) {\n    switch (this.protocol) {\n      case 'http:':\n        return net.connect(options.socketPath);\n      case 'https:':\n        options.ALPNProtocols = ['h2'];\n        options.servername = this.host;\n        options.allowHalfOpen = true;\n        return tls.connect(options.socketPath, options);\n      default:\n        throw new Error('Unsupported protocol', this.protocol);\n    }\n  }\n\n  setNoDelay(bool) {\n    // We can not use setNoDelay with HTTP/2.\n    // Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.\n    // See also https://nodejs.org/api/http2.html#http2_http2session_socket\n  }\n\n  getFrame() {\n    if (this.frame) {\n      return this.frame;\n    }\n\n    const method = {\n      [HTTP2_HEADER_PATH]: this.path,\n      [HTTP2_HEADER_METHOD]: this.method\n    };\n\n    let headers = this.mapToHttp2Header(this._headers);\n\n    headers = Object.assign(headers, method);\n\n    const frame = this.session.request(headers);\n\n    frame.once('response', (headers, flags) => {\n      headers = this.mapToHttpHeader(headers);\n      frame.headers = headers;\n      frame.statusCode = headers[HTTP2_HEADER_STATUS];\n      frame.status = frame.statusCode;\n      this.emit('response', frame);\n    });\n\n    this._headerSent = true;\n\n    frame.once('drain', () => this.emit('drain'));\n    frame.on('error', (error) => this.emit('error', error));\n    frame.on('close', () => this.session.close());\n\n    this.frame = frame;\n    return frame;\n  }\n\n  mapToHttpHeader(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_SET_COOKIE:\n          value = Array.isArray(value) ? value : [value];\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  mapToHttp2Header(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_HOST:\n          key = HTTP2_HEADER_AUTHORITY;\n          value = /^http:\\/\\/|^https:\\/\\//.test(value)\n            ? new URL(value).host\n            : value;\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  setHeader(name, value) {\n    this._headers[name.toLowerCase()] = value;\n  }\n\n  getHeader(name) {\n    return this._headers[name.toLowerCase()];\n  }\n\n  write(data, encoding) {\n    const frame = this.getFrame();\n    return frame.write(data, encoding);\n  }\n\n  pipe(stream, options) {\n    const frame = this.getFrame();\n    return frame.pipe(stream, options);\n  }\n\n  end(data) {\n    const frame = this.getFrame();\n    frame.end(data);\n  }\n\n  abort(data) {\n    const frame = this.getFrame();\n    frame.close(NGHTTP2_CANCEL);\n    this.session.destroy();\n  }\n}\n\nexports.setProtocol = setProtocol;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/unzip.js":{"lineLengths":[13,0,3,23,3,0,7,15,30,33,29,0,3,67,2,23,24,15,3,0,35,35,30,14,0,36,23,30,48,63,25,13,5,32,5,0,18,18,0,47,29,38,4,0,53,27,18,41,59,12,31,5,5,25,23,5,0,44,21,32,44,36,34,36,30,12,30,5,16,4,2,4944],"data":{"version":3,"names":["StringDecoder","require","Stream","zlib","exports","unzip","request","res","createUnzip","stream","decoder","req","on","error","code","emit","pipe","setEncoding","type","buf","string_","write","length","_on","fn","bind","call"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/unzip.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { StringDecoder } = require('string_decoder');\nconst Stream = require('stream');\nconst zlib = require('zlib');\n\n/**\n * Buffers response data events and re-emits when they're unzipped.\n *\n * @param {Request} req\n * @param {Response} res\n * @api private\n */\n\nexports.unzip = (request, res) => {\n  const unzip = zlib.createUnzip();\n  const stream = new Stream();\n  let decoder;\n\n  // make node responseOnEnd() happy\n  stream.req = request;\n\n  unzip.on('error', (error) => {\n    if (error && error.code === 'Z_BUF_ERROR') {\n      // unexpected end of file is ignored by browsers and curl\n      stream.emit('end');\n      return;\n    }\n\n    stream.emit('error', error);\n  });\n\n  // pipe to unzip\n  res.pipe(unzip);\n\n  // override `setEncoding` to capture encoding\n  res.setEncoding = (type) => {\n    decoder = new StringDecoder(type);\n  };\n\n  // decode upon decompressing with captured encoding\n  unzip.on('data', (buf) => {\n    if (decoder) {\n      const string_ = decoder.write(buf);\n      if (string_.length > 0) stream.emit('data', string_);\n    } else {\n      stream.emit('data', buf);\n    }\n  });\n\n  unzip.on('end', () => {\n    stream.emit('end');\n  });\n\n  // override `on` to capture data listeners\n  const _on = res.on;\n  res.on = function (type, fn) {\n    if (type === 'data' || type === 'end') {\n      stream.on(type, fn.bind(res));\n    } else if (type === 'error') {\n      stream.on(type, fn.bind(res));\n      _on.call(res, type, fn);\n    } else {\n      _on.call(res, type, fn);\n    }\n\n    return this;\n  };\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACnD,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,OAAO,CAACC,KAAK,GAAG,CAACC,OAAO,EAAEC,GAAG,KAAK;EAChC,MAAMF,KAAK,GAAGF,IAAI,CAACK,WAAW,CAAC,CAAC;EAChC,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;EAC3B,IAAIQ,OAAO;;EAEX;EACAD,MAAM,CAACE,GAAG,GAAGL,OAAO;EAEpBD,KAAK,CAACO,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAK;IAC3B,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,aAAa,EAAE;MACzC;MACAL,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;MAClB;IACF;IAEAN,MAAM,CAACM,IAAI,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC7B,CAAC,CAAC;;EAEF;EACAN,GAAG,CAACS,IAAI,CAACX,KAAK,CAAC;;EAEf;EACAE,GAAG,CAACU,WAAW,GAAIC,IAAI,IAAK;IAC1BR,OAAO,GAAG,IAAIV,aAAa,CAACkB,IAAI,CAAC;EACnC,CAAC;;EAED;EACAb,KAAK,CAACO,EAAE,CAAC,MAAM,EAAGO,GAAG,IAAK;IACxB,IAAIT,OAAO,EAAE;MACX,MAAMU,OAAO,GAAGV,OAAO,CAACW,KAAK,CAACF,GAAG,CAAC;MAClC,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAEb,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEK,OAAO,CAAC;IACtD,CAAC,MAAM;MACLX,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEI,GAAG,CAAC;IAC1B;EACF,CAAC,CAAC;EAEFd,KAAK,CAACO,EAAE,CAAC,KAAK,EAAE,MAAM;IACpBH,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;EACpB,CAAC,CAAC;;EAEF;EACA,MAAMQ,GAAG,GAAGhB,GAAG,CAACK,EAAE;EAClBL,GAAG,CAACK,EAAE,GAAG,UAAUM,IAAI,EAAEM,EAAE,EAAE;IAC3B,IAAIN,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,KAAK,EAAE;MACrCT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIW,IAAI,KAAK,OAAO,EAAE;MAC3BT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;MAC7BgB,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB,CAAC,MAAM;MACLD,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB;IAEA,OAAO,IAAI;EACb,CAAC;AACH,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/response.js":{"lineLengths":[13,0,3,23,3,0,29,33,49,7,7,24,0,3,21,3,0,26,0,3,52,2,34,18,2,23,26,15,20,31,15,3,0,28,20,25,9,7,11,25,25,23,31,39,29,29,44,41,47,47,45,49,49,1,0,24,67,51,9,100,4,14,23,3,3,0,3,25,3,0,32,50,0,3,43,3,0,47,26,2,0,3,9,3,0,40,19,2,0,3,10,3,0,41,20,2,0,3,53,2,18,14,3,0,42,9,7,11,9,10,10,9,8,10,62,35,29,25,24,20,15,2,60,76,43,2,0,3,11,2,19,14,3,0,41,10,31,24,24,19,4,2,8864],"data":{"version":3,"names":["util","require","Stream","ResponseBase","mixin","module","exports","Response","request","call","res","req","text","files","buffered","_resBuffered","headers","header","_setStatusProperties","statusCode","_setHeaderProperties","setEncoding","bind","on","emit","Object","defineProperty","prototype","get","_body","undefined","body","set","value","inherits","destroy","error","pause","resume","toError","method","path","message","status","Error","setStatusProperties","console","warn","toJSON"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/response.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst Stream = require('stream');\nconst ResponseBase = require('../response-base');\nconst { mixin } = require('../utils');\n\n/**\n * Expose `Response`.\n */\n\nmodule.exports = Response;\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(request) {\n  Stream.call(this);\n  this.res = request.res;\n  const { res } = this;\n  this.request = request;\n  this.req = request.req;\n  this.text = res.text;\n  this.files = res.files || {};\n  this.buffered = request._resBuffered;\n  this.headers = res.headers;\n  this.header = this.headers;\n  this._setStatusProperties(res.statusCode);\n  this._setHeaderProperties(this.header);\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n\n// Lazy access res.body.\n// https://github.com/nodejs/node/pull/39520#issuecomment-889697136\nObject.defineProperty(Response.prototype, 'body', {\n  get() {\n    return this._body !== undefined\n      ? this._body\n      : this.res.body !== undefined\n      ? this.res.body\n      : {};\n  },\n  set(value) {\n    this._body = value;\n  }\n});\n\n/**\n * Inherit from `Stream`.\n */\n\nutil.inherits(Response, Stream);\n\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function (error) {\n  this.res.destroy(error);\n};\n\n/**\n * Pause.\n */\n\nResponse.prototype.pause = function () {\n  this.res.pause();\n};\n\n/**\n * Resume.\n */\n\nResponse.prototype.resume = function () {\n  this.res.resume();\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { path } = req;\n\n  const message = `cannot ${method} ${path} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.text = this.text;\n  error.method = method;\n  error.path = path;\n\n  return error;\n};\n\nResponse.prototype.setStatusProperties = function (status) {\n  console.warn('In superagent 2.x setStatusProperties is a private method');\n  return this._setStatusProperties(status);\n};\n\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\nResponse.prototype.toJSON = function () {\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/response-base.js":{"lineLengths":[13,0,3,23,3,0,33,0,3,25,3,0,30,0,3,35,2,14,3,0,26,0,3,38,2,24,19,14,3,0,47,42,2,0,3,33,2,46,2,58,51,2,25,15,3,0,65,16,27,0,17,42,29,0,11,38,33,91,3,18,0,10,7,22,49,5,17,13,3,2,0,3,45,2,63,67,66,70,51,2,77,2,17,18,20,21,16,2,25,15,3,0,65,40,0,19,27,32,25,0,11,25,23,29,32,32,65,0,10,32,33,34,35,37,38,34,33,44,2,7372],"data":{"version":3,"names":["utils","require","module","exports","ResponseBase","prototype","get","field","header","toLowerCase","_setHeaderProperties","ct","type","parameters","params","key","Object","hasOwnProperty","call","links","link","parseLinks","err","_setStatusProperties","status","Math","trunc","statusCode","statusType","info","ok","redirect","clientError","serverError","error","toError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/response-base.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase() {}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct);\n\n  // params\n  const parameters = utils.params(ct);\n  for (const key in parameters) {\n    if (Object.prototype.hasOwnProperty.call(parameters, key))\n      this[key] = parameters[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch (err) {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = Math.trunc(status / 100);\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/agent.js":{"lineLengths":[13,0,3,23,3,0,7,11,25,7,18,25,35,33,43,0,3,28,2,14,3,0,31,24,12,31,18,23,28,7,24,30,7,24,30,7,25,32,7,49,31,7,5,3,0,5,43,44,4,26,17,5,21,46,18,23,128,63,5,3,0,5,54,4,25,17,5,28,38,95,64,31,3,1,29,36,46,54,58,58,70,32,34,13,23,5,20,4,1,45,0,78,44,37,41,40,3,3,28,7708],"data":{"version":3,"names":["CookieJar","require","CookieAccessInfo","methods","request","AgentBase","Agent","constructor","options","jar","ca","key","pfx","cert","rejectUnauthorized","disableTLSCerts","_saveCookies","res","cookies","headers","_res$request","url","URL","setCookies","hostname","pathname","_attachCookies","request_","access","protocol","getCookies","toValueString","name","method","toUpperCase","prototype","fn","Request","on","bind","_setDefaults","end","del","delete","proxyAgent","Proxy","apply","target","thisArg","argumentsList","module","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/agent.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { CookieJar } = require('cookiejar');\nconst { CookieAccessInfo } = require('cookiejar');\nconst methods = require('methods');\nconst request = require('../..');\nconst AgentBase = require('../agent-base');\n\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nclass Agent extends AgentBase {\n  constructor (options) {\n    super();\n\n    this.jar = new CookieJar();\n\n    if (options) {\n      if (options.ca) {\n        this.ca(options.ca);\n      }\n\n      if (options.key) {\n        this.key(options.key);\n      }\n\n      if (options.pfx) {\n        this.pfx(options.pfx);\n      }\n\n      if (options.cert) {\n        this.cert(options.cert);\n      }\n\n      if (options.rejectUnauthorized === false) {\n        this.disableTLSCerts();\n      }\n    }\n  }\n\n  /**\n   * Save the cookies in the given `res` to\n   * the agent's cookie jar for persistence.\n   *\n   * @param {Response} res\n   * @api private\n   */\n  _saveCookies (res) {\n    const cookies = res.headers['set-cookie'];\n    if (cookies) {\n      const url = new URL(res.request?.url || '');\n      this.jar.setCookies(cookies, url.hostname, url.pathname);\n    }\n  }\n\n  /**\n   * Attach cookies when available to the given `req`.\n   *\n   * @param {Request} req\n   * @api private\n   */\n  _attachCookies (request_) {\n    const url = new URL(request_.url);\n    const access = new CookieAccessInfo(\n      url.hostname,\n      url.pathname,\n      url.protocol === 'https:'\n    );\n    const cookies = this.jar.getCookies(access).toValueString();\n    request_.cookies = cookies;\n  }\n}\n\nfor (const name of methods) {\n  const method = name.toUpperCase();\n  Agent.prototype[name] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n\n    request_.on('response', this._saveCookies.bind(this));\n    request_.on('redirect', this._saveCookies.bind(this));\n    request_.on('redirect', this._attachCookies.bind(this, request_));\n    this._setDefaults(request_);\n    this._attachCookies(request_);\n\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n\n// create a Proxy that can instantiate a new Agent without using `new` keyword\n// (for backward compatibility and chaining)\nconst proxyAgent = new Proxy(Agent, {\n  apply (target, thisArg, argumentsList) {\n    return new target(...argumentsList);\n  }\n});\n\nmodule.exports = proxyAgent;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/agent-base.js":{"lineLengths":[13,0,231,13,17,24,3,25,39,35,5,3,1,28,53,37,94,35,5,25,9,10,7,16,4,1,23,2580],"data":{"version":3,"names":["defaults","Agent","constructor","_defaults","_setDefaults","request","def","fn","args","prototype","_len","arguments","length","Array","_key","push","module","exports"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/agent-base.js"],"sourcesContent":["const defaults = [\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n]\n\nclass Agent {\n  constructor () {\n    this._defaults = [];\n  }\n\n  _setDefaults (request) {\n    for (const def of this._defaults) {\n      request[def.fn](...def.args);\n    }\n  }\n}\n\nfor (const fn of defaults) {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n}\n\n\nmodule.exports = Agent;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,CACf,KAAK,EACL,IAAI,EACJ,MAAM,EACN,KAAK,EACL,OAAO,EACP,MAAM,EACN,QAAQ,EACR,MAAM,EACN,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,IAAI,EACJ,WAAW,EACX,SAAS,EACT,QAAQ,EACR,WAAW,EACX,OAAO,EACP,IAAI,EACJ,KAAK,EACL,KAAK,EACL,MAAM,EACN,iBAAiB,CAClB;AAED,MAAMC,KAAK,CAAC;EACVC,WAAWA,CAAA,EAAI;IACb,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,YAAYA,CAAEC,OAAO,EAAE;IACrB,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACH,SAAS,EAAE;MAChCE,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC,CAAC,GAAGD,GAAG,CAACE,IAAI,CAAC;IAC9B;EACF;AACF;AAEA,KAAK,MAAMD,EAAE,IAAIP,QAAQ,EAAE;EACzB;EACAC,KAAK,CAACQ,SAAS,CAACF,EAAE,CAAC,GAAG,YAAmB;IAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANJ,IAAI,OAAAK,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAJN,IAAI,CAAAM,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IACrC,IAAI,CAACX,SAAS,CAACY,IAAI,CAAC;MAAER,EAAE;MAAEC;IAAK,CAAC,CAAC;IACjC,OAAO,IAAI;EACb,CAAC;AACH;AAGAQ,MAAM,CAACC,OAAO,GAAGhB,KAAK","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/index.js":{"lineLengths":[13,0,71,48,33,47,34,45,36,23,1256],"data":{"version":3,"names":["exports","require","text","binary","image"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/index.js"],"sourcesContent":["exports['application/x-www-form-urlencoded'] = require('./urlencoded');\nexports['application/json'] = require('./json');\nexports.text = require('./text');\n\nexports['application/json-seq'] = exports.text;\n\nconst binary = require('./image');\n\nexports['application/octet-stream'] = binary;\nexports['application/pdf'] = binary;\nexports.image = binary;\n"],"mappings":";;AAAAA,OAAO,CAAC,mCAAmC,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AACtED,OAAO,CAAC,kBAAkB,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/CD,OAAO,CAACE,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhCD,OAAO,CAAC,sBAAsB,CAAC,GAAGA,OAAO,CAACE,IAAI;AAE9C,MAAMC,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEjCD,OAAO,CAAC,0BAA0B,CAAC,GAAGG,MAAM;AAC5CH,OAAO,CAAC,iBAAiB,CAAC,GAAGG,MAAM;AACnCH,OAAO,CAACI,KAAK,GAAGD,MAAM","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/urlencoded.js":{"lineLengths":[13,0,3,23,3,0,25,31,16,27,27,22,5,23,9,35,19,14,5,5,2,1476],"data":{"version":3,"names":["qs","require","module","exports","res","fn","text","setEncoding","on","chunk","parse","err"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/urlencoded.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst qs = require('qs');\n\nmodule.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('ascii');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    try {\n      fn(null, qs.parse(res.text));\n    } catch (err) {\n      fn(err);\n    }\n  });\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExBC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,OAAO,CAAC;EACxBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAI;MACFH,EAAE,CAAC,IAAI,EAAEL,EAAE,CAACU,KAAK,CAACN,GAAG,CAACE,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZN,EAAE,CAACM,GAAG,CAAC;IACT;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/json.js":{"lineLengths":[13,0,37,16,26,27,22,5,23,13,14,9,46,19,18,74,43,78,40,15,22,5,5,2,2056],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk","body","error","JSON","parse","err","rawResponse","statusCode"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/json.js"],"sourcesContent":["module.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    let body;\n    let error;\n    try {\n      body = res.text && JSON.parse(res.text);\n    } catch (err) {\n      error = err;\n      // issue #675: return the raw response if the response parsing fails\n      error.rawResponse = res.text || null;\n      // issue #876: return the http status code if the response parsing fails\n      error.statusCode = res.statusCode;\n    } finally {\n      fn(error, body);\n    }\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAEC,EAAE,EAAE;EAClCD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAIE,IAAI;IACR,IAAIC,KAAK;IACT,IAAI;MACFD,IAAI,GAAGN,GAAG,CAACE,IAAI,IAAIM,IAAI,CAACC,KAAK,CAACT,GAAG,CAACE,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZH,KAAK,GAAGG,GAAG;MACX;MACAH,KAAK,CAACI,WAAW,GAAGX,GAAG,CAACE,IAAI,IAAI,IAAI;MACpC;MACAK,KAAK,CAACK,UAAU,GAAGZ,GAAG,CAACY,UAAU;IACnC,CAAC,SAAS;MACRX,EAAE,CAACM,KAAK,EAAED,IAAI,CAAC;IACjB;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/text.js":{"lineLengths":[13,0,31,16,26,27,22,5,20,2,916],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/text.js"],"sourcesContent":["module.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', fn);\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAEH,EAAE,CAAC;AACnB,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/lib/node/parsers/image.js":{"lineLengths":[13,0,31,54,0,27,21,5,23,34,5,2,1068],"data":{"version":3,"names":["module","exports","res","fn","data","on","chunk","push","Buffer","concat"],"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/server/node_modules/superagent/src/node/parsers/image.js"],"sourcesContent":["module.exports = (res, fn) => {\n  const data = []; // Binary data needs binary storage\n\n  res.on('data', (chunk) => {\n    data.push(chunk);\n  });\n  res.on('end', () => {\n    fn(null, Buffer.concat(data));\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5B,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;;EAEjBF,GAAG,CAACG,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBF,IAAI,CAACG,IAAI,CAACD,KAAK,CAAC;EAClB,CAAC,CAAC;EACFJ,GAAG,CAACG,EAAE,CAAC,KAAK,EAAE,MAAM;IAClBF,EAAE,CAAC,IAAI,EAAEK,MAAM,CAACC,MAAM,CAACL,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/js/pdfkit.js":{"lineLengths":[13,0,31,27,36,23,33,31,39,32,28,0,28,14,57,3,1,0,15,29,21,78,3,17,34,3,12,28,3,14,88,23,47,34,49,100,5,41,33,105,5,18,19,26,3,18,57,3,15,57,3,17,57,3,1,0,17,38,56,21,31,64,38,23,48,22,21,10,8,19,3,14,32,3,1,0,80,40,19,14,14,14,14,14,15,13,12,2,35,24,17,50,10,51,24,28,22,5,3,14,2,17,44,37,26,42,26,28,58,42,27,16,9,7,23,22,76,14,62,7,22,60,14,49,7,62,27,41,43,116,31,40,226,22,76,64,7,27,39,79,26,64,25,31,32,65,7,21,28,44,38,12,25,5,3,20,32,39,5,48,3,1,0,49,40,12,29,17,21,17,64,32,21,3,16,41,50,5,44,35,27,5,28,37,24,39,5,3,14,16,24,5,20,3,14,40,111,29,47,26,52,7,22,45,7,44,5,55,66,29,37,40,23,42,5,35,32,3,14,38,3,1,0,23,24,1,85,86,30,3,51,13,17,19,20,17,6,36,29,15,27,28,8,12,15,22,24,25,22,8,5,3,53,13,26,30,29,28,6,3,10,32,36,38,33,4,1,24,26,24,20,20,20,24,25,27,26,37,1,18,24,25,26,27,37,1,0,25,10,11,13,11,2,15,28,28,25,25,25,24,23,23,23,23,22,22,22,25,25,25,25,24,22,22,23,23,23,23,25,25,25,24,23,23,23,23,23,23,23,25,25,25,24,24,27,27,27,26,24,29,24,25,25,26,2,15,39,29,28,41,47,93,64,65,39,70,62,125,40,60,7,41,19,45,48,29,31,7,23,3,15,37,58,3,18,37,67,3,21,37,73,3,18,37,67,3,21,37,53,3,21,38,64,3,29,38,128,3,22,63,3,23,64,3,10,45,3,16,37,3,18,73,38,5,3,9,24,26,74,64,55,5,25,30,3,1,0,35,22,30,3,15,19,3,18,25,3,1,0,37,42,21,39,34,64,39,81,18,5,45,35,12,33,5,3,15,1,0,6462,86,468,94,308,93,297,338,500,236,572,79,5861,74,0,47,50,59,24,34,30,24,28,37,39,63,43,45,77,15,17,7,5,28,3,20,1,37,34,44,3,27,14,3,154,92,56,67,22,97,3,38,69,24,100,5,3,61,57,31,139,3,83,81,57,168,3,26,1,0,19,36,53,27,38,17,7,52,5,52,3,41,48,3,41,58,18,5,46,3,39,58,78,5,29,35,3,29,33,17,17,25,14,17,17,25,14,21,25,14,14,25,14,5,21,24,6,27,13,13,13,68,14,13,50,14,5,49,3,47,23,16,13,14,26,60,14,13,14,27,60,14,13,14,27,60,14,5,75,122,112,137,26,18,64,12,85,5,18,17,36,5,18,20,16,31,23,34,9,8,29,29,5,18,54,53,28,3,40,23,62,74,124,81,108,96,114,130,98,137,119,18,34,18,14,29,21,32,7,6,27,27,18,54,60,53,59,28,50,3,26,15,27,182,5,51,37,56,118,5,12,29,88,12,31,5,55,21,30,34,8,6,144,3,9,26,3,1,50,36,34,34,3,35,34,3,33,34,3,36,34,3,21,1,50,36,54,34,3,55,34,3,35,34,3,33,34,3,36,34,3,38,34,3,46,34,3,42,34,3,21,1,43,81,1,57,36,103,32,49,40,79,5,58,3,64,1,86,35,30,35,34,3,29,29,34,26,35,49,40,72,5,58,3,16,1,110,186,32,35,28,31,3,13,1,76,52,45,118,1,84,81,19,28,36,47,4,70,1,97,52,45,145,1,106,109,19,28,36,47,4,70,1,54,37,1,89,139,19,28,35,4,73,1,47,31,33,16,40,44,22,75,5,22,12,3,22,50,12,3,44,1,43,62,48,35,36,36,3,44,1,29,93,1,39,23,48,81,3,32,1,218,0,7,18,14,21,20,19,20,26,40,3,29,26,18,5,44,34,31,39,38,40,38,40,14,47,7,190,74,5,48,43,16,3,44,50,16,3,12,11,42,28,13,5,25,20,45,22,45,5,22,22,21,47,24,34,42,7,25,24,23,33,33,12,9,21,15,5,28,20,12,25,24,23,25,23,22,9,15,5,43,35,17,34,22,21,22,39,7,18,47,40,38,36,38,7,37,73,33,24,24,20,23,16,24,28,26,10,20,65,20,21,11,9,9,41,45,35,26,16,23,26,17,9,9,19,43,24,23,21,22,23,27,27,20,65,20,24,12,22,23,11,9,9,59,55,55,12,48,5,19,3,17,51,56,147,66,20,5,47,38,52,3,1,49,36,15,17,17,17,17,3,14,25,21,35,51,19,26,7,3,21,81,3,1,49,44,15,19,17,17,17,17,17,17,3,14,25,21,35,69,19,26,7,3,21,99,3,1,16,29,41,40,2,0,58,26,48,19,21,23,23,25,3,19,37,20,51,60,147,34,22,21,19,20,22,24,24,40,26,7,29,19,3,29,45,55,50,51,15,43,7,3,48,40,3,11,19,58,45,42,5,43,53,5,3,31,35,17,67,89,87,42,38,81,3,1,15,38,2,0,7,14,20,19,13,7,18,12,18,15,25,31,27,27,24,4,26,36,36,33,85,9,49,57,38,35,42,38,7,5,31,31,46,38,46,7,19,5,16,4,28,39,26,18,78,39,18,5,45,4,32,40,17,19,5,38,45,39,37,50,33,12,50,5,16,4,33,36,46,4,25,37,22,5,59,4,29,45,14,32,5,39,16,4,31,44,14,34,5,16,4,20,38,16,4,24,35,16,4,26,35,16,4,42,25,55,13,5,30,58,5,32,62,5,50,37,54,12,20,25,8,32,36,7,34,38,7,40,23,38,23,54,5,45,42,4,34,55,4,42,63,4,39,66,4,34,56,34,16,3,2,19,29,32,22,30,25,25,26,19,34,20,29,23,29,28,28,28,24,34,28,25,22,24,26,32,28,25,28,29,29,32,28,29,23,30,32,31,30,30,31,28,27,29,27,27,29,27,31,29,25,29,30,22,28,24,24,21,30,28,27,27,23,25,25,28,33,27,32,29,30,29,40,29,30,29,29,31,32,32,34,34,34,31,20,27,25,25,22,36,26,31,32,33,35,35,34,34,30,29,29,28,31,20,27,23,28,24,26,26,33,29,33,33,30,29,23,24,24,30,24,19,29,28,29,26,29,26,28,24,26,27,28,29,29,24,29,28,23,22,27,24,28,26,25,25,30,24,29,2,0,27,32,20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,2,31,10,17,16,18,27,17,23,32,29,16,32,38,9,27,14,14,10,18,20,29,7,14,140,32,17,7,35,27,14,14,10,25,26,20,9,26,20,9,14,36,7,31,47,12,18,22,28,7,5,3,26,33,25,12,12,8,23,24,18,7,24,18,7,12,34,5,3,21,8,8,4,13,2,40,34,45,26,47,34,5,3,2,17,13,14,14,19,12,12,30,4,13,15,15,19,12,12,30,4,13,14,14,14,14,35,4,13,88,19,19,15,22,4,13,22,14,14,5,78,14,14,14,21,4,13,22,14,14,5,98,19,19,15,22,4,13,14,14,14,14,52,4,13,69,19,19,15,22,4,13,22,14,14,12,26,26,5,45,24,24,14,21,4,13,22,14,14,12,26,26,5,55,15,22,4,13,29,14,21,4,13,15,15,29,14,21,4,13,14,14,19,30,4,13,15,15,19,30,4,13,14,19,30,4,13,15,19,30,4,13,14,19,30,4,13,15,19,30,4,10,20,12,19,4,10,20,12,19,3,2,47,53,70,25,40,30,3,2,78,39,30,30,20,20,57,57,53,15,23,13,13,3,26,26,27,26,33,33,31,31,58,32,23,19,3,38,24,23,3,51,51,43,43,25,34,26,41,26,3,73,20,38,44,50,59,3,16,2,77,26,27,26,26,36,90,52,52,32,32,36,36,136,2,15,27,33,25,3,1,0,7,18,14,49,19,16,35,24,4,10,43,32,4,13,59,32,4,15,32,4,16,47,4,16,12,13,13,4,14,32,44,5,37,4,17,13,13,12,4,15,32,45,5,37,4,17,47,4,30,34,33,49,5,65,17,148,5,44,76,4,12,37,4,16,62,4,16,62,4,47,134,4,36,96,4,20,93,4,30,20,12,5,38,32,26,30,65,34,77,30,65,26,53,28,4,25,21,14,5,12,12,26,26,26,26,22,22,23,54,56,57,55,28,4,24,38,4,58,32,28,5,33,34,41,38,24,66,41,41,5,60,38,56,28,48,47,43,43,24,54,32,32,23,41,41,46,45,32,32,57,5,16,4,22,43,31,36,5,28,4,14,30,16,4,22,33,17,5,14,4,21,48,19,19,5,16,28,5,58,4,17,16,30,5,32,4,47,30,30,5,49,37,23,23,5,39,25,30,5,20,32,36,5,58,4,14,60,4,41,83,18,5,24,39,31,31,31,31,34,34,80,43,4,19,44,4,31,10,38,30,30,18,33,30,35,35,14,14,5,53,4,41,10,26,24,5,38,24,24,5,18,33,30,23,23,5,56,3,2,0,22,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,10,2,21,51,51,51,51,51,51,51,51,2,54,55,48,49,49,49,53,52,2,45,45,45,45,45,45,55,54,2,45,45,45,45,45,45,53,51,2,50,53,57,51,56,50,58,53,2,52,51,57,50,57,58,58,56,2,50,52,53,53,50,52,55,54,2,50,52,53,53,50,50,55,54,15,15,25,58,3,25,29,25,26,28,24,17,37,45,65,5,70,56,58,54,58,82,3,11,21,49,16,12,46,27,17,51,21,17,7,24,27,46,29,31,41,36,45,13,26,18,41,11,16,27,37,21,11,57,70,16,25,69,22,76,11,16,7,5,3,20,19,54,36,40,34,5,15,3,27,22,56,44,51,5,18,3,31,73,3,23,40,3,28,52,3,29,24,57,33,38,77,5,20,3,1,0,15,18,12,57,3,19,57,3,9,93,3,14,51,13,5,17,25,3,11,57,3,40,46,64,3,1,0,24,13,68,4,20,73,4,23,76,4,27,80,4,15,70,4,22,75,4,25,78,4,29,82,4,19,72,4,18,71,4,20,73,4,24,77,4,12,67,4,18,73,3,2,36,35,12,29,21,17,57,6,30,32,22,28,28,31,19,3,11,28,19,26,23,33,6,33,3,16,47,56,57,25,45,30,22,30,20,19,19,51,9,5,32,3,31,58,57,18,35,23,5,30,25,3,31,34,3,1,0,30,45,2,36,35,12,29,21,17,43,25,55,41,45,50,52,50,54,50,31,53,45,5,3,29,49,52,40,33,36,7,70,5,15,3,22,28,34,5,15,42,20,5,37,33,15,3,37,19,44,5,39,42,25,17,18,34,17,113,65,25,45,54,9,41,21,14,16,7,5,12,13,16,18,6,3,26,11,13,15,36,19,45,30,53,52,37,59,7,38,45,7,5,28,3,41,67,30,25,3,11,42,41,16,46,5,39,109,18,38,22,5,47,22,5,20,29,22,5,41,22,5,110,76,11,10,18,42,29,21,19,113,41,28,30,72,53,14,7,16,43,12,43,5,61,54,44,30,22,41,5,21,32,19,30,21,22,38,41,21,8,33,25,6,17,50,50,5,65,25,28,19,23,21,29,40,37,6,33,3,19,37,23,42,25,37,29,27,61,41,9,35,7,45,5,26,57,22,38,34,64,100,5,15,36,13,9,17,19,17,15,6,33,15,21,12,17,14,20,10,7,45,3,4,3,16,3,1,0,22,42,13,34,45,51,7,33,5,36,41,44,57,5,23,75,5,48,3,1,0,39,102,17,3,112,17,3,14,2,18,88,28,24,35,41,37,22,36,31,22,48,5,4,27,23,37,20,20,5,64,21,8,12,14,38,12,31,41,24,7,5,27,30,23,26,5,46,24,18,5,39,60,88,24,18,5,19,48,5,26,55,5,16,4,23,49,16,4,33,61,4,35,35,10,12,6,16,4,86,59,88,48,46,55,108,62,19,23,16,36,14,16,30,14,16,41,14,16,41,14,16,52,14,16,30,14,16,46,14,16,45,14,17,35,14,16,38,14,16,39,14,18,61,14,18,61,14,15,43,14,16,14,23,5,41,3,2,0,29,19,47,34,12,29,62,71,91,82,40,105,121,36,34,34,20,37,24,37,33,35,58,12,55,5,37,52,32,31,35,15,7,31,34,33,52,40,9,33,30,9,9,7,36,13,13,18,32,31,7,27,31,53,30,37,9,7,3,19,94,3,19,47,33,5,56,3,22,11,42,20,43,38,25,90,100,49,23,23,29,27,35,62,49,63,18,28,11,55,43,29,53,55,20,53,55,65,13,11,61,18,11,56,61,17,27,12,31,35,41,18,11,9,14,47,7,37,14,7,16,5,3,23,62,33,66,5,43,86,5,38,76,5,35,39,5,74,59,25,5,20,22,15,15,9,7,22,28,66,29,41,8,9,25,47,18,6,45,48,42,46,40,7,33,23,23,13,7,49,57,133,39,32,11,46,61,56,61,63,11,44,44,11,45,9,26,35,23,26,26,19,11,47,9,55,48,51,9,19,58,52,32,19,24,25,11,9,26,42,22,24,24,16,46,24,24,24,9,14,35,7,7,17,43,17,5,43,37,19,28,7,48,26,12,36,5,3,24,43,39,32,21,7,40,22,51,44,36,37,61,7,44,12,57,36,46,5,45,16,3,1,0,7,8,14,17,14,39,15,15,22,4,21,29,16,4,19,24,16,5,67,16,4,17,24,16,5,67,16,4,44,47,41,30,42,5,32,33,129,7,6,33,18,38,32,9,5,24,34,21,49,41,46,7,57,61,34,12,42,23,36,7,5,47,16,4,29,55,4,39,63,162,4,41,47,6,8,7,14,58,62,25,34,30,46,5,24,51,45,29,39,26,53,65,61,51,84,74,116,11,146,9,9,36,12,44,60,29,57,7,5,35,80,15,15,33,14,10,10,28,29,8,41,14,13,28,29,28,8,42,14,28,29,28,29,8,42,14,29,13,29,28,8,5,41,39,17,17,38,38,60,60,39,39,42,42,42,42,12,14,14,25,25,6,4,33,11,8,7,13,41,30,58,53,55,7,30,15,15,18,4,38,47,50,73,29,47,84,90,18,21,22,23,35,16,45,29,34,18,24,18,16,27,29,38,30,11,9,7,6,18,32,25,24,25,24,62,51,51,28,7,6,49,47,37,16,39,48,35,36,66,18,69,11,9,23,39,41,42,38,9,14,42,48,25,36,20,9,46,107,9,27,24,66,24,18,26,26,45,67,18,9,44,81,9,52,21,9,9,40,54,22,33,9,38,54,22,33,9,38,6,44,43,5,16,4,41,32,18,15,5,46,28,42,43,34,42,30,11,9,7,5,20,17,5,20,17,5,37,33,74,7,47,5,26,25,5,35,28,5,58,52,18,4,38,50,58,19,50,12,55,5,4,34,52,40,28,13,5,42,47,59,63,24,22,21,76,45,16,22,61,16,23,43,76,70,114,16,7,5,47,29,12,33,26,40,16,22,27,66,16,22,27,36,16,26,17,16,28,41,16,23,41,16,19,35,16,16,35,7,38,5,123,31,77,5,31,77,5,38,71,5,28,18,28,53,7,84,32,59,28,44,20,21,5,25,18,28,53,7,84,32,51,28,44,20,21,5,16,26,15,48,58,14,21,7,39,51,41,5,53,34,49,56,5,26,60,70,77,15,36,5,27,56,5,36,49,5,22,39,64,43,19,21,31,87,46,52,25,55,33,34,27,9,38,48,7,12,71,5,40,24,17,26,31,23,54,86,54,7,17,6,24,20,32,54,28,7,6,44,31,39,17,108,21,25,14,24,66,28,9,52,28,9,7,32,5,13,26,19,3,2,0,137,25,18,17,17,2,12,28,15,21,23,47,36,5,67,16,36,43,15,37,14,7,41,5,36,28,5,13,33,46,13,45,13,38,48,20,3,19,19,13,5,29,22,23,34,24,26,34,25,7,43,73,5,28,28,3,1,0,16,28,23,31,34,36,38,20,3,19,28,29,19,13,5,55,58,34,22,23,62,24,26,27,7,27,40,41,34,42,27,9,44,19,5,42,58,12,42,51,105,5,52,52,41,45,13,11,34,22,26,24,7,35,49,25,44,33,25,38,5,39,31,5,20,3,14,28,39,24,25,28,26,28,30,33,22,9,35,37,5,31,22,31,3,23,46,15,43,50,60,52,24,32,59,23,73,37,29,9,40,27,7,47,57,29,7,3,29,57,46,66,16,58,52,7,57,29,7,3,16,39,46,22,7,3,1,0,16,27,13,31,17,44,46,12,16,55,47,14,36,20,17,9,7,5,47,35,76,39,12,47,5,3,1,0,19,16,29,25,4,34,61,32,18,15,5,129,49,67,69,34,39,5,17,36,20,14,36,7,5,21,24,5,50,50,5,9,12,12,14,54,40,5,35,37,43,27,21,22,50,28,21,22,31,32,33,29,29,19,26,20,15,20,14,15,20,7,31,31,19,26,20,15,20,14,15,20,7,5,39,39,31,45,23,7,40,31,47,23,7,5,24,23,23,23,23,29,34,16,15,26,26,16,15,26,26,26,26,16,15,22,22,26,26,28,16,15,16,15,22,22,25,25,35,27,16,15,22,22,25,26,27,16,15,22,22,26,26,26,27,16,15,22,22,25,26,26,26,28,16,7,12,22,22,5,31,42,5,31,42,5,38,71,5,25,18,5,16,22,32,34,9,5,73,42,19,16,4,18,14,34,39,5,17,59,36,41,7,5,17,3,2,0,24,33,27,49,31,73,25,5,37,30,69,7,5,25,43,46,5,30,31,57,5,34,36,14,16,4,44,29,44,31,31,5,32,37,5,46,4,40,29,26,16,25,7,20,46,4,39,29,34,47,48,30,20,55,11,24,14,59,7,12,28,17,28,9,22,5,46,4,37,59,58,36,46,4,39,34,32,38,5,45,4,39,34,45,4,36,34,45,4,48,29,36,71,50,4,44,31,36,46,4,47,31,36,46,4,50,33,40,30,46,4,55,56,18,14,39,26,27,54,36,44,5,46,4,30,16,12,20,47,32,32,32,32,28,3,2,0,18,56,19,6,29,27,26,24,58,5,26,42,5,25,52,5,58,23,3,28,19,6,102,31,18,3,16,35,34,54,7,37,55,48,46,65,39,20,67,9,43,67,9,27,7,5,33,3,1,0,20,17,58,4,16,30,43,57,54,5,3,2,0,27,30,18,14,10,7,3,23,59,3,1,0,27,62,29,27,24,26,36,13,7,38,64,25,19,5,47,41,5,46,43,5,45,41,5,50,44,5,48,51,5,24,19,37,30,7,49,17,5,3,14,22,77,5,37,57,5,47,39,27,28,7,5,47,42,5,56,45,5,31,16,3,36,27,14,10,11,100,48,7,3,24,33,73,5,39,18,3,17,25,13,5,46,49,28,7,40,63,7,7,26,18,3,9,22,13,5,103,23,18,3,24,119,3,31,79,14,37,42,19,3,18,50,19,5,42,40,21,7,49,36,7,18,7,3,12,48,13,5,32,61,26,24,34,25,3,22,47,52,5,47,27,16,12,13,39,44,9,50,44,16,39,24,24,22,13,9,9,5,3,1,0,37,22,37,3,15,18,3,18,23,3,1,0,21,25,29,25,54,31,5,4,36,56,22,45,77,20,9,9,25,32,7,5,19,31,11,9,37,18,5,29,10,13,7,26,46,37,5,29,45,39,7,40,133,7,102,47,7,5,25,25,51,7,24,49,7,29,52,7,27,59,7,5,68,16,4,43,92,42,33,27,17,10,7,78,66,25,4,22,29,27,16,4,47,66,4,28,52,41,29,41,33,33,5,54,16,4,34,37,34,52,89,45,70,14,55,7,7,4,25,39,50,23,24,4,27,36,46,5,36,4,27,38,4,23,42,49,31,40,28,9,5,42,4,25,52,4,35,33,52,56,48,15,4,17,58,25,27,66,5,35,37,5,3,2,0,21,14,14,14,20,19,28,22,22,17,16,16,24,19,2,23,10,12,10,2,19,13,20,2,24,11,16,12,13,10,2,24,11,12,20,27,17,25,4,12,12,19,3,2,21,14,22,72,5,22,16,34,6,59,16,17,28,51,11,16,7,6,51,36,40,16,4,17,35,85,59,7,59,57,52,9,64,33,9,37,5,16,4,18,39,41,33,9,16,5,16,4,33,57,39,32,20,4,56,57,33,36,22,5,41,75,39,4,44,66,4,50,72,4,45,67,4,44,66,4,51,73,4,48,70,4,26,38,17,30,30,7,38,12,58,5,16,4,40,26,97,5,42,24,46,5,36,38,35,38,37,37,30,22,32,25,5,16,4,28,26,21,39,22,29,40,22,30,37,22,34,21,24,33,21,12,64,5,16,4,24,26,22,22,19,22,49,44,38,40,14,70,46,40,32,30,35,39,35,41,62,161,42,63,78,9,7,39,19,24,52,8,19,24,49,8,5,23,16,4,24,59,16,21,21,7,25,5,51,16,21,21,7,25,5,32,28,16,4,26,19,41,29,27,37,9,28,7,7,23,47,27,5,19,4,28,19,38,61,46,7,27,5,23,25,5,19,4,25,54,61,5,57,20,16,8,45,56,70,5,19,4,28,20,31,29,50,43,44,18,32,11,9,7,5,31,25,36,28,5,24,27,5,43,39,47,28,7,7,32,45,48,7,7,38,48,5,24,48,48,27,5,19,3,2,0,24,27,39,65,21,27,16,6,13,15,42,5,31,17,44,46,12,16,57,23,57,9,47,14,36,20,80,9,15,20,15,29,48,39,7,5,47,57,5,47,52,5,23,57,5,87,51,42,12,53,48,41,21,12,30,20,42,19,11,8,5,26,23,43,34,11,14,8,34,6,30,58,5,44,19,26,56,5,29,40,12,38,5,20,3,2,24,335,1,0,12,21,53,81,65,12,36,65,5,4,15,28,33,4,27,82,38,32,10,7,38,26,32,27,21,44,65,40,7,20,48,4,16,12,85,53,79,26,10,4,22,38,3,2,0,13,15,20,4,15,29,4,23,39,4,17,12,87,55,26,10,3,2,0,19,25,32,4,23,29,21,22,22,21,22,22,21,22,22,33,38,14,20,34,25,14,5,3,2,0,56,56,31,26,29,24,26,34,66,5,26,4,1,25,66,1,40,39,29,33,27,33,36,49,60,47,47,9,7,5,3,16,1,25,19,31,42,61,3,16,1,0,55,42,56,22,4,115,118,62,60,70,62,10,17,20,19,4,1,67,37,57,16,22,6,3,54,52,62,54,50,33,29,43,62,29,10,84,3,88,88,18,1,70,37,57,16,21,6,3,54,52,62,54,50,57,25,10,102,3,106,106,18,1,36,55,13,12,12,1,0,27,28,25,32,53,20,48,47,4,110,9,17,20,19,48,36,15,26,43,43,57,62,55,41,5,3,39,79,15,23,40,40,54,53,52,38,5,3,39,76,1,30,37,14,1,50,44,42,70,75,28,39,41,45,19,50,43,40,3,46,44,54,73,29,29,27,33,43,39,39,95,79,86,50,44,43,60,61,49,48,77,66,21,46,169,3,75,79,16,1,38,52,19,26,58,16,6,60,17,5,62,44,46,63,7,5,29,16,5,1,0,22,26,78,24,37,30,1,38,29,21,38,37,32,28,33,33,12,34,40,5,3,61,37,44,44,7,32,43,51,63,29,78,7,46,21,7,3,31,58,20,15,13,5,1,33,49,21,91,3,44,20,35,56,67,35,5,5,34,29,48,86,50,57,7,38,10,3,54,31,56,3,41,22,53,125,85,80,61,19,3,10,12,75,4,1,39,20,42,55,3,29,30,50,10,48,56,5,3,80,82,50,9,24,25,71,23,24,19,32,15,24,26,13,23,4,20,9,9,13,13,4,18,51,53,57,77,64,79,21,17,7,50,52,76,75,3,10,12,16,39,36,63,59,21,23,24,23,14,4,1,59,34,31,29,43,30,32,51,31,31,65,42,43,10,43,42,3,32,33,30,46,45,32,34,53,33,33,67,74,75,12,75,74,5,3,10,34,35,4,1,0,29,46,21,54,52,54,42,53,51,5,31,34,3,1,31,49,1,51,47,71,35,51,18,1,52,28,44,21,5,42,28,31,29,22,15,22,24,72,57,57,75,4,27,56,46,56,56,9,63,7,36,5,59,46,59,59,9,66,7,36,5,3,42,24,83,24,82,61,45,37,70,3,75,31,41,256,3,98,53,27,19,37,1,0,35,26,67,10,53,3,62,1,38,30,39,110,5,100,21,27,29,16,41,82,30,5,51,4,94,1,31,28,39,41,45,24,65,53,3,23,23,38,37,35,36,32,32,85,33,86,33,21,21,19,15,17,14,39,20,225,5,44,18,3,39,66,58,56,16,78,1,71,101,28,84,25,99,5,10,25,107,5,27,128,5,28,131,5,26,110,5,3,1,0,16,36,29,36,30,32,27,24,20,49,24,5,3,29,22,80,5,26,59,57,11,14,14,52,51,68,39,27,35,25,16,3,9,47,23,34,25,3,1,0,18,16,25,4,15,36,3,2,0,19,17,22,64,48,81,10,3,16,44,26,24,27,11,3,31,48,62,3,12,26,3,15,33,3,9,22,43,3,1,0,21,18,38,4,34,39,4,14,20,79,104,67,26,11,67,22,86,15,28,24,26,29,80,30,27,19,7,29,24,28,29,60,30,29,19,7,30,24,32,29,82,30,33,19,7,22,30,15,5,20,79,71,29,22,72,5,20,26,11,4,17,20,24,30,35,42,25,22,9,40,75,29,50,5,3,2,0,43,29,19,27,33,17,27,14,17,27,14,17,27,14,17,21,27,14,14,27,14,5,81,26,30,23,22,24,21,28,20,15,14,7,28,30,7,27,22,12,11,7,28,59,5,21,24,21,22,33,20,22,23,31,22,29,17,25,24,30,6,28,42,43,29,7,5,36,52,29,9,5,53,55,40,37,47,21,5,3,20,26,8,15,16,5,36,24,5,43,37,45,42,18,36,35,35,53,27,16,3,30,57,48,40,16,3,23,12,35,36,6,3,19,13,64,170,5,28,3,16,35,26,42,29,33,17,5,3,38,28,39,5,48,43,5,39,53,3,35,52,66,21,9,5,60,3,32,49,64,5,16,25,21,6,58,3,13,71,29,20,15,3,12,16,33,48,5,20,32,3,20,26,16,3,16,43,47,23,26,5,3,9,22,28,32,31,36,30,7,32,18,35,5,21,42,44,22,5,22,23,22,23,5,23,21,32,32,23,44,46,5,25,27,5,30,23,12,25,5,3,15,36,24,49,39,39,48,40,5,21,37,23,23,30,6,25,50,5,27,44,29,33,25,20,3,14,34,3,1,26,48,2,21,18,19,18,17,19,24,20,21,21,24,19,18,38,0,29,34,0],"data":{"version":3,"file":"pdfkit.js","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/abstract_reference.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/tree.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/spotcolor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/object.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/reference.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/utils.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/page.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/name_tree.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/saslprep/lib/util.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/saslprep/lib/code-points.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/saslprep/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/security.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/gradient.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/pattern.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/color.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/path.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/vector.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/font/afm.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/font.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/font/standard.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/font/embedded.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/font_factory.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/fonts.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/line_wrapper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/text.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/image/jpeg.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/image/png.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/image.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/images.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/annotations.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/outline.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/outline.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/structure_content.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/structure_element.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/number_tree.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/markings.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/acroform.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/attachments.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/pdfa.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/pdfua.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/subsets.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/utils.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/style.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/normalize.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/size.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/accessibility.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/render.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/table/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/table.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/metadata.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/mixins/metadata.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/pdfkit/lib/document.js"],"sourcesContent":["/*\nPDFAbstractReference - abstract class for PDF reference\n*/\n\nclass PDFAbstractReference {\n  toString() {\n    throw new Error('Must be implemented by subclasses');\n  }\n}\n\nexport default PDFAbstractReference;\n","/*\nPDFTree - abstract base class for name and number tree objects\n*/\n\nimport PDFObject from './object';\n\nclass PDFTree {\n  constructor(options = {}) {\n    this._items = {};\n    // disable /Limits output for this tree\n    this.limits = typeof options.limits === 'boolean' ? options.limits : true;\n  }\n\n  add(key, val) {\n    return (this._items[key] = val);\n  }\n\n  get(key) {\n    return this._items[key];\n  }\n\n  toString() {\n    // Needs to be sorted by key\n    const sortedKeys = Object.keys(this._items).sort((a, b) =>\n      this._compareKeys(a, b),\n    );\n\n    const out = ['<<'];\n    if (this.limits && sortedKeys.length > 1) {\n      const first = sortedKeys[0],\n        last = sortedKeys[sortedKeys.length - 1];\n      out.push(\n        `  /Limits ${PDFObject.convert([this._dataForKey(first), this._dataForKey(last)])}`,\n      );\n    }\n    out.push(`  /${this._keysName()} [`);\n    for (let key of sortedKeys) {\n      out.push(\n        `    ${PDFObject.convert(this._dataForKey(key))} ${PDFObject.convert(\n          this._items[key],\n        )}`,\n      );\n    }\n    out.push(']');\n    out.push('>>');\n    return out.join('\\n');\n  }\n\n  _compareKeys(/*a, b*/) {\n    throw new Error('Must be implemented by subclasses');\n  }\n\n  _keysName() {\n    throw new Error('Must be implemented by subclasses');\n  }\n\n  _dataForKey(/*k*/) {\n    throw new Error('Must be implemented by subclasses');\n  }\n}\n\nexport default PDFTree;\n","export default class SpotColor {\n  constructor(doc, name, C, M, Y, K) {\n    this.id = 'CS' + Object.keys(doc.spotColors).length;\n    this.name = name;\n    this.values = [C, M, Y, K];\n    this.ref = doc.ref([\n      'Separation',\n      this.name,\n      'DeviceCMYK',\n      {\n        Range: [0, 1, 0, 1, 0, 1, 0, 1],\n        C0: [0, 0, 0, 0],\n        C1: this.values.map((value) => value / 100),\n        FunctionType: 2,\n        Domain: [0, 1],\n        N: 1,\n      },\n    ]);\n    this.ref.end();\n  }\n\n  toString() {\n    return `${this.ref.id} 0 R`;\n  }\n}\n","/*\nPDFObject - converts JavaScript types into their corresponding PDF types.\nBy Devon Govett\n*/\n\nimport PDFAbstractReference from './abstract_reference';\nimport PDFTree from './tree';\nimport SpotColor from './spotcolor';\n\nconst pad = (str, length) => (Array(length + 1).join('0') + str).slice(-length);\n\nconst escapableRe = /[\\n\\r\\t\\b\\f()\\\\]/g;\nconst escapable = {\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\\\': '\\\\\\\\',\n  '(': '\\\\(',\n  ')': '\\\\)',\n};\n\n// Convert little endian UTF-16 to big endian\nconst swapBytes = function (buff) {\n  const l = buff.length;\n  if (l & 0x01) {\n    throw new Error('Buffer length must be even');\n  } else {\n    for (let i = 0, end = l - 1; i < end; i += 2) {\n      const a = buff[i];\n      buff[i] = buff[i + 1];\n      buff[i + 1] = a;\n    }\n  }\n\n  return buff;\n};\n\nclass PDFObject {\n  static convert(object, encryptFn = null) {\n    // String literals are converted to the PDF name type\n    if (typeof object === 'string') {\n      return `/${object}`;\n\n      // String objects are converted to PDF strings (UTF-16)\n    } else if (object instanceof String) {\n      let string = object;\n      // Detect if this is a unicode string\n      let isUnicode = false;\n      for (let i = 0, end = string.length; i < end; i++) {\n        if (string.charCodeAt(i) > 0x7f) {\n          isUnicode = true;\n          break;\n        }\n      }\n\n      // If so, encode it as big endian UTF-16\n      let stringBuffer;\n      if (isUnicode) {\n        stringBuffer = swapBytes(Buffer.from(`\\ufeff${string}`, 'utf16le'));\n      } else {\n        stringBuffer = Buffer.from(string.valueOf(), 'ascii');\n      }\n\n      // Encrypt the string when necessary\n      if (encryptFn) {\n        string = encryptFn(stringBuffer).toString('binary');\n      } else {\n        string = stringBuffer.toString('binary');\n      }\n\n      // Escape characters as required by the spec\n      string = string.replace(escapableRe, (c) => escapable[c]);\n\n      return `(${string})`;\n\n      // Buffers are converted to PDF hex strings\n    } else if (Buffer.isBuffer(object)) {\n      return `<${object.toString('hex')}>`;\n    } else if (\n      object instanceof PDFAbstractReference ||\n      object instanceof PDFTree ||\n      object instanceof SpotColor\n    ) {\n      return object.toString();\n    } else if (object instanceof Date) {\n      let string =\n        `D:${pad(object.getUTCFullYear(), 4)}` +\n        pad(object.getUTCMonth() + 1, 2) +\n        pad(object.getUTCDate(), 2) +\n        pad(object.getUTCHours(), 2) +\n        pad(object.getUTCMinutes(), 2) +\n        pad(object.getUTCSeconds(), 2) +\n        'Z';\n\n      // Encrypt the string when necessary\n      if (encryptFn) {\n        string = encryptFn(Buffer.from(string, 'ascii')).toString('binary');\n\n        // Escape characters as required by the spec\n        string = string.replace(escapableRe, (c) => escapable[c]);\n      }\n\n      return `(${string})`;\n    } else if (Array.isArray(object)) {\n      const items = object\n        .map((e) => PDFObject.convert(e, encryptFn))\n        .join(' ');\n      return `[${items}]`;\n    } else if ({}.toString.call(object) === '[object Object]') {\n      const out = ['<<'];\n      for (let key in object) {\n        const val = object[key];\n        out.push(`/${key} ${PDFObject.convert(val, encryptFn)}`);\n      }\n\n      out.push('>>');\n      return out.join('\\n');\n    } else if (typeof object === 'number') {\n      return PDFObject.number(object);\n    } else {\n      return `${object}`;\n    }\n  }\n\n  static number(n) {\n    if (n > -1e21 && n < 1e21) {\n      return Math.round(n * 1e6) / 1e6;\n    }\n\n    throw new Error(`unsupported number: ${n}`);\n  }\n}\n\nexport default PDFObject;\n","/*\nPDFReference - represents a reference to another object in the PDF object heirarchy\nBy Devon Govett\n*/\n\nimport zlib from 'zlib';\nimport PDFAbstractReference from './abstract_reference';\nimport PDFObject from './object';\n\nclass PDFReference extends PDFAbstractReference {\n  constructor(document, id, data = {}) {\n    super();\n    this.document = document;\n    this.id = id;\n    this.data = data;\n    this.gen = 0;\n    this.compress = this.document.compress && !this.data.Filter;\n    this.uncompressedLength = 0;\n    this.buffer = [];\n  }\n\n  write(chunk) {\n    if (!(chunk instanceof Uint8Array)) {\n      chunk = Buffer.from(chunk + '\\n', 'binary');\n    }\n\n    this.uncompressedLength += chunk.length;\n    if (this.data.Length == null) {\n      this.data.Length = 0;\n    }\n    this.buffer.push(chunk);\n    this.data.Length += chunk.length;\n    if (this.compress) {\n      this.data.Filter = 'FlateDecode';\n    }\n  }\n\n  end(chunk) {\n    if (chunk) {\n      this.write(chunk);\n    }\n    this.finalize();\n  }\n\n  finalize() {\n    this.offset = this.document._offset;\n\n    const encryptFn = this.document._security\n      ? this.document._security.getEncryptFn(this.id, this.gen)\n      : null;\n\n    if (this.buffer.length) {\n      this.buffer = Buffer.concat(this.buffer);\n      if (this.compress) {\n        this.buffer = zlib.deflateSync(this.buffer);\n      }\n\n      if (encryptFn) {\n        this.buffer = encryptFn(this.buffer);\n      }\n\n      this.data.Length = this.buffer.length;\n    }\n\n    this.document._write(`${this.id} ${this.gen} obj`);\n    this.document._write(PDFObject.convert(this.data, encryptFn));\n\n    if (this.buffer.length) {\n      this.document._write('stream');\n      this.document._write(this.buffer);\n\n      this.buffer = []; // free up memory\n      this.document._write('\\nendstream');\n    }\n\n    this.document._write('endobj');\n    this.document._refEnd(this);\n  }\n  toString() {\n    return `${this.id} ${this.gen} R`;\n  }\n}\n\nexport default PDFReference;\n","export function PDFNumber(n) {\n  // PDF numbers are strictly 32bit\n  // so convert this number to the nearest 32bit number\n  // @see ISO 32000-1 Annex C.2 (real numbers)\n  return Math.fround(n);\n}\n\n/**\n * Measurement of size\n *\n * @typedef {number | `${number}` | `${number}${'em' | 'in' | 'px' | 'cm' | 'mm' | 'pc' | 'ex' | 'ch' | 'rem' | 'vw' | 'vmin' | 'vmax' | '%' | 'pt'}`} Size\n */\n\n/**\n * @typedef {Array<PDFTilingPattern | PDFColor> | string | Array<number>} PDFColor\n */\n\n/** @typedef {string | Buffer | Uint8Array | ArrayBuffer} PDFFontSource */\n/**\n * Side definitions\n * - To define all sides, use a single value\n * - To define up-down left-right, use a `[Y, X]` array\n * - To define each side, use `[top, right, bottom, left]` array\n * - Or `{vertical: SideValue, horizontal: SideValue}`\n * - Or `{top: SideValue, right: SideValue, bottom: SideValue, left: SideValue}`\n *\n * @template T\n * @typedef {T | [T, T] | [T, T, T, T] | { vertical: T; horizontal: T } | ExpandedSideDefinition<T>} SideDefinition<T>\n **/\n\n/**\n * @template T\n * @typedef {{ top: T; right: T; bottom: T; left: T }} ExpandedSideDefinition<T>\n */\n\n/**\n * Convert any side definition into a static structure\n *\n * @template S\n * @template D\n * @template O\n * @template {S | D} T\n * @param {SideDefinition<S>} sides - The sides to convert\n * @param {SideDefinition<D>} defaultDefinition - The value to use when no definition is provided\n * @param {function(T): O} transformer - The transformation to apply to the sides once normalized\n * @returns {ExpandedSideDefinition<O>}\n */\nexport function normalizeSides(\n  sides,\n  defaultDefinition = undefined,\n  transformer = (v) => v,\n) {\n  if (\n    sides == null ||\n    (typeof sides === 'object' && Object.keys(sides).length === 0)\n  ) {\n    sides = defaultDefinition;\n  }\n  if (sides == null || typeof sides !== 'object') {\n    sides = { top: sides, right: sides, bottom: sides, left: sides };\n  } else if (Array.isArray(sides)) {\n    if (sides.length === 2) {\n      sides = { vertical: sides[0], horizontal: sides[1] };\n    } else {\n      sides = {\n        top: sides[0],\n        right: sides[1],\n        bottom: sides[2],\n        left: sides[3],\n      };\n    }\n  }\n\n  if ('vertical' in sides || 'horizontal' in sides) {\n    sides = {\n      top: sides.vertical,\n      right: sides.horizontal,\n      bottom: sides.vertical,\n      left: sides.horizontal,\n    };\n  }\n\n  return {\n    top: transformer(sides.top),\n    right: transformer(sides.right),\n    bottom: transformer(sides.bottom),\n    left: transformer(sides.left),\n  };\n}\n\nexport const MM_TO_CM = 1 / 10; // 1MM = 1CM\nexport const CM_TO_IN = 1 / 2.54; // 1CM = 1/2.54 IN\nexport const PX_TO_IN = 1 / 96; // 1 PX = 1/96 IN\nexport const IN_TO_PT = 72; // 1 IN = 72 PT\nexport const PC_TO_PT = 12; // 1 PC = 12 PT\n\n/**\n * Get cosine in degrees of a\n *\n * Rounding errors are handled\n * @param a\n * @returns {number}\n */\nexport function cosine(a) {\n  if (a === 0) return 1;\n  if (a === 90) return 0;\n  if (a === 180) return -1;\n  if (a === 270) return 0;\n  return Math.cos((a * Math.PI) / 180);\n}\n\n/**\n * Get sine in degrees of a\n *\n * Rounding errors are handled\n * @param a\n * @returns {number}\n */\nexport function sine(a) {\n  if (a === 0) return 0;\n  if (a === 90) return 1;\n  if (a === 180) return 0;\n  if (a === 270) return -1;\n  return Math.sin((a * Math.PI) / 180);\n}\n","/*\nPDFPage - represents a single page in the PDF document\nBy Devon Govett\n*/\n\nimport { normalizeSides } from './utils';\n\n/**\n * @type {SideDefinition<Size>}\n */\nconst DEFAULT_MARGINS = {\n  top: 72,\n  left: 72,\n  bottom: 72,\n  right: 72,\n};\n\nconst SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nclass PDFPage {\n  constructor(document, options = {}) {\n    this.document = document;\n    this._options = options;\n    this.size = options.size || 'letter';\n    this.layout = options.layout || 'portrait';\n\n    // calculate page dimensions\n    const dimensions = Array.isArray(this.size)\n      ? this.size\n      : SIZES[this.size.toUpperCase()];\n    this.width = dimensions[this.layout === 'portrait' ? 0 : 1];\n    this.height = dimensions[this.layout === 'portrait' ? 1 : 0];\n\n    this.content = this.document.ref();\n\n    if (options.font) document.font(options.font, options.fontFamily);\n    if (options.fontSize) document.fontSize(options.fontSize);\n\n    // process margins\n    // Margin calculation must occur after font assignment to ensure any dynamic sizes are calculated correctly\n    this.margins = normalizeSides(\n      options.margin ?? options.margins,\n      DEFAULT_MARGINS,\n      (x) => document.sizeToPoint(x, 0, this),\n    );\n\n    // Initialize the Font, XObject, and ExtGState dictionaries\n    this.resources = this.document.ref({\n      ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n    });\n\n    // The page dictionary\n    this.dictionary = this.document.ref({\n      Type: 'Page',\n      Parent: this.document._root.data.Pages,\n      MediaBox: [0, 0, this.width, this.height],\n      Contents: this.content,\n      Resources: this.resources,\n    });\n\n    this.markings = [];\n  }\n\n  // Lazily create these objects\n  get fonts() {\n    const data = this.resources.data;\n    return data.Font != null ? data.Font : (data.Font = {});\n  }\n\n  get xobjects() {\n    const data = this.resources.data;\n    return data.XObject != null ? data.XObject : (data.XObject = {});\n  }\n\n  get ext_gstates() {\n    const data = this.resources.data;\n    return data.ExtGState != null ? data.ExtGState : (data.ExtGState = {});\n  }\n\n  get patterns() {\n    const data = this.resources.data;\n    return data.Pattern != null ? data.Pattern : (data.Pattern = {});\n  }\n\n  get colorSpaces() {\n    const data = this.resources.data;\n    return data.ColorSpace || (data.ColorSpace = {});\n  }\n\n  get annotations() {\n    const data = this.dictionary.data;\n    return data.Annots != null ? data.Annots : (data.Annots = []);\n  }\n\n  get structParentTreeKey() {\n    const data = this.dictionary.data;\n    return data.StructParents != null\n      ? data.StructParents\n      : (data.StructParents = this.document.createStructParentTreeNextKey());\n  }\n\n  /**\n   * The width of the safe contents of a page\n   *\n   * @returns {number}\n   */\n  get contentWidth() {\n    return this.width - this.margins.left - this.margins.right;\n  }\n\n  /**\n   * The height of the safe contents of a page\n   *\n   * @returns {number}\n   */\n  get contentHeight() {\n    return this.height - this.margins.top - this.margins.bottom;\n  }\n\n  maxY() {\n    return this.height - this.margins.bottom;\n  }\n\n  write(chunk) {\n    return this.content.write(chunk);\n  }\n\n  // Set tab order if document is tagged for accessibility.\n  _setTabOrder() {\n    if (!this.dictionary.Tabs && this.document.hasMarkInfoDictionary()) {\n      this.dictionary.data.Tabs = 'S';\n    }\n  }\n\n  end() {\n    this._setTabOrder();\n    this.dictionary.end();\n    this.resources.data.ColorSpace = this.resources.data.ColorSpace || {};\n    for (let color of Object.values(this.document.spotColors)) {\n      this.resources.data.ColorSpace[color.id] = color;\n    }\n    this.resources.end();\n    return this.content.end();\n  }\n}\n\nexport default PDFPage;\n","/*\nPDFNameTree - represents a name tree object\n*/\n\nimport PDFTree from './tree';\n\nclass PDFNameTree extends PDFTree {\n  _compareKeys(a, b) {\n    return a.localeCompare(b);\n  }\n\n  _keysName() {\n    return 'Names';\n  }\n\n  _dataForKey(k) {\n    return new String(k);\n  }\n}\n\nexport default PDFNameTree;\n","/**\n * Check if value is in a range group.\n * @param {number} value\n * @param {number[]} rangeGroup\n * @returns {boolean}\n */\nfunction inRange(value, rangeGroup) {\n  if (value < rangeGroup[0]) return false;\n  let startRange = 0;\n  let endRange = rangeGroup.length / 2;\n  while (startRange <= endRange) {\n    const middleRange = Math.floor((startRange + endRange) / 2);\n\n    // actual array index\n    const arrayIndex = middleRange * 2;\n\n    // Check if value is in range pointed by actual index\n    if (\n      value >= rangeGroup[arrayIndex] &&\n      value <= rangeGroup[arrayIndex + 1]\n    ) {\n      return true;\n    }\n\n    if (value > rangeGroup[arrayIndex + 1]) {\n      // Search Right Side Of Array\n      startRange = middleRange + 1;\n    } else {\n      // Search Left Side Of Array\n      endRange = middleRange - 1;\n    }\n  }\n  return false;\n}\n\nexport { inRange };\n","import { inRange } from './util';\n\n// prettier-ignore-start\n/**\n * A.1 Unassigned code points in Unicode 3.2\n * @link https://tools.ietf.org/html/rfc3454#appendix-A.1\n */\nconst unassigned_code_points = [\n  0x0221, 0x0221, 0x0234, 0x024f, 0x02ae, 0x02af, 0x02ef, 0x02ff, 0x0350,\n  0x035f, 0x0370, 0x0373, 0x0376, 0x0379, 0x037b, 0x037d, 0x037f, 0x0383,\n  0x038b, 0x038b, 0x038d, 0x038d, 0x03a2, 0x03a2, 0x03cf, 0x03cf, 0x03f7,\n  0x03ff, 0x0487, 0x0487, 0x04cf, 0x04cf, 0x04f6, 0x04f7, 0x04fa, 0x04ff,\n  0x0510, 0x0530, 0x0557, 0x0558, 0x0560, 0x0560, 0x0588, 0x0588, 0x058b,\n  0x0590, 0x05a2, 0x05a2, 0x05ba, 0x05ba, 0x05c5, 0x05cf, 0x05eb, 0x05ef,\n  0x05f5, 0x060b, 0x060d, 0x061a, 0x061c, 0x061e, 0x0620, 0x0620, 0x063b,\n  0x063f, 0x0656, 0x065f, 0x06ee, 0x06ef, 0x06ff, 0x06ff, 0x070e, 0x070e,\n  0x072d, 0x072f, 0x074b, 0x077f, 0x07b2, 0x0900, 0x0904, 0x0904, 0x093a,\n  0x093b, 0x094e, 0x094f, 0x0955, 0x0957, 0x0971, 0x0980, 0x0984, 0x0984,\n  0x098d, 0x098e, 0x0991, 0x0992, 0x09a9, 0x09a9, 0x09b1, 0x09b1, 0x09b3,\n  0x09b5, 0x09ba, 0x09bb, 0x09bd, 0x09bd, 0x09c5, 0x09c6, 0x09c9, 0x09ca,\n  0x09ce, 0x09d6, 0x09d8, 0x09db, 0x09de, 0x09de, 0x09e4, 0x09e5, 0x09fb,\n  0x0a01, 0x0a03, 0x0a04, 0x0a0b, 0x0a0e, 0x0a11, 0x0a12, 0x0a29, 0x0a29,\n  0x0a31, 0x0a31, 0x0a34, 0x0a34, 0x0a37, 0x0a37, 0x0a3a, 0x0a3b, 0x0a3d,\n  0x0a3d, 0x0a43, 0x0a46, 0x0a49, 0x0a4a, 0x0a4e, 0x0a58, 0x0a5d, 0x0a5d,\n  0x0a5f, 0x0a65, 0x0a75, 0x0a80, 0x0a84, 0x0a84, 0x0a8c, 0x0a8c, 0x0a8e,\n  0x0a8e, 0x0a92, 0x0a92, 0x0aa9, 0x0aa9, 0x0ab1, 0x0ab1, 0x0ab4, 0x0ab4,\n  0x0aba, 0x0abb, 0x0ac6, 0x0ac6, 0x0aca, 0x0aca, 0x0ace, 0x0acf, 0x0ad1,\n  0x0adf, 0x0ae1, 0x0ae5, 0x0af0, 0x0b00, 0x0b04, 0x0b04, 0x0b0d, 0x0b0e,\n  0x0b11, 0x0b12, 0x0b29, 0x0b29, 0x0b31, 0x0b31, 0x0b34, 0x0b35, 0x0b3a,\n  0x0b3b, 0x0b44, 0x0b46, 0x0b49, 0x0b4a, 0x0b4e, 0x0b55, 0x0b58, 0x0b5b,\n  0x0b5e, 0x0b5e, 0x0b62, 0x0b65, 0x0b71, 0x0b81, 0x0b84, 0x0b84, 0x0b8b,\n  0x0b8d, 0x0b91, 0x0b91, 0x0b96, 0x0b98, 0x0b9b, 0x0b9b, 0x0b9d, 0x0b9d,\n  0x0ba0, 0x0ba2, 0x0ba5, 0x0ba7, 0x0bab, 0x0bad, 0x0bb6, 0x0bb6, 0x0bba,\n  0x0bbd, 0x0bc3, 0x0bc5, 0x0bc9, 0x0bc9, 0x0bce, 0x0bd6, 0x0bd8, 0x0be6,\n  0x0bf3, 0x0c00, 0x0c04, 0x0c04, 0x0c0d, 0x0c0d, 0x0c11, 0x0c11, 0x0c29,\n  0x0c29, 0x0c34, 0x0c34, 0x0c3a, 0x0c3d, 0x0c45, 0x0c45, 0x0c49, 0x0c49,\n  0x0c4e, 0x0c54, 0x0c57, 0x0c5f, 0x0c62, 0x0c65, 0x0c70, 0x0c81, 0x0c84,\n  0x0c84, 0x0c8d, 0x0c8d, 0x0c91, 0x0c91, 0x0ca9, 0x0ca9, 0x0cb4, 0x0cb4,\n  0x0cba, 0x0cbd, 0x0cc5, 0x0cc5, 0x0cc9, 0x0cc9, 0x0cce, 0x0cd4, 0x0cd7,\n  0x0cdd, 0x0cdf, 0x0cdf, 0x0ce2, 0x0ce5, 0x0cf0, 0x0d01, 0x0d04, 0x0d04,\n  0x0d0d, 0x0d0d, 0x0d11, 0x0d11, 0x0d29, 0x0d29, 0x0d3a, 0x0d3d, 0x0d44,\n  0x0d45, 0x0d49, 0x0d49, 0x0d4e, 0x0d56, 0x0d58, 0x0d5f, 0x0d62, 0x0d65,\n  0x0d70, 0x0d81, 0x0d84, 0x0d84, 0x0d97, 0x0d99, 0x0db2, 0x0db2, 0x0dbc,\n  0x0dbc, 0x0dbe, 0x0dbf, 0x0dc7, 0x0dc9, 0x0dcb, 0x0dce, 0x0dd5, 0x0dd5,\n  0x0dd7, 0x0dd7, 0x0de0, 0x0df1, 0x0df5, 0x0e00, 0x0e3b, 0x0e3e, 0x0e5c,\n  0x0e80, 0x0e83, 0x0e83, 0x0e85, 0x0e86, 0x0e89, 0x0e89, 0x0e8b, 0x0e8c,\n  0x0e8e, 0x0e93, 0x0e98, 0x0e98, 0x0ea0, 0x0ea0, 0x0ea4, 0x0ea4, 0x0ea6,\n  0x0ea6, 0x0ea8, 0x0ea9, 0x0eac, 0x0eac, 0x0eba, 0x0eba, 0x0ebe, 0x0ebf,\n  0x0ec5, 0x0ec5, 0x0ec7, 0x0ec7, 0x0ece, 0x0ecf, 0x0eda, 0x0edb, 0x0ede,\n  0x0eff, 0x0f48, 0x0f48, 0x0f6b, 0x0f70, 0x0f8c, 0x0f8f, 0x0f98, 0x0f98,\n  0x0fbd, 0x0fbd, 0x0fcd, 0x0fce, 0x0fd0, 0x0fff, 0x1022, 0x1022, 0x1028,\n  0x1028, 0x102b, 0x102b, 0x1033, 0x1035, 0x103a, 0x103f, 0x105a, 0x109f,\n  0x10c6, 0x10cf, 0x10f9, 0x10fa, 0x10fc, 0x10ff, 0x115a, 0x115e, 0x11a3,\n  0x11a7, 0x11fa, 0x11ff, 0x1207, 0x1207, 0x1247, 0x1247, 0x1249, 0x1249,\n  0x124e, 0x124f, 0x1257, 0x1257, 0x1259, 0x1259, 0x125e, 0x125f, 0x1287,\n  0x1287, 0x1289, 0x1289, 0x128e, 0x128f, 0x12af, 0x12af, 0x12b1, 0x12b1,\n  0x12b6, 0x12b7, 0x12bf, 0x12bf, 0x12c1, 0x12c1, 0x12c6, 0x12c7, 0x12cf,\n  0x12cf, 0x12d7, 0x12d7, 0x12ef, 0x12ef, 0x130f, 0x130f, 0x1311, 0x1311,\n  0x1316, 0x1317, 0x131f, 0x131f, 0x1347, 0x1347, 0x135b, 0x1360, 0x137d,\n  0x139f, 0x13f5, 0x1400, 0x1677, 0x167f, 0x169d, 0x169f, 0x16f1, 0x16ff,\n  0x170d, 0x170d, 0x1715, 0x171f, 0x1737, 0x173f, 0x1754, 0x175f, 0x176d,\n  0x176d, 0x1771, 0x1771, 0x1774, 0x177f, 0x17dd, 0x17df, 0x17ea, 0x17ff,\n  0x180f, 0x180f, 0x181a, 0x181f, 0x1878, 0x187f, 0x18aa, 0x1dff, 0x1e9c,\n  0x1e9f, 0x1efa, 0x1eff, 0x1f16, 0x1f17, 0x1f1e, 0x1f1f, 0x1f46, 0x1f47,\n  0x1f4e, 0x1f4f, 0x1f58, 0x1f58, 0x1f5a, 0x1f5a, 0x1f5c, 0x1f5c, 0x1f5e,\n  0x1f5e, 0x1f7e, 0x1f7f, 0x1fb5, 0x1fb5, 0x1fc5, 0x1fc5, 0x1fd4, 0x1fd5,\n  0x1fdc, 0x1fdc, 0x1ff0, 0x1ff1, 0x1ff5, 0x1ff5, 0x1fff, 0x1fff, 0x2053,\n  0x2056, 0x2058, 0x205e, 0x2064, 0x2069, 0x2072, 0x2073, 0x208f, 0x209f,\n  0x20b2, 0x20cf, 0x20eb, 0x20ff, 0x213b, 0x213c, 0x214c, 0x2152, 0x2184,\n  0x218f, 0x23cf, 0x23ff, 0x2427, 0x243f, 0x244b, 0x245f, 0x24ff, 0x24ff,\n  0x2614, 0x2615, 0x2618, 0x2618, 0x267e, 0x267f, 0x268a, 0x2700, 0x2705,\n  0x2705, 0x270a, 0x270b, 0x2728, 0x2728, 0x274c, 0x274c, 0x274e, 0x274e,\n  0x2753, 0x2755, 0x2757, 0x2757, 0x275f, 0x2760, 0x2795, 0x2797, 0x27b0,\n  0x27b0, 0x27bf, 0x27cf, 0x27ec, 0x27ef, 0x2b00, 0x2e7f, 0x2e9a, 0x2e9a,\n  0x2ef4, 0x2eff, 0x2fd6, 0x2fef, 0x2ffc, 0x2fff, 0x3040, 0x3040, 0x3097,\n  0x3098, 0x3100, 0x3104, 0x312d, 0x3130, 0x318f, 0x318f, 0x31b8, 0x31ef,\n  0x321d, 0x321f, 0x3244, 0x3250, 0x327c, 0x327e, 0x32cc, 0x32cf, 0x32ff,\n  0x32ff, 0x3377, 0x337a, 0x33de, 0x33df, 0x33ff, 0x33ff, 0x4db6, 0x4dff,\n  0x9fa6, 0x9fff, 0xa48d, 0xa48f, 0xa4c7, 0xabff, 0xd7a4, 0xd7ff, 0xfa2e,\n  0xfa2f, 0xfa6b, 0xfaff, 0xfb07, 0xfb12, 0xfb18, 0xfb1c, 0xfb37, 0xfb37,\n  0xfb3d, 0xfb3d, 0xfb3f, 0xfb3f, 0xfb42, 0xfb42, 0xfb45, 0xfb45, 0xfbb2,\n  0xfbd2, 0xfd40, 0xfd4f, 0xfd90, 0xfd91, 0xfdc8, 0xfdcf, 0xfdfd, 0xfdff,\n  0xfe10, 0xfe1f, 0xfe24, 0xfe2f, 0xfe47, 0xfe48, 0xfe53, 0xfe53, 0xfe67,\n  0xfe67, 0xfe6c, 0xfe6f, 0xfe75, 0xfe75, 0xfefd, 0xfefe, 0xff00, 0xff00,\n  0xffbf, 0xffc1, 0xffc8, 0xffc9, 0xffd0, 0xffd1, 0xffd8, 0xffd9, 0xffdd,\n  0xffdf, 0xffe7, 0xffe7, 0xffef, 0xfff8, 0x10000, 0x102ff, 0x1031f, 0x1031f,\n  0x10324, 0x1032f, 0x1034b, 0x103ff, 0x10426, 0x10427, 0x1044e, 0x1cfff,\n  0x1d0f6, 0x1d0ff, 0x1d127, 0x1d129, 0x1d1de, 0x1d3ff, 0x1d455, 0x1d455,\n  0x1d49d, 0x1d49d, 0x1d4a0, 0x1d4a1, 0x1d4a3, 0x1d4a4, 0x1d4a7, 0x1d4a8,\n  0x1d4ad, 0x1d4ad, 0x1d4ba, 0x1d4ba, 0x1d4bc, 0x1d4bc, 0x1d4c1, 0x1d4c1,\n  0x1d4c4, 0x1d4c4, 0x1d506, 0x1d506, 0x1d50b, 0x1d50c, 0x1d515, 0x1d515,\n  0x1d51d, 0x1d51d, 0x1d53a, 0x1d53a, 0x1d53f, 0x1d53f, 0x1d545, 0x1d545,\n  0x1d547, 0x1d549, 0x1d551, 0x1d551, 0x1d6a4, 0x1d6a7, 0x1d7ca, 0x1d7cd,\n  0x1d800, 0x1fffd, 0x2a6d7, 0x2f7ff, 0x2fa1e, 0x2fffd, 0x30000, 0x3fffd,\n  0x40000, 0x4fffd, 0x50000, 0x5fffd, 0x60000, 0x6fffd, 0x70000, 0x7fffd,\n  0x80000, 0x8fffd, 0x90000, 0x9fffd, 0xa0000, 0xafffd, 0xb0000, 0xbfffd,\n  0xc0000, 0xcfffd, 0xd0000, 0xdfffd, 0xe0000, 0xe0000, 0xe0002, 0xe001f,\n  0xe0080, 0xefffd,\n];\n// prettier-ignore-end\n\nconst isUnassignedCodePoint = (character) =>\n  inRange(character, unassigned_code_points);\n\n// prettier-ignore-start\n/**\n * B.1 Commonly mapped to nothing\n * @link https://tools.ietf.org/html/rfc3454#appendix-B.1\n */\nconst commonly_mapped_to_nothing = [\n  0x00ad, 0x00ad, 0x034f, 0x034f, 0x1806, 0x1806, 0x180b, 0x180b, 0x180c,\n  0x180c, 0x180d, 0x180d, 0x200b, 0x200b, 0x200c, 0x200c, 0x200d, 0x200d,\n  0x2060, 0x2060, 0xfe00, 0xfe00, 0xfe01, 0xfe01, 0xfe02, 0xfe02, 0xfe03,\n  0xfe03, 0xfe04, 0xfe04, 0xfe05, 0xfe05, 0xfe06, 0xfe06, 0xfe07, 0xfe07,\n  0xfe08, 0xfe08, 0xfe09, 0xfe09, 0xfe0a, 0xfe0a, 0xfe0b, 0xfe0b, 0xfe0c,\n  0xfe0c, 0xfe0d, 0xfe0d, 0xfe0e, 0xfe0e, 0xfe0f, 0xfe0f, 0xfeff, 0xfeff,\n];\n// prettier-ignore-end\n\nconst isCommonlyMappedToNothing = (character) =>\n  inRange(character, commonly_mapped_to_nothing);\n\n// prettier-ignore-start\n/**\n * C.1.2 Non-ASCII space characters\n * @link https://tools.ietf.org/html/rfc3454#appendix-C.1.2\n */\nconst non_ASCII_space_characters = [\n  0x00a0, 0x00a0 /* NO-BREAK SPACE */, 0x1680, 0x1680 /* OGHAM SPACE MARK */,\n  0x2000, 0x2000 /* EN QUAD */, 0x2001, 0x2001 /* EM QUAD */, 0x2002,\n  0x2002 /* EN SPACE */, 0x2003, 0x2003 /* EM SPACE */, 0x2004,\n  0x2004 /* THREE-PER-EM SPACE */, 0x2005, 0x2005 /* FOUR-PER-EM SPACE */,\n  0x2006, 0x2006 /* SIX-PER-EM SPACE */, 0x2007, 0x2007 /* FIGURE SPACE */,\n  0x2008, 0x2008 /* PUNCTUATION SPACE */, 0x2009, 0x2009 /* THIN SPACE */,\n  0x200a, 0x200a /* HAIR SPACE */, 0x200b, 0x200b /* ZERO WIDTH SPACE */,\n  0x202f, 0x202f /* NARROW NO-BREAK SPACE */, 0x205f,\n  0x205f /* MEDIUM MATHEMATICAL SPACE */, 0x3000,\n  0x3000 /* IDEOGRAPHIC SPACE */,\n];\n// prettier-ignore-end\n\nconst isNonASCIISpaceCharacter = (character) =>\n  inRange(character, non_ASCII_space_characters);\n\n// prettier-ignore-start\nconst non_ASCII_controls_characters = [\n  /**\n   * C.2.2 Non-ASCII control characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2\n   */\n  0x0080, 0x009f /* [CONTROL CHARACTERS] */, 0x06dd,\n  0x06dd /* ARABIC END OF AYAH */, 0x070f,\n  0x070f /* SYRIAC ABBREVIATION MARK */, 0x180e,\n  0x180e /* MONGOLIAN VOWEL SEPARATOR */, 0x200c,\n  0x200c /* ZERO WIDTH NON-JOINER */, 0x200d, 0x200d /* ZERO WIDTH JOINER */,\n  0x2028, 0x2028 /* LINE SEPARATOR */, 0x2029, 0x2029 /* PARAGRAPH SEPARATOR */,\n  0x2060, 0x2060 /* WORD JOINER */, 0x2061, 0x2061 /* FUNCTION APPLICATION */,\n  0x2062, 0x2062 /* INVISIBLE TIMES */, 0x2063,\n  0x2063 /* INVISIBLE SEPARATOR */, 0x206a, 0x206f /* [CONTROL CHARACTERS] */,\n  0xfeff, 0xfeff /* ZERO WIDTH NO-BREAK SPACE */, 0xfff9,\n  0xfffc /* [CONTROL CHARACTERS] */, 0x1d173,\n  0x1d17a /* [MUSICAL CONTROL CHARACTERS] */,\n];\n\nconst non_character_codepoints = [\n  /**\n   * C.4 Non-character code points\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.4\n   */\n  0xfdd0, 0xfdef /* [NONCHARACTER CODE POINTS] */, 0xfffe,\n  0xffff /* [NONCHARACTER CODE POINTS] */, 0x1fffe,\n  0x1ffff /* [NONCHARACTER CODE POINTS] */, 0x2fffe,\n  0x2ffff /* [NONCHARACTER CODE POINTS] */, 0x3fffe,\n  0x3ffff /* [NONCHARACTER CODE POINTS] */, 0x4fffe,\n  0x4ffff /* [NONCHARACTER CODE POINTS] */, 0x5fffe,\n  0x5ffff /* [NONCHARACTER CODE POINTS] */, 0x6fffe,\n  0x6ffff /* [NONCHARACTER CODE POINTS] */, 0x7fffe,\n  0x7ffff /* [NONCHARACTER CODE POINTS] */, 0x8fffe,\n  0x8ffff /* [NONCHARACTER CODE POINTS] */, 0x9fffe,\n  0x9ffff /* [NONCHARACTER CODE POINTS] */, 0xafffe,\n  0xaffff /* [NONCHARACTER CODE POINTS] */, 0xbfffe,\n  0xbffff /* [NONCHARACTER CODE POINTS] */, 0xcfffe,\n  0xcffff /* [NONCHARACTER CODE POINTS] */, 0xdfffe,\n  0xdffff /* [NONCHARACTER CODE POINTS] */, 0xefffe,\n  0xeffff /* [NONCHARACTER CODE POINTS] */, 0x10fffe,\n  0x10ffff /* [NONCHARACTER CODE POINTS] */,\n];\n\n/**\n * 2.3.  Prohibited Output\n */\nconst prohibited_characters = [\n  /**\n   * C.2.1 ASCII control characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1\n   */\n  0, 0x001f /* [CONTROL CHARACTERS] */, 0x007f, 0x007f /* DELETE */,\n\n  /**\n   * C.8 Change display properties or are deprecated\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.8\n   */\n  0x0340, 0x0340 /* COMBINING GRAVE TONE MARK */, 0x0341,\n  0x0341 /* COMBINING ACUTE TONE MARK */, 0x200e,\n  0x200e /* LEFT-TO-RIGHT MARK */, 0x200f, 0x200f /* RIGHT-TO-LEFT MARK */,\n  0x202a, 0x202a /* LEFT-TO-RIGHT EMBEDDING */, 0x202b,\n  0x202b /* RIGHT-TO-LEFT EMBEDDING */, 0x202c,\n  0x202c /* POP DIRECTIONAL FORMATTING */, 0x202d,\n  0x202d /* LEFT-TO-RIGHT OVERRIDE */, 0x202e,\n  0x202e /* RIGHT-TO-LEFT OVERRIDE */, 0x206a,\n  0x206a /* INHIBIT SYMMETRIC SWAPPING */, 0x206b,\n  0x206b /* ACTIVATE SYMMETRIC SWAPPING */, 0x206c,\n  0x206c /* INHIBIT ARABIC FORM SHAPING */, 0x206d,\n  0x206d /* ACTIVATE ARABIC FORM SHAPING */, 0x206e,\n  0x206e /* NATIONAL DIGIT SHAPES */, 0x206f, 0x206f /* NOMINAL DIGIT SHAPES */,\n\n  /**\n   * C.7 Inappropriate for canonical representation\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.7\n   */\n  0x2ff0, 0x2ffb /* [IDEOGRAPHIC DESCRIPTION CHARACTERS] */,\n\n  /**\n   * C.5 Surrogate codes\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.5\n   */\n  0xd800, 0xdfff,\n\n  /**\n   * C.3 Private use\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.3\n   */\n  0xe000, 0xf8ff /* [PRIVATE USE, PLANE 0] */,\n\n  /**\n   * C.6 Inappropriate for plain text\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.6\n   */\n  0xfff9, 0xfff9 /* INTERLINEAR ANNOTATION ANCHOR */, 0xfffa,\n  0xfffa /* INTERLINEAR ANNOTATION SEPARATOR */, 0xfffb,\n  0xfffb /* INTERLINEAR ANNOTATION TERMINATOR */, 0xfffc,\n  0xfffc /* OBJECT REPLACEMENT CHARACTER */, 0xfffd,\n  0xfffd /* REPLACEMENT CHARACTER */,\n\n  /**\n   * C.9 Tagging characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.9\n   */\n  0xe0001, 0xe0001 /* LANGUAGE TAG */, 0xe0020,\n  0xe007f /* [TAGGING CHARACTERS] */,\n\n  /**\n   * C.3 Private use\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.3\n   */\n\n  0xf0000, 0xffffd /* [PRIVATE USE, PLANE 15] */, 0x100000,\n  0x10fffd /* [PRIVATE USE, PLANE 16] */,\n];\n// prettier-ignore-end\n\nconst isProhibitedCharacter = (character) =>\n  inRange(character, non_ASCII_space_characters) ||\n  inRange(character, prohibited_characters) ||\n  inRange(character, non_ASCII_controls_characters) ||\n  inRange(character, non_character_codepoints);\n\n// prettier-ignore-start\n/**\n * D.1 Characters with bidirectional property \"R\" or \"AL\"\n * @link https://tools.ietf.org/html/rfc3454#appendix-D.1\n */\nconst bidirectional_r_al = [\n  0x05be, 0x05be, 0x05c0, 0x05c0, 0x05c3, 0x05c3, 0x05d0, 0x05ea, 0x05f0,\n  0x05f4, 0x061b, 0x061b, 0x061f, 0x061f, 0x0621, 0x063a, 0x0640, 0x064a,\n  0x066d, 0x066f, 0x0671, 0x06d5, 0x06dd, 0x06dd, 0x06e5, 0x06e6, 0x06fa,\n  0x06fe, 0x0700, 0x070d, 0x0710, 0x0710, 0x0712, 0x072c, 0x0780, 0x07a5,\n  0x07b1, 0x07b1, 0x200f, 0x200f, 0xfb1d, 0xfb1d, 0xfb1f, 0xfb28, 0xfb2a,\n  0xfb36, 0xfb38, 0xfb3c, 0xfb3e, 0xfb3e, 0xfb40, 0xfb41, 0xfb43, 0xfb44,\n  0xfb46, 0xfbb1, 0xfbd3, 0xfd3d, 0xfd50, 0xfd8f, 0xfd92, 0xfdc7, 0xfdf0,\n  0xfdfc, 0xfe70, 0xfe74, 0xfe76, 0xfefc,\n];\n// prettier-ignore-end\n\nconst isBidirectionalRAL = (character) =>\n  inRange(character, bidirectional_r_al);\n\n// prettier-ignore-start\n/**\n * D.2 Characters with bidirectional property \"L\"\n * @link https://tools.ietf.org/html/rfc3454#appendix-D.2\n */\nconst bidirectional_l = [\n  0x0041, 0x005a, 0x0061, 0x007a, 0x00aa, 0x00aa, 0x00b5, 0x00b5, 0x00ba,\n  0x00ba, 0x00c0, 0x00d6, 0x00d8, 0x00f6, 0x00f8, 0x0220, 0x0222, 0x0233,\n  0x0250, 0x02ad, 0x02b0, 0x02b8, 0x02bb, 0x02c1, 0x02d0, 0x02d1, 0x02e0,\n  0x02e4, 0x02ee, 0x02ee, 0x037a, 0x037a, 0x0386, 0x0386, 0x0388, 0x038a,\n  0x038c, 0x038c, 0x038e, 0x03a1, 0x03a3, 0x03ce, 0x03d0, 0x03f5, 0x0400,\n  0x0482, 0x048a, 0x04ce, 0x04d0, 0x04f5, 0x04f8, 0x04f9, 0x0500, 0x050f,\n  0x0531, 0x0556, 0x0559, 0x055f, 0x0561, 0x0587, 0x0589, 0x0589, 0x0903,\n  0x0903, 0x0905, 0x0939, 0x093d, 0x0940, 0x0949, 0x094c, 0x0950, 0x0950,\n  0x0958, 0x0961, 0x0964, 0x0970, 0x0982, 0x0983, 0x0985, 0x098c, 0x098f,\n  0x0990, 0x0993, 0x09a8, 0x09aa, 0x09b0, 0x09b2, 0x09b2, 0x09b6, 0x09b9,\n  0x09be, 0x09c0, 0x09c7, 0x09c8, 0x09cb, 0x09cc, 0x09d7, 0x09d7, 0x09dc,\n  0x09dd, 0x09df, 0x09e1, 0x09e6, 0x09f1, 0x09f4, 0x09fa, 0x0a05, 0x0a0a,\n  0x0a0f, 0x0a10, 0x0a13, 0x0a28, 0x0a2a, 0x0a30, 0x0a32, 0x0a33, 0x0a35,\n  0x0a36, 0x0a38, 0x0a39, 0x0a3e, 0x0a40, 0x0a59, 0x0a5c, 0x0a5e, 0x0a5e,\n  0x0a66, 0x0a6f, 0x0a72, 0x0a74, 0x0a83, 0x0a83, 0x0a85, 0x0a8b, 0x0a8d,\n  0x0a8d, 0x0a8f, 0x0a91, 0x0a93, 0x0aa8, 0x0aaa, 0x0ab0, 0x0ab2, 0x0ab3,\n  0x0ab5, 0x0ab9, 0x0abd, 0x0ac0, 0x0ac9, 0x0ac9, 0x0acb, 0x0acc, 0x0ad0,\n  0x0ad0, 0x0ae0, 0x0ae0, 0x0ae6, 0x0aef, 0x0b02, 0x0b03, 0x0b05, 0x0b0c,\n  0x0b0f, 0x0b10, 0x0b13, 0x0b28, 0x0b2a, 0x0b30, 0x0b32, 0x0b33, 0x0b36,\n  0x0b39, 0x0b3d, 0x0b3e, 0x0b40, 0x0b40, 0x0b47, 0x0b48, 0x0b4b, 0x0b4c,\n  0x0b57, 0x0b57, 0x0b5c, 0x0b5d, 0x0b5f, 0x0b61, 0x0b66, 0x0b70, 0x0b83,\n  0x0b83, 0x0b85, 0x0b8a, 0x0b8e, 0x0b90, 0x0b92, 0x0b95, 0x0b99, 0x0b9a,\n  0x0b9c, 0x0b9c, 0x0b9e, 0x0b9f, 0x0ba3, 0x0ba4, 0x0ba8, 0x0baa, 0x0bae,\n  0x0bb5, 0x0bb7, 0x0bb9, 0x0bbe, 0x0bbf, 0x0bc1, 0x0bc2, 0x0bc6, 0x0bc8,\n  0x0bca, 0x0bcc, 0x0bd7, 0x0bd7, 0x0be7, 0x0bf2, 0x0c01, 0x0c03, 0x0c05,\n  0x0c0c, 0x0c0e, 0x0c10, 0x0c12, 0x0c28, 0x0c2a, 0x0c33, 0x0c35, 0x0c39,\n  0x0c41, 0x0c44, 0x0c60, 0x0c61, 0x0c66, 0x0c6f, 0x0c82, 0x0c83, 0x0c85,\n  0x0c8c, 0x0c8e, 0x0c90, 0x0c92, 0x0ca8, 0x0caa, 0x0cb3, 0x0cb5, 0x0cb9,\n  0x0cbe, 0x0cbe, 0x0cc0, 0x0cc4, 0x0cc7, 0x0cc8, 0x0cca, 0x0ccb, 0x0cd5,\n  0x0cd6, 0x0cde, 0x0cde, 0x0ce0, 0x0ce1, 0x0ce6, 0x0cef, 0x0d02, 0x0d03,\n  0x0d05, 0x0d0c, 0x0d0e, 0x0d10, 0x0d12, 0x0d28, 0x0d2a, 0x0d39, 0x0d3e,\n  0x0d40, 0x0d46, 0x0d48, 0x0d4a, 0x0d4c, 0x0d57, 0x0d57, 0x0d60, 0x0d61,\n  0x0d66, 0x0d6f, 0x0d82, 0x0d83, 0x0d85, 0x0d96, 0x0d9a, 0x0db1, 0x0db3,\n  0x0dbb, 0x0dbd, 0x0dbd, 0x0dc0, 0x0dc6, 0x0dcf, 0x0dd1, 0x0dd8, 0x0ddf,\n  0x0df2, 0x0df4, 0x0e01, 0x0e30, 0x0e32, 0x0e33, 0x0e40, 0x0e46, 0x0e4f,\n  0x0e5b, 0x0e81, 0x0e82, 0x0e84, 0x0e84, 0x0e87, 0x0e88, 0x0e8a, 0x0e8a,\n  0x0e8d, 0x0e8d, 0x0e94, 0x0e97, 0x0e99, 0x0e9f, 0x0ea1, 0x0ea3, 0x0ea5,\n  0x0ea5, 0x0ea7, 0x0ea7, 0x0eaa, 0x0eab, 0x0ead, 0x0eb0, 0x0eb2, 0x0eb3,\n  0x0ebd, 0x0ebd, 0x0ec0, 0x0ec4, 0x0ec6, 0x0ec6, 0x0ed0, 0x0ed9, 0x0edc,\n  0x0edd, 0x0f00, 0x0f17, 0x0f1a, 0x0f34, 0x0f36, 0x0f36, 0x0f38, 0x0f38,\n  0x0f3e, 0x0f47, 0x0f49, 0x0f6a, 0x0f7f, 0x0f7f, 0x0f85, 0x0f85, 0x0f88,\n  0x0f8b, 0x0fbe, 0x0fc5, 0x0fc7, 0x0fcc, 0x0fcf, 0x0fcf, 0x1000, 0x1021,\n  0x1023, 0x1027, 0x1029, 0x102a, 0x102c, 0x102c, 0x1031, 0x1031, 0x1038,\n  0x1038, 0x1040, 0x1057, 0x10a0, 0x10c5, 0x10d0, 0x10f8, 0x10fb, 0x10fb,\n  0x1100, 0x1159, 0x115f, 0x11a2, 0x11a8, 0x11f9, 0x1200, 0x1206, 0x1208,\n  0x1246, 0x1248, 0x1248, 0x124a, 0x124d, 0x1250, 0x1256, 0x1258, 0x1258,\n  0x125a, 0x125d, 0x1260, 0x1286, 0x1288, 0x1288, 0x128a, 0x128d, 0x1290,\n  0x12ae, 0x12b0, 0x12b0, 0x12b2, 0x12b5, 0x12b8, 0x12be, 0x12c0, 0x12c0,\n  0x12c2, 0x12c5, 0x12c8, 0x12ce, 0x12d0, 0x12d6, 0x12d8, 0x12ee, 0x12f0,\n  0x130e, 0x1310, 0x1310, 0x1312, 0x1315, 0x1318, 0x131e, 0x1320, 0x1346,\n  0x1348, 0x135a, 0x1361, 0x137c, 0x13a0, 0x13f4, 0x1401, 0x1676, 0x1681,\n  0x169a, 0x16a0, 0x16f0, 0x1700, 0x170c, 0x170e, 0x1711, 0x1720, 0x1731,\n  0x1735, 0x1736, 0x1740, 0x1751, 0x1760, 0x176c, 0x176e, 0x1770, 0x1780,\n  0x17b6, 0x17be, 0x17c5, 0x17c7, 0x17c8, 0x17d4, 0x17da, 0x17dc, 0x17dc,\n  0x17e0, 0x17e9, 0x1810, 0x1819, 0x1820, 0x1877, 0x1880, 0x18a8, 0x1e00,\n  0x1e9b, 0x1ea0, 0x1ef9, 0x1f00, 0x1f15, 0x1f18, 0x1f1d, 0x1f20, 0x1f45,\n  0x1f48, 0x1f4d, 0x1f50, 0x1f57, 0x1f59, 0x1f59, 0x1f5b, 0x1f5b, 0x1f5d,\n  0x1f5d, 0x1f5f, 0x1f7d, 0x1f80, 0x1fb4, 0x1fb6, 0x1fbc, 0x1fbe, 0x1fbe,\n  0x1fc2, 0x1fc4, 0x1fc6, 0x1fcc, 0x1fd0, 0x1fd3, 0x1fd6, 0x1fdb, 0x1fe0,\n  0x1fec, 0x1ff2, 0x1ff4, 0x1ff6, 0x1ffc, 0x200e, 0x200e, 0x2071, 0x2071,\n  0x207f, 0x207f, 0x2102, 0x2102, 0x2107, 0x2107, 0x210a, 0x2113, 0x2115,\n  0x2115, 0x2119, 0x211d, 0x2124, 0x2124, 0x2126, 0x2126, 0x2128, 0x2128,\n  0x212a, 0x212d, 0x212f, 0x2131, 0x2133, 0x2139, 0x213d, 0x213f, 0x2145,\n  0x2149, 0x2160, 0x2183, 0x2336, 0x237a, 0x2395, 0x2395, 0x249c, 0x24e9,\n  0x3005, 0x3007, 0x3021, 0x3029, 0x3031, 0x3035, 0x3038, 0x303c, 0x3041,\n  0x3096, 0x309d, 0x309f, 0x30a1, 0x30fa, 0x30fc, 0x30ff, 0x3105, 0x312c,\n  0x3131, 0x318e, 0x3190, 0x31b7, 0x31f0, 0x321c, 0x3220, 0x3243, 0x3260,\n  0x327b, 0x327f, 0x32b0, 0x32c0, 0x32cb, 0x32d0, 0x32fe, 0x3300, 0x3376,\n  0x337b, 0x33dd, 0x33e0, 0x33fe, 0x3400, 0x4db5, 0x4e00, 0x9fa5, 0xa000,\n  0xa48c, 0xac00, 0xd7a3, 0xd800, 0xfa2d, 0xfa30, 0xfa6a, 0xfb00, 0xfb06,\n  0xfb13, 0xfb17, 0xff21, 0xff3a, 0xff41, 0xff5a, 0xff66, 0xffbe, 0xffc2,\n  0xffc7, 0xffca, 0xffcf, 0xffd2, 0xffd7, 0xffda, 0xffdc, 0x10300, 0x1031e,\n  0x10320, 0x10323, 0x10330, 0x1034a, 0x10400, 0x10425, 0x10428, 0x1044d,\n  0x1d000, 0x1d0f5, 0x1d100, 0x1d126, 0x1d12a, 0x1d166, 0x1d16a, 0x1d172,\n  0x1d183, 0x1d184, 0x1d18c, 0x1d1a9, 0x1d1ae, 0x1d1dd, 0x1d400, 0x1d454,\n  0x1d456, 0x1d49c, 0x1d49e, 0x1d49f, 0x1d4a2, 0x1d4a2, 0x1d4a5, 0x1d4a6,\n  0x1d4a9, 0x1d4ac, 0x1d4ae, 0x1d4b9, 0x1d4bb, 0x1d4bb, 0x1d4bd, 0x1d4c0,\n  0x1d4c2, 0x1d4c3, 0x1d4c5, 0x1d505, 0x1d507, 0x1d50a, 0x1d50d, 0x1d514,\n  0x1d516, 0x1d51c, 0x1d51e, 0x1d539, 0x1d53b, 0x1d53e, 0x1d540, 0x1d544,\n  0x1d546, 0x1d546, 0x1d54a, 0x1d550, 0x1d552, 0x1d6a3, 0x1d6a8, 0x1d7c9,\n  0x20000, 0x2a6d6, 0x2f800, 0x2fa1d, 0xf0000, 0xffffd, 0x100000, 0x10fffd,\n];\n// prettier-ignore-end\n\nconst isBidirectionalL = (character) => inRange(character, bidirectional_l);\n\nexport {\n  isUnassignedCodePoint,\n  isCommonlyMappedToNothing,\n  isNonASCIISpaceCharacter,\n  isProhibitedCharacter,\n  isBidirectionalRAL,\n  isBidirectionalL,\n};\n","import {\n  isUnassignedCodePoint,\n  isCommonlyMappedToNothing,\n  isNonASCIISpaceCharacter,\n  isProhibitedCharacter,\n  isBidirectionalRAL,\n  isBidirectionalL,\n} from './lib/code-points';\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = isNonASCIISpaceCharacter;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = isCommonlyMappedToNothing;\n\n// utils\nconst getCodePoint = (character) => character.codePointAt(0);\nconst first = (x) => x[0];\nconst last = (x) => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map((character) => (mapping2space(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter((character) => !mapping2nothing(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(isProhibitedCharacter);\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3',\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(isUnassignedCodePoint);\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5',\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(isBidirectionalRAL);\n\n  const hasBidiL = normalized_map.some(isBidirectionalL);\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6',\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = isBidirectionalRAL(\n    getCodePoint(first(normalized_input)),\n  );\n  const isLastBidiRAL = isBidirectionalRAL(\n    getCodePoint(last(normalized_input)),\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6',\n    );\n  }\n\n  return normalized_input;\n}\n\nexport default saslprep;\n","/*\n   PDFSecurity - represents PDF security settings\n   By Yang Liu <hi@zesik.com>\n */\n\nimport CryptoJS from 'crypto-js';\nimport saslprep from './saslprep/index';\n\nclass PDFSecurity {\n  static generateFileID(info = {}) {\n    let infoStr = `${info.CreationDate.getTime()}\\n`;\n\n    for (let key in info) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!info.hasOwnProperty(key)) {\n        continue;\n      }\n      infoStr += `${key}: ${info[key].valueOf()}\\n`;\n    }\n\n    return wordArrayToBuffer(CryptoJS.MD5(infoStr));\n  }\n\n  static generateRandomWordArray(bytes) {\n    return CryptoJS.lib.WordArray.random(bytes);\n  }\n\n  static create(document, options = {}) {\n    if (!options.ownerPassword && !options.userPassword) {\n      return null;\n    }\n    return new PDFSecurity(document, options);\n  }\n\n  constructor(document, options = {}) {\n    if (!options.ownerPassword && !options.userPassword) {\n      throw new Error('None of owner password and user password is defined.');\n    }\n\n    this.document = document;\n    this._setupEncryption(options);\n  }\n\n  _setupEncryption(options) {\n    switch (options.pdfVersion) {\n      case '1.4':\n      case '1.5':\n        this.version = 2;\n        break;\n      case '1.6':\n      case '1.7':\n        this.version = 4;\n        break;\n      case '1.7ext3':\n        this.version = 5;\n        break;\n      default:\n        this.version = 1;\n        break;\n    }\n\n    const encDict = {\n      Filter: 'Standard',\n    };\n\n    switch (this.version) {\n      case 1:\n      case 2:\n      case 4:\n        this._setupEncryptionV1V2V4(this.version, encDict, options);\n        break;\n      case 5:\n        this._setupEncryptionV5(encDict, options);\n        break;\n    }\n\n    this.dictionary = this.document.ref(encDict);\n  }\n\n  _setupEncryptionV1V2V4(v, encDict, options) {\n    let r, permissions;\n    switch (v) {\n      case 1:\n        r = 2;\n        this.keyBits = 40;\n        permissions = getPermissionsR2(options.permissions);\n        break;\n      case 2:\n        r = 3;\n        this.keyBits = 128;\n        permissions = getPermissionsR3(options.permissions);\n        break;\n      case 4:\n        r = 4;\n        this.keyBits = 128;\n        permissions = getPermissionsR3(options.permissions);\n        break;\n    }\n\n    const paddedUserPassword = processPasswordR2R3R4(options.userPassword);\n    const paddedOwnerPassword = options.ownerPassword\n      ? processPasswordR2R3R4(options.ownerPassword)\n      : paddedUserPassword;\n\n    const ownerPasswordEntry = getOwnerPasswordR2R3R4(\n      r,\n      this.keyBits,\n      paddedUserPassword,\n      paddedOwnerPassword,\n    );\n    this.encryptionKey = getEncryptionKeyR2R3R4(\n      r,\n      this.keyBits,\n      this.document._id,\n      paddedUserPassword,\n      ownerPasswordEntry,\n      permissions,\n    );\n    let userPasswordEntry;\n    if (r === 2) {\n      userPasswordEntry = getUserPasswordR2(this.encryptionKey);\n    } else {\n      userPasswordEntry = getUserPasswordR3R4(\n        this.document._id,\n        this.encryptionKey,\n      );\n    }\n\n    encDict.V = v;\n    if (v >= 2) {\n      encDict.Length = this.keyBits;\n    }\n    if (v === 4) {\n      encDict.CF = {\n        StdCF: {\n          AuthEvent: 'DocOpen',\n          CFM: 'AESV2',\n          Length: this.keyBits / 8,\n        },\n      };\n      encDict.StmF = 'StdCF';\n      encDict.StrF = 'StdCF';\n    }\n    encDict.R = r;\n    encDict.O = wordArrayToBuffer(ownerPasswordEntry);\n    encDict.U = wordArrayToBuffer(userPasswordEntry);\n    encDict.P = permissions;\n  }\n\n  _setupEncryptionV5(encDict, options) {\n    this.keyBits = 256;\n    const permissions = getPermissionsR3(options.permissions);\n\n    const processedUserPassword = processPasswordR5(options.userPassword);\n    const processedOwnerPassword = options.ownerPassword\n      ? processPasswordR5(options.ownerPassword)\n      : processedUserPassword;\n\n    this.encryptionKey = getEncryptionKeyR5(\n      PDFSecurity.generateRandomWordArray,\n    );\n    const userPasswordEntry = getUserPasswordR5(\n      processedUserPassword,\n      PDFSecurity.generateRandomWordArray,\n    );\n    const userKeySalt = CryptoJS.lib.WordArray.create(\n      userPasswordEntry.words.slice(10, 12),\n      8,\n    );\n    const userEncryptionKeyEntry = getUserEncryptionKeyR5(\n      processedUserPassword,\n      userKeySalt,\n      this.encryptionKey,\n    );\n    const ownerPasswordEntry = getOwnerPasswordR5(\n      processedOwnerPassword,\n      userPasswordEntry,\n      PDFSecurity.generateRandomWordArray,\n    );\n    const ownerKeySalt = CryptoJS.lib.WordArray.create(\n      ownerPasswordEntry.words.slice(10, 12),\n      8,\n    );\n    const ownerEncryptionKeyEntry = getOwnerEncryptionKeyR5(\n      processedOwnerPassword,\n      ownerKeySalt,\n      userPasswordEntry,\n      this.encryptionKey,\n    );\n    const permsEntry = getEncryptedPermissionsR5(\n      permissions,\n      this.encryptionKey,\n      PDFSecurity.generateRandomWordArray,\n    );\n\n    encDict.V = 5;\n    encDict.Length = this.keyBits;\n    encDict.CF = {\n      StdCF: {\n        AuthEvent: 'DocOpen',\n        CFM: 'AESV3',\n        Length: this.keyBits / 8,\n      },\n    };\n    encDict.StmF = 'StdCF';\n    encDict.StrF = 'StdCF';\n    encDict.R = 5;\n    encDict.O = wordArrayToBuffer(ownerPasswordEntry);\n    encDict.OE = wordArrayToBuffer(ownerEncryptionKeyEntry);\n    encDict.U = wordArrayToBuffer(userPasswordEntry);\n    encDict.UE = wordArrayToBuffer(userEncryptionKeyEntry);\n    encDict.P = permissions;\n    encDict.Perms = wordArrayToBuffer(permsEntry);\n  }\n\n  getEncryptFn(obj, gen) {\n    let digest;\n    if (this.version < 5) {\n      digest = this.encryptionKey\n        .clone()\n        .concat(\n          CryptoJS.lib.WordArray.create(\n            [\n              ((obj & 0xff) << 24) |\n                ((obj & 0xff00) << 8) |\n                ((obj >> 8) & 0xff00) |\n                (gen & 0xff),\n              (gen & 0xff00) << 16,\n            ],\n            5,\n          ),\n        );\n    }\n\n    if (this.version === 1 || this.version === 2) {\n      let key = CryptoJS.MD5(digest);\n      key.sigBytes = Math.min(16, this.keyBits / 8 + 5);\n      return (buffer) =>\n        wordArrayToBuffer(\n          CryptoJS.RC4.encrypt(CryptoJS.lib.WordArray.create(buffer), key)\n            .ciphertext,\n        );\n    }\n\n    let key;\n    if (this.version === 4) {\n      key = CryptoJS.MD5(\n        digest.concat(CryptoJS.lib.WordArray.create([0x73416c54], 4)),\n      );\n    } else {\n      key = this.encryptionKey;\n    }\n\n    const iv = PDFSecurity.generateRandomWordArray(16);\n    const options = {\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7,\n      iv,\n    };\n\n    return (buffer) =>\n      wordArrayToBuffer(\n        iv\n          .clone()\n          .concat(\n            CryptoJS.AES.encrypt(\n              CryptoJS.lib.WordArray.create(buffer),\n              key,\n              options,\n            ).ciphertext,\n          ),\n      );\n  }\n\n  end() {\n    this.dictionary.end();\n  }\n}\n\nfunction getPermissionsR2(permissionObject = {}) {\n  let permissions = 0xffffffc0 >> 0;\n  if (permissionObject.printing) {\n    permissions |= 0b000000000100;\n  }\n  if (permissionObject.modifying) {\n    permissions |= 0b000000001000;\n  }\n  if (permissionObject.copying) {\n    permissions |= 0b000000010000;\n  }\n  if (permissionObject.annotating) {\n    permissions |= 0b000000100000;\n  }\n  return permissions;\n}\n\nfunction getPermissionsR3(permissionObject = {}) {\n  let permissions = 0xfffff0c0 >> 0;\n  if (permissionObject.printing === 'lowResolution') {\n    permissions |= 0b000000000100;\n  }\n  if (permissionObject.printing === 'highResolution') {\n    permissions |= 0b100000000100;\n  }\n  if (permissionObject.modifying) {\n    permissions |= 0b000000001000;\n  }\n  if (permissionObject.copying) {\n    permissions |= 0b000000010000;\n  }\n  if (permissionObject.annotating) {\n    permissions |= 0b000000100000;\n  }\n  if (permissionObject.fillingForms) {\n    permissions |= 0b000100000000;\n  }\n  if (permissionObject.contentAccessibility) {\n    permissions |= 0b001000000000;\n  }\n  if (permissionObject.documentAssembly) {\n    permissions |= 0b010000000000;\n  }\n  return permissions;\n}\n\nfunction getUserPasswordR2(encryptionKey) {\n  return CryptoJS.RC4.encrypt(processPasswordR2R3R4(), encryptionKey)\n    .ciphertext;\n}\n\nfunction getUserPasswordR3R4(documentId, encryptionKey) {\n  const key = encryptionKey.clone();\n  let cipher = CryptoJS.MD5(\n    processPasswordR2R3R4().concat(CryptoJS.lib.WordArray.create(documentId)),\n  );\n  for (let i = 0; i < 20; i++) {\n    const xorRound = Math.ceil(key.sigBytes / 4);\n    for (let j = 0; j < xorRound; j++) {\n      key.words[j] =\n        encryptionKey.words[j] ^ (i | (i << 8) | (i << 16) | (i << 24));\n    }\n    cipher = CryptoJS.RC4.encrypt(cipher, key).ciphertext;\n  }\n  return cipher.concat(CryptoJS.lib.WordArray.create(null, 16));\n}\n\nfunction getOwnerPasswordR2R3R4(\n  r,\n  keyBits,\n  paddedUserPassword,\n  paddedOwnerPassword,\n) {\n  let digest = paddedOwnerPassword;\n  let round = r >= 3 ? 51 : 1;\n  for (let i = 0; i < round; i++) {\n    digest = CryptoJS.MD5(digest);\n  }\n\n  const key = digest.clone();\n  key.sigBytes = keyBits / 8;\n  let cipher = paddedUserPassword;\n  round = r >= 3 ? 20 : 1;\n  for (let i = 0; i < round; i++) {\n    const xorRound = Math.ceil(key.sigBytes / 4);\n    for (let j = 0; j < xorRound; j++) {\n      key.words[j] = digest.words[j] ^ (i | (i << 8) | (i << 16) | (i << 24));\n    }\n    cipher = CryptoJS.RC4.encrypt(cipher, key).ciphertext;\n  }\n  return cipher;\n}\n\nfunction getEncryptionKeyR2R3R4(\n  r,\n  keyBits,\n  documentId,\n  paddedUserPassword,\n  ownerPasswordEntry,\n  permissions,\n) {\n  let key = paddedUserPassword\n    .clone()\n    .concat(ownerPasswordEntry)\n    .concat(CryptoJS.lib.WordArray.create([lsbFirstWord(permissions)], 4))\n    .concat(CryptoJS.lib.WordArray.create(documentId));\n  const round = r >= 3 ? 51 : 1;\n  for (let i = 0; i < round; i++) {\n    key = CryptoJS.MD5(key);\n    key.sigBytes = keyBits / 8;\n  }\n  return key;\n}\n\nfunction getUserPasswordR5(processedUserPassword, generateRandomWordArray) {\n  const validationSalt = generateRandomWordArray(8);\n  const keySalt = generateRandomWordArray(8);\n  return CryptoJS.SHA256(processedUserPassword.clone().concat(validationSalt))\n    .concat(validationSalt)\n    .concat(keySalt);\n}\n\nfunction getUserEncryptionKeyR5(\n  processedUserPassword,\n  userKeySalt,\n  encryptionKey,\n) {\n  const key = CryptoJS.SHA256(\n    processedUserPassword.clone().concat(userKeySalt),\n  );\n  const options = {\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.NoPadding,\n    iv: CryptoJS.lib.WordArray.create(null, 16),\n  };\n  return CryptoJS.AES.encrypt(encryptionKey, key, options).ciphertext;\n}\n\nfunction getOwnerPasswordR5(\n  processedOwnerPassword,\n  userPasswordEntry,\n  generateRandomWordArray,\n) {\n  const validationSalt = generateRandomWordArray(8);\n  const keySalt = generateRandomWordArray(8);\n  return CryptoJS.SHA256(\n    processedOwnerPassword\n      .clone()\n      .concat(validationSalt)\n      .concat(userPasswordEntry),\n  )\n    .concat(validationSalt)\n    .concat(keySalt);\n}\n\nfunction getOwnerEncryptionKeyR5(\n  processedOwnerPassword,\n  ownerKeySalt,\n  userPasswordEntry,\n  encryptionKey,\n) {\n  const key = CryptoJS.SHA256(\n    processedOwnerPassword\n      .clone()\n      .concat(ownerKeySalt)\n      .concat(userPasswordEntry),\n  );\n  const options = {\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.NoPadding,\n    iv: CryptoJS.lib.WordArray.create(null, 16),\n  };\n  return CryptoJS.AES.encrypt(encryptionKey, key, options).ciphertext;\n}\n\nfunction getEncryptionKeyR5(generateRandomWordArray) {\n  return generateRandomWordArray(32);\n}\n\nfunction getEncryptedPermissionsR5(\n  permissions,\n  encryptionKey,\n  generateRandomWordArray,\n) {\n  const cipher = CryptoJS.lib.WordArray.create(\n    [lsbFirstWord(permissions), 0xffffffff, 0x54616462],\n    12,\n  ).concat(generateRandomWordArray(4));\n  const options = {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.NoPadding,\n  };\n  return CryptoJS.AES.encrypt(cipher, encryptionKey, options).ciphertext;\n}\n\nfunction processPasswordR2R3R4(password = '') {\n  const out = Buffer.alloc(32);\n  const length = password.length;\n  let index = 0;\n  while (index < length && index < 32) {\n    const code = password.charCodeAt(index);\n    if (code > 0xff) {\n      throw new Error('Password contains one or more invalid characters.');\n    }\n    out[index] = code;\n    index++;\n  }\n  while (index < 32) {\n    out[index] = PASSWORD_PADDING[index - length];\n    index++;\n  }\n  return CryptoJS.lib.WordArray.create(out);\n}\n\nfunction processPasswordR5(password = '') {\n  password = unescape(encodeURIComponent(saslprep(password)));\n  const length = Math.min(127, password.length);\n  const out = Buffer.alloc(length);\n\n  for (let i = 0; i < length; i++) {\n    out[i] = password.charCodeAt(i);\n  }\n\n  return CryptoJS.lib.WordArray.create(out);\n}\n\nfunction lsbFirstWord(data) {\n  return (\n    ((data & 0xff) << 24) |\n    ((data & 0xff00) << 8) |\n    ((data >> 8) & 0xff00) |\n    ((data >> 24) & 0xff)\n  );\n}\n\nfunction wordArrayToBuffer(wordArray) {\n  const byteArray = [];\n  for (let i = 0; i < wordArray.sigBytes; i++) {\n    byteArray.push(\n      (wordArray.words[Math.floor(i / 4)] >> (8 * (3 - (i % 4)))) & 0xff,\n    );\n  }\n  return Buffer.from(byteArray);\n}\n\nconst PASSWORD_PADDING = [\n  0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n  0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c,\n  0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a,\n];\n\nexport default PDFSecurity;\n","import PDFObject from './object';\n\nconst { number } = PDFObject;\n\nclass PDFGradient {\n  constructor(doc) {\n    this.doc = doc;\n    this.stops = [];\n    this.embedded = false;\n    this.transform = [1, 0, 0, 1, 0, 0];\n  }\n\n  stop(pos, color, opacity) {\n    if (opacity == null) {\n      opacity = 1;\n    }\n    color = this.doc._normalizeColor(color);\n\n    if (this.stops.length === 0) {\n      if (color.length === 3) {\n        this._colorSpace = 'DeviceRGB';\n      } else if (color.length === 4) {\n        this._colorSpace = 'DeviceCMYK';\n      } else if (color.length === 1) {\n        this._colorSpace = 'DeviceGray';\n      } else {\n        throw new Error('Unknown color space');\n      }\n    } else if (\n      (this._colorSpace === 'DeviceRGB' && color.length !== 3) ||\n      (this._colorSpace === 'DeviceCMYK' && color.length !== 4) ||\n      (this._colorSpace === 'DeviceGray' && color.length !== 1)\n    ) {\n      throw new Error('All gradient stops must use the same color space');\n    }\n\n    opacity = Math.max(0, Math.min(1, opacity));\n    this.stops.push([pos, color, opacity]);\n    return this;\n  }\n\n  setTransform(m11, m12, m21, m22, dx, dy) {\n    this.transform = [m11, m12, m21, m22, dx, dy];\n    return this;\n  }\n\n  embed(m) {\n    let fn;\n    const stopsLength = this.stops.length;\n    if (stopsLength === 0) {\n      return;\n    }\n    this.embedded = true;\n    this.matrix = m;\n\n    // if the last stop comes before 100%, add a copy at 100%\n    const last = this.stops[stopsLength - 1];\n    if (last[0] < 1) {\n      this.stops.push([1, last[1], last[2]]);\n    }\n\n    const bounds = [];\n    const encode = [];\n    const stops = [];\n\n    for (let i = 0; i < stopsLength - 1; i++) {\n      encode.push(0, 1);\n      if (i + 2 !== stopsLength) {\n        bounds.push(this.stops[i + 1][0]);\n      }\n\n      fn = this.doc.ref({\n        FunctionType: 2,\n        Domain: [0, 1],\n        C0: this.stops[i + 0][1],\n        C1: this.stops[i + 1][1],\n        N: 1,\n      });\n\n      stops.push(fn);\n      fn.end();\n    }\n\n    // if there are only two stops, we don't need a stitching function\n    if (stopsLength === 1) {\n      fn = stops[0];\n    } else {\n      fn = this.doc.ref({\n        FunctionType: 3, // stitching function\n        Domain: [0, 1],\n        Functions: stops,\n        Bounds: bounds,\n        Encode: encode,\n      });\n\n      fn.end();\n    }\n\n    this.id = `Sh${++this.doc._gradCount}`;\n\n    const shader = this.shader(fn);\n    shader.end();\n\n    const pattern = this.doc.ref({\n      Type: 'Pattern',\n      PatternType: 2,\n      Shading: shader,\n      Matrix: this.matrix.map(number),\n    });\n\n    pattern.end();\n\n    if (this.stops.some((stop) => stop[2] < 1)) {\n      let grad = this.opacityGradient();\n      grad._colorSpace = 'DeviceGray';\n\n      for (let stop of this.stops) {\n        grad.stop(stop[0], [stop[2]]);\n      }\n\n      grad = grad.embed(this.matrix);\n\n      const pageBBox = [0, 0, this.doc.page.width, this.doc.page.height];\n\n      const form = this.doc.ref({\n        Type: 'XObject',\n        Subtype: 'Form',\n        FormType: 1,\n        BBox: pageBBox,\n        Group: {\n          Type: 'Group',\n          S: 'Transparency',\n          CS: 'DeviceGray',\n        },\n        Resources: {\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n          Pattern: {\n            Sh1: grad,\n          },\n        },\n      });\n\n      form.write('/Pattern cs /Sh1 scn');\n      form.end(`${pageBBox.join(' ')} re f`);\n\n      const gstate = this.doc.ref({\n        Type: 'ExtGState',\n        SMask: {\n          Type: 'Mask',\n          S: 'Luminosity',\n          G: form,\n        },\n      });\n\n      gstate.end();\n\n      const opacityPattern = this.doc.ref({\n        Type: 'Pattern',\n        PatternType: 1,\n        PaintType: 1,\n        TilingType: 2,\n        BBox: pageBBox,\n        XStep: pageBBox[2],\n        YStep: pageBBox[3],\n        Resources: {\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n          Pattern: {\n            Sh1: pattern,\n          },\n          ExtGState: {\n            Gs1: gstate,\n          },\n        },\n      });\n\n      opacityPattern.write('/Gs1 gs /Pattern cs /Sh1 scn');\n      opacityPattern.end(`${pageBBox.join(' ')} re f`);\n\n      this.doc.page.patterns[this.id] = opacityPattern;\n    } else {\n      this.doc.page.patterns[this.id] = pattern;\n    }\n\n    return pattern;\n  }\n\n  apply(stroke) {\n    // apply gradient transform to existing document ctm\n    const [m0, m1, m2, m3, m4, m5] = this.doc._ctm;\n    const [m11, m12, m21, m22, dx, dy] = this.transform;\n    const m = [\n      m0 * m11 + m2 * m12,\n      m1 * m11 + m3 * m12,\n      m0 * m21 + m2 * m22,\n      m1 * m21 + m3 * m22,\n      m0 * dx + m2 * dy + m4,\n      m1 * dx + m3 * dy + m5,\n    ];\n\n    if (!this.embedded || m.join(' ') !== this.matrix.join(' ')) {\n      this.embed(m);\n    }\n    this.doc._setColorSpace('Pattern', stroke);\n    const op = stroke ? 'SCN' : 'scn';\n    return this.doc.addContent(`/${this.id} ${op}`);\n  }\n}\n\nclass PDFLinearGradient extends PDFGradient {\n  constructor(doc, x1, y1, x2, y2) {\n    super(doc);\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n  }\n\n  shader(fn) {\n    return this.doc.ref({\n      ShadingType: 2,\n      ColorSpace: this._colorSpace,\n      Coords: [this.x1, this.y1, this.x2, this.y2],\n      Function: fn,\n      Extend: [true, true],\n    });\n  }\n\n  opacityGradient() {\n    return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);\n  }\n}\n\nclass PDFRadialGradient extends PDFGradient {\n  constructor(doc, x1, y1, r1, x2, y2, r2) {\n    super(doc);\n    this.doc = doc;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.r1 = r1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.r2 = r2;\n  }\n\n  shader(fn) {\n    return this.doc.ref({\n      ShadingType: 3,\n      ColorSpace: this._colorSpace,\n      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],\n      Function: fn,\n      Extend: [true, true],\n    });\n  }\n\n  opacityGradient() {\n    return new PDFRadialGradient(\n      this.doc,\n      this.x1,\n      this.y1,\n      this.r1,\n      this.x2,\n      this.y2,\n      this.r2,\n    );\n  }\n}\n\nexport default { PDFGradient, PDFLinearGradient, PDFRadialGradient };\n","/*\nPDF tiling pattern support. Uncolored only.\n */\n\nconst underlyingColorSpaces = ['DeviceCMYK', 'DeviceRGB'];\n\nclass PDFTilingPattern {\n  constructor(doc, bBox, xStep, yStep, stream) {\n    this.doc = doc;\n    this.bBox = bBox;\n    this.xStep = xStep;\n    this.yStep = yStep;\n    this.stream = stream;\n  }\n\n  createPattern() {\n    // no resources needed for our current usage\n    // required entry\n    const resources = this.doc.ref();\n    resources.end();\n    // apply default transform matrix (flipped in the default doc._ctm)\n    // see document.js & gradient.js\n    const [m0, m1, m2, m3, m4, m5] = this.doc._ctm;\n    const [m11, m12, m21, m22, dx, dy] = [1, 0, 0, 1, 0, 0];\n    const m = [\n      m0 * m11 + m2 * m12,\n      m1 * m11 + m3 * m12,\n      m0 * m21 + m2 * m22,\n      m1 * m21 + m3 * m22,\n      m0 * dx + m2 * dy + m4,\n      m1 * dx + m3 * dy + m5,\n    ];\n    const pattern = this.doc.ref({\n      Type: 'Pattern',\n      PatternType: 1, // tiling\n      PaintType: 2, // 1-colored, 2-uncolored\n      TilingType: 2, // 2-no distortion\n      BBox: this.bBox,\n      XStep: this.xStep,\n      YStep: this.yStep,\n      Matrix: m.map((v) => +v.toFixed(5)),\n      Resources: resources,\n    });\n    pattern.end(this.stream);\n    return pattern;\n  }\n\n  embedPatternColorSpaces() {\n    // map each pattern to an underlying color space\n    // and embed on each page\n    underlyingColorSpaces.forEach((csName) => {\n      const csId = this.getPatternColorSpaceId(csName);\n\n      if (this.doc.page.colorSpaces[csId]) return;\n      const cs = this.doc.ref(['Pattern', csName]);\n      cs.end();\n      this.doc.page.colorSpaces[csId] = cs;\n    });\n  }\n\n  getPatternColorSpaceId(underlyingColorspace) {\n    return `CsP${underlyingColorspace}`;\n  }\n\n  embed() {\n    if (!this.id) {\n      this.doc._patternCount = this.doc._patternCount + 1;\n      this.id = 'P' + this.doc._patternCount;\n      this.pattern = this.createPattern();\n    }\n\n    // patterns are embedded in each page\n    if (!this.doc.page.patterns[this.id]) {\n      this.doc.page.patterns[this.id] = this.pattern;\n    }\n  }\n\n  apply(stroke, patternColor) {\n    // do any embedding/creating that might be needed\n    this.embedPatternColorSpaces();\n    this.embed();\n\n    const normalizedColor = this.doc._normalizeColor(patternColor);\n    if (!normalizedColor)\n      throw Error(`invalid pattern color. (value: ${patternColor})`);\n\n    // select one of the pattern color spaces\n    const csId = this.getPatternColorSpaceId(\n      this.doc._getColorSpace(normalizedColor),\n    );\n    this.doc._setColorSpace(csId, stroke);\n\n    // stroke/fill using the pattern and color (in the above underlying color space)\n    const op = stroke ? 'SCN' : 'scn';\n    return this.doc.addContent(\n      `${normalizedColor.join(' ')} /${this.id} ${op}`,\n    );\n  }\n}\n\nexport default { PDFTilingPattern };\n","import Gradient from '../gradient';\nimport pattern from '../pattern';\nimport SpotColor from '../spotcolor';\n\nconst { PDFGradient, PDFLinearGradient, PDFRadialGradient } = Gradient;\nconst { PDFTilingPattern } = pattern;\n\nexport default {\n  initColor() {\n    this.spotColors = {};\n    // The opacity dictionaries\n    this._opacityRegistry = {};\n    this._opacityCount = 0;\n    this._patternCount = 0;\n    this._gradCount = 0;\n  },\n\n  _normalizeColor(color) {\n    if (typeof color === 'string') {\n      if (color.charAt(0) === '#') {\n        if (color.length === 4) {\n          color = color.replace(\n            /#([0-9A-F])([0-9A-F])([0-9A-F])/i,\n            '#$1$1$2$2$3$3',\n          );\n        }\n        const hex = parseInt(color.slice(1), 16);\n        color = [hex >> 16, (hex >> 8) & 0xff, hex & 0xff];\n      } else if (namedColors[color]) {\n        color = namedColors[color];\n      } else if (this.spotColors[color]) {\n        return this.spotColors[color];\n      }\n    }\n\n    if (Array.isArray(color)) {\n      // RGB\n      if (color.length === 3) {\n        color = color.map((part) => part / 255);\n        // CMYK\n      } else if (color.length === 4) {\n        color = color.map((part) => part / 100);\n      }\n      return color;\n    }\n\n    return null;\n  },\n\n  _setColor(color, stroke) {\n    if (color instanceof PDFGradient) {\n      color.apply(stroke);\n      return true;\n      // see if tiling pattern, decode & apply it it\n    } else if (Array.isArray(color) && color[0] instanceof PDFTilingPattern) {\n      color[0].apply(stroke, color[1]);\n      return true;\n    }\n    // any other case should be a normal color and not a pattern\n    return this._setColorCore(color, stroke);\n  },\n\n  _setColorCore(color, stroke) {\n    color = this._normalizeColor(color);\n    if (!color) {\n      return false;\n    }\n\n    const op = stroke ? 'SCN' : 'scn';\n    const space = this._getColorSpace(color);\n    this._setColorSpace(space, stroke);\n\n    if (color instanceof SpotColor) {\n      this.page.colorSpaces[color.id] = color.ref;\n      this.addContent(`1 ${op}`);\n    } else {\n      this.addContent(`${color.join(' ')} ${op}`);\n    }\n\n    return true;\n  },\n\n  _setColorSpace(space, stroke) {\n    const op = stroke ? 'CS' : 'cs';\n    return this.addContent(`/${space} ${op}`);\n  },\n\n  _getColorSpace(color) {\n    if (color instanceof SpotColor) {\n      return color.id;\n    }\n\n    return color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';\n  },\n\n  fillColor(color, opacity) {\n    const set = this._setColor(color, false);\n    if (set) {\n      this.fillOpacity(opacity);\n    }\n\n    // save this for text wrapper, which needs to reset\n    // the fill color on new pages\n    this._fillColor = [color, opacity];\n    return this;\n  },\n\n  strokeColor(color, opacity) {\n    const set = this._setColor(color, true);\n    if (set) {\n      this.strokeOpacity(opacity);\n    }\n    return this;\n  },\n\n  opacity(opacity) {\n    this._doOpacity(opacity, opacity);\n    return this;\n  },\n\n  fillOpacity(opacity) {\n    this._doOpacity(opacity, null);\n    return this;\n  },\n\n  strokeOpacity(opacity) {\n    this._doOpacity(null, opacity);\n    return this;\n  },\n\n  _doOpacity(fillOpacity, strokeOpacity) {\n    let dictionary, name;\n    if (fillOpacity == null && strokeOpacity == null) {\n      return;\n    }\n\n    if (fillOpacity != null) {\n      fillOpacity = Math.max(0, Math.min(1, fillOpacity));\n    }\n    if (strokeOpacity != null) {\n      strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));\n    }\n    const key = `${fillOpacity}_${strokeOpacity}`;\n\n    if (this._opacityRegistry[key]) {\n      [dictionary, name] = this._opacityRegistry[key];\n    } else {\n      dictionary = { Type: 'ExtGState' };\n\n      if (fillOpacity != null) {\n        dictionary.ca = fillOpacity;\n      }\n      if (strokeOpacity != null) {\n        dictionary.CA = strokeOpacity;\n      }\n\n      dictionary = this.ref(dictionary);\n      dictionary.end();\n      const id = ++this._opacityCount;\n      name = `Gs${id}`;\n      this._opacityRegistry[key] = [dictionary, name];\n    }\n\n    this.page.ext_gstates[name] = dictionary;\n    return this.addContent(`/${name} gs`);\n  },\n\n  linearGradient(x1, y1, x2, y2) {\n    return new PDFLinearGradient(this, x1, y1, x2, y2);\n  },\n\n  radialGradient(x1, y1, r1, x2, y2, r2) {\n    return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n  },\n\n  pattern(bbox, xStep, yStep, stream) {\n    return new PDFTilingPattern(this, bbox, xStep, yStep, stream);\n  },\n\n  addSpotColor(name, C, M, Y, K) {\n    const color = new SpotColor(this, name, C, M, Y, K);\n    this.spotColors[name] = color;\n    return this;\n  },\n};\n\nvar namedColors = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  grey: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50],\n};\n","let cx, cy, px, py, sx, sy;\n\ncx = cy = px = py = sx = sy = 0;\n\nconst parameters = {\n  A: 7,\n  a: 7,\n  C: 6,\n  c: 6,\n  H: 1,\n  h: 1,\n  L: 2,\n  l: 2,\n  M: 2,\n  m: 2,\n  Q: 4,\n  q: 4,\n  S: 4,\n  s: 4,\n  T: 2,\n  t: 2,\n  V: 1,\n  v: 1,\n  Z: 0,\n  z: 0,\n};\n\nconst parse = function (path) {\n  let cmd;\n  const ret = [];\n  let args = [];\n  let curArg = '';\n  let foundDecimal = false;\n  let params = 0;\n\n  for (let c of path) {\n    if (parameters[c] != null) {\n      params = parameters[c];\n      if (cmd) {\n        // save existing command\n        if (curArg.length > 0) {\n          args[args.length] = +curArg;\n        }\n        ret[ret.length] = { cmd, args };\n\n        args = [];\n        curArg = '';\n        foundDecimal = false;\n      }\n\n      cmd = c;\n    } else if (\n      [' ', ','].includes(c) ||\n      (c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') ||\n      (c === '.' && foundDecimal)\n    ) {\n      if (curArg.length === 0) {\n        continue;\n      }\n\n      if (args.length === params) {\n        // handle reused commands\n        ret[ret.length] = { cmd, args };\n        args = [+curArg];\n\n        // handle assumed commands\n        if (cmd === 'M') {\n          cmd = 'L';\n        }\n        if (cmd === 'm') {\n          cmd = 'l';\n        }\n      } else {\n        args[args.length] = +curArg;\n      }\n\n      foundDecimal = c === '.';\n\n      // fix for negative numbers or repeated decimals with no delimeter between commands\n      curArg = ['-', '.'].includes(c) ? c : '';\n    } else {\n      curArg += c;\n      if (c === '.') {\n        foundDecimal = true;\n      }\n    }\n  }\n\n  // add the last command\n  if (curArg.length > 0) {\n    if (args.length === params) {\n      // handle reused commands\n      ret[ret.length] = { cmd, args };\n      args = [+curArg];\n\n      // handle assumed commands\n      if (cmd === 'M') {\n        cmd = 'L';\n      }\n      if (cmd === 'm') {\n        cmd = 'l';\n      }\n    } else {\n      args[args.length] = +curArg;\n    }\n  }\n\n  ret[ret.length] = { cmd, args };\n\n  return ret;\n};\n\nconst apply = function (commands, doc) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0;\n\n  // run the commands\n  for (let i = 0; i < commands.length; i++) {\n    const c = commands[i];\n    if (typeof runners[c.cmd] === 'function') {\n      runners[c.cmd](doc, c.args);\n    }\n  }\n};\n\nconst runners = {\n  M(doc, a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return doc.moveTo(cx, cy);\n  },\n\n  m(doc, a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return doc.moveTo(cx, cy);\n  },\n\n  C(doc, a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return doc.bezierCurveTo(...a);\n  },\n\n  c(doc, a) {\n    doc.bezierCurveTo(\n      a[0] + cx,\n      a[1] + cy,\n      a[2] + cx,\n      a[3] + cy,\n      a[4] + cx,\n      a[5] + cy,\n    );\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    return (cy += a[5]);\n  },\n\n  S(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    }\n\n    doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    return (cy = a[3]);\n  },\n\n  s(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    }\n\n    doc.bezierCurveTo(\n      cx - (px - cx),\n      cy - (py - cy),\n      cx + a[0],\n      cy + a[1],\n      cx + a[2],\n      cy + a[3],\n    );\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    return (cy += a[3]);\n  },\n\n  Q(doc, a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n  },\n\n  q(doc, a) {\n    doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    return (cy += a[3]);\n  },\n\n  T(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n\n    doc.quadraticCurveTo(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    return (cy = a[1]);\n  },\n\n  t(doc, a) {\n    if (px === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n\n    doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    return (cy += a[1]);\n  },\n\n  A(doc, a) {\n    solveArc(doc, cx, cy, a);\n    cx = a[5];\n    return (cy = a[6]);\n  },\n\n  a(doc, a) {\n    a[5] += cx;\n    a[6] += cy;\n    solveArc(doc, cx, cy, a);\n    cx = a[5];\n    return (cy = a[6]);\n  },\n\n  L(doc, a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  l(doc, a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  H(doc, a) {\n    cx = a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  h(doc, a) {\n    cx += a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  V(doc, a) {\n    cy = a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  v(doc, a) {\n    cy += a[0];\n    px = py = null;\n    return doc.lineTo(cx, cy);\n  },\n\n  Z(doc) {\n    doc.closePath();\n    cx = sx;\n    return (cy = sy);\n  },\n\n  z(doc) {\n    doc.closePath();\n    cx = sx;\n    return (cy = sy);\n  },\n};\n\nconst solveArc = function (doc, x, y, coords) {\n  const [rx, ry, rot, large, sweep, ex, ey] = coords;\n  const segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n\n  for (let seg of segs) {\n    const bez = segmentToBezier(...seg);\n    doc.bezierCurveTo(...bez);\n  }\n};\n\n// from Inkscape svgtopdf, thanks!\nconst arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  const th = rotateX * (Math.PI / 180);\n  const sin_th = Math.sin(th);\n  const cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  let pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  const a00 = cos_th / rx;\n  const a01 = sin_th / rx;\n  const a10 = -sin_th / ry;\n  const a11 = cos_th / ry;\n  const x0 = a00 * ox + a01 * oy;\n  const y0 = a10 * ox + a11 * oy;\n  const x1 = a00 * x + a01 * y;\n  const y1 = a10 * x + a11 * y;\n\n  const d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  let sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) {\n    sfactor_sq = 0;\n  }\n  let sfactor = Math.sqrt(sfactor_sq);\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n\n  const xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  const yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n\n  const th0 = Math.atan2(y0 - yc, x0 - xc);\n  const th1 = Math.atan2(y1 - yc, x1 - xc);\n\n  let th_arc = th1 - th0;\n  if (th_arc < 0 && sweep === 1) {\n    th_arc += 2 * Math.PI;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  const segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  const result = [];\n\n  for (let i = 0; i < segments; i++) {\n    const th2 = th0 + (i * th_arc) / segments;\n    const th3 = th0 + ((i + 1) * th_arc) / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return result;\n};\n\nconst segmentToBezier = function (cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  const a00 = cos_th * rx;\n  const a01 = -sin_th * ry;\n  const a10 = sin_th * rx;\n  const a11 = cos_th * ry;\n\n  const th_half = 0.5 * (th1 - th0);\n  const t =\n    ((8 / 3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5)) /\n    Math.sin(th_half);\n  const x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n  const y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n  const x3 = cx + Math.cos(th1);\n  const y3 = cy + Math.sin(th1);\n  const x2 = x3 + t * Math.sin(th1);\n  const y2 = y3 - t * Math.cos(th1);\n\n  return [\n    a00 * x1 + a01 * y1,\n    a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,\n    a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,\n    a10 * x3 + a11 * y3,\n  ];\n};\n\nclass SVGPath {\n  static apply(doc, path) {\n    const commands = parse(path);\n    apply(commands, doc);\n  }\n}\n\nexport default SVGPath;\n","import SVGPath from '../path';\nimport PDFObject from '../object';\n\nconst { number } = PDFObject;\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nexport default {\n  initVector() {\n    this._ctm = [1, 0, 0, 1, 0, 0]; // current transformation matrix\n    this._ctmStack = [];\n  },\n\n  save() {\n    this._ctmStack.push(this._ctm.slice());\n    // TODO: save/restore colorspace and styles so not setting it unnessesarily all the time?\n    return this.addContent('q');\n  },\n\n  restore() {\n    this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n    return this.addContent('Q');\n  },\n\n  closePath() {\n    return this.addContent('h');\n  },\n\n  lineWidth(w) {\n    return this.addContent(`${number(w)} w`);\n  },\n\n  _CAP_STYLES: {\n    BUTT: 0,\n    ROUND: 1,\n    SQUARE: 2,\n  },\n\n  lineCap(c) {\n    if (typeof c === 'string') {\n      c = this._CAP_STYLES[c.toUpperCase()];\n    }\n    return this.addContent(`${c} J`);\n  },\n\n  _JOIN_STYLES: {\n    MITER: 0,\n    ROUND: 1,\n    BEVEL: 2,\n  },\n\n  lineJoin(j) {\n    if (typeof j === 'string') {\n      j = this._JOIN_STYLES[j.toUpperCase()];\n    }\n    return this.addContent(`${j} j`);\n  },\n\n  miterLimit(m) {\n    return this.addContent(`${number(m)} M`);\n  },\n\n  dash(length, options = {}) {\n    const originalLength = length;\n    if (!Array.isArray(length)) {\n      length = [length, options.space || length];\n    }\n\n    const valid = length.every((x) => Number.isFinite(x) && x > 0);\n    if (!valid) {\n      throw new Error(\n        `dash(${JSON.stringify(originalLength)}, ${JSON.stringify(\n          options,\n        )}) invalid, lengths must be numeric and greater than zero`,\n      );\n    }\n\n    length = length.map(number).join(' ');\n    return this.addContent(`[${length}] ${number(options.phase || 0)} d`);\n  },\n\n  undash() {\n    return this.addContent('[] 0 d');\n  },\n\n  moveTo(x, y) {\n    return this.addContent(`${number(x)} ${number(y)} m`);\n  },\n\n  lineTo(x, y) {\n    return this.addContent(`${number(x)} ${number(y)} l`);\n  },\n\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.addContent(\n      `${number(cp1x)} ${number(cp1y)} ${number(cp2x)} ${number(cp2y)} ${number(\n        x,\n      )} ${number(y)} c`,\n    );\n  },\n\n  quadraticCurveTo(cpx, cpy, x, y) {\n    return this.addContent(\n      `${number(cpx)} ${number(cpy)} ${number(x)} ${number(y)} v`,\n    );\n  },\n\n  rect(x, y, w, h) {\n    return this.addContent(\n      `${number(x)} ${number(y)} ${number(w)} ${number(h)} re`,\n    );\n  },\n\n  roundedRect(x, y, w, h, r) {\n    if (r == null) {\n      r = 0;\n    }\n    r = Math.min(r, 0.5 * w, 0.5 * h);\n\n    // amount to inset control points from corners (see `ellipse`)\n    const c = r * (1.0 - KAPPA);\n\n    this.moveTo(x + r, y);\n    this.lineTo(x + w - r, y);\n    this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);\n    this.lineTo(x + w, y + h - r);\n    this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);\n    this.lineTo(x + r, y + h);\n    this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);\n    this.lineTo(x, y + r);\n    this.bezierCurveTo(x, y + c, x + c, y, x + r, y);\n    return this.closePath();\n  },\n\n  ellipse(x, y, r1, r2) {\n    // based on http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas/2173084#2173084\n    if (r2 == null) {\n      r2 = r1;\n    }\n    x -= r1;\n    y -= r2;\n    const ox = r1 * KAPPA;\n    const oy = r2 * KAPPA;\n    const xe = x + r1 * 2;\n    const ye = y + r2 * 2;\n    const xm = x + r1;\n    const ym = y + r2;\n\n    this.moveTo(x, ym);\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n    return this.closePath();\n  },\n\n  circle(x, y, radius) {\n    return this.ellipse(x, y, radius);\n  },\n\n  arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n    if (anticlockwise == null) {\n      anticlockwise = false;\n    }\n    const TWO_PI = 2.0 * Math.PI;\n    const HALF_PI = 0.5 * Math.PI;\n\n    let deltaAng = endAngle - startAngle;\n\n    if (Math.abs(deltaAng) > TWO_PI) {\n      // draw only full circle if more than that is specified\n      deltaAng = TWO_PI;\n    } else if (deltaAng !== 0 && anticlockwise !== deltaAng < 0) {\n      // necessary to flip direction of rendering\n      const dir = anticlockwise ? -1 : 1;\n      deltaAng = dir * TWO_PI + deltaAng;\n    }\n\n    const numSegs = Math.ceil(Math.abs(deltaAng) / HALF_PI);\n    const segAng = deltaAng / numSegs;\n    const handleLen = (segAng / HALF_PI) * KAPPA * radius;\n    let curAng = startAngle;\n\n    // component distances between anchor point and control point\n    let deltaCx = -Math.sin(curAng) * handleLen;\n    let deltaCy = Math.cos(curAng) * handleLen;\n\n    // anchor point\n    let ax = x + Math.cos(curAng) * radius;\n    let ay = y + Math.sin(curAng) * radius;\n\n    // calculate and render segments\n    this.moveTo(ax, ay);\n\n    for (let segIdx = 0; segIdx < numSegs; segIdx++) {\n      // starting control point\n      const cp1x = ax + deltaCx;\n      const cp1y = ay + deltaCy;\n\n      // step angle\n      curAng += segAng;\n\n      // next anchor point\n      ax = x + Math.cos(curAng) * radius;\n      ay = y + Math.sin(curAng) * radius;\n\n      // next control point delta\n      deltaCx = -Math.sin(curAng) * handleLen;\n      deltaCy = Math.cos(curAng) * handleLen;\n\n      // ending control point\n      const cp2x = ax - deltaCx;\n      const cp2y = ay - deltaCy;\n\n      // render segment\n      this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, ax, ay);\n    }\n\n    return this;\n  },\n\n  polygon(...points) {\n    this.moveTo(...(points.shift() || []));\n    for (let point of points) {\n      this.lineTo(...(point || []));\n    }\n    return this.closePath();\n  },\n\n  path(path) {\n    SVGPath.apply(this, path);\n    return this;\n  },\n\n  _windingRule(rule) {\n    if (/even-?odd/.test(rule)) {\n      return '*';\n    }\n\n    return '';\n  },\n\n  fill(color, rule) {\n    if (/(even-?odd)|(non-?zero)/.test(color)) {\n      rule = color;\n      color = null;\n    }\n\n    if (color) {\n      this.fillColor(color);\n    }\n    return this.addContent(`f${this._windingRule(rule)}`);\n  },\n\n  stroke(color) {\n    if (color) {\n      this.strokeColor(color);\n    }\n    return this.addContent('S');\n  },\n\n  fillAndStroke(fillColor, strokeColor, rule) {\n    if (strokeColor == null) {\n      strokeColor = fillColor;\n    }\n    const isFillRule = /(even-?odd)|(non-?zero)/;\n    if (isFillRule.test(fillColor)) {\n      rule = fillColor;\n      fillColor = null;\n    }\n\n    if (isFillRule.test(strokeColor)) {\n      rule = strokeColor;\n      strokeColor = fillColor;\n    }\n\n    if (fillColor) {\n      this.fillColor(fillColor);\n      this.strokeColor(strokeColor);\n    }\n\n    return this.addContent(`B${this._windingRule(rule)}`);\n  },\n\n  clip(rule) {\n    return this.addContent(`W${this._windingRule(rule)} n`);\n  },\n\n  transform(m11, m12, m21, m22, dx, dy) {\n    // keep track of the current transformation matrix\n    if (\n      m11 === 1 &&\n      m12 === 0 &&\n      m21 === 0 &&\n      m22 === 1 &&\n      dx === 0 &&\n      dy === 0\n    ) {\n      // Ignore identity transforms\n      return this;\n    }\n    const m = this._ctm;\n    const [m0, m1, m2, m3, m4, m5] = m;\n    m[0] = m0 * m11 + m2 * m12;\n    m[1] = m1 * m11 + m3 * m12;\n    m[2] = m0 * m21 + m2 * m22;\n    m[3] = m1 * m21 + m3 * m22;\n    m[4] = m0 * dx + m2 * dy + m4;\n    m[5] = m1 * dx + m3 * dy + m5;\n\n    const values = [m11, m12, m21, m22, dx, dy].map((v) => number(v)).join(' ');\n    return this.addContent(`${values} cm`);\n  },\n\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  },\n\n  rotate(angle, options = {}) {\n    let y;\n    const rad = (angle * Math.PI) / 180;\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    let x = (y = 0);\n\n    if (options.origin != null) {\n      [x, y] = options.origin;\n      const x1 = x * cos - y * sin;\n      const y1 = x * sin + y * cos;\n      x -= x1;\n      y -= y1;\n    }\n\n    return this.transform(cos, sin, -sin, cos, x, y);\n  },\n\n  scale(xFactor, yFactor, options = {}) {\n    let y;\n    if (yFactor == null) {\n      yFactor = xFactor;\n    }\n    if (typeof yFactor === 'object') {\n      options = yFactor;\n      yFactor = xFactor;\n    }\n\n    let x = (y = 0);\n    if (options.origin != null) {\n      [x, y] = options.origin;\n      x -= xFactor * x;\n      y -= yFactor * y;\n    }\n\n    return this.transform(xFactor, 0, 0, yFactor, x, y);\n  },\n};\n","import fs from 'fs';\n\nconst WIN_ANSI_MAP = {\n  402: 131,\n  8211: 150,\n  8212: 151,\n  8216: 145,\n  8217: 146,\n  8218: 130,\n  8220: 147,\n  8221: 148,\n  8222: 132,\n  8224: 134,\n  8225: 135,\n  8226: 149,\n  8230: 133,\n  8364: 128,\n  8240: 137,\n  8249: 139,\n  8250: 155,\n  710: 136,\n  8482: 153,\n  338: 140,\n  339: 156,\n  732: 152,\n  352: 138,\n  353: 154,\n  376: 159,\n  381: 142,\n  382: 158,\n};\n\nconst characters = `\\\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n  \nspace         exclam         quotedbl       numbersign\ndollar        percent        ampersand      quotesingle\nparenleft     parenright     asterisk       plus\ncomma         hyphen         period         slash\nzero          one            two            three\nfour          five           six            seven\neight         nine           colon          semicolon\nless          equal          greater        question\n  \nat            A              B              C\nD             E              F              G\nH             I              J              K\nL             M              N              O\nP             Q              R              S\nT             U              V              W\nX             Y              Z              bracketleft\nbackslash     bracketright   asciicircum    underscore\n  \ngrave         a              b              c\nd             e              f              g\nh             i              j              k\nl             m              n              o\np             q              r              s\nt             u              v              w\nx             y              z              braceleft\nbar           braceright     asciitilde     .notdef\n  \nEuro          .notdef        quotesinglbase florin\nquotedblbase  ellipsis       dagger         daggerdbl\ncircumflex    perthousand    Scaron         guilsinglleft\nOE            .notdef        Zcaron         .notdef\n.notdef       quoteleft      quoteright     quotedblleft\nquotedblright bullet         endash         emdash\ntilde         trademark      scaron         guilsinglright\noe            .notdef        zcaron         ydieresis\n  \nspace         exclamdown     cent           sterling\ncurrency      yen            brokenbar      section\ndieresis      copyright      ordfeminine    guillemotleft\nlogicalnot    hyphen         registered     macron\ndegree        plusminus      twosuperior    threesuperior\nacute         mu             paragraph      periodcentered\ncedilla       onesuperior    ordmasculine   guillemotright\nonequarter    onehalf        threequarters  questiondown\n  \nAgrave        Aacute         Acircumflex    Atilde\nAdieresis     Aring          AE             Ccedilla\nEgrave        Eacute         Ecircumflex    Edieresis\nIgrave        Iacute         Icircumflex    Idieresis\nEth           Ntilde         Ograve         Oacute\nOcircumflex   Otilde         Odieresis      multiply\nOslash        Ugrave         Uacute         Ucircumflex\nUdieresis     Yacute         Thorn          germandbls\n  \nagrave        aacute         acircumflex    atilde\nadieresis     aring          ae             ccedilla\negrave        eacute         ecircumflex    edieresis\nigrave        iacute         icircumflex    idieresis\neth           ntilde         ograve         oacute\nocircumflex   otilde         odieresis      divide\noslash        ugrave         uacute         ucircumflex\nudieresis     yacute         thorn          ydieresis\\\n`.split(/\\s+/);\n\nclass AFMFont {\n  static open(filename) {\n    return new AFMFont(fs.readFileSync(filename, 'utf8'));\n  }\n\n  constructor(contents) {\n    this.contents = contents;\n    this.attributes = {};\n    this.glyphWidths = {};\n    this.boundingBoxes = {};\n    this.kernPairs = {};\n\n    this.parse();\n    // todo: remove charWidths since appears to not be used\n    this.charWidths = new Array(256);\n    for (let char = 0; char <= 255; char++) {\n      this.charWidths[char] = this.glyphWidths[characters[char]];\n    }\n\n    this.bbox = this.attributes['FontBBox'].split(/\\s+/).map((e) => +e);\n    this.ascender = +(this.attributes['Ascender'] || 0);\n    this.descender = +(this.attributes['Descender'] || 0);\n    this.xHeight = +(this.attributes['XHeight'] || 0);\n    this.capHeight = +(this.attributes['CapHeight'] || 0);\n    this.lineGap =\n      this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);\n  }\n\n  parse() {\n    let section = '';\n    for (let line of this.contents.split('\\n')) {\n      var match;\n      var a;\n      if ((match = line.match(/^Start(\\w+)/))) {\n        section = match[1];\n        continue;\n      } else if ((match = line.match(/^End(\\w+)/))) {\n        section = '';\n        continue;\n      }\n\n      switch (section) {\n        case 'FontMetrics':\n          match = line.match(/(^\\w+)\\s+(.*)/);\n          var key = match[1];\n          var value = match[2];\n\n          if ((a = this.attributes[key])) {\n            if (!Array.isArray(a)) {\n              a = this.attributes[key] = [a];\n            }\n            a.push(value);\n          } else {\n            this.attributes[key] = value;\n          }\n          break;\n\n        case 'CharMetrics':\n          if (!/^CH?\\s/.test(line)) {\n            continue;\n          }\n          var name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n          this.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n          break;\n\n        case 'KernPairs':\n          match = line.match(/^KPX\\s+(\\.?\\w+)\\s+(\\.?\\w+)\\s+(-?\\d+)/);\n          if (match) {\n            this.kernPairs[match[1] + '\\0' + match[2]] = parseInt(match[3]);\n          }\n          break;\n      }\n    }\n  }\n\n  encodeText(text) {\n    const res = [];\n    for (let i = 0, len = text.length; i < len; i++) {\n      let char = text.charCodeAt(i);\n      char = WIN_ANSI_MAP[char] || char;\n      res.push(char.toString(16));\n    }\n\n    return res;\n  }\n\n  glyphsForString(string) {\n    const glyphs = [];\n\n    for (let i = 0, len = string.length; i < len; i++) {\n      const charCode = string.charCodeAt(i);\n      glyphs.push(this.characterToGlyph(charCode));\n    }\n\n    return glyphs;\n  }\n\n  characterToGlyph(character) {\n    return characters[WIN_ANSI_MAP[character] || character] || '.notdef';\n  }\n\n  widthOfGlyph(glyph) {\n    return this.glyphWidths[glyph] || 0;\n  }\n\n  getKernPair(left, right) {\n    return this.kernPairs[left + '\\0' + right] || 0;\n  }\n\n  advancesForGlyphs(glyphs) {\n    const advances = [];\n\n    for (let index = 0; index < glyphs.length; index++) {\n      const left = glyphs[index];\n      const right = glyphs[index + 1];\n      advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));\n    }\n\n    return advances;\n  }\n}\n\nexport default AFMFont;\n","class PDFFont {\n  constructor() {}\n\n  encode() {\n    throw new Error('Must be implemented by subclasses');\n  }\n\n  widthOfString() {\n    throw new Error('Must be implemented by subclasses');\n  }\n\n  ref() {\n    return this.dictionary != null\n      ? this.dictionary\n      : (this.dictionary = this.document.ref());\n  }\n\n  finalize() {\n    if (this.embedded || this.dictionary == null) {\n      return;\n    }\n\n    this.embed();\n    this.embedded = true;\n  }\n\n  embed() {\n    throw new Error('Must be implemented by subclasses');\n  }\n\n  lineHeight(size, includeGap = false) {\n    const gap = includeGap ? this.lineGap : 0;\n    return ((this.ascender + gap - this.descender) / 1000) * size;\n  }\n}\n\nexport default PDFFont;\n","import AFMFont from './afm';\nimport PDFFont from '../font';\nimport fs from 'fs';\n\n// This insanity is so bundlers can inline the font files\nconst STANDARD_FONTS = {\n  Courier() {\n    return fs.readFileSync(__dirname + '/data/Courier.afm', 'utf8');\n  },\n  'Courier-Bold'() {\n    return fs.readFileSync(__dirname + '/data/Courier-Bold.afm', 'utf8');\n  },\n  'Courier-Oblique'() {\n    return fs.readFileSync(__dirname + '/data/Courier-Oblique.afm', 'utf8');\n  },\n  'Courier-BoldOblique'() {\n    return fs.readFileSync(__dirname + '/data/Courier-BoldOblique.afm', 'utf8');\n  },\n  Helvetica() {\n    return fs.readFileSync(__dirname + '/data/Helvetica.afm', 'utf8');\n  },\n  'Helvetica-Bold'() {\n    return fs.readFileSync(__dirname + '/data/Helvetica-Bold.afm', 'utf8');\n  },\n  'Helvetica-Oblique'() {\n    return fs.readFileSync(__dirname + '/data/Helvetica-Oblique.afm', 'utf8');\n  },\n  'Helvetica-BoldOblique'() {\n    return fs.readFileSync(\n      __dirname + '/data/Helvetica-BoldOblique.afm',\n      'utf8',\n    );\n  },\n  'Times-Roman'() {\n    return fs.readFileSync(__dirname + '/data/Times-Roman.afm', 'utf8');\n  },\n  'Times-Bold'() {\n    return fs.readFileSync(__dirname + '/data/Times-Bold.afm', 'utf8');\n  },\n  'Times-Italic'() {\n    return fs.readFileSync(__dirname + '/data/Times-Italic.afm', 'utf8');\n  },\n  'Times-BoldItalic'() {\n    return fs.readFileSync(__dirname + '/data/Times-BoldItalic.afm', 'utf8');\n  },\n  Symbol() {\n    return fs.readFileSync(__dirname + '/data/Symbol.afm', 'utf8');\n  },\n  ZapfDingbats() {\n    return fs.readFileSync(__dirname + '/data/ZapfDingbats.afm', 'utf8');\n  },\n};\n\nclass StandardFont extends PDFFont {\n  constructor(document, name, id) {\n    super();\n    this.document = document;\n    this.name = name;\n    this.id = id;\n    this.font = new AFMFont(STANDARD_FONTS[this.name]());\n    ({\n      ascender: this.ascender,\n      descender: this.descender,\n      bbox: this.bbox,\n      lineGap: this.lineGap,\n      xHeight: this.xHeight,\n      capHeight: this.capHeight,\n    } = this.font);\n  }\n\n  embed() {\n    this.dictionary.data = {\n      Type: 'Font',\n      BaseFont: this.name,\n      Subtype: 'Type1',\n      Encoding: 'WinAnsiEncoding',\n    };\n\n    return this.dictionary.end();\n  }\n\n  encode(text) {\n    const encoded = this.font.encodeText(text);\n    const glyphs = this.font.glyphsForString(`${text}`);\n    const advances = this.font.advancesForGlyphs(glyphs);\n    const positions = [];\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      positions.push({\n        xAdvance: advances[i],\n        yAdvance: 0,\n        xOffset: 0,\n        yOffset: 0,\n        advanceWidth: this.font.widthOfGlyph(glyph),\n      });\n    }\n\n    return [encoded, positions];\n  }\n\n  widthOfString(string, size) {\n    const glyphs = this.font.glyphsForString(`${string}`);\n    const advances = this.font.advancesForGlyphs(glyphs);\n\n    let width = 0;\n    for (let advance of advances) {\n      width += advance;\n    }\n\n    const scale = size / 1000;\n    return width * scale;\n  }\n\n  static isStandardFont(name) {\n    return name in STANDARD_FONTS;\n  }\n}\n\nexport default StandardFont;\n","import PDFFont from '../font';\n\nconst toHex = function (num) {\n  return `0000${num.toString(16)}`.slice(-4);\n};\n\nclass EmbeddedFont extends PDFFont {\n  constructor(document, font, id) {\n    super();\n    this.document = document;\n    this.font = font;\n    this.id = id;\n    this.subset = this.font.createSubset();\n    this.unicode = [[0]];\n    this.widths = [this.font.getGlyph(0).advanceWidth];\n\n    this.name = this.font.postscriptName;\n    this.scale = 1000 / this.font.unitsPerEm;\n    this.ascender = this.font.ascent * this.scale;\n    this.descender = this.font.descent * this.scale;\n    this.xHeight = this.font.xHeight * this.scale;\n    this.capHeight = this.font.capHeight * this.scale;\n    this.lineGap = this.font.lineGap * this.scale;\n    this.bbox = this.font.bbox;\n\n    if (document.options.fontLayoutCache !== false) {\n      this.layoutCache = Object.create(null);\n    }\n  }\n\n  layoutRun(text, features) {\n    const run = this.font.layout(text, features);\n\n    // Normalize position values\n    for (let i = 0; i < run.positions.length; i++) {\n      const position = run.positions[i];\n      for (let key in position) {\n        position[key] *= this.scale;\n      }\n\n      position.advanceWidth = run.glyphs[i].advanceWidth * this.scale;\n    }\n\n    return run;\n  }\n\n  layoutCached(text) {\n    if (!this.layoutCache) {\n      return this.layoutRun(text);\n    }\n    let cached;\n    if ((cached = this.layoutCache[text])) {\n      return cached;\n    }\n\n    const run = this.layoutRun(text);\n    this.layoutCache[text] = run;\n    return run;\n  }\n\n  layout(text, features, onlyWidth) {\n    // Skip the cache if any user defined features are applied\n    if (features) {\n      return this.layoutRun(text, features);\n    }\n\n    let glyphs = onlyWidth ? null : [];\n    let positions = onlyWidth ? null : [];\n    let advanceWidth = 0;\n\n    // Split the string by words to increase cache efficiency.\n    // For this purpose, spaces and tabs are a good enough delimeter.\n    let last = 0;\n    let index = 0;\n    while (index <= text.length) {\n      var needle;\n      if (\n        (index === text.length && last < index) ||\n        ((needle = text.charAt(index)), [' ', '\\t'].includes(needle))\n      ) {\n        const run = this.layoutCached(text.slice(last, ++index));\n        if (!onlyWidth) {\n          glyphs = glyphs.concat(run.glyphs);\n          positions = positions.concat(run.positions);\n        }\n\n        advanceWidth += run.advanceWidth;\n        last = index;\n      } else {\n        index++;\n      }\n    }\n\n    return { glyphs, positions, advanceWidth };\n  }\n\n  encode(text, features) {\n    const { glyphs, positions } = this.layout(text, features);\n\n    const res = [];\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const gid = this.subset.includeGlyph(glyph.id);\n      res.push(`0000${gid.toString(16)}`.slice(-4));\n\n      if (this.widths[gid] == null) {\n        this.widths[gid] = glyph.advanceWidth * this.scale;\n      }\n      if (this.unicode[gid] == null) {\n        this.unicode[gid] = glyph.codePoints;\n      }\n    }\n\n    return [res, positions];\n  }\n\n  widthOfString(string, size, features) {\n    const width = this.layout(string, features, true).advanceWidth;\n    const scale = size / 1000;\n    return width * scale;\n  }\n\n  embed() {\n    const isCFF = this.subset.cff != null;\n    const fontFile = this.document.ref();\n\n    if (isCFF) {\n      fontFile.data.Subtype = 'CIDFontType0C';\n    }\n\n    fontFile.end(this.subset.encode());\n\n    const familyClass =\n      ((this.font['OS/2'] != null\n        ? this.font['OS/2'].sFamilyClass\n        : undefined) || 0) >> 8;\n    let flags = 0;\n    if (this.font.post.isFixedPitch) {\n      flags |= 1 << 0;\n    }\n    if (1 <= familyClass && familyClass <= 7) {\n      flags |= 1 << 1;\n    }\n    flags |= 1 << 2; // assume the font uses non-latin characters\n    if (familyClass === 10) {\n      flags |= 1 << 3;\n    }\n    if (this.font.head.macStyle.italic) {\n      flags |= 1 << 6;\n    }\n\n    // generate a tag (6 uppercase letters. 17 is the char code offset from '0' to 'A'. 73 will map to 'Z')\n    const tag = [1, 2, 3, 4, 5, 6]\n      .map((i) => String.fromCharCode((this.id.charCodeAt(i) || 73) + 17))\n      .join('');\n    const name = tag + '+' + this.font.postscriptName?.replaceAll(' ', '_');\n\n    const { bbox } = this.font;\n    const descriptor = this.document.ref({\n      Type: 'FontDescriptor',\n      FontName: name,\n      Flags: flags,\n      FontBBox: [\n        bbox.minX * this.scale,\n        bbox.minY * this.scale,\n        bbox.maxX * this.scale,\n        bbox.maxY * this.scale,\n      ],\n      ItalicAngle: this.font.italicAngle,\n      Ascent: this.ascender,\n      Descent: this.descender,\n      CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n      XHeight: (this.font.xHeight || 0) * this.scale,\n      StemV: 0,\n    }); // not sure how to calculate this\n\n    if (isCFF) {\n      descriptor.data.FontFile3 = fontFile;\n    } else {\n      descriptor.data.FontFile2 = fontFile;\n    }\n\n    if (this.document.subset && this.document.subset === 1) {\n      const CIDSet = Buffer.from('FFFFFFFFC0', 'hex');\n      const CIDSetRef = this.document.ref();\n      CIDSetRef.write(CIDSet);\n      CIDSetRef.end();\n\n      descriptor.data.CIDSet = CIDSetRef;\n    }\n\n    descriptor.end();\n\n    const descendantFontData = {\n      Type: 'Font',\n      Subtype: 'CIDFontType0',\n      BaseFont: name,\n      CIDSystemInfo: {\n        Registry: new String('Adobe'),\n        Ordering: new String('Identity'),\n        Supplement: 0,\n      },\n      FontDescriptor: descriptor,\n      W: [0, this.widths],\n    };\n\n    if (!isCFF) {\n      descendantFontData.Subtype = 'CIDFontType2';\n      descendantFontData.CIDToGIDMap = 'Identity';\n    }\n\n    const descendantFont = this.document.ref(descendantFontData);\n\n    descendantFont.end();\n\n    this.dictionary.data = {\n      Type: 'Font',\n      Subtype: 'Type0',\n      BaseFont: name,\n      Encoding: 'Identity-H',\n      DescendantFonts: [descendantFont],\n      ToUnicode: this.toUnicodeCmap(),\n    };\n\n    return this.dictionary.end();\n  }\n\n  // Maps the glyph ids encoded in the PDF back to unicode strings\n  // Because of ligature substitutions and the like, there may be one or more\n  // unicode characters represented by each glyph.\n  toUnicodeCmap() {\n    const cmap = this.document.ref();\n\n    const entries = [];\n    for (let codePoints of this.unicode) {\n      const encoded = [];\n\n      // encode codePoints to utf16\n      for (let value of codePoints) {\n        if (value > 0xffff) {\n          value -= 0x10000;\n          encoded.push(toHex(((value >>> 10) & 0x3ff) | 0xd800));\n          value = 0xdc00 | (value & 0x3ff);\n        }\n\n        encoded.push(toHex(value));\n      }\n\n      entries.push(`<${encoded.join(' ')}>`);\n    }\n\n    const chunkSize = 256;\n    const chunks = Math.ceil(entries.length / chunkSize);\n    const ranges = [];\n    for (let i = 0; i < chunks; i++) {\n      const start = i * chunkSize;\n      const end = Math.min((i + 1) * chunkSize, entries.length);\n      ranges.push(\n        `<${toHex(start)}> <${toHex(end - 1)}> [${entries.slice(start, end).join(' ')}]`,\n      );\n    }\n\n    cmap.end(`\\\n/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n1 beginbfrange\n${ranges.join('\\n')}\nendbfrange\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend\\\n`);\n\n    return cmap;\n  }\n}\n\nexport default EmbeddedFont;\n","import fs from 'fs';\nimport * as fontkit from 'fontkit';\nimport StandardFont from './font/standard';\nimport EmbeddedFont from './font/embedded';\n\nclass PDFFontFactory {\n  static open(document, src, family, id) {\n    let font;\n    if (typeof src === 'string') {\n      if (StandardFont.isStandardFont(src)) {\n        return new StandardFont(document, src, id);\n      }\n\n      src = fs.readFileSync(src);\n    }\n    if (src instanceof Uint8Array) {\n      font = fontkit.create(src, family);\n    } else if (src instanceof ArrayBuffer) {\n      font = fontkit.create(new Uint8Array(src), family);\n    }\n\n    if (font == null) {\n      throw new Error('Not a supported font format or standard PDF font.');\n    }\n\n    return new EmbeddedFont(document, font, id);\n  }\n}\n\nexport default PDFFontFactory;\n","import PDFFontFactory from '../font_factory';\nimport { CM_TO_IN, IN_TO_PT, MM_TO_CM, PC_TO_PT, PX_TO_IN } from '../utils';\n\nconst isEqualFont = (font1, font2) => {\n  // compare font checksum\n  if (\n    font1.font._tables?.head?.checkSumAdjustment !==\n    font2.font._tables?.head?.checkSumAdjustment\n  ) {\n    return false;\n  }\n\n  // compare font name table\n  if (\n    JSON.stringify(font1.font._tables?.name?.records) !==\n    JSON.stringify(font2.font._tables?.name?.records)\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default {\n  initFonts(\n    defaultFont = 'Helvetica',\n    defaultFontFamily = null,\n    defaultFontSize = 12,\n  ) {\n    // Lookup table for embedded fonts\n    this._fontFamilies = {};\n    this._fontCount = 0;\n\n    // Font state\n    // Useful to export the font builder so that someone can create a snapshot of the current state\n    // (e.g. Reverting back to the previous font)\n    this._fontSource = defaultFont;\n    this._fontFamily = defaultFontFamily;\n    this._fontSize = defaultFontSize;\n    this._font = null;\n\n    // rem size is fixed per document as the document is the root element\n    this._remSize = defaultFontSize;\n\n    this._registeredFonts = {};\n\n    // Set the default font\n    if (defaultFont) {\n      this.font(defaultFont, defaultFontFamily);\n    }\n  },\n\n  font(src, family, size) {\n    let cacheKey, font;\n    if (typeof family === 'number') {\n      size = family;\n      family = null;\n    }\n\n    // check registered fonts if src is a string\n    if (typeof src === 'string' && this._registeredFonts[src]) {\n      cacheKey = src;\n      ({ src, family } = this._registeredFonts[src]);\n    } else {\n      cacheKey = family || src;\n      if (typeof cacheKey !== 'string') {\n        cacheKey = null;\n      }\n    }\n\n    this._fontSource = src;\n    this._fontFamily = family;\n    if (size != null) {\n      this.fontSize(size);\n    }\n\n    // fast path: check if the font is already in the PDF\n    if ((font = this._fontFamilies[cacheKey])) {\n      this._font = font;\n      return this;\n    }\n\n    // load the font\n    const id = `F${++this._fontCount}`;\n    this._font = PDFFontFactory.open(this, src, family, id);\n\n    // check for existing font familes with the same name already in the PDF\n    // useful if the font was passed as a buffer\n    if (\n      (font = this._fontFamilies[this._font.name]) &&\n      isEqualFont(this._font, font)\n    ) {\n      this._font = font;\n      return this;\n    }\n\n    // save the font for reuse later\n    if (cacheKey) {\n      this._fontFamilies[cacheKey] = this._font;\n    }\n\n    if (this._font.name) {\n      this._fontFamilies[this._font.name] = this._font;\n    }\n\n    return this;\n  },\n\n  fontSize(_fontSize) {\n    this._fontSize = this.sizeToPoint(_fontSize);\n    return this;\n  },\n\n  currentLineHeight(includeGap) {\n    return this._font.lineHeight(this._fontSize, includeGap);\n  },\n\n  registerFont(name, src, family) {\n    this._registeredFonts[name] = {\n      src,\n      family,\n    };\n\n    return this;\n  },\n\n  /**\n   * Convert a {@link Size} into a point measurement\n   *\n   * @param {Size | boolean | undefined} size - The size to convert\n   * @param {Size | boolean | undefined} defaultValue - The default value when undefined\n   * @param {PDFPage} page - The page used for computing font sizes\n   * @param {number} [percentageWidth] - The value to use for computing size based on `%`\n   *\n   * @returns number\n   */\n  sizeToPoint(\n    size,\n    defaultValue = 0,\n    page = this.page,\n    percentageWidth = undefined,\n  ) {\n    if (!percentageWidth) percentageWidth = this._fontSize;\n    if (typeof defaultValue !== 'number')\n      defaultValue = this.sizeToPoint(defaultValue);\n    if (size === undefined) return defaultValue;\n    if (typeof size === 'number') return size;\n    if (typeof size === 'boolean') return Number(size);\n\n    const match = String(size).match(\n      /((\\d+)?(\\.\\d+)?)(em|in|px|cm|mm|pc|ex|ch|rem|vw|vh|vmin|vmax|%|pt)?/,\n    );\n    if (!match) throw new Error(`Unsupported size '${size}'`);\n    let multiplier;\n    switch (match[4]) {\n      case 'em':\n        multiplier = this._fontSize;\n        break;\n      case 'in':\n        multiplier = IN_TO_PT;\n        break;\n      case 'px':\n        multiplier = PX_TO_IN * IN_TO_PT;\n        break;\n      case 'cm':\n        multiplier = CM_TO_IN * IN_TO_PT;\n        break;\n      case 'mm':\n        multiplier = MM_TO_CM * CM_TO_IN * IN_TO_PT;\n        break;\n      case 'pc':\n        multiplier = PC_TO_PT;\n        break;\n      case 'ex':\n        multiplier = this.currentLineHeight();\n        break;\n      case 'ch':\n        multiplier = this.widthOfString('0');\n        break;\n      case 'rem':\n        multiplier = this._remSize;\n        break;\n      case 'vw':\n        multiplier = page.width / 100;\n        break;\n      case 'vh':\n        multiplier = page.height / 100;\n        break;\n      case 'vmin':\n        multiplier = Math.min(page.width, page.height) / 100;\n        break;\n      case 'vmax':\n        multiplier = Math.max(page.width, page.height) / 100;\n        break;\n      case '%':\n        multiplier = percentageWidth / 100;\n        break;\n      case 'pt':\n      default:\n        multiplier = 1;\n    }\n\n    return multiplier * Number(match[1]);\n  },\n};\n","import { EventEmitter } from 'events';\nimport LineBreaker from 'linebreak';\nimport { PDFNumber } from './utils';\n\nconst SOFT_HYPHEN = '\\u00AD';\nconst HYPHEN = '-';\n\nclass LineWrapper extends EventEmitter {\n  constructor(document, options) {\n    super();\n    this.document = document;\n    this.horizontalScaling = options.horizontalScaling || 100;\n    this.indent = ((options.indent || 0) * this.horizontalScaling) / 100;\n    this.characterSpacing =\n      ((options.characterSpacing || 0) * this.horizontalScaling) / 100;\n    this.wordSpacing =\n      ((options.wordSpacing === 0) * this.horizontalScaling) / 100;\n    this.columns = options.columns || 1;\n    this.columnGap =\n      ((options.columnGap != null ? options.columnGap : 18) *\n        this.horizontalScaling) /\n      100; // 1/4 inch\n    this.lineWidth =\n      ((options.width * this.horizontalScaling) / 100 -\n        this.columnGap * (this.columns - 1)) /\n      this.columns;\n    this.spaceLeft = this.lineWidth;\n    this.startX = this.document.x;\n    this.startY = this.document.y;\n    this.column = 1;\n    this.ellipsis = options.ellipsis;\n    this.continuedX = 0;\n    this.features = options.features;\n\n    // calculate the maximum Y position the text can appear at\n    if (options.height != null) {\n      this.height = options.height;\n      this.maxY = PDFNumber(this.startY + options.height);\n    } else {\n      this.maxY = PDFNumber(this.document.page.maxY());\n    }\n\n    // handle paragraph indents\n    this.on('firstLine', (options) => {\n      // if this is the first line of the text segment, and\n      // we're continuing where we left off, indent that much\n      // otherwise use the user specified indent option\n      const indent = this.continuedX || this.indent;\n      this.document.x += indent;\n      this.lineWidth -= indent;\n\n      // if indentAllLines is set to true\n      // we're not resetting the indentation for this paragraph after the first line\n      if (options.indentAllLines) {\n        return;\n      }\n\n      // otherwise we start the next line without indent\n      this.once('line', () => {\n        this.document.x -= indent;\n        this.lineWidth += indent;\n        if (options.continued && !this.continuedX) {\n          this.continuedX = this.indent;\n        }\n        if (!options.continued) {\n          this.continuedX = 0;\n        }\n      });\n    });\n\n    // handle left aligning last lines of paragraphs\n    this.on('lastLine', (options) => {\n      const { align } = options;\n      if (align === 'justify') {\n        options.align = 'left';\n      }\n      this.lastLine = true;\n\n      this.once('line', () => {\n        this.document.y += options.paragraphGap || 0;\n        options.align = align;\n        return (this.lastLine = false);\n      });\n    });\n  }\n\n  wordWidth(word) {\n    return (\n      this.document.widthOfString(word, this) +\n      this.characterSpacing +\n      this.wordSpacing\n    );\n  }\n\n  canFit(word, w) {\n    if (word[word.length - 1] != SOFT_HYPHEN) {\n      return w <= this.spaceLeft;\n    }\n    return w + this.wordWidth(HYPHEN) <= this.spaceLeft;\n  }\n\n  eachWord(text, fn) {\n    // setup a unicode line breaker\n    let bk;\n    const breaker = new LineBreaker(text);\n    let last = null;\n    const wordWidths = Object.create(null);\n\n    while ((bk = breaker.nextBreak())) {\n      var shouldContinue;\n      let word = text.slice(\n        (last != null ? last.position : undefined) || 0,\n        bk.position,\n      );\n      let w =\n        wordWidths[word] != null\n          ? wordWidths[word]\n          : (wordWidths[word] = this.wordWidth(word));\n\n      // if the word is longer than the whole line, chop it up\n      // TODO: break by grapheme clusters, not JS string characters\n      if (w > this.lineWidth + this.continuedX) {\n        // make some fake break objects\n        let lbk = last;\n        const fbk = {};\n\n        while (word.length) {\n          // fit as much of the word as possible into the space we have\n          var l, mightGrow;\n          if (w > this.spaceLeft) {\n            // start our check at the end of our available space - this method is faster than a loop of each character and it resolves\n            // an issue with long loops when processing massive words, such as a huge number of spaces\n            l = Math.ceil(this.spaceLeft / (w / word.length));\n            w = this.wordWidth(word.slice(0, l));\n            mightGrow = w <= this.spaceLeft && l < word.length;\n          } else {\n            l = word.length;\n          }\n          let mustShrink = w > this.spaceLeft && l > 0;\n          // shrink or grow word as necessary after our near-guess above\n          while (mustShrink || mightGrow) {\n            if (mustShrink) {\n              w = this.wordWidth(word.slice(0, --l));\n              mustShrink = w > this.spaceLeft && l > 0;\n            } else {\n              w = this.wordWidth(word.slice(0, ++l));\n              mustShrink = w > this.spaceLeft && l > 0;\n              mightGrow = w <= this.spaceLeft && l < word.length;\n            }\n          }\n\n          // check for the edge case where a single character cannot fit into a line.\n          if (l === 0 && this.spaceLeft === this.lineWidth) {\n            l = 1;\n          }\n\n          // send a required break unless this is the last piece and a linebreak is not specified\n          fbk.required = bk.required || l < word.length;\n          shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n          lbk = { required: false };\n\n          // get the remaining piece of the word\n          word = word.slice(l);\n          w = this.wordWidth(word);\n\n          if (shouldContinue === false) {\n            break;\n          }\n        }\n      } else {\n        // otherwise just emit the break as it was given to us\n        shouldContinue = fn(word, w, bk, last);\n      }\n\n      if (shouldContinue === false) {\n        break;\n      }\n      last = bk;\n    }\n  }\n\n  wrap(text, options) {\n    // override options from previous continued fragments\n    this.horizontalScaling = options.horizontalScaling || 100;\n    if (options.indent != null) {\n      this.indent = (options.indent * this.horizontalScaling) / 100;\n    }\n    if (options.characterSpacing != null) {\n      this.characterSpacing =\n        (options.characterSpacing * this.horizontalScaling) / 100;\n    }\n    if (options.wordSpacing != null) {\n      this.wordSpacing = (options.wordSpacing * this.horizontalScaling) / 100;\n    }\n    if (options.ellipsis != null) {\n      this.ellipsis = options.ellipsis;\n    }\n\n    // make sure we're actually on the page\n    // and that the first line of is never by\n    // itself at the bottom of a page (orphans)\n    const nextY = this.document.y + this.document.currentLineHeight(true);\n    if (this.document.y > this.maxY || nextY > this.maxY) {\n      this.nextSection();\n    }\n\n    let buffer = '';\n    let textWidth = 0;\n    let wc = 0;\n    let lc = 0;\n\n    let { y } = this.document; // used to reset Y pos if options.continued (below)\n    const emitLine = () => {\n      options.textWidth = textWidth + this.wordSpacing * (wc - 1);\n      options.wordCount = wc;\n      options.lineWidth = this.lineWidth;\n      ({ y } = this.document);\n      this.emit('line', buffer, options, this);\n      return lc++;\n    };\n\n    this.emit('sectionStart', options, this);\n\n    this.eachWord(text, (word, w, bk, last) => {\n      if (last == null || last.required) {\n        this.emit('firstLine', options, this);\n        this.spaceLeft = this.lineWidth;\n      }\n\n      if (this.canFit(word, w)) {\n        buffer += word;\n        textWidth += w;\n        wc++;\n      }\n\n      if (bk.required || !this.canFit(word, w)) {\n        // if the user specified a max height and an ellipsis, and is about to pass the\n        // max height and max columns after the next line, append the ellipsis\n        const lh = this.document.currentLineHeight(true);\n        if (\n          this.height != null &&\n          this.ellipsis &&\n          PDFNumber(this.document.y + lh * 2) > this.maxY &&\n          this.column >= this.columns\n        ) {\n          if (this.ellipsis === true) {\n            this.ellipsis = '…';\n          } // map default ellipsis character\n          buffer = buffer.replace(/\\s+$/, '');\n          textWidth = this.wordWidth(buffer + this.ellipsis);\n\n          // remove characters from the buffer until the ellipsis fits\n          // to avoid infinite loop need to stop while-loop if buffer is empty string\n          while (buffer && textWidth > this.lineWidth) {\n            buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n            textWidth = this.wordWidth(buffer + this.ellipsis);\n          }\n          // need to add ellipsis only if there is enough space for it\n          if (textWidth <= this.lineWidth) {\n            buffer = buffer + this.ellipsis;\n          }\n\n          textWidth = this.wordWidth(buffer);\n        }\n\n        if (bk.required) {\n          if (w > this.spaceLeft) {\n            emitLine();\n            buffer = word;\n            textWidth = w;\n            wc = 1;\n          }\n\n          this.emit('lastLine', options, this);\n        }\n\n        // Previous entry is a soft hyphen - add visible hyphen.\n        if (buffer[buffer.length - 1] == SOFT_HYPHEN) {\n          buffer = buffer.slice(0, -1) + HYPHEN;\n          this.spaceLeft -= this.wordWidth(HYPHEN);\n        }\n\n        emitLine();\n\n        // if we've reached the edge of the page,\n        // continue on a new page or column\n        if (PDFNumber(this.document.y + lh) > this.maxY) {\n          const shouldContinue = this.nextSection();\n\n          // stop if we reached the maximum height\n          if (!shouldContinue) {\n            wc = 0;\n            buffer = '';\n            return false;\n          }\n        }\n\n        // reset the space left and buffer\n        if (bk.required) {\n          this.spaceLeft = this.lineWidth;\n          buffer = '';\n          textWidth = 0;\n          return (wc = 0);\n        } else {\n          // reset the space left and buffer\n          this.spaceLeft = this.lineWidth - w;\n          buffer = word;\n          textWidth = w;\n          return (wc = 1);\n        }\n      } else {\n        return (this.spaceLeft -= w);\n      }\n    });\n\n    if (wc > 0) {\n      this.emit('lastLine', options, this);\n      emitLine();\n    }\n\n    this.emit('sectionEnd', options, this);\n\n    // if the wrap is set to be continued, save the X position\n    // to start the first line of the next segment at, and reset\n    // the y position\n    if (options.continued === true) {\n      if (lc > 1) {\n        this.continuedX = 0;\n      }\n      this.continuedX += options.textWidth || 0;\n      this.document.y = y;\n    } else {\n      this.document.x = this.startX;\n    }\n  }\n\n  nextSection(options) {\n    this.emit('sectionEnd', options, this);\n\n    if (++this.column > this.columns) {\n      // if a max height was specified by the user, we're done.\n      // otherwise, the default is to make a new page at the bottom.\n      if (this.height != null) {\n        return false;\n      }\n\n      this.document.continueOnNewPage();\n      this.column = 1;\n      this.startY = this.document.page.margins.top;\n      this.maxY = this.document.page.maxY();\n      this.document.x = this.startX;\n      if (this.document._fillColor) {\n        this.document.fillColor(...this.document._fillColor);\n      }\n      this.emit('pageBreak', options, this);\n    } else {\n      this.document.x += this.lineWidth + this.columnGap;\n      this.document.y = this.startY;\n      this.emit('columnBreak', options, this);\n    }\n\n    this.emit('sectionStart', options, this);\n    return true;\n  }\n}\n\nexport default LineWrapper;\n","import LineWrapper from '../line_wrapper';\nimport PDFObject from '../object';\nimport { cosine, sine } from '../utils';\n\nconst { number } = PDFObject;\n\nexport default {\n  initText() {\n    this._line = this._line.bind(this);\n    // Current coordinates\n    this.x = 0;\n    this.y = 0;\n    this._lineGap = 0;\n  },\n\n  lineGap(_lineGap) {\n    this._lineGap = _lineGap;\n    return this;\n  },\n\n  moveDown(lines) {\n    if (lines == null) {\n      lines = 1;\n    }\n    this.y += this.currentLineHeight(true) * lines + this._lineGap;\n    return this;\n  },\n\n  moveUp(lines) {\n    if (lines == null) {\n      lines = 1;\n    }\n    this.y -= this.currentLineHeight(true) * lines + this._lineGap;\n    return this;\n  },\n\n  _text(text, x, y, options, lineCallback) {\n    options = this._initOptions(x, y, options);\n\n    // Convert text to a string\n    text = text == null ? '' : `${text}`;\n\n    // if the wordSpacing option is specified, remove multiple consecutive spaces\n    if (options.wordSpacing) {\n      text = text.replace(/\\s{2,}/g, ' ');\n    }\n\n    const addStructure = () => {\n      if (options.structParent) {\n        options.structParent.add(\n          this.struct(options.structType || 'P', [\n            this.markStructureContent(options.structType || 'P'),\n          ]),\n        );\n      }\n    };\n\n    // We can save some bytes if there is no rotation\n    if (options.rotation !== 0) {\n      this.save();\n      this.rotate(-options.rotation, { origin: [this.x, this.y] });\n    }\n\n    // word wrapping\n    if (options.width) {\n      let wrapper = this._wrapper;\n      if (!wrapper) {\n        wrapper = new LineWrapper(this, options);\n        wrapper.on('line', lineCallback);\n        wrapper.on('firstLine', addStructure);\n      }\n\n      this._wrapper = options.continued ? wrapper : null;\n      this._textOptions = options.continued ? options : null;\n      wrapper.wrap(text, options);\n\n      // render paragraphs as single lines\n    } else {\n      for (let line of text.split('\\n')) {\n        addStructure();\n        lineCallback(line, options);\n      }\n    }\n\n    // Cleanup if there was a rotation\n    if (options.rotation !== 0) this.restore();\n\n    return this;\n  },\n\n  text(text, x, y, options) {\n    return this._text(text, x, y, options, this._line);\n  },\n\n  widthOfString(string, options = {}) {\n    const horizontalScaling = options.horizontalScaling || 100;\n    return (\n      ((this._font.widthOfString(string, this._fontSize, options.features) +\n        (options.characterSpacing || 0) * (string.length - 1)) *\n        horizontalScaling) /\n      100\n    );\n  },\n\n  /**\n   * Compute the bounding box of a string\n   * based on what will actually be rendered by `doc.text()`\n   *\n   * @param string - The string\n   * @param x - X position of text (defaults to this.x)\n   * @param y - Y position of text (defaults to this.y)\n   * @param options - Any text options (The same you would apply to `doc.text()`)\n   * @returns {{x: number, y: number, width: number, height: number}}\n   */\n  boundsOfString(string, x, y, options) {\n    options = this._initOptions(x, y, options);\n    ({ x, y } = this);\n    const lineGap = options.lineGap ?? this._lineGap ?? 0;\n    const lineHeight = this.currentLineHeight(true) + lineGap;\n    let contentWidth = 0;\n    // Convert text to a string\n    string = String(string ?? '');\n\n    // if the wordSpacing option is specified, remove multiple consecutive spaces\n    if (options.wordSpacing) {\n      string = string.replace(/\\s{2,}/g, ' ');\n    }\n\n    // word wrapping\n    if (options.width) {\n      let wrapper = new LineWrapper(this, options);\n      wrapper.on('line', (text, options) => {\n        this.y += lineHeight;\n        text = text.replace(/\\n/g, '');\n\n        if (text.length) {\n          // handle options\n          let wordSpacing = options.wordSpacing ?? 0;\n          const characterSpacing = options.characterSpacing ?? 0;\n\n          // justify alignments\n          if (options.width && options.align === 'justify') {\n            // calculate the word spacing value\n            const words = text.trim().split(/\\s+/);\n            const textWidth = this.widthOfString(\n              text.replace(/\\s+/g, ''),\n              options,\n            );\n            const spaceWidth = this.widthOfString(' ') + characterSpacing;\n            wordSpacing = Math.max(\n              0,\n              (options.lineWidth - textWidth) / Math.max(1, words.length - 1) -\n                spaceWidth,\n            );\n          }\n\n          // calculate the actual rendered width of the string after word and character spacing\n          contentWidth = Math.max(\n            contentWidth,\n            options.textWidth +\n              wordSpacing * (options.wordCount - 1) +\n              characterSpacing * (text.length - 1),\n          );\n        }\n      });\n      wrapper.wrap(string, options);\n    } else {\n      // render paragraphs as single lines\n      for (let line of string.split('\\n')) {\n        const lineWidth = this.widthOfString(line, options);\n        this.y += lineHeight;\n        contentWidth = Math.max(contentWidth, lineWidth);\n      }\n    }\n\n    let contentHeight = this.y - y;\n    // Clamp height to max height\n    if (options.height) contentHeight = Math.min(contentHeight, options.height);\n\n    this.x = x;\n    this.y = y;\n\n    /**\n     * Rotates around top left corner\n     * [x1,y1]  >  [x2,y2]\n     *    ⌃           ⌄\n     * [x4,y4]  <  [x3,y3]\n     */\n    if (options.rotation === 0) {\n      // No rotation so we can use the existing values\n      return { x, y, width: contentWidth, height: contentHeight };\n      // Use fast computation without explicit trig\n    } else if (options.rotation === 90) {\n      return {\n        x: x,\n        y: y - contentWidth,\n        width: contentHeight,\n        height: contentWidth,\n      };\n    } else if (options.rotation === 180) {\n      return {\n        x: x - contentWidth,\n        y: y - contentHeight,\n        width: contentWidth,\n        height: contentHeight,\n      };\n    } else if (options.rotation === 270) {\n      return {\n        x: x - contentHeight,\n        y: y,\n        width: contentHeight,\n        height: contentWidth,\n      };\n    }\n\n    // Non-trivial values so time for trig\n    const cos = cosine(options.rotation);\n    const sin = sine(options.rotation);\n\n    const x1 = x;\n    const y1 = y;\n    const x2 = x + contentWidth * cos;\n    const y2 = y - contentWidth * sin;\n    const x3 = x + contentWidth * cos + contentHeight * sin;\n    const y3 = y - contentWidth * sin + contentHeight * cos;\n    const x4 = x + contentHeight * sin;\n    const y4 = y + contentHeight * cos;\n\n    const xMin = Math.min(x1, x2, x3, x4);\n    const xMax = Math.max(x1, x2, x3, x4);\n    const yMin = Math.min(y1, y2, y3, y4);\n    const yMax = Math.max(y1, y2, y3, y4);\n\n    return { x: xMin, y: yMin, width: xMax - xMin, height: yMax - yMin };\n  },\n\n  heightOfString(text, options) {\n    const { x, y } = this;\n\n    options = this._initOptions(options);\n    options.height = Infinity; // don't break pages\n\n    const lineGap = options.lineGap || this._lineGap || 0;\n    this._text(text, this.x, this.y, options, () => {\n      this.y += this.currentLineHeight(true) + lineGap;\n    });\n\n    const height = this.y - y;\n    this.x = x;\n    this.y = y;\n\n    return height;\n  },\n\n  list(list, x, y, options, wrapper) {\n    options = this._initOptions(x, y, options);\n\n    const listType = options.listType || 'bullet';\n    const unit = Math.round((this._font.ascender / 1000) * this._fontSize);\n    const midLine = unit / 2;\n    const r = options.bulletRadius || unit / 3;\n    const indent =\n      options.textIndent || (listType === 'bullet' ? r * 5 : unit * 2);\n    const itemIndent =\n      options.bulletIndent || (listType === 'bullet' ? r * 8 : unit * 2);\n\n    let level = 1;\n    const items = [];\n    const levels = [];\n    const numbers = [];\n\n    var flatten = function (list) {\n      let n = 1;\n      for (let i = 0; i < list.length; i++) {\n        const item = list[i];\n        if (Array.isArray(item)) {\n          level++;\n          flatten(item);\n          level--;\n        } else {\n          items.push(item);\n          levels.push(level);\n          if (listType !== 'bullet') {\n            numbers.push(n++);\n          }\n        }\n      }\n    };\n\n    flatten(list);\n\n    const label = function (n) {\n      switch (listType) {\n        case 'numbered':\n          return `${n}.`;\n        case 'lettered':\n          var letter = String.fromCharCode(((n - 1) % 26) + 65);\n          var times = Math.floor((n - 1) / 26 + 1);\n          var text = Array(times + 1).join(letter);\n          return `${text}.`;\n      }\n    };\n\n    const drawListItem = function (listItem, i) {\n      wrapper = new LineWrapper(this, options);\n      wrapper.on('line', this._line);\n\n      level = 1;\n      wrapper.once('firstLine', () => {\n        let item, itemType, labelType, bodyType;\n        if (options.structParent) {\n          if (options.structTypes) {\n            [itemType, labelType, bodyType] = options.structTypes;\n          } else {\n            [itemType, labelType, bodyType] = ['LI', 'Lbl', 'LBody'];\n          }\n        }\n\n        if (itemType) {\n          item = this.struct(itemType);\n          options.structParent.add(item);\n        } else if (options.structParent) {\n          item = options.structParent;\n        }\n\n        let l;\n        if ((l = levels[i++]) !== level) {\n          const diff = itemIndent * (l - level);\n          this.x += diff;\n          wrapper.lineWidth -= diff;\n          level = l;\n        }\n\n        if (item && (labelType || bodyType)) {\n          item.add(\n            this.struct(labelType || bodyType, [\n              this.markStructureContent(labelType || bodyType),\n            ]),\n          );\n        }\n        switch (listType) {\n          case 'bullet':\n            this.circle(this.x - indent + r, this.y + midLine, r);\n            this.fill();\n            break;\n          case 'numbered':\n          case 'lettered':\n            var text = label(numbers[i - 1]);\n            this._fragment(text, this.x - indent, this.y, options);\n            break;\n        }\n\n        if (item && labelType && bodyType) {\n          item.add(\n            this.struct(bodyType, [this.markStructureContent(bodyType)]),\n          );\n        }\n        if (item && item !== options.structParent) {\n          item.end();\n        }\n      });\n\n      wrapper.on('sectionStart', () => {\n        const pos = indent + itemIndent * (level - 1);\n        this.x += pos;\n        wrapper.lineWidth -= pos;\n      });\n\n      wrapper.on('sectionEnd', () => {\n        const pos = indent + itemIndent * (level - 1);\n        this.x -= pos;\n        wrapper.lineWidth += pos;\n      });\n\n      wrapper.wrap(listItem, options);\n    };\n\n    for (let i = 0; i < items.length; i++) {\n      drawListItem.call(this, items[i], i);\n    }\n\n    return this;\n  },\n\n  _initOptions(x = {}, y, options = {}) {\n    if (typeof x === 'object') {\n      options = x;\n      x = null;\n    }\n\n    // clone options object\n    const result = Object.assign({}, options);\n\n    // extend options with previous values for continued text\n    if (this._textOptions) {\n      for (let key in this._textOptions) {\n        const val = this._textOptions[key];\n        if (key !== 'continued') {\n          if (result[key] === undefined) {\n            result[key] = val;\n          }\n        }\n      }\n    }\n\n    // Update the current position\n    if (x != null) {\n      this.x = x;\n    }\n    if (y != null) {\n      this.y = y;\n    }\n\n    // wrap to margins if no x or y position passed\n    if (result.lineBreak !== false) {\n      if (result.width == null) {\n        result.width = this.page.width - this.x - this.page.margins.right;\n      }\n      result.width = Math.max(result.width, 0);\n    }\n\n    if (!result.columns) {\n      result.columns = 0;\n    }\n    if (result.columnGap == null) {\n      result.columnGap = 18;\n    } // 1/4 inch\n\n    // Normalize rotation to between 0 - 360\n    result.rotation = Number(options.rotation ?? 0) % 360;\n    if (result.rotation < 0) result.rotation += 360;\n\n    return result;\n  },\n\n  _line(text, options = {}, wrapper) {\n    this._fragment(text, this.x, this.y, options);\n    const lineGap = options.lineGap || this._lineGap || 0;\n\n    if (!wrapper) {\n      this.x += this.widthOfString(text, options);\n    } else {\n      this.y += this.currentLineHeight(true) + lineGap;\n    }\n  },\n\n  _fragment(text, x, y, options) {\n    let dy, encoded, i, positions, textWidth, words;\n    text = `${text}`.replace(/\\n/g, '');\n    if (text.length === 0) {\n      return;\n    }\n\n    // handle options\n    const align = options.align || 'left';\n    let wordSpacing = options.wordSpacing || 0;\n    const characterSpacing = options.characterSpacing || 0;\n    const horizontalScaling = options.horizontalScaling || 100;\n\n    // text alignments\n    if (options.width) {\n      switch (align) {\n        case 'right':\n          textWidth = this.widthOfString(text.replace(/\\s+$/, ''), options);\n          x += options.lineWidth - textWidth;\n          break;\n\n        case 'center':\n          x += options.lineWidth / 2 - options.textWidth / 2;\n          break;\n\n        case 'justify':\n          // calculate the word spacing value\n          words = text.trim().split(/\\s+/);\n          textWidth = this.widthOfString(text.replace(/\\s+/g, ''), options);\n          var spaceWidth = this.widthOfString(' ') + characterSpacing;\n          wordSpacing = Math.max(\n            0,\n            (options.lineWidth - textWidth) / Math.max(1, words.length - 1) -\n              spaceWidth,\n          );\n          break;\n      }\n    }\n\n    // text baseline alignments based on http://wiki.apache.org/xmlgraphics-fop/LineLayout/AlignmentHandling\n    if (typeof options.baseline === 'number') {\n      dy = -options.baseline;\n    } else {\n      switch (options.baseline) {\n        case 'svg-middle':\n          dy = 0.5 * this._font.xHeight;\n          break;\n        case 'middle':\n        case 'svg-central':\n          dy = 0.5 * (this._font.descender + this._font.ascender);\n          break;\n        case 'bottom':\n        case 'ideographic':\n          dy = this._font.descender;\n          break;\n        case 'alphabetic':\n          dy = 0;\n          break;\n        case 'mathematical':\n          dy = 0.5 * this._font.ascender;\n          break;\n        case 'hanging':\n          dy = 0.8 * this._font.ascender;\n          break;\n        case 'top':\n          dy = this._font.ascender;\n          break;\n        default:\n          dy = this._font.ascender;\n      }\n      dy = (dy / 1000) * this._fontSize;\n    }\n\n    // calculate the actual rendered width of the string after word and character spacing\n    const renderedWidth =\n      options.textWidth +\n      wordSpacing * (options.wordCount - 1) +\n      characterSpacing * (text.length - 1);\n\n    // create link annotations if the link option is given\n    if (options.link != null) {\n      this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);\n    }\n    if (options.goTo != null) {\n      this.goTo(x, y, renderedWidth, this.currentLineHeight(), options.goTo);\n    }\n    if (options.destination != null) {\n      this.addNamedDestination(options.destination, 'XYZ', x, y, null);\n    }\n\n    // create underline\n    if (options.underline) {\n      this.save();\n      if (!options.stroke) {\n        this.strokeColor(...(this._fillColor || []));\n      }\n\n      const lineWidth =\n        this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n      this.lineWidth(lineWidth);\n\n      let lineY = y + this.currentLineHeight() - lineWidth;\n      this.moveTo(x, lineY);\n      this.lineTo(x + renderedWidth, lineY);\n      this.stroke();\n      this.restore();\n    }\n\n    // create strikethrough line\n    if (options.strike) {\n      this.save();\n      if (!options.stroke) {\n        this.strokeColor(...(this._fillColor || []));\n      }\n\n      const lineWidth =\n        this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n      this.lineWidth(lineWidth);\n\n      let lineY = y + this.currentLineHeight() / 2;\n      this.moveTo(x, lineY);\n      this.lineTo(x + renderedWidth, lineY);\n      this.stroke();\n      this.restore();\n    }\n\n    this.save();\n\n    // oblique (angle in degrees or boolean)\n    if (options.oblique) {\n      let skew;\n      if (typeof options.oblique === 'number') {\n        skew = -Math.tan((options.oblique * Math.PI) / 180);\n      } else {\n        skew = -0.25;\n      }\n      this.transform(1, 0, 0, 1, x, y);\n      this.transform(1, 0, skew, 1, -skew * dy, 0);\n      this.transform(1, 0, 0, 1, -x, -y);\n    }\n\n    // flip coordinate system\n    this.transform(1, 0, 0, -1, 0, this.page.height);\n    y = this.page.height - y - dy;\n\n    // add current font to page if necessary\n    if (this.page.fonts[this._font.id] == null) {\n      this.page.fonts[this._font.id] = this._font.ref();\n    }\n\n    // begin the text object\n    this.addContent('BT');\n\n    // text position\n    this.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n\n    // font and font size\n    this.addContent(`/${this._font.id} ${number(this._fontSize)} Tf`);\n\n    // rendering mode\n    const mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;\n    if (mode) {\n      this.addContent(`${mode} Tr`);\n    }\n\n    // Character spacing\n    if (characterSpacing) {\n      this.addContent(`${number(characterSpacing)} Tc`);\n    }\n\n    // Horizontal scaling\n    if (horizontalScaling !== 100) {\n      this.addContent(`${horizontalScaling} Tz`);\n    }\n\n    // Add the actual text\n    // If we have a word spacing value, we need to encode each word separately\n    // since the normal Tw operator only works on character code 32, which isn't\n    // used for embedded fonts.\n    if (wordSpacing) {\n      words = text.trim().split(/\\s+/);\n      wordSpacing += this.widthOfString(' ') + characterSpacing;\n      wordSpacing *= 1000 / this._fontSize;\n\n      encoded = [];\n      positions = [];\n      for (let word of words) {\n        const [encodedWord, positionsWord] = this._font.encode(\n          word,\n          options.features,\n        );\n        encoded = encoded.concat(encodedWord);\n        positions = positions.concat(positionsWord);\n\n        // add the word spacing to the end of the word\n        // clone object because of cache\n        const space = {};\n        const object = positions[positions.length - 1];\n        for (let key in object) {\n          const val = object[key];\n          space[key] = val;\n        }\n        space.xAdvance += wordSpacing;\n        positions[positions.length - 1] = space;\n      }\n    } else {\n      [encoded, positions] = this._font.encode(text, options.features);\n    }\n\n    const scale = this._fontSize / 1000;\n    const commands = [];\n    let last = 0;\n    let hadOffset = false;\n\n    // Adds a segment of text to the TJ command buffer\n    const addSegment = (cur) => {\n      if (last < cur) {\n        const hex = encoded.slice(last, cur).join('');\n        const advance =\n          positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n        commands.push(`<${hex}> ${number(-advance)}`);\n      }\n\n      last = cur;\n    };\n\n    // Flushes the current TJ commands to the output stream\n    const flush = (i) => {\n      addSegment(i);\n\n      if (commands.length > 0) {\n        this.addContent(`[${commands.join(' ')}] TJ`);\n        commands.length = 0;\n      }\n    };\n\n    for (i = 0; i < positions.length; i++) {\n      // If we have an x or y offset, we have to break out of the current TJ command\n      // so we can move the text position.\n      const pos = positions[i];\n      if (pos.xOffset || pos.yOffset) {\n        // Flush the current buffer\n        flush(i);\n\n        // Move the text position and flush just the current character\n        this.addContent(\n          `1 0 0 1 ${number(x + pos.xOffset * scale)} ${number(\n            y + pos.yOffset * scale,\n          )} Tm`,\n        );\n        flush(i + 1);\n\n        hadOffset = true;\n      } else {\n        // If the last character had an offset, reset the text position\n        if (hadOffset) {\n          this.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n          hadOffset = false;\n        }\n\n        // Group segments that don't have any advance adjustments\n        if (pos.xAdvance - pos.advanceWidth !== 0) {\n          addSegment(i + 1);\n        }\n      }\n\n      x += pos.xAdvance * scale;\n    }\n\n    // Flush any remaining commands\n    flush(i);\n\n    // end the text object\n    this.addContent('ET');\n\n    // restore flipped coordinate system\n    this.restore();\n  },\n};\n","import exif from 'jpeg-exif';\n\nconst MARKERS = [\n  0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9,\n  0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf,\n];\n\nconst COLOR_SPACE_MAP = {\n  1: 'DeviceGray',\n  3: 'DeviceRGB',\n  4: 'DeviceCMYK',\n};\n\nclass JPEG {\n  constructor(data, label) {\n    let marker;\n    this.data = data;\n    this.label = label;\n    if (this.data.readUInt16BE(0) !== 0xffd8) {\n      throw 'SOI not found in JPEG';\n    }\n\n    // Parse the EXIF orientation\n    this.orientation = exif.fromBuffer(this.data).Orientation || 1;\n\n    let pos = 2;\n    while (pos < this.data.length) {\n      marker = this.data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += this.data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw 'Invalid JPEG.';\n    }\n    pos += 2;\n\n    this.bits = this.data[pos++];\n    this.height = this.data.readUInt16BE(pos);\n    pos += 2;\n\n    this.width = this.data.readUInt16BE(pos);\n    pos += 2;\n\n    const channels = this.data[pos++];\n    this.colorSpace = COLOR_SPACE_MAP[channels];\n\n    this.obj = null;\n  }\n\n  embed(document) {\n    if (this.obj) {\n      return;\n    }\n\n    this.obj = document.ref({\n      Type: 'XObject',\n      Subtype: 'Image',\n      BitsPerComponent: this.bits,\n      Width: this.width,\n      Height: this.height,\n      ColorSpace: this.colorSpace,\n      Filter: 'DCTDecode',\n    });\n\n    // add extra decode params for CMYK images. By swapping the\n    // min and max values from the default, we invert the colors. See\n    // section 4.8.4 of the spec.\n    if (this.colorSpace === 'DeviceCMYK') {\n      this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];\n    }\n\n    this.obj.end(this.data);\n\n    // free memory\n    return (this.data = null);\n  }\n}\n\nexport default JPEG;\n","import zlib from 'zlib';\nimport PNG from 'png-js';\n\nclass PNGImage {\n  constructor(data, label) {\n    this.label = label;\n    this.image = new PNG(data);\n    this.width = this.image.width;\n    this.height = this.image.height;\n    this.imgData = this.image.imgData;\n    this.obj = null;\n  }\n\n  embed(document) {\n    let dataDecoded = false;\n\n    this.document = document;\n    if (this.obj) {\n      return;\n    }\n\n    const hasAlphaChannel = this.image.hasAlphaChannel;\n    const isInterlaced = this.image.interlaceMethod === 1;\n\n    this.obj = this.document.ref({\n      Type: 'XObject',\n      Subtype: 'Image',\n      BitsPerComponent: hasAlphaChannel ? 8 : this.image.bits,\n      Width: this.width,\n      Height: this.height,\n      Filter: 'FlateDecode',\n    });\n\n    if (!hasAlphaChannel) {\n      const params = this.document.ref({\n        Predictor: isInterlaced ? 1 : 15,\n        Colors: this.image.colors,\n        BitsPerComponent: this.image.bits,\n        Columns: this.width,\n      });\n\n      this.obj.data['DecodeParms'] = params;\n      params.end();\n    }\n\n    if (this.image.palette.length === 0) {\n      this.obj.data['ColorSpace'] = this.image.colorSpace;\n    } else {\n      // embed the color palette in the PDF as an object stream\n      const palette = this.document.ref();\n      palette.end(Buffer.from(this.image.palette));\n\n      // build the color space array for the image\n      this.obj.data['ColorSpace'] = [\n        'Indexed',\n        'DeviceRGB',\n        this.image.palette.length / 3 - 1,\n        palette,\n      ];\n    }\n\n    // For PNG color types 0, 2 and 3, the transparency data is stored in\n    // a dedicated PNG chunk.\n    if (this.image.transparency.grayscale != null) {\n      // Use Color Key Masking (spec section 4.8.5)\n      // An array with N elements, where N is two times the number of color components.\n      const val = this.image.transparency.grayscale;\n      this.obj.data['Mask'] = [val, val];\n    } else if (this.image.transparency.rgb) {\n      // Use Color Key Masking (spec section 4.8.5)\n      // An array with N elements, where N is two times the number of color components.\n      const { rgb } = this.image.transparency;\n      const mask = [];\n      for (let x of rgb) {\n        mask.push(x, x);\n      }\n\n      this.obj.data['Mask'] = mask;\n    } else if (this.image.transparency.indexed) {\n      // Create a transparency SMask for the image based on the data\n      // in the PLTE and tRNS sections. See below for details on SMasks.\n      dataDecoded = true;\n      return this.loadIndexedAlphaChannel();\n    } else if (hasAlphaChannel) {\n      // For PNG color types 4 and 6, the transparency data is stored as a alpha\n      // channel mixed in with the main image data. Separate this data out into an\n      // SMask object and store it separately in the PDF.\n      dataDecoded = true;\n      return this.splitAlphaChannel();\n    }\n\n    if (isInterlaced && !dataDecoded) {\n      return this.decodeData();\n    }\n\n    this.finalize();\n  }\n\n  finalize() {\n    if (this.alphaChannel) {\n      const sMask = this.document.ref({\n        Type: 'XObject',\n        Subtype: 'Image',\n        Height: this.height,\n        Width: this.width,\n        BitsPerComponent: 8,\n        Filter: 'FlateDecode',\n        ColorSpace: 'DeviceGray',\n        Decode: [0, 1],\n      });\n\n      sMask.end(this.alphaChannel);\n      this.obj.data['SMask'] = sMask;\n    }\n\n    // add the actual image data\n    this.obj.end(this.imgData);\n\n    // free memory\n    this.image = null;\n    return (this.imgData = null);\n  }\n\n  splitAlphaChannel() {\n    return this.image.decodePixels((pixels) => {\n      let a, p;\n      const colorCount = this.image.colors;\n      const pixelCount = this.width * this.height;\n      const imgData = Buffer.alloc(pixelCount * colorCount);\n      const alphaChannel = Buffer.alloc(pixelCount);\n\n      let i = (p = a = 0);\n      const len = pixels.length;\n      // For 16bit images copy only most significant byte (MSB) - PNG data is always stored in network byte order (MSB first)\n      const skipByteCount = this.image.bits === 16 ? 1 : 0;\n      while (i < len) {\n        for (let colorIndex = 0; colorIndex < colorCount; colorIndex++) {\n          imgData[p++] = pixels[i++];\n          i += skipByteCount;\n        }\n        alphaChannel[a++] = pixels[i++];\n        i += skipByteCount;\n      }\n\n      this.imgData = zlib.deflateSync(imgData);\n      this.alphaChannel = zlib.deflateSync(alphaChannel);\n      return this.finalize();\n    });\n  }\n\n  loadIndexedAlphaChannel() {\n    const transparency = this.image.transparency.indexed;\n    return this.image.decodePixels((pixels) => {\n      const alphaChannel = Buffer.alloc(this.width * this.height);\n\n      let i = 0;\n      for (let j = 0, end = pixels.length; j < end; j++) {\n        alphaChannel[i++] = transparency[pixels[j]];\n      }\n\n      this.alphaChannel = zlib.deflateSync(alphaChannel);\n      return this.finalize();\n    });\n  }\n\n  decodeData() {\n    this.image.decodePixels((pixels) => {\n      this.imgData = zlib.deflateSync(pixels);\n      this.finalize();\n    });\n  }\n}\n\nexport default PNGImage;\n","/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n*/\n\nimport fs from 'fs';\nimport JPEG from './image/jpeg';\nimport PNG from './image/png';\n\nclass PDFImage {\n  static open(src, label) {\n    let data;\n    if (Buffer.isBuffer(src)) {\n      data = src;\n    } else if (src instanceof ArrayBuffer) {\n      data = Buffer.from(new Uint8Array(src));\n    } else {\n      let match;\n      if ((match = /^data:.+?;base64,(.*)$/.exec(src))) {\n        data = Buffer.from(match[1], 'base64');\n      } else {\n        data = fs.readFileSync(src);\n        if (!data) {\n          return;\n        }\n      }\n    }\n\n    if (data[0] === 0xff && data[1] === 0xd8) {\n      return new JPEG(data, label);\n    } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n      return new PNG(data, label);\n    } else {\n      throw new Error('Unknown image format.');\n    }\n  }\n}\n\nexport default PDFImage;\n","import PDFImage from '../image';\n\nexport default {\n  initImages() {\n    this._imageRegistry = {};\n    this._imageCount = 0;\n  },\n\n  image(src, x, y, options = {}) {\n    let bh, bp, bw, image, ip, left, left1, originX, originY;\n    if (typeof x === 'object') {\n      options = x;\n      x = null;\n    }\n\n    // Ignore orientation based on document options or image options\n    const ignoreOrientation =\n      options.ignoreOrientation ||\n      (options.ignoreOrientation !== false && this.options.ignoreOrientation);\n\n    const inDocumentFlow = typeof y !== 'number';\n\n    x = (left = x != null ? x : options.x) != null ? left : this.x;\n    y = (left1 = y != null ? y : options.y) != null ? left1 : this.y;\n\n    if (typeof src === 'string') {\n      image = this._imageRegistry[src];\n    }\n\n    if (!image) {\n      if (src.width && src.height) {\n        image = src;\n      } else {\n        image = this.openImage(src);\n      }\n    }\n\n    if (!image.obj) {\n      image.embed(this);\n    }\n\n    if (this.page.xobjects[image.label] == null) {\n      this.page.xobjects[image.label] = image.obj;\n    }\n\n    let { width, height } = image;\n\n    // If EXIF orientation calls for it, swap width and height\n    if (!ignoreOrientation && image.orientation > 4) {\n      [width, height] = [height, width];\n    }\n\n    let w = options.width || width;\n    let h = options.height || height;\n\n    if (options.width && !options.height) {\n      const wp = w / width;\n      w = width * wp;\n      h = height * wp;\n    } else if (options.height && !options.width) {\n      const hp = h / height;\n      w = width * hp;\n      h = height * hp;\n    } else if (options.scale) {\n      w = width * options.scale;\n      h = height * options.scale;\n    } else if (options.fit) {\n      [bw, bh] = options.fit;\n      bp = bw / bh;\n      ip = width / height;\n      if (ip > bp) {\n        w = bw;\n        h = bw / ip;\n      } else {\n        h = bh;\n        w = bh * ip;\n      }\n    } else if (options.cover) {\n      [bw, bh] = options.cover;\n      bp = bw / bh;\n      ip = width / height;\n      if (ip > bp) {\n        h = bh;\n        w = bh * ip;\n      } else {\n        w = bw;\n        h = bw / ip;\n      }\n    }\n\n    if (options.fit || options.cover) {\n      if (options.align === 'center') {\n        x = x + bw / 2 - w / 2;\n      } else if (options.align === 'right') {\n        x = x + bw - w;\n      }\n\n      if (options.valign === 'center') {\n        y = y + bh / 2 - h / 2;\n      } else if (options.valign === 'bottom') {\n        y = y + bh - h;\n      }\n    }\n\n    // need to flip image by default because of the default transform matrix on the document\n    let rotateAngle = 0;\n    let xTransform = x;\n    let yTransform = y;\n    let hTransform = h;\n    let wTransform = w;\n\n    if (!ignoreOrientation) {\n      switch (image.orientation) {\n        // No orientation (need to flip image, though, because of the default transform matrix on the document)\n        default:\n        case 1:\n          hTransform = -h;\n          yTransform += h;\n\n          break;\n        // Flip Horizontal\n        case 2:\n          wTransform = -w;\n          hTransform = -h;\n          xTransform += w;\n          yTransform += h;\n\n          break;\n        // Rotate 180 degrees\n        case 3:\n          originX = x;\n          originY = y;\n\n          hTransform = -h;\n          xTransform -= w;\n\n          rotateAngle = 180;\n          break;\n        // Flip vertical\n        case 4:\n          // Do nothing, image will be flipped\n\n          break;\n        // Flip horizontally and rotate 270 degrees CW\n        case 5:\n          originX = x;\n          originY = y;\n\n          wTransform = h;\n          hTransform = w;\n          yTransform -= hTransform;\n\n          rotateAngle = 90;\n          break;\n        // Rotate 90 degrees CW\n        case 6:\n          originX = x;\n          originY = y;\n\n          wTransform = h;\n          hTransform = -w;\n\n          rotateAngle = 90;\n          break;\n        // Flip horizontally and rotate 90 degrees CW\n        case 7:\n          originX = x;\n          originY = y;\n\n          hTransform = -w;\n          wTransform = -h;\n          xTransform += h;\n\n          rotateAngle = 90;\n          break;\n        // Rotate 270 degrees CW\n        case 8:\n          originX = x;\n          originY = y;\n\n          wTransform = h;\n          hTransform = -w;\n          xTransform -= h;\n          yTransform += w;\n\n          rotateAngle = -90;\n          break;\n      }\n    } else {\n      hTransform = -h;\n      yTransform += h;\n    }\n\n    // create link annotations if the link option is given\n    if (options.link != null) {\n      this.link(x, y, w, h, options.link);\n    }\n    if (options.goTo != null) {\n      this.goTo(x, y, w, h, options.goTo);\n    }\n    if (options.destination != null) {\n      this.addNamedDestination(options.destination, 'XYZ', x, y, null);\n    }\n\n    // Set the current y position to below the image if it is in the document flow\n    if (inDocumentFlow) {\n      this.y += h;\n    }\n\n    this.save();\n\n    if (rotateAngle) {\n      this.rotate(rotateAngle, {\n        origin: [originX, originY],\n      });\n    }\n\n    this.transform(wTransform, 0, 0, hTransform, xTransform, yTransform);\n    this.addContent(`/${image.label} Do`);\n    this.restore();\n\n    return this;\n  },\n\n  openImage(src) {\n    let image;\n    if (typeof src === 'string') {\n      image = this._imageRegistry[src];\n    }\n\n    if (!image) {\n      image = PDFImage.open(src, `I${++this._imageCount}`);\n      if (typeof src === 'string') {\n        this._imageRegistry[src] = image;\n      }\n    }\n\n    return image;\n  },\n};\n","export default {\n  annotate(x, y, w, h, options) {\n    options.Type = 'Annot';\n    options.Rect = this._convertRect(x, y, w, h);\n    options.Border = [0, 0, 0];\n\n    if (options.Subtype === 'Link' && typeof options.F === 'undefined') {\n      options.F = 1 << 2; // Print Annotation Flag\n    }\n\n    if (options.Subtype !== 'Link') {\n      if (options.C == null) {\n        options.C = this._normalizeColor(options.color || [0, 0, 0]);\n      }\n    } // convert colors\n    delete options.color;\n\n    if (typeof options.Dest === 'string') {\n      options.Dest = new String(options.Dest);\n    }\n\n    // Capitalize keys\n    for (let key in options) {\n      const val = options[key];\n      options[key[0].toUpperCase() + key.slice(1)] = val;\n    }\n\n    const ref = this.ref(options);\n    this.page.annotations.push(ref);\n    ref.end();\n    return this;\n  },\n\n  note(x, y, w, h, contents, options = {}) {\n    options.Subtype = 'Text';\n    options.Contents = new String(contents);\n    if (options.Name == null) {\n      options.Name = 'Comment';\n    }\n    if (options.color == null) {\n      options.color = [243, 223, 92];\n    }\n    return this.annotate(x, y, w, h, options);\n  },\n\n  goTo(x, y, w, h, name, options = {}) {\n    options.Subtype = 'Link';\n    options.A = this.ref({\n      S: 'GoTo',\n      D: new String(name),\n    });\n    options.A.end();\n    return this.annotate(x, y, w, h, options);\n  },\n\n  link(x, y, w, h, url, options = {}) {\n    options.Subtype = 'Link';\n\n    if (typeof url === 'number') {\n      // Link to a page in the document (the page must already exist)\n      const pages = this._root.data.Pages.data;\n      if (url >= 0 && url < pages.Kids.length) {\n        options.A = this.ref({\n          S: 'GoTo',\n          D: [pages.Kids[url], 'XYZ', null, null, null],\n        });\n        options.A.end();\n      } else {\n        throw new Error(`The document has no page ${url}`);\n      }\n    } else {\n      // Link to an external url\n      options.A = this.ref({\n        S: 'URI',\n        URI: new String(url),\n      });\n      options.A.end();\n    }\n\n    return this.annotate(x, y, w, h, options);\n  },\n\n  _markup(x, y, w, h, options = {}) {\n    const [x1, y1, x2, y2] = this._convertRect(x, y, w, h);\n    options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n\n  highlight(x, y, w, h, options = {}) {\n    options.Subtype = 'Highlight';\n    if (options.color == null) {\n      options.color = [241, 238, 148];\n    }\n    return this._markup(x, y, w, h, options);\n  },\n\n  underline(x, y, w, h, options = {}) {\n    options.Subtype = 'Underline';\n    return this._markup(x, y, w, h, options);\n  },\n\n  strike(x, y, w, h, options = {}) {\n    options.Subtype = 'StrikeOut';\n    return this._markup(x, y, w, h, options);\n  },\n\n  lineAnnotation(x1, y1, x2, y2, options = {}) {\n    options.Subtype = 'Line';\n    options.Contents = new String();\n    options.L = [x1, this.page.height - y1, x2, this.page.height - y2];\n    return this.annotate(x1, y1, x2, y2, options);\n  },\n\n  rectAnnotation(x, y, w, h, options = {}) {\n    options.Subtype = 'Square';\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n\n  ellipseAnnotation(x, y, w, h, options = {}) {\n    options.Subtype = 'Circle';\n    options.Contents = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n\n  textAnnotation(x, y, w, h, text, options = {}) {\n    options.Subtype = 'FreeText';\n    options.Contents = new String(text);\n    options.DA = new String();\n    return this.annotate(x, y, w, h, options);\n  },\n\n  fileAnnotation(x, y, w, h, file = {}, options = {}) {\n    // create hidden file\n    const filespec = this.file(file.src, Object.assign({ hidden: true }, file));\n\n    options.Subtype = 'FileAttachment';\n    options.FS = filespec;\n\n    // add description from filespec unless description (Contents) has already been set\n    if (options.Contents) {\n      options.Contents = new String(options.Contents);\n    } else if (filespec.data.Desc) {\n      options.Contents = filespec.data.Desc;\n    }\n\n    return this.annotate(x, y, w, h, options);\n  },\n\n  _convertRect(x1, y1, w, h) {\n    // flip y1 and y2\n    let y2 = y1;\n    y1 += h;\n\n    // make x2\n    let x2 = x1 + w;\n\n    // apply current transformation matrix to points\n    const [m0, m1, m2, m3, m4, m5] = this._ctm;\n    x1 = m0 * x1 + m2 * y1 + m4;\n    y1 = m1 * x1 + m3 * y1 + m5;\n    x2 = m0 * x2 + m2 * y2 + m4;\n    y2 = m1 * x2 + m3 * y2 + m5;\n\n    return [x1, y1, x2, y2];\n  },\n};\n","class PDFOutline {\n  constructor(document, parent, title, dest, options = { expanded: false }) {\n    this.document = document;\n    this.options = options;\n    this.outlineData = {};\n\n    if (dest !== null) {\n      this.outlineData['Dest'] = [dest.dictionary, 'Fit'];\n    }\n\n    if (parent !== null) {\n      this.outlineData['Parent'] = parent;\n    }\n\n    if (title !== null) {\n      this.outlineData['Title'] = new String(title);\n    }\n\n    this.dictionary = this.document.ref(this.outlineData);\n    this.children = [];\n  }\n\n  addItem(title, options = { expanded: false }) {\n    const result = new PDFOutline(\n      this.document,\n      this.dictionary,\n      title,\n      this.document.page,\n      options,\n    );\n    this.children.push(result);\n\n    return result;\n  }\n\n  endOutline() {\n    if (this.children.length > 0) {\n      if (this.options.expanded) {\n        this.outlineData.Count = this.children.length;\n      }\n\n      const first = this.children[0],\n        last = this.children[this.children.length - 1];\n      this.outlineData.First = first.dictionary;\n      this.outlineData.Last = last.dictionary;\n\n      for (let i = 0, len = this.children.length; i < len; i++) {\n        const child = this.children[i];\n        if (i > 0) {\n          child.outlineData.Prev = this.children[i - 1].dictionary;\n        }\n        if (i < this.children.length - 1) {\n          child.outlineData.Next = this.children[i + 1].dictionary;\n        }\n        child.endOutline();\n      }\n    }\n\n    return this.dictionary.end();\n  }\n}\n\nexport default PDFOutline;\n","import PDFOutline from '../outline';\n\nexport default {\n  initOutline() {\n    this.outline = new PDFOutline(this, null, null, null);\n  },\n\n  endOutline() {\n    this.outline.endOutline();\n    if (this.outline.children.length > 0) {\n      this._root.data.Outlines = this.outline.dictionary;\n      return (this._root.data.PageMode = 'UseOutlines');\n    }\n  },\n};\n","/*\nPDFStructureContent - a reference to a marked structure content\nBy Ben Schmidt\n*/\n\nclass PDFStructureContent {\n  constructor(pageRef, mcid) {\n    this.refs = [{ pageRef, mcid }];\n  }\n\n  push(structContent) {\n    structContent.refs.forEach((ref) => this.refs.push(ref));\n  }\n}\n\nexport default PDFStructureContent;\n","/*\nPDFStructureElement - represents an element in the PDF logical structure tree\nBy Ben Schmidt\n*/\n\nimport PDFStructureContent from './structure_content';\n\nclass PDFStructureElement {\n  constructor(document, type, options = {}, children = null) {\n    this.document = document;\n\n    this._attached = false;\n    this._ended = false;\n    this._flushed = false;\n    this.dictionary = document.ref({\n      // Type: \"StructElem\",\n      S: type,\n    });\n\n    const data = this.dictionary.data;\n\n    if (Array.isArray(options) || this._isValidChild(options)) {\n      children = options;\n      options = {};\n    }\n\n    if (typeof options.title !== 'undefined') {\n      data.T = new String(options.title);\n    }\n    if (typeof options.lang !== 'undefined') {\n      data.Lang = new String(options.lang);\n    }\n    if (typeof options.alt !== 'undefined') {\n      data.Alt = new String(options.alt);\n    }\n    if (typeof options.expanded !== 'undefined') {\n      data.E = new String(options.expanded);\n    }\n    if (typeof options.actual !== 'undefined') {\n      data.ActualText = new String(options.actual);\n    }\n\n    this._children = [];\n\n    if (children) {\n      if (!Array.isArray(children)) {\n        children = [children];\n      }\n      children.forEach((child) => this.add(child));\n      this.end();\n    }\n  }\n\n  add(child) {\n    if (this._ended) {\n      throw new Error(`Cannot add child to already-ended structure element`);\n    }\n\n    if (!this._isValidChild(child)) {\n      throw new Error(`Invalid structure element child`);\n    }\n\n    if (child instanceof PDFStructureElement) {\n      child.setParent(this.dictionary);\n      if (this._attached) {\n        child.setAttached();\n      }\n    }\n\n    if (child instanceof PDFStructureContent) {\n      this._addContentToParentTree(child);\n    }\n\n    if (typeof child === 'function' && this._attached) {\n      // _contentForClosure() adds the content to the parent tree\n      child = this._contentForClosure(child);\n    }\n\n    this._children.push(child);\n\n    return this;\n  }\n\n  _addContentToParentTree(content) {\n    content.refs.forEach(({ pageRef, mcid }) => {\n      const pageStructParents = this.document\n        .getStructParentTree()\n        .get(pageRef.data.StructParents);\n      pageStructParents[mcid] = this.dictionary;\n    });\n  }\n\n  setParent(parentRef) {\n    if (this.dictionary.data.P) {\n      throw new Error(`Structure element added to more than one parent`);\n    }\n\n    this.dictionary.data.P = parentRef;\n\n    this._flush();\n  }\n\n  setAttached() {\n    if (this._attached) {\n      return;\n    }\n\n    this._children.forEach((child, index) => {\n      if (child instanceof PDFStructureElement) {\n        child.setAttached();\n      }\n      if (typeof child === 'function') {\n        this._children[index] = this._contentForClosure(child);\n      }\n    });\n\n    this._attached = true;\n\n    this._flush();\n  }\n\n  end() {\n    if (this._ended) {\n      return;\n    }\n\n    this._children\n      .filter((child) => child instanceof PDFStructureElement)\n      .forEach((child) => child.end());\n\n    this._ended = true;\n\n    this._flush();\n  }\n\n  _isValidChild(child) {\n    return (\n      child instanceof PDFStructureElement ||\n      child instanceof PDFStructureContent ||\n      typeof child === 'function'\n    );\n  }\n\n  _contentForClosure(closure) {\n    const content = this.document.markStructureContent(this.dictionary.data.S);\n    closure();\n    this.document.endMarkedContent();\n\n    this._addContentToParentTree(content);\n\n    return content;\n  }\n\n  _isFlushable() {\n    if (!this.dictionary.data.P || !this._ended) {\n      return false;\n    }\n\n    return this._children.every((child) => {\n      if (typeof child === 'function') {\n        return false;\n      }\n      if (child instanceof PDFStructureElement) {\n        return child._isFlushable();\n      }\n      return true;\n    });\n  }\n\n  _flush() {\n    if (this._flushed || !this._isFlushable()) {\n      return;\n    }\n\n    this.dictionary.data.K = [];\n\n    this._children.forEach((child) => this._flushChild(child));\n\n    this.dictionary.end();\n\n    // free memory used by children; the dictionary itself may still be\n    // referenced by a parent structure element or root, but we can\n    // at least trim the tree here\n    this._children = [];\n    this.dictionary.data.K = null;\n\n    this._flushed = true;\n  }\n\n  _flushChild(child) {\n    if (child instanceof PDFStructureElement) {\n      this.dictionary.data.K.push(child.dictionary);\n    }\n\n    if (child instanceof PDFStructureContent) {\n      child.refs.forEach(({ pageRef, mcid }) => {\n        if (!this.dictionary.data.Pg) {\n          this.dictionary.data.Pg = pageRef;\n        }\n\n        if (this.dictionary.data.Pg === pageRef) {\n          this.dictionary.data.K.push(mcid);\n        } else {\n          this.dictionary.data.K.push({\n            Type: 'MCR',\n            Pg: pageRef,\n            MCID: mcid,\n          });\n        }\n      });\n    }\n  }\n}\n\nexport default PDFStructureElement;\n","/*\nPDFNumberTree - represents a number tree object\n*/\n\nimport PDFTree from './tree';\n\nclass PDFNumberTree extends PDFTree {\n  _compareKeys(a, b) {\n    return parseInt(a) - parseInt(b);\n  }\n\n  _keysName() {\n    return 'Nums';\n  }\n\n  _dataForKey(k) {\n    return parseInt(k);\n  }\n}\n\nexport default PDFNumberTree;\n","/*\nMarkings mixin - support marked content sequences in content streams\nBy Ben Schmidt\n*/\n\nimport PDFStructureElement from '../structure_element';\nimport PDFStructureContent from '../structure_content';\nimport PDFNumberTree from '../number_tree';\nimport PDFObject from '../object';\n\nexport default {\n  initMarkings(options) {\n    this.structChildren = [];\n\n    if (options.tagged) {\n      this.getMarkInfoDictionary().data.Marked = true;\n      this.getStructTreeRoot();\n    }\n  },\n\n  markContent(tag, options = null) {\n    if (tag === 'Artifact' || (options && options.mcid)) {\n      let toClose = 0;\n      this.page.markings.forEach((marking) => {\n        if (toClose || marking.structContent || marking.tag === 'Artifact') {\n          toClose++;\n        }\n      });\n      while (toClose--) {\n        this.endMarkedContent();\n      }\n    }\n\n    if (!options) {\n      this.page.markings.push({ tag });\n      this.addContent(`/${tag} BMC`);\n      return this;\n    }\n\n    this.page.markings.push({ tag, options });\n\n    const dictionary = {};\n\n    if (typeof options.mcid !== 'undefined') {\n      dictionary.MCID = options.mcid;\n    }\n    if (tag === 'Artifact') {\n      if (typeof options.type === 'string') {\n        dictionary.Type = options.type;\n      }\n      if (Array.isArray(options.bbox)) {\n        dictionary.BBox = [\n          options.bbox[0],\n          this.page.height - options.bbox[3],\n          options.bbox[2],\n          this.page.height - options.bbox[1],\n        ];\n      }\n      if (\n        Array.isArray(options.attached) &&\n        options.attached.every((val) => typeof val === 'string')\n      ) {\n        dictionary.Attached = options.attached;\n      }\n    }\n    if (tag === 'Span') {\n      if (options.lang) {\n        dictionary.Lang = new String(options.lang);\n      }\n      if (options.alt) {\n        dictionary.Alt = new String(options.alt);\n      }\n      if (options.expanded) {\n        dictionary.E = new String(options.expanded);\n      }\n      if (options.actual) {\n        dictionary.ActualText = new String(options.actual);\n      }\n    }\n\n    this.addContent(`/${tag} ${PDFObject.convert(dictionary)} BDC`);\n    return this;\n  },\n\n  markStructureContent(tag, options = {}) {\n    const pageStructParents = this.getStructParentTree().get(\n      this.page.structParentTreeKey,\n    );\n    const mcid = pageStructParents.length;\n    pageStructParents.push(null);\n\n    this.markContent(tag, { ...options, mcid });\n\n    const structContent = new PDFStructureContent(this.page.dictionary, mcid);\n    this.page.markings.slice(-1)[0].structContent = structContent;\n    return structContent;\n  },\n\n  endMarkedContent() {\n    this.page.markings.pop();\n    this.addContent('EMC');\n    return this;\n  },\n\n  struct(type, options = {}, children = null) {\n    return new PDFStructureElement(this, type, options, children);\n  },\n\n  addStructure(structElem) {\n    const structTreeRoot = this.getStructTreeRoot();\n    structElem.setParent(structTreeRoot);\n    structElem.setAttached();\n    this.structChildren.push(structElem);\n    if (!structTreeRoot.data.K) {\n      structTreeRoot.data.K = [];\n    }\n    structTreeRoot.data.K.push(structElem.dictionary);\n    return this;\n  },\n\n  initPageMarkings(pageMarkings) {\n    pageMarkings.forEach((marking) => {\n      if (marking.structContent) {\n        const structContent = marking.structContent;\n        const newStructContent = this.markStructureContent(\n          marking.tag,\n          marking.options,\n        );\n        structContent.push(newStructContent);\n        this.page.markings.slice(-1)[0].structContent = structContent;\n      } else {\n        this.markContent(marking.tag, marking.options);\n      }\n    });\n  },\n\n  endPageMarkings(page) {\n    const pageMarkings = page.markings;\n    pageMarkings.forEach(() => page.write('EMC'));\n    page.markings = [];\n    return pageMarkings;\n  },\n\n  getMarkInfoDictionary() {\n    if (!this._root.data.MarkInfo) {\n      this._root.data.MarkInfo = this.ref({});\n    }\n    return this._root.data.MarkInfo;\n  },\n\n  hasMarkInfoDictionary() {\n    return !!this._root.data.MarkInfo;\n  },\n\n  getStructTreeRoot() {\n    if (!this._root.data.StructTreeRoot) {\n      this._root.data.StructTreeRoot = this.ref({\n        Type: 'StructTreeRoot',\n        ParentTree: new PDFNumberTree(),\n        ParentTreeNextKey: 0,\n      });\n    }\n    return this._root.data.StructTreeRoot;\n  },\n\n  getStructParentTree() {\n    return this.getStructTreeRoot().data.ParentTree;\n  },\n\n  createStructParentTreeNextKey() {\n    // initialise the MarkInfo dictionary\n    this.getMarkInfoDictionary();\n\n    const structTreeRoot = this.getStructTreeRoot();\n    const key = structTreeRoot.data.ParentTreeNextKey++;\n    structTreeRoot.data.ParentTree.add(key, []);\n    return key;\n  },\n\n  endMarkings() {\n    const structTreeRoot = this._root.data.StructTreeRoot;\n    if (structTreeRoot) {\n      structTreeRoot.end();\n      this.structChildren.forEach((structElem) => structElem.end());\n    }\n    if (this._root.data.MarkInfo) {\n      this._root.data.MarkInfo.end();\n    }\n  },\n};\n","const FIELD_FLAGS = {\n  readOnly: 1,\n  required: 2,\n  noExport: 4,\n  multiline: 0x1000,\n  password: 0x2000,\n  toggleToOffButton: 0x4000,\n  radioButton: 0x8000,\n  pushButton: 0x10000,\n  combo: 0x20000,\n  edit: 0x40000,\n  sort: 0x80000,\n  multiSelect: 0x200000,\n  noSpell: 0x400000,\n};\nconst FIELD_JUSTIFY = {\n  left: 0,\n  center: 1,\n  right: 2,\n};\nconst VALUE_MAP = { value: 'V', defaultValue: 'DV' };\nconst FORMAT_SPECIAL = {\n  zip: '0',\n  zipPlus4: '1',\n  zip4: '1',\n  phone: '2',\n  ssn: '3',\n};\nconst FORMAT_DEFAULT = {\n  number: {\n    nDec: 0,\n    sepComma: false,\n    negStyle: 'MinusBlack',\n    currency: '',\n    currencyPrepend: true,\n  },\n  percent: {\n    nDec: 0,\n    sepComma: false,\n  },\n};\n\nexport default {\n  /**\n   * Must call if adding AcroForms to a document. Must also call font() before\n   * this method to set the default font.\n   */\n  initForm() {\n    if (!this._font) {\n      throw new Error('Must set a font before calling initForm method');\n    }\n    this._acroform = {\n      fonts: {},\n      defaultFont: this._font.name,\n    };\n    this._acroform.fonts[this._font.id] = this._font.ref();\n\n    let data = {\n      Fields: [],\n      NeedAppearances: true,\n      DA: new String(`/${this._font.id} 0 Tf 0 g`),\n      DR: {\n        Font: {},\n      },\n    };\n    data.DR.Font[this._font.id] = this._font.ref();\n    const AcroForm = this.ref(data);\n    this._root.data.AcroForm = AcroForm;\n    return this;\n  },\n\n  /**\n   * Called automatically by document.js\n   */\n  endAcroForm() {\n    if (this._root.data.AcroForm) {\n      if (\n        !Object.keys(this._acroform.fonts).length &&\n        !this._acroform.defaultFont\n      ) {\n        throw new Error('No fonts specified for PDF form');\n      }\n      let fontDict = this._root.data.AcroForm.data.DR.Font;\n      Object.keys(this._acroform.fonts).forEach((name) => {\n        fontDict[name] = this._acroform.fonts[name];\n      });\n      this._root.data.AcroForm.data.Fields.forEach((fieldRef) => {\n        this._endChild(fieldRef);\n      });\n      this._root.data.AcroForm.end();\n    }\n    return this;\n  },\n\n  _endChild(ref) {\n    if (Array.isArray(ref.data.Kids)) {\n      ref.data.Kids.forEach((childRef) => {\n        this._endChild(childRef);\n      });\n      ref.end();\n    }\n    return this;\n  },\n\n  /**\n   * Creates and adds a form field to the document. Form fields are intermediate\n   * nodes in a PDF form that are used to specify form name heirarchy and form\n   * value defaults.\n   * @param {string} name - field name (T attribute in field dictionary)\n   * @param {object} options  - other attributes to include in field dictionary\n   */\n  formField(name, options = {}) {\n    let fieldDict = this._fieldDict(name, null, options);\n    let fieldRef = this.ref(fieldDict);\n    this._addToParent(fieldRef);\n    return fieldRef;\n  },\n\n  /**\n   * Creates and adds a Form Annotation to the document. Form annotations are\n   * called Widget annotations internally within a PDF file.\n   * @param {string} name - form field name (T attribute of widget annotation\n   * dictionary)\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @param {object} options\n   */\n  formAnnotation(name, type, x, y, w, h, options = {}) {\n    let fieldDict = this._fieldDict(name, type, options);\n    fieldDict.Subtype = 'Widget';\n    if (fieldDict.F === undefined) {\n      fieldDict.F = 4; // print the annotation\n    }\n\n    // Add Field annot to page, and get it's ref\n    this.annotate(x, y, w, h, fieldDict);\n    let annotRef = this.page.annotations[this.page.annotations.length - 1];\n\n    return this._addToParent(annotRef);\n  },\n\n  formText(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'text', x, y, w, h, options);\n  },\n\n  formPushButton(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'pushButton', x, y, w, h, options);\n  },\n\n  formCombo(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'combo', x, y, w, h, options);\n  },\n\n  formList(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'list', x, y, w, h, options);\n  },\n\n  formRadioButton(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'radioButton', x, y, w, h, options);\n  },\n\n  formCheckbox(name, x, y, w, h, options = {}) {\n    return this.formAnnotation(name, 'checkbox', x, y, w, h, options);\n  },\n\n  _addToParent(fieldRef) {\n    let parent = fieldRef.data.Parent;\n    if (parent) {\n      if (!parent.data.Kids) {\n        parent.data.Kids = [];\n      }\n      parent.data.Kids.push(fieldRef);\n    } else {\n      this._root.data.AcroForm.data.Fields.push(fieldRef);\n    }\n    return this;\n  },\n\n  _fieldDict(name, type, options = {}) {\n    if (!this._acroform) {\n      throw new Error(\n        'Call document.initForm() method before adding form elements to document',\n      );\n    }\n    let opts = Object.assign({}, options);\n    if (type !== null) {\n      opts = this._resolveType(type, options);\n    }\n    opts = this._resolveFlags(opts);\n    opts = this._resolveJustify(opts);\n    opts = this._resolveFont(opts);\n    opts = this._resolveStrings(opts);\n    opts = this._resolveColors(opts);\n    opts = this._resolveFormat(opts);\n    opts.T = new String(name);\n    if (opts.parent) {\n      opts.Parent = opts.parent;\n      delete opts.parent;\n    }\n    return opts;\n  },\n\n  _resolveType(type, opts) {\n    if (type === 'text') {\n      opts.FT = 'Tx';\n    } else if (type === 'pushButton') {\n      opts.FT = 'Btn';\n      opts.pushButton = true;\n    } else if (type === 'radioButton') {\n      opts.FT = 'Btn';\n      opts.radioButton = true;\n    } else if (type === 'checkbox') {\n      opts.FT = 'Btn';\n    } else if (type === 'combo') {\n      opts.FT = 'Ch';\n      opts.combo = true;\n    } else if (type === 'list') {\n      opts.FT = 'Ch';\n    } else {\n      throw new Error(`Invalid form annotation type '${type}'`);\n    }\n    return opts;\n  },\n\n  _resolveFormat(opts) {\n    const f = opts.format;\n    if (f && f.type) {\n      let fnKeystroke;\n      let fnFormat;\n      let params = '';\n      if (FORMAT_SPECIAL[f.type] !== undefined) {\n        fnKeystroke = `AFSpecial_Keystroke`;\n        fnFormat = `AFSpecial_Format`;\n        params = FORMAT_SPECIAL[f.type];\n      } else {\n        let format = f.type.charAt(0).toUpperCase() + f.type.slice(1);\n        fnKeystroke = `AF${format}_Keystroke`;\n        fnFormat = `AF${format}_Format`;\n\n        if (f.type === 'date') {\n          fnKeystroke += 'Ex';\n          params = String(f.param);\n        } else if (f.type === 'time') {\n          params = String(f.param);\n        } else if (f.type === 'number') {\n          let p = Object.assign({}, FORMAT_DEFAULT.number, f);\n          params = String(\n            [\n              String(p.nDec),\n              p.sepComma ? '0' : '1',\n              '\"' + p.negStyle + '\"',\n              'null',\n              '\"' + p.currency + '\"',\n              String(p.currencyPrepend),\n            ].join(','),\n          );\n        } else if (f.type === 'percent') {\n          let p = Object.assign({}, FORMAT_DEFAULT.percent, f);\n          params = String([String(p.nDec), p.sepComma ? '0' : '1'].join(','));\n        }\n      }\n      opts.AA = opts.AA ? opts.AA : {};\n      opts.AA.K = {\n        S: 'JavaScript',\n        JS: new String(`${fnKeystroke}(${params});`),\n      };\n      opts.AA.F = {\n        S: 'JavaScript',\n        JS: new String(`${fnFormat}(${params});`),\n      };\n    }\n    delete opts.format;\n    return opts;\n  },\n\n  _resolveColors(opts) {\n    let color = this._normalizeColor(opts.backgroundColor);\n    if (color) {\n      if (!opts.MK) {\n        opts.MK = {};\n      }\n      opts.MK.BG = color;\n    }\n    color = this._normalizeColor(opts.borderColor);\n    if (color) {\n      if (!opts.MK) {\n        opts.MK = {};\n      }\n      opts.MK.BC = color;\n    }\n    delete opts.backgroundColor;\n    delete opts.borderColor;\n    return opts;\n  },\n\n  _resolveFlags(options) {\n    let result = 0;\n    Object.keys(options).forEach((key) => {\n      if (FIELD_FLAGS[key]) {\n        if (options[key]) {\n          result |= FIELD_FLAGS[key];\n        }\n        delete options[key];\n      }\n    });\n    if (result !== 0) {\n      options.Ff = options.Ff ? options.Ff : 0;\n      options.Ff |= result;\n    }\n    return options;\n  },\n\n  _resolveJustify(options) {\n    let result = 0;\n    if (options.align !== undefined) {\n      if (typeof FIELD_JUSTIFY[options.align] === 'number') {\n        result = FIELD_JUSTIFY[options.align];\n      }\n      delete options.align;\n    }\n    if (result !== 0) {\n      options.Q = result; // default\n    }\n    return options;\n  },\n\n  _resolveFont(options) {\n    // add current font to document-level AcroForm dict if necessary\n    if (this._acroform.fonts[this._font.id] == null) {\n      this._acroform.fonts[this._font.id] = this._font.ref();\n    }\n\n    // add current font to field's resource dict (RD) if not the default acroform font\n    if (this._acroform.defaultFont !== this._font.name) {\n      options.DR = { Font: {} };\n\n      // Get the fontSize option. If not set use auto sizing\n      const fontSize = options.fontSize || 0;\n\n      options.DR.Font[this._font.id] = this._font.ref();\n      options.DA = new String(`/${this._font.id} ${fontSize} Tf 0 g`);\n    }\n    return options;\n  },\n\n  _resolveStrings(options) {\n    let select = [];\n    function appendChoices(a) {\n      if (Array.isArray(a)) {\n        for (let idx = 0; idx < a.length; idx++) {\n          if (typeof a[idx] === 'string') {\n            select.push(new String(a[idx]));\n          } else {\n            select.push(a[idx]);\n          }\n        }\n      }\n    }\n    appendChoices(options.Opt);\n    if (options.select) {\n      appendChoices(options.select);\n      delete options.select;\n    }\n    if (select.length) {\n      options.Opt = select;\n    }\n\n    Object.keys(VALUE_MAP).forEach((key) => {\n      if (options[key] !== undefined) {\n        options[VALUE_MAP[key]] = options[key];\n        delete options[key];\n      }\n    });\n    ['V', 'DV'].forEach((key) => {\n      if (typeof options[key] === 'string') {\n        options[key] = new String(options[key]);\n      }\n    });\n\n    if (options.MK && options.MK.CA) {\n      options.MK.CA = new String(options.MK.CA);\n    }\n    if (options.label) {\n      options.MK = options.MK ? options.MK : {};\n      options.MK.CA = new String(options.label);\n      delete options.label;\n    }\n    return options;\n  },\n};\n","import fs from 'fs';\nimport CryptoJS from 'crypto-js';\n\nexport default {\n  /**\n   * Embed contents of `src` in PDF\n   * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file\n   * @param {object} options\n   *  * options.name: filename to be shown in PDF, will use `src` if none set\n   *  * options.type: filetype to be shown in PDF\n   *  * options.description: description to be shown in PDF\n   *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations\n   *  * options.creationDate: override creation date\n   *  * options.modifiedDate: override modified date\n   *  * options.relationship: Relationship between the PDF document and its attached file. Can be 'Alternative', 'Data', 'Source', 'Supplement' or 'Unspecified'.\n   * @returns filespec reference\n   */\n  file(src, options = {}) {\n    options.name = options.name || src;\n    options.relationship = options.relationship || 'Unspecified';\n\n    const refBody = {\n      Type: 'EmbeddedFile',\n      Params: {},\n    };\n    let data;\n\n    if (!src) {\n      throw new Error('No src specified');\n    }\n    if (Buffer.isBuffer(src)) {\n      data = src;\n    } else if (src instanceof ArrayBuffer) {\n      data = Buffer.from(new Uint8Array(src));\n    } else {\n      let match;\n      if ((match = /^data:(.*?);base64,(.*)$/.exec(src))) {\n        if (match[1]) {\n          refBody.Subtype = match[1].replace('/', '#2F');\n        }\n        data = Buffer.from(match[2], 'base64');\n      } else {\n        data = fs.readFileSync(src);\n        if (!data) {\n          throw new Error(`Could not read contents of file at filepath ${src}`);\n        }\n\n        // update CreationDate and ModDate\n        const { birthtime, ctime } = fs.statSync(src);\n        refBody.Params.CreationDate = birthtime;\n        refBody.Params.ModDate = ctime;\n      }\n    }\n\n    // override creation date and modified date\n    if (options.creationDate instanceof Date) {\n      refBody.Params.CreationDate = options.creationDate;\n    }\n    if (options.modifiedDate instanceof Date) {\n      refBody.Params.ModDate = options.modifiedDate;\n    }\n    // add optional subtype\n    if (options.type) {\n      refBody.Subtype = options.type.replace('/', '#2F');\n    }\n\n    // add checksum and size information\n    const checksum = CryptoJS.MD5(\n      CryptoJS.lib.WordArray.create(new Uint8Array(data)),\n    );\n    refBody.Params.CheckSum = new String(checksum);\n    refBody.Params.Size = data.byteLength;\n\n    // save some space when embedding the same file again\n    // if a file with the same name and metadata exists, reuse its reference\n    let ref;\n    if (!this._fileRegistry) this._fileRegistry = {};\n    let file = this._fileRegistry[options.name];\n    if (file && isEqual(refBody, file)) {\n      ref = file.ref;\n    } else {\n      ref = this.ref(refBody);\n      ref.end(data);\n\n      this._fileRegistry[options.name] = { ...refBody, ref };\n    }\n    // add filespec for embedded file\n    const fileSpecBody = {\n      Type: 'Filespec',\n      AFRelationship: options.relationship,\n      F: new String(options.name),\n      EF: { F: ref },\n      UF: new String(options.name),\n    };\n    if (options.description) {\n      fileSpecBody.Desc = new String(options.description);\n    }\n    const filespec = this.ref(fileSpecBody);\n    filespec.end();\n\n    if (!options.hidden) {\n      this.addNamedEmbeddedFile(options.name, filespec);\n    }\n\n    // Add file to the catalogue to be PDF/A3 compliant\n    if (this._root.data.AF) {\n      this._root.data.AF.push(filespec);\n    } else {\n      this._root.data.AF = [filespec];\n    }\n\n    return filespec;\n  },\n};\n\n/** check two embedded file metadata objects for equality */\nfunction isEqual(a, b) {\n  return (\n    a.Subtype === b.Subtype &&\n    a.Params.CheckSum.toString() === b.Params.CheckSum.toString() &&\n    a.Params.Size === b.Params.Size &&\n    a.Params.CreationDate.getTime() === b.Params.CreationDate.getTime() &&\n    ((a.Params.ModDate === undefined && b.Params.ModDate === undefined) ||\n      a.Params.ModDate.getTime() === b.Params.ModDate.getTime())\n  );\n}\n","import fs from 'fs';\n\nexport default {\n  initPDFA(pSubset) {\n    if (pSubset.charAt(pSubset.length - 3) === '-') {\n      this.subset_conformance = pSubset\n        .charAt(pSubset.length - 1)\n        .toUpperCase();\n      this.subset = parseInt(pSubset.charAt(pSubset.length - 2));\n    } else {\n      // Default to Basic conformance when user doesn't specify\n      this.subset_conformance = 'B';\n      this.subset = parseInt(pSubset.charAt(pSubset.length - 1));\n    }\n  },\n\n  endSubset() {\n    this._addPdfaMetadata();\n    this._addColorOutputIntent();\n  },\n\n  _addColorOutputIntent() {\n    const iccProfile = fs.readFileSync(\n      `${__dirname}/data/sRGB_IEC61966_2_1.icc`,\n    );\n\n    const colorProfileRef = this.ref({\n      Length: iccProfile.length,\n      N: 3,\n    });\n    colorProfileRef.write(iccProfile);\n    colorProfileRef.end();\n\n    const intentRef = this.ref({\n      Type: 'OutputIntent',\n      S: 'GTS_PDFA1',\n      Info: new String('sRGB IEC61966-2.1'),\n      OutputConditionIdentifier: new String('sRGB IEC61966-2.1'),\n      DestOutputProfile: colorProfileRef,\n    });\n    intentRef.end();\n\n    this._root.data.OutputIntents = [intentRef];\n  },\n\n  _getPdfaid() {\n    return `\n        <rdf:Description xmlns:pdfaid=\"http://www.aiim.org/pdfa/ns/id/\" rdf:about=\"\">\n            <pdfaid:part>${this.subset}</pdfaid:part>\n            <pdfaid:conformance>${this.subset_conformance}</pdfaid:conformance>\n        </rdf:Description>\n        `;\n  },\n\n  _addPdfaMetadata() {\n    this.appendXML(this._getPdfaid());\n  },\n};\n","export default {\n  initPDFUA() {\n    this.subset = 1;\n  },\n\n  endSubset() {\n    this._addPdfuaMetadata();\n  },\n\n  _addPdfuaMetadata() {\n    this.appendXML(this._getPdfuaid());\n  },\n\n  _getPdfuaid() {\n    return `\n        <rdf:Description xmlns:pdfuaid=\"http://www.aiim.org/pdfua/ns/id/\" rdf:about=\"\">\n            <pdfuaid:part>${this.subset}</pdfuaid:part>\n        </rdf:Description>\n        `;\n  },\n};\n","import PDFA from './pdfa';\nimport PDFUA from './pdfua';\n\nexport default {\n  _importSubset(subset) {\n    Object.assign(this, subset);\n  },\n\n  initSubset(options) {\n    switch (options.subset) {\n      case 'PDF/A-1':\n      case 'PDF/A-1a':\n      case 'PDF/A-1b':\n      case 'PDF/A-2':\n      case 'PDF/A-2a':\n      case 'PDF/A-2b':\n      case 'PDF/A-3':\n      case 'PDF/A-3a':\n      case 'PDF/A-3b':\n        this._importSubset(PDFA);\n        this.initPDFA(options.subset);\n        break;\n      case 'PDF/UA':\n        this._importSubset(PDFUA);\n        this.initPDFUA();\n        break;\n    }\n  },\n};\n","/**\n * @template T\n * @typedef {function(number): T} Dynamic<T | undefined>\n */\n\n/**\n * @typedef {Object} Font\n * @property {PDFFontSource} [src]\n * The name of the font\n *\n * Defaults to the current document font source `doc._fontSrc`\n * @property {string} [family]\n * The font family of the font\n *\n * Defaults to the current document font family `doc._fontFamily`\n * @property {Size} [size]\n * The size of the font\n *\n * Defaults to the current document font size `doc._fontSize`\n */\n\n/**\n * Measurement of how wide something is, false means 0 and true means 1\n *\n * @typedef {Size | boolean} Wideness\n */\n\n/**\n * The value of the text of a cell\n * @typedef {string | null | undefined} TableCellText\n */\n\n/** @typedef {Object} TableCellStyle\n *\n * @property {TableCellText} [text]\n * The text of the table cell\n * @property {number} [rowSpan]\n * Number of rows the cell spans.\n *\n * Defaults to `1`.\n * @property {number} [colSpan]\n * Number of columns the cell spans.\n *\n * Defaults to `1`.\n * @property {SideDefinition<Wideness>} [padding]\n * Controls the padding of the cell text\n *\n * Defaults to `0.25em`\n * @property {SideDefinition<Wideness>} [border]\n * Controls the thickness of the cells borders.\n *\n * Defaults to `[1, 1, 1, 1]`.\n * @property {SideDefinition<PDFColor>} [borderColor]\n * Color of the border on each side of the cell.\n *\n * Defaults to the border color defined by the given table layout, or `black` on all sides.\n * @property {Font} [font]\n * Font options for the cell\n *\n * Defaults to the documents current font\n * @property {PDFColor} [backgroundColor]\n * Set the background color of the cell\n *\n * Defaults to transparent\n * @property {'center' | ExpandedAlign} [align]\n * Sets the text alignment of the cells text\n *\n * Defaults to `{x: 'left', y: 'top'}`\n * @property {Size} [textStroke]\n * Sets the text stroke width of the cells text\n *\n * Defaults to `0`\n * @property {PDFColor} [textStrokeColor]\n * Sets the text stroke color of the cells text\n *\n * Defaults to `black`\n * @property {PDFColor} [textColor]\n * Sets the text color of the cells text\n *\n * Defaults to `black`\n * @property {'TH' | 'TD'} [type]\n * Sets the cell type (for accessibility)\n *\n * Defaults to `TD`\n * @property {Object} [textOptions]\n * Sets any advanced text options passed into the cell renderer\n *\n * Same as the options you pass to `doc.text()`\n *\n * Will override any defaults set by the cell if set\n * @property {string} [title]\n * Sets the accessible title for the cell\n * @property {'Column' | 'Row' | 'Both'} [scope]\n * Sets the accessible scope for the cell\n * @property {string} [id]\n * Sets the accessible id for the cell\n *\n * Defaults to `<tableId>-<rowIndex>-<colIndex>`\n * @property {boolean} [debug]\n * Whether to show the debug lines for the cell\n *\n * Defaults to `false`\n */\n/** @typedef {TableCellText | TableCellStyle} TableCell **/\n\n/**\n * The width of the column\n *\n * - `*` distributes equally, filling the whole available space\n * - `%` computes the proportion of the max size\n *\n * Defaults to `*`\n * @typedef {Size | '*'} ColumnWidth\n */\n\n/**\n * @typedef {Object} ColumnStyle\n * @extends TableCellStyle\n *\n * @property {ColumnWidth} [width]\n * @property {Size} [minWidth]\n * The minimum width of the column\n *\n * Defaults to `0`\n * @property {Size} [maxWidth]\n * The maximum width of the column\n *\n * Defaults to `undefined` meaning no max\n */\n/** @typedef {ColumnStyle | ColumnWidth} Column **/\n\n/**\n * @typedef {Object} NormalizedColumnStyle\n * @extends ColumnStyle\n *\n * @property {number | '*'} width\n * @property {number} minWidth\n * @property {number} maxWidth\n */\n\n/**\n * The height of the row\n *\n * - A fixed value sets an absolute height for every row.\n * - `auto` sets the height based on the text.\n *\n * `%` values are based on page content height\n *\n * Defaults to `auto`\n * @typedef {Size | 'auto'} RowHeight\n */\n\n/**\n * @typedef {Object} RowStyle\n * @extends TableCellStyle\n *\n * @property {RowHeight} [height]\n * @property {Size} [minHeight]\n * The minimum height of the row\n *\n * `%` values are based on page content height\n *\n * Defaults to `0`\n * @property {Size} [maxHeight]\n * The maximum height of the row\n *\n * `%` values are based on page content height\n *\n * Defaults to `undefined` meaning no max\n */\n/** @typedef {RowStyle | RowHeight} Row **/\n\n/**\n * @typedef {Object} NormalizedRowStyle\n * @extends RowStyle\n *\n * @property {number | 'auto'} height\n * @property {number} minHeight\n * @property {number} maxHeight\n */\n\n/** @typedef {'left' | 'center' | 'right' | 'justify'} AlignX **/\n/** @typedef {'top' | 'center' | 'bottom'} AlignY **/\n/**\n * @typedef {Object} ExpandedAlign\n * @property {AlignX} [x]\n * @property {AlignY} [y]\n */\n\n/**\n * @typedef {Object} DefaultTableCellStyle\n *\n * @extends ColumnStyle\n * @extends RowStyle\n * @extends TableCellStyle\n */\n/** @typedef {TableCellText | DefaultTableCellStyle} DefaultTableCell **/\n\n/**\n * @typedef {Object} NormalizedDefaultTableCellStyle\n *\n * @extends NormalizedColumnStyle\n * @extends NormalizedRowStyle\n * @extends TableCellStyle\n */\n\n/**\n * @typedef {Object} NormalizedTableCellStyle\n *\n * @extends NormalizedColumnStyle\n * @extends NormalizedRowStyle\n * @extends TableCellStyle\n *\n * @property {number} rowIndex\n * @property {number} rowSpan\n * @property {number} colIndex\n * @property {number} colSpan\n *\n * @property {string} text\n * @property {Font} font\n * @property {boolean} customFont\n * @property {ExpandedSideDefinition<number>} padding\n * @property {ExpandedSideDefinition<number>} border\n * @property {ExpandedSideDefinition<PDFColor>} borderColor\n * @property {ExpandedAlign} align\n * @property {number} textStroke\n * @property {PDFColor} textStrokeColor\n * @property {PDFColor} textColor\n * @property {number} minWidth\n * @property {number} maxWidth\n * @property {number} minHeight\n * @property {number} maxHeight\n * @property {Object} textOptions\n */\n\n/**\n * @typedef {Object} SizedNormalizedTableCellStyle\n *\n * @extends {NormalizedTableCellStyle}\n *\n * @property {number} x\n * @property {number} y\n * @property {number} textX\n * @property {number} textY\n * @property {number} width\n * @property {number} height\n * @property {number} textAllocatedWidth\n * @property {number} textAllocatedHeight\n * @property {{x: number, y: number, width: number, height: number}} textBounds\n */\n\n/**\n * @typedef {Object} Table\n *\n * @property {Position} [position]\n * The position of the table\n *\n * Defaults to the current document position `{x: doc.x, y: doc.y}`\n * @property {Size} [maxWidth]\n * The maximum width the table can expand to\n *\n * Defaults to the remaining content width (offset from the tables position)\n * @property {Column | Column[] | Dynamic<Column>} [columnStyles]\n * Column definitions of the table.\n * - A fixed value sets the config for every column\n * - Use an array or a callback function to control the column config for each column individually.\n *\n * Defaults to `auto`\n * @property {Row | Row[] | Dynamic<Row>} [rowStyles]\n * Row definitions of the table.\n * - A fixed value sets the config for every column\n * - Use an array or a callback function to control the row config of each row individually.\n *\n * The given values are ignored for rows whose text is higher.\n *\n * Defaults to `*`.\n * @property {DefaultTableCell} [defaultStyle]\n * Defaults to apply to every cell\n * @property {Iterable<Iterable<TableCell>>} [data]\n * Two-dimensional iterable that defines the table's data.\n *\n * With the first dimension being the row, and the second being the column\n *\n * If provided the table will be automatically ended after the last row has been written,\n * Otherwise it is up to the user to call `table.end()` or `table.row([], true)`\n * @property {PDFStructureElement} [structParent]\n * The parent structure to mount to\n *\n * This will cause the entire table to be enclosed in a Table structure\n * with TR and TD/TH for cells\n * @property {string} [id]\n * Sets the accessible id for the table\n *\n * Defaults to `table-<number>`\n * @property {boolean} [debug]\n * Whether to show the debug lines for all the cells\n *\n * Defaults to `false`\n */\n\n/**\n * Fields exclusive to row styles\n * @type {string[]}\n */\nexport const ROW_FIELDS = ['height', 'minHeight', 'maxHeight'];\n/**\n * Fields exclusive to column styles\n * @type {string[]}\n */\nexport const COLUMN_FIELDS = ['width', 'minWidth', 'maxWidth'];\n\nexport function memoize(fn, maxSize) {\n  const cache = new Map();\n  return function (...args) {\n    const key = args[0];\n    if (!cache.has(key)) {\n      cache.set(key, fn(...args));\n      if (cache.size > maxSize) cache.delete(cache.keys().next());\n    }\n    return cache.get(key);\n  };\n}\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * Deep merge two objects.\n *\n * @template T\n * @param {T} target\n * @param sources\n * @returns {T}\n */\nexport function deepMerge(target, ...sources) {\n  if (!isObject(target)) return target;\n  target = deepClone(target);\n\n  for (const source of sources) {\n    if (isObject(source)) {\n      for (const key in source) {\n        if (isObject(source[key])) {\n          if (!(key in target)) target[key] = {};\n          target[key] = deepMerge(target[key], source[key]);\n        } else if (source[key] !== undefined) {\n          target[key] = deepClone(source[key]);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction deepClone(obj) {\n  let result = obj;\n  if (typeof obj == 'object') {\n    result = Array.isArray(obj) ? [] : {};\n    for (const key in obj) result[key] = deepClone(obj[key]);\n  }\n  return result;\n}\n","import { COLUMN_FIELDS, deepMerge, ROW_FIELDS } from './utils';\nimport { normalizeSides } from '../utils';\n\n/**\n * Normalize the row config\n * @note The context here is the cell not the document\n *\n * @param {DefaultTableCell} [defaultStyleInternal]\n * @returns {{\n *  defaultStyle: TableCellStyle,\n *  defaultRowStyle: RowStyle,\n *  defaultColStyle: ColumnStyle\n * }}\n * @private\n */\nexport function normalizedDefaultStyle(defaultStyleInternal) {\n  let defaultStyle = defaultStyleInternal;\n  // Force object form\n  if (typeof defaultStyle !== 'object') defaultStyle = { text: defaultStyle };\n\n  const defaultRowStyle = Object.fromEntries(\n    Object.entries(defaultStyle).filter(([k]) => ROW_FIELDS.includes(k)),\n  );\n  const defaultColStyle = Object.fromEntries(\n    Object.entries(defaultStyle).filter(([k]) => COLUMN_FIELDS.includes(k)),\n  );\n\n  defaultStyle.padding = normalizeSides(defaultStyle.padding);\n  defaultStyle.border = normalizeSides(defaultStyle.border);\n  defaultStyle.borderColor = normalizeSides(defaultStyle.borderColor);\n  defaultStyle.align = normalizeAlignment(defaultStyle.align);\n\n  return { defaultStyle, defaultRowStyle, defaultColStyle };\n}\n\n/**\n * Normalize the row config\n *\n * @note The context here is the cell not the document\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {RowStyle} defaultRowStyle\n * @param {Dynamic<Row>} rowStyleInternal\n * @param {number} i The target row\n * @returns {NormalizedRowStyle}\n * @private\n */\nexport function normalizedRowStyle(defaultRowStyle, rowStyleInternal, i) {\n  let rowStyle = rowStyleInternal(i);\n  // Force object form\n  if (rowStyle == null || typeof rowStyle !== 'object') {\n    rowStyle = { height: rowStyle };\n  }\n  // Normalize\n  rowStyle.padding = normalizeSides(rowStyle.padding);\n  rowStyle.border = normalizeSides(rowStyle.border);\n  rowStyle.borderColor = normalizeSides(rowStyle.borderColor);\n  rowStyle.align = normalizeAlignment(rowStyle.align);\n\n  // Merge defaults\n  rowStyle = deepMerge(defaultRowStyle, rowStyle);\n\n  const document = this.document;\n  const page = document.page;\n  const contentHeight = page.contentHeight;\n\n  if (rowStyle.height == null || rowStyle.height === 'auto') {\n    rowStyle.height = 'auto';\n  } else {\n    rowStyle.height = document.sizeToPoint(\n      rowStyle.height,\n      0,\n      page,\n      contentHeight,\n    );\n  }\n  rowStyle.minHeight = document.sizeToPoint(\n    rowStyle.minHeight,\n    0,\n    page,\n    contentHeight,\n  );\n  rowStyle.maxHeight = document.sizeToPoint(\n    rowStyle.maxHeight,\n    0,\n    page,\n    contentHeight,\n  );\n\n  return rowStyle;\n}\n\n/**\n * Normalize the column config\n *\n * @note The context here is the document not the cell\n *\n * @param {ColumnStyle} defaultColStyle\n * @param {Dynamic<Column>} colStyleInternal\n * @param {number} i - The target column\n * @returns {NormalizedColumnStyle}\n * @private\n */\nexport function normalizedColumnStyle(defaultColStyle, colStyleInternal, i) {\n  let colStyle = colStyleInternal(i);\n  // Force object form\n  if (colStyle == null || typeof colStyle !== 'object') {\n    colStyle = { width: colStyle };\n  }\n  // Normalize\n  colStyle.padding = normalizeSides(colStyle.padding);\n  colStyle.border = normalizeSides(colStyle.border);\n  colStyle.borderColor = normalizeSides(colStyle.borderColor);\n  colStyle.align = normalizeAlignment(colStyle.align);\n\n  // Merge defaults\n  colStyle = deepMerge(defaultColStyle, colStyle);\n\n  if (colStyle.width == null || colStyle.width === '*') {\n    colStyle.width = '*';\n  } else {\n    colStyle.width = this.document.sizeToPoint(\n      colStyle.width,\n      0,\n      this.document.page,\n      this._maxWidth, // Use table width here for percentage scaling\n    );\n  }\n  colStyle.minWidth = this.document.sizeToPoint(\n    colStyle.minWidth,\n    0,\n    this.document.page,\n    this._maxWidth, // Use table width here for percentage scaling\n  );\n  colStyle.maxWidth = this.document.sizeToPoint(\n    colStyle.maxWidth,\n    0,\n    this.document.page,\n    this._maxWidth, // Use table width here for percentage scaling\n  );\n\n  return colStyle;\n}\n\nexport function normalizeAlignment(align) {\n  return align == null || typeof align === 'string'\n    ? { x: align, y: align }\n    : align;\n}\n","import { deepMerge, memoize } from './utils';\nimport {\n  normalizeAlignment,\n  normalizedColumnStyle,\n  normalizedDefaultStyle,\n  normalizedRowStyle,\n} from './style';\nimport { normalizeSides } from '../utils';\n\n/**\n * Normalize a table\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @private\n */\nexport function normalizeTable() {\n  const doc = this.document;\n  const opts = this.opts;\n\n  // Normalize config\n  let index = doc._tableIndex++;\n  this._id = new String(opts.id ?? `table-${index}`);\n  this._position = {\n    x: doc.sizeToPoint(opts.position?.x, doc.x),\n    y: doc.sizeToPoint(opts.position?.y, doc.y),\n  };\n  this._maxWidth = doc.sizeToPoint(\n    opts.maxWidth,\n    doc.page.width - doc.page.margins.right - this._position.x,\n  );\n\n  const { defaultStyle, defaultColStyle, defaultRowStyle } =\n    normalizedDefaultStyle(opts.defaultStyle);\n  this._defaultStyle = defaultStyle;\n\n  let colStyle;\n  if (opts.columnStyles) {\n    if (Array.isArray(opts.columnStyles)) {\n      colStyle = (i) => opts.columnStyles[i];\n    } else if (typeof opts.columnStyles === 'function') {\n      // memoize all columns\n      colStyle = memoize((i) => opts.columnStyles(i), Infinity);\n    } else if (typeof opts.columnStyles === 'object') {\n      colStyle = () => opts.columnStyles;\n    }\n  }\n  if (!colStyle) colStyle = () => ({});\n  this._colStyle = normalizedColumnStyle.bind(this, defaultColStyle, colStyle);\n\n  let rowStyle;\n  if (opts.rowStyles) {\n    if (Array.isArray(opts.rowStyles)) {\n      rowStyle = (i) => opts.rowStyles[i];\n    } else if (typeof opts.rowStyles === 'function') {\n      // Memoize the row configs in a rolling buffer\n      rowStyle = memoize((i) => opts.rowStyles(i), 10);\n    } else if (typeof opts.rowStyles === 'object') {\n      rowStyle = () => opts.rowStyles;\n    }\n  }\n  if (!rowStyle) rowStyle = () => ({});\n  this._rowStyle = normalizedRowStyle.bind(this, defaultRowStyle, rowStyle);\n}\n\n/**\n * Convert text into a string\n * - null and undefined are preserved (as they will be ignored)\n * - everything else is run through `String()`\n *\n * @param {*} text\n * @returns {string}\n * @private\n */\nexport function normalizeText(text) {\n  // Parse out text\n  if (text != null) text = `${text}`;\n  return text;\n}\n\n/**\n * Normalize a cell config\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {TableCellStyle} cell - The cell to mutate\n * @param {number} rowIndex - The cells row\n * @param {number} colIndex - The cells column\n * @returns {NormalizedTableCellStyle}\n * @private\n */\nexport function normalizeCell(cell, rowIndex, colIndex) {\n  const colStyle = this._colStyle(colIndex);\n  let rowStyle = this._rowStyle(rowIndex);\n\n  const font = deepMerge({}, colStyle.font, rowStyle.font, cell.font);\n  const customFont = Object.values(font).filter((v) => v != null).length > 0;\n  const doc = this.document;\n\n  // Initialize cell context\n  const rollbackFont = doc._fontSource;\n  const rollbackFontSize = doc._fontSize;\n  const rollbackFontFamily = doc._fontFamily;\n  if (customFont) {\n    if (font.src) doc.font(font.src, font.family);\n    if (font.size) doc.fontSize(font.size);\n\n    // Refetch rowStyle to reflect font changes\n    rowStyle = this._rowStyle(rowIndex);\n  }\n\n  cell.padding = normalizeSides(cell.padding);\n  cell.border = normalizeSides(cell.border);\n  cell.borderColor = normalizeSides(cell.borderColor);\n\n  // Cell takes highest priority, then row, then column, then defaultConfig\n  const config = deepMerge(this._defaultStyle, colStyle, rowStyle, cell);\n  config.rowIndex = rowIndex;\n  config.colIndex = colIndex;\n  config.font = font ?? {};\n  config.customFont = customFont;\n\n  // Normalize config\n  config.text = normalizeText(config.text);\n  config.rowSpan = config.rowSpan ?? 1;\n  config.colSpan = config.colSpan ?? 1;\n  config.padding = normalizeSides(config.padding, '0.25em', (x) =>\n    doc.sizeToPoint(x, '0.25em'),\n  );\n  config.border = normalizeSides(config.border, 1, (x) =>\n    doc.sizeToPoint(x, 1),\n  );\n  config.borderColor = normalizeSides(\n    config.borderColor,\n    'black',\n    (x) => x ?? 'black',\n  );\n  config.align = normalizeAlignment(config.align);\n  config.align.x = config.align.x ?? 'left';\n  config.align.y = config.align.y ?? 'top';\n  config.textStroke = doc.sizeToPoint(config.textStroke, 0);\n  config.textStrokeColor = config.textStrokeColor ?? 'black';\n  config.textColor = config.textColor ?? 'black';\n  config.textOptions = config.textOptions ?? {};\n\n  // Accessibility settings\n  config.id = new String(config.id ?? `${this._id}-${rowIndex}-${colIndex}`);\n  config.type = config.type?.toUpperCase() === 'TH' ? 'TH' : 'TD';\n  if (config.scope) {\n    config.scope = config.scope.toLowerCase();\n    if (config.scope === 'row') config.scope = 'Row';\n    else if (config.scope === 'both') config.scope = 'Both';\n    else if (config.scope === 'column') config.scope = 'Column';\n  }\n\n  if (typeof this.opts.debug === 'boolean') config.debug = this.opts.debug;\n\n  // Rollback font\n  if (customFont) doc.font(rollbackFont, rollbackFontFamily, rollbackFontSize);\n\n  return config;\n}\n\n/**\n * Normalize a row\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {TableCell[]} row\n * @param {number} rowIndex\n * @returns {NormalizedTableCellStyle[]}\n * @private\n */\nexport function normalizeRow(row, rowIndex) {\n  if (!this._cellClaim) this._cellClaim = new Set();\n\n  let colIndex = 0;\n  return row.map((cell) => {\n    // Ensure TableCell\n    if (cell == null || typeof cell !== 'object') cell = { text: cell };\n\n    // Find the starting column of the cell\n    // Skipping over the claimed cells\n    while (this._cellClaim.has(`${rowIndex},${colIndex}`)) {\n      colIndex++;\n    }\n\n    cell = normalizeCell.call(this, cell, rowIndex, colIndex);\n\n    // Claim any spanning cells\n    for (let i = 0; i < cell.rowSpan; i++) {\n      for (let j = 0; j < cell.colSpan; j++) {\n        this._cellClaim.add(`${rowIndex + i},${colIndex + j}`);\n      }\n    }\n\n    colIndex += cell.colSpan;\n    return cell;\n  });\n}\n","import { cosine, sine } from '../utils';\n\n/**\n * Compute the widths of the columns, ensuring to distribute the star widths\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {NormalizedTableCellStyle[]} row\n * @private\n */\nexport function ensure(row) {\n  // Width init\n  /** @type number[] **/\n  this._columnWidths = [];\n  ensureColumnWidths.call(\n    this,\n    row.reduce((a, cell) => a + cell.colSpan, 0),\n  );\n\n  // Height init\n  /** @type number[] **/\n  this._rowHeights = [];\n  /** @type number[] **/\n  this._rowYPos = [this._position.y];\n  /** @type {Set<NormalizedTableCellStyle>} **/\n  this._rowBuffer = new Set();\n}\n\n/**\n * Compute the widths of the columns, ensuring to distribute the star widths\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {number} numCols\n * @private\n */\nfunction ensureColumnWidths(numCols) {\n  // Compute the widths\n  let starColumnIndexes = [];\n  let starMinAcc = 0;\n  let unclaimedWidth = this._maxWidth;\n\n  for (let i = 0; i < numCols; i++) {\n    let col = this._colStyle(i);\n    if (col.width === '*') {\n      starColumnIndexes[i] = col;\n      starMinAcc += col.minWidth;\n    } else {\n      unclaimedWidth -= col.width;\n      this._columnWidths[i] = col.width;\n    }\n  }\n\n  let starColCount = starColumnIndexes.reduce((x) => x + 1, 0);\n\n  if (starMinAcc >= unclaimedWidth) {\n    // case 1 - there's no way to fit all columns within available width\n    // that's actually pretty bad situation with PDF as we have no horizontal scroll\n    starColumnIndexes.forEach((cell, i) => {\n      this._columnWidths[i] = cell.minWidth;\n    });\n  } else if (starColCount > 0) {\n    // Otherwise we distribute evenly factoring in the cell bounds\n    starColumnIndexes.forEach((col, i) => {\n      let starSize = unclaimedWidth / starColCount;\n      this._columnWidths[i] = Math.max(starSize, col.minWidth);\n      if (col.maxWidth > 0) {\n        this._columnWidths[i] = Math.min(this._columnWidths[i], col.maxWidth);\n      }\n      unclaimedWidth -= this._columnWidths[i];\n      starColCount--;\n    });\n  }\n\n  let tempX = this._position.x;\n  this._columnXPos = Array.from(this._columnWidths, (v) => {\n    const t = tempX;\n    tempX += v;\n    return t;\n  });\n}\n\n/**\n * Compute the dimensions of the cells\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {NormalizedTableCellStyle[]} row\n * @param {number} rowIndex\n * @returns {{newPage: boolean, toRender: SizedNormalizedTableCellStyle[]}}\n * @private\n */\nexport function measure(row, rowIndex) {\n  // ===================\n  // Add cells to buffer\n  // ===================\n  row.forEach((cell) => this._rowBuffer.add(cell));\n\n  if (rowIndex > 0) {\n    this._rowYPos[rowIndex] =\n      this._rowYPos[rowIndex - 1] + this._rowHeights[rowIndex - 1];\n  }\n\n  const rowStyle = this._rowStyle(rowIndex);\n\n  // ========================================================\n  // Find any cells which are to finish rendering on this row\n  // ========================================================\n  /** @type {SizedNormalizedTableCellStyle[]} */\n  let toRender = [];\n  this._rowBuffer.forEach((cell) => {\n    if (cell.rowIndex + cell.rowSpan - 1 === rowIndex) {\n      toRender.push(measureCell.call(this, cell, rowStyle.height));\n      this._rowBuffer.delete(cell);\n    }\n  });\n\n  // =====================================================\n  // Find the shared height for the row based on the cells\n  // =====================================================\n  let rowHeight = rowStyle.height;\n  if (rowHeight === 'auto') {\n    // Compute remaining height on cells\n    rowHeight = toRender.reduce((acc, cell) => {\n      let minHeight =\n        cell.textBounds.height + cell.padding.top + cell.padding.bottom;\n      for (let i = 0; i < cell.rowSpan - 1; i++) {\n        minHeight -= this._rowHeights[cell.rowIndex + i];\n      }\n      return Math.max(acc, minHeight);\n    }, 0);\n  }\n\n  rowHeight = Math.max(rowHeight, rowStyle.minHeight);\n  if (rowStyle.maxHeight > 0) {\n    rowHeight = Math.min(rowHeight, rowStyle.maxHeight);\n  }\n  this._rowHeights[rowIndex] = rowHeight;\n\n  let newPage = false;\n  if (rowHeight > this.document.page.contentHeight) {\n    // We are unable to render this row on a single page, for now we log a warning and disable the newPage\n    console.warn(\n      new Error(\n        `Row ${rowIndex} requested more than the safe page height, row has been clamped`,\n      ).stack.slice(7),\n    );\n    this._rowHeights[rowIndex] =\n      this.document.page.maxY() - this._rowYPos[rowIndex];\n  } else if (this._rowYPos[rowIndex] + rowHeight >= this.document.page.maxY()) {\n    // If row is going to go over the safe page height then move it over to new page\n    this._rowYPos[rowIndex] = this.document.page.margins.top;\n    newPage = true;\n  }\n\n  // =====================================================\n  // Re-measure the cells using the know known height\n  // =====================================================\n  return {\n    newPage,\n    toRender: toRender.map((cell) => measureCell.call(this, cell, rowHeight)),\n  };\n}\n\n/**\n * Compute the dimensions of the cell and its text\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {NormalizedTableCellStyle} cell\n * @param {number | 'auto'} rowHeight\n * @returns {SizedNormalizedTableCellStyle}\n * @private\n */\nfunction measureCell(cell, rowHeight) {\n  // ====================\n  // Calculate cell width\n  // ====================\n  let cellWidth = 0;\n\n  // Traverse all the columns of the cell\n  for (let i = 0; i < cell.colSpan; i++) {\n    cellWidth += this._columnWidths[cell.colIndex + i];\n  }\n\n  // =====================\n  // Calculate cell height\n  // =====================\n  let cellHeight = rowHeight;\n  if (cellHeight === 'auto') {\n    // The cells height is effectively infinite\n    // (although we clamp it to the page content size)\n    cellHeight = this.document.page.contentHeight;\n  } else {\n    // Add all the spanning rows heights to the cell\n    for (let i = 0; i < cell.rowSpan - 1; i++) {\n      cellHeight += this._rowHeights[cell.rowIndex + i];\n    }\n  }\n\n  // Allocated text space\n  const textAllocatedWidth = cellWidth - cell.padding.left - cell.padding.right;\n\n  const textAllocatedHeight =\n    cellHeight - cell.padding.top - cell.padding.bottom;\n\n  // Compute the text bounds\n  const rotation = cell.textOptions.rotation ?? 0;\n  const { width: textMaxWidth, height: textMaxHeight } = computeBounds(\n    rotation,\n    textAllocatedWidth,\n    textAllocatedHeight,\n  );\n\n  const textOptions = {\n    // Alignment is handled internally\n    align: cell.align.x,\n    ellipsis: true, // Default make overflowing text ellipsis\n    stroke: cell.textStroke > 0,\n    fill: true, // To fix the stroke issue\n    width: textMaxWidth,\n    height: textMaxHeight,\n    rotation,\n    // Allow the user to define any custom fields\n    ...cell.textOptions,\n  };\n\n  // ========================\n  // Calculate text height\n  // ========================\n\n  // Compute rendered bounds of the text given the constraints of the cell\n  let textBounds = { x: 0, y: 0, width: 0, height: 0 };\n  if (cell.text) {\n    const rollbackFont = this.document._fontSource;\n    const rollbackFontSize = this.document._fontSize;\n    const rollbackFontFamily = this.document._fontFamily;\n    if (cell.font?.src) this.document.font(cell.font.src, cell.font?.family);\n    if (cell.font?.size) this.document.fontSize(cell.font.size);\n\n    // We first compute the un-rotated bounds so that we can calculate the width of the text\n    const unRotatedTextBounds = this.document.boundsOfString(cell.text, 0, 0, {\n      ...textOptions,\n      rotation: 0,\n    });\n    textOptions.width = unRotatedTextBounds.width;\n    textOptions.height = unRotatedTextBounds.height;\n\n    // Then compute the rendered bounds\n    textBounds = this.document.boundsOfString(cell.text, 0, 0, textOptions);\n\n    this.document.font(rollbackFont, rollbackFontFamily, rollbackFontSize);\n  }\n\n  return {\n    ...cell,\n    textOptions,\n    x: this._columnXPos[cell.colIndex],\n    y: this._rowYPos[cell.rowIndex],\n    textX: this._columnXPos[cell.colIndex] + cell.padding.left,\n    textY: this._rowYPos[cell.rowIndex] + cell.padding.top,\n    width: cellWidth,\n    height: cellHeight,\n    textAllocatedHeight,\n    textAllocatedWidth,\n    textBounds,\n  };\n}\n\n/**\n * Compute the horizon-locked bounding box of a rect\n *\n * @param {number} rotation\n * @param {number} allocWidth\n * @param {number} allocHeight\n *\n * @returns {{width: number, height: number}}\n */\nfunction computeBounds(rotation, allocWidth, allocHeight) {\n  let textMaxWidth, textMaxHeight;\n\n  // We use these a lot so pre-compute\n  const cos = cosine(rotation);\n  const sin = sine(rotation);\n\n  // <---------------allocWidth---------------->\n  // A════════════════════F════════════════════B\n  // ║                  ■■ ■                   ║\n  // ║                ■■   ■                   ║\n  // ║              ■■      ■                  ║\n  // ║            ■■        ■                  ║\n  // ║          ■■           ■                 ║\n  // ║        ■■             ■                 ║\n  // ║      ■■░░              ■                ║\n  // ║    ■■    ░              ■               ║\n  // ║  ■■   Θ   ░             ■               ║\n  // ║■■          ░             ■              ║\n  // E- - - - - - - - - - - - - ■ - - - - - - -║\n  // ║■                          ■             ║\n  // ║■                           ■            ║\n  // ║ ■                          ■            ║\n  // ║ ■                           ■           ║\n  // ║  ■                          ■           ║\n  // ║  ■                           ■          ║\n  // ║   ■                          ■          ║\n  // ║   ■                           ■         ║\n  // ║    ■                           ■        ║\n  // ║     ■                          ■        ║\n  // ║     ■                           ■       ║\n  // ║      ■                          ■       ║\n  // ║      ■                           ■      ║\n  // ║       ■                           ■     ║\n  // ║       ■                           ■     ║\n  // ║        ■                           ■    ║\n  // ║        ■                           ■    ║\n  // ║         ■                           ■   ║\n  // ║         ■                           ■   ║\n  // ║          ■                           ■  ║\n  // ║           ■                           ■ ║\n  // ║           ■                           ■ ║\n  // ║            ■                           ■║\n  // ║            ■                           ■║\n  // ║             ■                           G\n  // ║             ■                         ■■║\n  // ║              ■                      ■■  ║\n  // ║              ■                     ■    ║\n  // ║               ■                  ■■     ║\n  // ║                ■                ■       ║\n  // ║                ■              ■■        ║\n  // ║                 ■           ■■          ║\n  // ║                 ■          ■            ║\n  // ║                  ■       ■■             ║\n  // ║                  ■      ■               ║\n  // ║                   ■   ■■                ║\n  // ║                   ■ ■■                  ║\n  // D════════════════════H════════════════════C\n  //\n  // Given a rectangle ABCD with a fixed side AB of width allocWidth.\n  // Find the largest (by area) inscribed rectangle EFGH,\n  // where the angle Θ is equal to rotation (between 0-90 degrees)\n  //\n  // From above we can infer\n  // > AF = EF * cos(Θ)\n  // > FB = AB - AF\n  // > FB = FG * sin(Θ)\n  // Rearrange\n  // > FG = FB / sin(Θ)\n  // Substitute\n  // > FG = (AB - EF*cos(Θ)) / sin(Θ)\n  // Area of a rectangle\n  // > A = EF * FG\n  // Substitute\n  // > A = EF * (AB - EF*cos(Θ)) / sin(Θ)\n  // > dA/dEF = (AB - 2*EF*cos(Θ)) / sin(Θ)\n  // Find peak at dA/dEF = 0\n  // > 0 = (AB - 2*EF*cos(Θ)) / sin(Θ)\n  // > EF = AB / (2*cos(Θ))\n  // Substitute\n  // > FG = (AB - (AB*cos(Θ)) / (2*cos(Θ))) / sin(Θ)\n  // > FG = AB / (2*sin(Θ))\n  //\n  // Final outcome\n  // Length EF = AB / (2*cos(Θ))\n  // Length FG = AB / (2*sin(Θ))\n  if (rotation === 0 || rotation === 180) {\n    textMaxWidth = allocWidth;\n    textMaxHeight = allocHeight;\n  } else if (rotation === 90 || rotation === 270) {\n    textMaxWidth = allocHeight;\n    textMaxHeight = allocWidth;\n  } else if (rotation < 90 || (rotation > 180 && rotation < 270)) {\n    textMaxWidth = allocWidth / (2 * cos);\n    textMaxHeight = allocWidth / (2 * sin);\n  } else {\n    textMaxHeight = allocWidth / (2 * cos);\n    textMaxWidth = allocWidth / (2 * sin);\n  }\n\n  // If The bounding box of the text is beyond the allocHeight\n  // then we need to clamp it and recompute the bounds\n  // This time we are computing the sizes based on the outer box ABCD\n  const EF = sin * textMaxWidth;\n  const FG = cos * textMaxHeight;\n  if (EF + FG > allocHeight) {\n    // > AB = EF * cos(Θ) + FG * sin(Θ)\n    // > BC = BG + GC\n    // > BG = FG * cos(Θ)\n    // > GC = EF * sin(Θ)\n    // > BC = FG * cos(Θ) + EF * sin(Θ)\n    // > AB = EF * cos(Θ) + FG * sin(Θ)\n    // Substitution solve\n    // > EF = (AB*cos(Θ) - BC*sin(Θ)) / (cos^2(Θ)-sin^2(Θ))\n    // > FG = (BC*cos(Θ) - AB*sin(Θ)) / (cos^2(Θ)-sin^2(Θ))\n    const denominator = cos * cos - sin * sin;\n\n    if (rotation === 0 || rotation === 180) {\n      textMaxWidth = allocWidth;\n      textMaxHeight = allocHeight;\n    } else if (rotation === 90 || rotation === 270) {\n      textMaxWidth = allocHeight;\n      textMaxHeight = allocWidth;\n    } else if (rotation < 90 || (rotation > 180 && rotation < 270)) {\n      textMaxWidth = (allocWidth * cos - allocHeight * sin) / denominator;\n      textMaxHeight = (allocHeight * cos - allocWidth * sin) / denominator;\n    } else {\n      textMaxHeight = (allocWidth * cos - allocHeight * sin) / denominator;\n      textMaxWidth = (allocHeight * cos - allocWidth * sin) / denominator;\n    }\n  }\n\n  return { width: Math.abs(textMaxWidth), height: Math.abs(textMaxHeight) };\n}\n","import PDFStructureElement from '../structure_element';\nimport PDFDocument from '../document';\n\n/**\n * Add accessibility to a table\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @private\n */\nexport function accommodateTable() {\n  const structParent = this.opts.structParent;\n  if (structParent) {\n    this._tableStruct = this.document.struct('Table');\n    this._tableStruct.dictionary.data.ID = this._id;\n    if (structParent instanceof PDFStructureElement) {\n      structParent.add(this._tableStruct);\n    } else if (structParent instanceof PDFDocument) {\n      structParent.addStructure(this._tableStruct);\n    }\n    this._headerRowLookup = {};\n    this._headerColumnLookup = {};\n  }\n}\n\n/**\n * Cleanup accessibility on a table\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @private\n */\nexport function accommodateCleanup() {\n  if (this._tableStruct) this._tableStruct.end();\n}\n\n/**\n * Render a row with all its accessibility features\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {SizedNormalizedTableCellStyle[]} row\n * @param {number} rowIndex\n * @param {Function} renderCell\n * @private\n */\nexport function accessibleRow(row, rowIndex, renderCell) {\n  const rowStruct = this.document.struct('TR');\n  rowStruct.dictionary.data.ID = new String(`${this._id}-${rowIndex}`);\n  this._tableStruct.add(rowStruct);\n  row.forEach((cell) => renderCell(cell, rowStruct));\n  rowStruct.end();\n}\n\n/**\n * Render a cell with all its accessibility features\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {SizedNormalizedTableCellStyle} cell\n * @param {PDFStructureElement} rowStruct\n * @param {Function} callback\n * @private\n */\nexport function accessibleCell(cell, rowStruct, callback) {\n  const doc = this.document;\n\n  const cellStruct = doc.struct(cell.type, { title: cell.title });\n  cellStruct.dictionary.data.ID = cell.id;\n\n  rowStruct.add(cellStruct);\n\n  const padding = cell.padding;\n  const border = cell.border;\n  const attributes = {\n    O: 'Table',\n    Width: cell.width,\n    Height: cell.height,\n    Padding: [padding.top, padding.bottom, padding.left, padding.right],\n    RowSpan: cell.rowSpan > 1 ? cell.rowSpan : undefined,\n    ColSpan: cell.colSpan > 1 ? cell.colSpan : undefined,\n    BorderThickness: [border.top, border.bottom, border.left, border.right],\n  };\n\n  // Claim row Headers\n  if (cell.type === 'TH') {\n    if (cell.scope === 'Row' || cell.scope === 'Both') {\n      for (let i = 0; i < cell.rowSpan; i++) {\n        if (!this._headerRowLookup[cell.rowIndex + i]) {\n          this._headerRowLookup[cell.rowIndex + i] = [];\n        }\n        this._headerRowLookup[cell.rowIndex + i].push(cell.id);\n      }\n      attributes.Scope = cell.scope;\n    }\n    if (cell.scope === 'Column' || cell.scope === 'Both') {\n      for (let i = 0; i < cell.colSpan; i++) {\n        if (!this._headerColumnLookup[cell.colIndex + i]) {\n          this._headerColumnLookup[cell.colIndex + i] = [];\n        }\n        this._headerColumnLookup[cell.colIndex + i].push(cell.id);\n      }\n      attributes.Scope = cell.scope;\n    }\n  }\n\n  // Find any cells which are marked as headers for this cell\n  const Headers = new Set(\n    [\n      ...Array.from(\n        { length: cell.colSpan },\n        (_, i) => this._headerColumnLookup[cell.colIndex + i],\n      ).flat(),\n      ...Array.from(\n        { length: cell.rowSpan },\n        (_, i) => this._headerRowLookup[cell.rowIndex + i],\n      ).flat(),\n    ].filter(Boolean),\n  );\n  if (Headers.size) attributes.Headers = Array.from(Headers);\n\n  const normalizeColor = doc._normalizeColor;\n  if (cell.backgroundColor != null) {\n    attributes.BackgroundColor = normalizeColor(cell.backgroundColor);\n  }\n  const hasBorder = [border.top, border.bottom, border.left, border.right];\n  if (hasBorder.some((x) => x)) {\n    const borderColor = cell.borderColor;\n    attributes.BorderColor = [\n      hasBorder[0] ? normalizeColor(borderColor.top) : null,\n      hasBorder[1] ? normalizeColor(borderColor.bottom) : null,\n      hasBorder[2] ? normalizeColor(borderColor.left) : null,\n      hasBorder[3] ? normalizeColor(borderColor.right) : null,\n    ];\n  }\n\n  // Remove any undefined attributes\n  Object.keys(attributes).forEach(\n    (key) => attributes[key] === undefined && delete attributes[key],\n  );\n  cellStruct.dictionary.data.A = doc.ref(attributes);\n  cellStruct.add(callback);\n  cellStruct.end();\n  cellStruct.dictionary.data.A.end();\n}\n","import { accessibleCell, accessibleRow } from './accessibility';\n\n/**\n * Render a cell\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {SizedNormalizedTableCellStyle[]} row\n * @param {number} rowIndex\n * @private\n */\nexport function renderRow(row, rowIndex) {\n  if (this._tableStruct) {\n    accessibleRow.call(this, row, rowIndex, renderCell.bind(this));\n  } else {\n    row.forEach((cell) => renderCell.call(this, cell));\n  }\n\n  return this._rowYPos[rowIndex] + this._rowHeights[rowIndex];\n}\n\n/**\n * Render a cell\n *\n * @this PDFTable\n * @memberOf PDFTable\n * @param {SizedNormalizedTableCellStyle} cell\n * @param {PDFStructureElement} rowStruct\n * @private\n */\nfunction renderCell(cell, rowStruct) {\n  const cellRenderer = () => {\n    // Render cell background\n    if (cell.backgroundColor != null) {\n      this.document\n        .save()\n        .rect(cell.x, cell.y, cell.width, cell.height)\n        .fill(cell.backgroundColor)\n        .restore();\n    }\n\n    // Render border\n    renderBorder.call(\n      this,\n      cell.border,\n      cell.borderColor,\n      cell.x,\n      cell.y,\n      cell.width,\n      cell.height,\n    );\n\n    // Debug cell borders\n    if (cell.debug) {\n      this.document.save();\n      this.document.dash(1, { space: 1 }).lineWidth(1).strokeOpacity(0.3);\n\n      // Debug cell bounds\n      this.document\n        .rect(cell.x, cell.y, cell.width, cell.height)\n        .stroke('green');\n\n      this.document.restore();\n    }\n\n    // Render text\n    if (cell.text) renderCellText.call(this, cell);\n  };\n\n  if (rowStruct) accessibleCell.call(this, cell, rowStruct, cellRenderer);\n  else cellRenderer();\n}\n\n/**\n * @this PDFTable\n * @memberOf PDFTable\n * @param {SizedNormalizedTableCellStyle} cell\n */\nfunction renderCellText(cell) {\n  const doc = this.document;\n\n  // Configure fonts\n  const rollbackFont = doc._fontSource;\n  const rollbackFontSize = doc._fontSize;\n  const rollbackFontFamily = doc._fontFamily;\n  if (cell.customFont) {\n    if (cell.font.src) doc.font(cell.font.src, cell.font.family);\n    if (cell.font.size) doc.fontSize(cell.font.size);\n  }\n\n  const x = cell.textX;\n  const y = cell.textY;\n  const Ah = cell.textAllocatedHeight;\n  const Aw = cell.textAllocatedWidth;\n  const Cw = cell.textBounds.width;\n  const Ch = cell.textBounds.height;\n  const Ox = -cell.textBounds.x;\n  const Oy = -cell.textBounds.y;\n\n  const PxScale =\n    cell.align.x === 'right' ? 1 : cell.align.x === 'center' ? 0.5 : 0;\n  const Px = (Aw - Cw) * PxScale;\n  const PyScale =\n    cell.align.y === 'bottom' ? 1 : cell.align.y === 'center' ? 0.5 : 0;\n  const Py = (Ah - Ch) * PyScale;\n\n  const dx = Px + Ox;\n  const dy = Py + Oy;\n\n  if (cell.debug) {\n    doc.save();\n    doc.dash(1, { space: 1 }).lineWidth(1).strokeOpacity(0.3);\n\n    // Debug actual text bounds\n    if (cell.text) {\n      doc\n        .moveTo(x + Px, y)\n        .lineTo(x + Px, y + Ah)\n        .moveTo(x + Px + Cw, y)\n        .lineTo(x + Px + Cw, y + Ah)\n        .stroke('blue')\n        .moveTo(x, y + Py)\n        .lineTo(x + Aw, y + Py)\n        .moveTo(x, y + Py + Ch)\n        .lineTo(x + Aw, y + Py + Ch)\n        .stroke('green');\n    }\n    // Debug allocated text bounds\n    doc.rect(x, y, Aw, Ah).stroke('orange');\n\n    doc.restore();\n  }\n\n  // Create text mask to cut off any overflowing text\n  // Mask cuts off at the padding not the actual cell, this is intentional!\n  doc.save().rect(x, y, Aw, Ah).clip();\n\n  doc.fillColor(cell.textColor).strokeColor(cell.textStrokeColor);\n  if (cell.textStroke > 0) doc.lineWidth(cell.textStroke);\n\n  // Render the text\n  doc.text(cell.text, x + dx, y + dy, cell.textOptions);\n\n  // Cleanup\n  doc.restore();\n  if (cell.font) doc.font(rollbackFont, rollbackFontFamily, rollbackFontSize);\n}\n\n/**\n * @this PDFTable\n * @memberOf PDFTable\n * @param {ExpandedSideDefinition<number>} border\n * @param {ExpandedSideDefinition<PDFColor>} borderColor\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number[]} [mask]\n * @private\n */\nfunction renderBorder(border, borderColor, x, y, width, height, mask) {\n  border = Object.fromEntries(\n    Object.entries(border).map(([k, v]) => [k, mask && !mask[k] ? 0 : v]),\n  );\n\n  const doc = this.document;\n  if (\n    [border.right, border.bottom, border.left].every(\n      (val) => val === border.top,\n    )\n  ) {\n    if (border.top > 0) {\n      doc\n        .save()\n        .lineWidth(border.top)\n        .rect(x, y, width, height)\n        .stroke(borderColor.top)\n        .restore();\n    }\n  } else {\n    // Top\n    if (border.top > 0) {\n      doc\n        .save()\n        .lineWidth(border.top)\n        .moveTo(x, y)\n        .lineTo(x + width, y)\n        .stroke(borderColor.top)\n        .restore();\n    }\n    // Right\n    if (border.right > 0) {\n      doc\n        .save()\n        .lineWidth(border.right)\n        .moveTo(x + width, y)\n        .lineTo(x + width, y + height)\n        .stroke(borderColor.right)\n        .restore();\n    }\n    // Bottom\n    if (border.bottom > 0) {\n      doc\n        .save()\n        .lineWidth(border.bottom)\n        .moveTo(x + width, y + height)\n        .lineTo(x, y + height)\n        .stroke(borderColor.bottom)\n        .restore();\n    }\n    // Left\n    if (border.left > 0) {\n      doc\n        .save()\n        .lineWidth(border.left)\n        .moveTo(x, y + height)\n        .lineTo(x, y)\n        .stroke(borderColor.left)\n        .restore();\n    }\n  }\n}\n","import { normalizeRow, normalizeTable } from './normalize';\nimport { measure, ensure } from './size';\nimport { renderRow } from './render';\nimport { accommodateCleanup, accommodateTable } from './accessibility';\n\nclass PDFTable {\n  /**\n   * @param {PDFDocument} document\n   * @param {Table} [opts]\n   */\n  constructor(document, opts = {}) {\n    this.document = document;\n    this.opts = Object.freeze(opts);\n\n    normalizeTable.call(this);\n    accommodateTable.call(this);\n\n    this._currRowIndex = 0;\n    this._ended = false;\n\n    // Render cells if present\n    if (opts.data) {\n      for (const row of opts.data) this.row(row);\n      return this.end();\n    }\n  }\n\n  /**\n   * Render a new row in the table\n   *\n   * @param {Iterable<TableCell>} row - The cells to render\n   * @param {boolean} lastRow - Whether this row is the last row\n   * @returns {this} returns the table, unless lastRow is `true` then returns the `PDFDocument`\n   */\n  row(row, lastRow = false) {\n    if (this._ended) {\n      throw new Error(`Table was marked as ended on row ${this._currRowIndex}`);\n    }\n\n    // Convert the iterable into an array\n    row = Array.from(row);\n    // Transform row\n    row = normalizeRow.call(this, row, this._currRowIndex);\n    if (this._currRowIndex === 0) ensure.call(this, row);\n    const { newPage, toRender } = measure.call(this, row, this._currRowIndex);\n    if (newPage) this.document.continueOnNewPage();\n    const yPos = renderRow.call(this, toRender, this._currRowIndex);\n\n    // Position document at base of new row\n    this.document.x = this._position.x;\n    this.document.y = yPos;\n\n    if (lastRow) return this.end();\n\n    this._currRowIndex++;\n    return this;\n  }\n\n  /**\n   * Indicates to the table that it is finished,\n   * allowing the table to flush its cell buffer (which should be empty unless there is rowSpans)\n   *\n   * @returns {PDFDocument} the document\n   */\n  end() {\n    // Flush any remaining cells\n    while (this._rowBuffer?.size) this.row([]);\n    this._ended = true;\n    accommodateCleanup.call(this);\n    return this.document;\n  }\n}\n\nexport default PDFTable;\n","import PDFTable from '../table/index';\n\nexport default {\n  initTables() {\n    this._tableIndex = 0;\n  },\n  /**\n   * @param {Table} [opts]\n   * @returns {PDFTable} returns the table object unless `data` is set,\n   * then it returns the underlying document\n   */\n  table(opts) {\n    return new PDFTable(this, opts);\n  },\n};\n","class PDFMetadata {\n  constructor() {\n    this._metadata = `\n        <?xpacket begin=\"\\ufeff\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\n            <x:xmpmeta xmlns:x=\"adobe:ns:meta/\">\n                <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n        `;\n  }\n\n  _closeTags() {\n    this._metadata = this._metadata.concat(`\n                </rdf:RDF>\n            </x:xmpmeta>\n        <?xpacket end=\"w\"?>\n        `);\n  }\n\n  append(xml, newline = true) {\n    this._metadata = this._metadata.concat(xml);\n    if (newline) this._metadata = this._metadata.concat('\\n');\n  }\n\n  getXML() {\n    return this._metadata;\n  }\n\n  getLength() {\n    return this._metadata.length;\n  }\n\n  end() {\n    this._closeTags();\n    this._metadata = this._metadata.trim();\n  }\n}\n\nexport default PDFMetadata;\n","import PDFMetadata from '../metadata';\n\nexport default {\n  initMetadata() {\n    this.metadata = new PDFMetadata();\n  },\n\n  appendXML(xml, newline = true) {\n    this.metadata.append(xml, newline);\n  },\n\n  _addInfo() {\n    this.appendXML(`\n        <rdf:Description rdf:about=\"\" xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\">\n            <xmp:CreateDate>${this.info.CreationDate.toISOString().split('.')[0] + 'Z'}</xmp:CreateDate>\n            <xmp:CreatorTool>${this.info.Creator}</xmp:CreatorTool>\n        </rdf:Description>\n        `);\n\n    if (this.info.Title || this.info.Author || this.info.Subject) {\n      this.appendXML(`\n            <rdf:Description rdf:about=\"\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n            `);\n\n      if (this.info.Title) {\n        this.appendXML(`\n                <dc:title>\n                    <rdf:Alt>\n                        <rdf:li xml:lang=\"x-default\">${this.info.Title}</rdf:li>\n                    </rdf:Alt>\n                </dc:title>\n                `);\n      }\n\n      if (this.info.Author) {\n        this.appendXML(`\n                <dc:creator>\n                    <rdf:Seq>\n                        <rdf:li>${this.info.Author}</rdf:li>\n                    </rdf:Seq>\n                </dc:creator>\n                `);\n      }\n\n      if (this.info.Subject) {\n        this.appendXML(`\n                <dc:description>\n                    <rdf:Alt>\n                        <rdf:li xml:lang=\"x-default\">${this.info.Subject}</rdf:li>\n                    </rdf:Alt>\n                </dc:description>\n                `);\n      }\n\n      this.appendXML(`\n            </rdf:Description>\n            `);\n    }\n\n    this.appendXML(\n      `\n        <rdf:Description rdf:about=\"\" xmlns:pdf=\"http://ns.adobe.com/pdf/1.3/\">\n            <pdf:Producer>${this.info.Creator}</pdf:Producer>`,\n      false,\n    );\n\n    if (this.info.Keywords) {\n      this.appendXML(\n        `\n            <pdf:Keywords>${this.info.Keywords}</pdf:Keywords>`,\n        false,\n      );\n    }\n\n    this.appendXML(`\n        </rdf:Description>\n        `);\n  },\n\n  endMetadata() {\n    this._addInfo();\n\n    this.metadata.end();\n\n    /*\n        Metadata was introduced in PDF 1.4, so adding it to 1.3 \n        will likely only take up more space.\n        */\n    if (this.version != 1.3) {\n      this.metadataRef = this.ref({\n        length: this.metadata.getLength(),\n        Type: 'Metadata',\n        Subtype: 'XML',\n      });\n      this.metadataRef.compress = false;\n      this.metadataRef.write(Buffer.from(this.metadata.getXML(), 'utf-8'));\n      this.metadataRef.end();\n      this._root.data.Metadata = this.metadataRef;\n    }\n  },\n};\n","/*\nPDFDocument - represents an entire PDF document\nBy Devon Govett\n*/\n\nimport stream from 'stream';\nimport PDFObject from './object';\nimport PDFReference from './reference';\nimport PDFPage from './page';\nimport PDFNameTree from './name_tree';\nimport PDFSecurity from './security';\nimport ColorMixin from './mixins/color';\nimport VectorMixin from './mixins/vector';\nimport FontsMixin from './mixins/fonts';\nimport TextMixin from './mixins/text';\nimport ImagesMixin from './mixins/images';\nimport AnnotationsMixin from './mixins/annotations';\nimport OutlineMixin from './mixins/outline';\nimport MarkingsMixin from './mixins/markings';\nimport AcroFormMixin from './mixins/acroform';\nimport AttachmentsMixin from './mixins/attachments';\nimport LineWrapper from './line_wrapper';\nimport SubsetMixin from './mixins/subsets';\nimport TableMixin from './mixins/table';\nimport MetadataMixin from './mixins/metadata';\n\nclass PDFDocument extends stream.Readable {\n  constructor(options = {}) {\n    super(options);\n    this.options = options;\n\n    // PDF version\n    switch (options.pdfVersion) {\n      case '1.4':\n        this.version = 1.4;\n        break;\n      case '1.5':\n        this.version = 1.5;\n        break;\n      case '1.6':\n        this.version = 1.6;\n        break;\n      case '1.7':\n      case '1.7ext3':\n        this.version = 1.7;\n        break;\n      default:\n        this.version = 1.3;\n        break;\n    }\n\n    // Whether streams should be compressed\n    this.compress =\n      this.options.compress != null ? this.options.compress : true;\n\n    this._pageBuffer = [];\n    this._pageBufferStart = 0;\n\n    // The PDF object store\n    this._offsets = [];\n    this._waiting = 0;\n    this._ended = false;\n    this._offset = 0;\n    const Pages = this.ref({\n      Type: 'Pages',\n      Count: 0,\n      Kids: [],\n    });\n\n    const Names = this.ref({\n      Dests: new PDFNameTree(),\n    });\n\n    this._root = this.ref({\n      Type: 'Catalog',\n      Pages,\n      Names,\n    });\n\n    if (this.options.lang) {\n      this._root.data.Lang = new String(this.options.lang);\n    }\n\n    // The current page\n    this.page = null;\n\n    // Initialize mixins\n    this.initMetadata();\n    this.initColor();\n    this.initVector();\n    this.initFonts(options.font);\n    this.initText();\n    this.initImages();\n    this.initOutline();\n    this.initMarkings(options);\n    this.initTables();\n    this.initSubset(options);\n\n    // Initialize the metadata\n    this.info = {\n      Producer: 'PDFKit',\n      Creator: 'PDFKit',\n      CreationDate: new Date(),\n    };\n\n    if (this.options.info) {\n      for (let key in this.options.info) {\n        const val = this.options.info[key];\n        this.info[key] = val;\n      }\n    }\n\n    if (this.options.displayTitle) {\n      this._root.data.ViewerPreferences = this.ref({\n        DisplayDocTitle: true,\n      });\n    }\n\n    // Generate file ID\n    this._id = PDFSecurity.generateFileID(this.info);\n\n    // Initialize security settings\n    this._security = PDFSecurity.create(this, options);\n\n    // Write the header\n    // PDF version\n    this._write(`%PDF-${this.version}`);\n\n    // 4 binary chars, as recommended by the spec\n    this._write('%\\xFF\\xFF\\xFF\\xFF');\n\n    // Add the first page\n    if (this.options.autoFirstPage !== false) {\n      this.addPage();\n    }\n  }\n\n  addPage(options) {\n    if (options == null) {\n      ({ options } = this);\n    }\n\n    // end the current page if needed\n    if (!this.options.bufferPages) {\n      this.flushPages();\n    }\n\n    // create a page object\n    this.page = new PDFPage(this, options);\n    this._pageBuffer.push(this.page);\n\n    // add the page to the object store\n    const pages = this._root.data.Pages.data;\n    pages.Kids.push(this.page.dictionary);\n    pages.Count++;\n\n    // reset x and y coordinates\n    this.x = this.page.margins.left;\n    this.y = this.page.margins.top;\n\n    // flip PDF coordinate system so that the origin is in\n    // the top left rather than the bottom left\n    this._ctm = [1, 0, 0, 1, 0, 0];\n    this.transform(1, 0, 0, -1, 0, this.page.height);\n\n    this.emit('pageAdded');\n\n    return this;\n  }\n\n  continueOnNewPage(options) {\n    const pageMarkings = this.endPageMarkings(this.page);\n\n    this.addPage(options ?? this.page._options);\n\n    this.initPageMarkings(pageMarkings);\n\n    return this;\n  }\n\n  bufferedPageRange() {\n    return { start: this._pageBufferStart, count: this._pageBuffer.length };\n  }\n\n  switchToPage(n) {\n    let page;\n    if (!(page = this._pageBuffer[n - this._pageBufferStart])) {\n      throw new Error(\n        `switchToPage(${n}) out of bounds, current buffer covers pages ${\n          this._pageBufferStart\n        } to ${this._pageBufferStart + this._pageBuffer.length - 1}`,\n      );\n    }\n\n    return (this.page = page);\n  }\n\n  flushPages() {\n    // this local variable exists so we're future-proof against\n    // reentrant calls to flushPages.\n    const pages = this._pageBuffer;\n    this._pageBuffer = [];\n    this._pageBufferStart += pages.length;\n    for (let page of pages) {\n      this.endPageMarkings(page);\n      page.end();\n    }\n  }\n\n  addNamedDestination(name, ...args) {\n    if (args.length === 0) {\n      args = ['XYZ', null, null, null];\n    }\n    if (args[0] === 'XYZ' && args[2] !== null) {\n      args[2] = this.page.height - args[2];\n    }\n    args.unshift(this.page.dictionary);\n    this._root.data.Names.data.Dests.add(name, args);\n  }\n\n  addNamedEmbeddedFile(name, ref) {\n    if (!this._root.data.Names.data.EmbeddedFiles) {\n      // disabling /Limits for this tree fixes attachments not showing in Adobe Reader\n      this._root.data.Names.data.EmbeddedFiles = new PDFNameTree({\n        limits: false,\n      });\n    }\n\n    // add filespec to EmbeddedFiles\n    this._root.data.Names.data.EmbeddedFiles.add(name, ref);\n  }\n\n  addNamedJavaScript(name, js) {\n    if (!this._root.data.Names.data.JavaScript) {\n      this._root.data.Names.data.JavaScript = new PDFNameTree();\n    }\n    let data = {\n      JS: new String(js),\n      S: 'JavaScript',\n    };\n    this._root.data.Names.data.JavaScript.add(name, data);\n  }\n\n  ref(data) {\n    const ref = new PDFReference(this, this._offsets.length + 1, data);\n    this._offsets.push(null); // placeholder for this object's offset once it is finalized\n    this._waiting++;\n    return ref;\n  }\n\n  _read() {}\n  // do nothing, but this method is required by node\n\n  _write(data) {\n    if (!Buffer.isBuffer(data)) {\n      data = Buffer.from(data + '\\n', 'binary');\n    }\n\n    this.push(data);\n    this._offset += data.length;\n  }\n\n  addContent(data) {\n    this.page.write(data);\n    return this;\n  }\n\n  _refEnd(ref) {\n    this._offsets[ref.id - 1] = ref.offset;\n    if (--this._waiting === 0 && this._ended) {\n      this._finalize();\n      this._ended = false;\n    }\n  }\n\n  end() {\n    this.flushPages();\n\n    this._info = this.ref();\n    for (let key in this.info) {\n      let val = this.info[key];\n      if (typeof val === 'string') {\n        val = new String(val);\n      }\n\n      let entry = this.ref(val);\n      entry.end();\n\n      this._info.data[key] = entry;\n    }\n\n    this._info.end();\n\n    for (let name in this._fontFamilies) {\n      const font = this._fontFamilies[name];\n      font.finalize();\n    }\n\n    this.endOutline();\n    this.endMarkings();\n\n    if (this.subset) {\n      this.endSubset();\n    }\n\n    this.endMetadata();\n\n    this._root.end();\n    this._root.data.Pages.end();\n    this._root.data.Names.end();\n    this.endAcroForm();\n\n    if (this._root.data.ViewerPreferences) {\n      this._root.data.ViewerPreferences.end();\n    }\n\n    if (this._security) {\n      this._security.end();\n    }\n\n    if (this._waiting === 0) {\n      this._finalize();\n    } else {\n      this._ended = true;\n    }\n  }\n\n  _finalize() {\n    // generate xref\n    const xRefOffset = this._offset;\n    this._write('xref');\n    this._write(`0 ${this._offsets.length + 1}`);\n    this._write('0000000000 65535 f ');\n\n    for (let offset of this._offsets) {\n      offset = `0000000000${offset}`.slice(-10);\n      this._write(offset + ' 00000 n ');\n    }\n\n    // trailer\n    const trailer = {\n      Size: this._offsets.length + 1,\n      Root: this._root,\n      Info: this._info,\n      ID: [this._id, this._id],\n    };\n    if (this._security) {\n      trailer.Encrypt = this._security.dictionary;\n    }\n\n    this._write('trailer');\n    this._write(PDFObject.convert(trailer));\n\n    this._write('startxref');\n    this._write(`${xRefOffset}`);\n    this._write('%%EOF');\n\n    // end the stream\n    this.push(null);\n  }\n\n  toString() {\n    return '[object PDFDocument]';\n  }\n}\n\nconst mixin = (methods) => {\n  Object.assign(PDFDocument.prototype, methods);\n};\n\nmixin(MetadataMixin);\nmixin(ColorMixin);\nmixin(VectorMixin);\nmixin(FontsMixin);\nmixin(TextMixin);\nmixin(ImagesMixin);\nmixin(AnnotationsMixin);\nmixin(OutlineMixin);\nmixin(MarkingsMixin);\nmixin(AcroFormMixin);\nmixin(AttachmentsMixin);\nmixin(SubsetMixin);\nmixin(TableMixin);\n\nPDFDocument.LineWrapper = LineWrapper;\n\nexport default PDFDocument;\n"],"names":["PDFAbstractReference","toString","Error","PDFTree","constructor","options","_items","limits","add","key","val","get","sortedKeys","Object","keys","sort","a","b","_compareKeys","out","length","first","last","push","PDFObject","convert","_dataForKey","_keysName","join","SpotColor","doc","name","C","M","Y","K","id","spotColors","values","ref","Range","C0","C1","map","value","FunctionType","Domain","N","end","pad","str","Array","slice","escapableRe","escapable","swapBytes","buff","l","i","object","encryptFn","String","string","isUnicode","charCodeAt","stringBuffer","Buffer","from","valueOf","replace","c","isBuffer","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","isArray","items","e","call","number","n","Math","round","PDFReference","document","data","gen","compress","Filter","uncompressedLength","buffer","write","chunk","Uint8Array","Length","finalize","offset","_offset","_security","getEncryptFn","concat","zlib","deflateSync","_write","_refEnd","PDFNumber","fround","normalizeSides","sides","defaultDefinition","undefined","transformer","v","top","right","bottom","left","vertical","horizontal","MM_TO_CM","CM_TO_IN","PX_TO_IN","IN_TO_PT","PC_TO_PT","cosine","cos","PI","sine","sin","DEFAULT_MARGINS","SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","PDFPage","_options","size","layout","dimensions","toUpperCase","width","height","content","font","fontFamily","fontSize","margins","margin","x","sizeToPoint","resources","ProcSet","dictionary","Type","Parent","_root","Pages","MediaBox","Contents","Resources","markings","fonts","Font","xobjects","XObject","ext_gstates","ExtGState","patterns","Pattern","colorSpaces","ColorSpace","annotations","Annots","structParentTreeKey","StructParents","createStructParentTreeNextKey","contentWidth","contentHeight","maxY","_setTabOrder","Tabs","hasMarkInfoDictionary","color","PDFNameTree","localeCompare","k","inRange","rangeGroup","startRange","endRange","middleRange","floor","arrayIndex","unassigned_code_points","isUnassignedCodePoint","character","commonly_mapped_to_nothing","isCommonlyMappedToNothing","non_ASCII_space_characters","isNonASCIISpaceCharacter","non_ASCII_controls_characters","non_character_codepoints","prohibited_characters","isProhibitedCharacter","bidirectional_r_al","isBidirectionalRAL","bidirectional_l","isBidirectionalL","mapping2space","mapping2nothing","getCodePoint","codePointAt","toCodePoints","input","codepoints","before","next","saslprep","opts","TypeError","mapped_input","filter","normalized_input","fromCodePoint","apply","normalize","normalized_map","hasProhibited","some","allowUnassigned","hasUnassigned","hasBidiRAL","hasBidiL","isFirstBidiRAL","isLastBidiRAL","PDFSecurity","generateFileID","info","infoStr","CreationDate","getTime","hasOwnProperty","wordArrayToBuffer","CryptoJS","MD5","generateRandomWordArray","bytes","lib","WordArray","random","create","ownerPassword","userPassword","_setupEncryption","pdfVersion","version","encDict","_setupEncryptionV1V2V4","_setupEncryptionV5","r","permissions","keyBits","getPermissionsR2","getPermissionsR3","paddedUserPassword","processPasswordR2R3R4","paddedOwnerPassword","ownerPasswordEntry","getOwnerPasswordR2R3R4","encryptionKey","getEncryptionKeyR2R3R4","_id","userPasswordEntry","getUserPasswordR2","getUserPasswordR3R4","V","CF","StdCF","AuthEvent","CFM","StmF","StrF","R","O","U","P","processedUserPassword","processPasswordR5","processedOwnerPassword","getEncryptionKeyR5","getUserPasswordR5","userKeySalt","words","userEncryptionKeyEntry","getUserEncryptionKeyR5","getOwnerPasswordR5","ownerKeySalt","ownerEncryptionKeyEntry","getOwnerEncryptionKeyR5","permsEntry","getEncryptedPermissionsR5","OE","UE","Perms","obj","digest","clone","sigBytes","min","RC4","encrypt","ciphertext","iv","mode","CBC","padding","Pkcs7","AES","permissionObject","printing","modifying","copying","annotating","fillingForms","contentAccessibility","documentAssembly","documentId","cipher","xorRound","ceil","j","lsbFirstWord","validationSalt","keySalt","SHA256","NoPadding","ECB","password","alloc","index","code","PASSWORD_PADDING","unescape","encodeURIComponent","wordArray","byteArray","PDFGradient","stops","embedded","transform","stop","pos","opacity","_normalizeColor","_colorSpace","max","setTransform","m11","m12","m21","m22","dx","dy","embed","m","fn","stopsLength","matrix","bounds","encode","Functions","Bounds","Encode","_gradCount","shader","pattern","PatternType","Shading","Matrix","grad","opacityGradient","pageBBox","page","form","Subtype","FormType","BBox","Group","S","CS","Sh1","gstate","SMask","G","opacityPattern","PaintType","TilingType","XStep","YStep","Gs1","stroke","m0","m1","m2","m3","m4","m5","_ctm","_setColorSpace","op","addContent","PDFLinearGradient","x1","y1","x2","y2","ShadingType","Coords","Function","Extend","PDFRadialGradient","r1","r2","underlyingColorSpaces","PDFTilingPattern","bBox","xStep","yStep","stream","createPattern","toFixed","embedPatternColorSpaces","forEach","csName","csId","getPatternColorSpaceId","cs","underlyingColorspace","_patternCount","patternColor","normalizedColor","_getColorSpace","Gradient","initColor","_opacityRegistry","_opacityCount","charAt","hex","parseInt","namedColors","part","_setColor","_setColorCore","space","fillColor","set","fillOpacity","_fillColor","strokeColor","strokeOpacity","_doOpacity","ca","CA","linearGradient","radialGradient","bbox","addSpotColor","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","cx","cy","px","py","sx","sy","parameters","A","H","h","L","Q","q","s","T","t","Z","z","parse","path","cmd","ret","args","curArg","foundDecimal","params","includes","commands","runners","moveTo","bezierCurveTo","quadraticCurveTo","solveArc","lineTo","closePath","y","coords","rx","ry","rot","large","sweep","ex","ey","segs","arcToSegments","seg","bez","segmentToBezier","rotateX","ox","oy","th","sin_th","cos_th","abs","pl","sqrt","a00","a01","a10","a11","x0","y0","d","sfactor_sq","sfactor","xc","yc","th0","atan2","th1","th_arc","segments","result","th2","th3","th_half","x3","y3","SVGPath","KAPPA","initVector","_ctmStack","save","restore","pop","lineWidth","w","_CAP_STYLES","BUTT","ROUND","SQUARE","lineCap","_JOIN_STYLES","MITER","BEVEL","lineJoin","miterLimit","dash","originalLength","valid","every","Number","isFinite","JSON","stringify","phase","undash","cp1x","cp1y","cp2x","cp2y","cpx","cpy","rect","roundedRect","ellipse","xe","ye","xm","ym","circle","radius","arc","startAngle","endAngle","anticlockwise","TWO_PI","HALF_PI","deltaAng","dir","numSegs","segAng","handleLen","curAng","deltaCx","deltaCy","ax","ay","segIdx","polygon","points","shift","point","_windingRule","rule","test","fill","fillAndStroke","isFillRule","clip","translate","rotate","angle","rad","origin","scale","xFactor","yFactor","WIN_ANSI_MAP","characters","split","AFMFont","open","filename","fs","readFileSync","contents","attributes","glyphWidths","boundingBoxes","kernPairs","charWidths","char","ascender","descender","xHeight","capHeight","lineGap","section","line","match","encodeText","text","res","len","glyphsForString","glyphs","charCode","characterToGlyph","widthOfGlyph","glyph","getKernPair","advancesForGlyphs","advances","PDFFont","widthOfString","lineHeight","includeGap","gap","STANDARD_FONTS","Courier","__dirname","Courier-Bold","Courier-Oblique","Courier-BoldOblique","Helvetica","Helvetica-Bold","Helvetica-Oblique","Helvetica-BoldOblique","Times-Roman","Times-Bold","Times-Italic","Times-BoldItalic","Symbol","ZapfDingbats","StandardFont","BaseFont","Encoding","encoded","positions","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","advance","isStandardFont","toHex","num","EmbeddedFont","subset","createSubset","unicode","widths","getGlyph","postscriptName","unitsPerEm","ascent","descent","fontLayoutCache","layoutCache","layoutRun","features","run","position","layoutCached","cached","onlyWidth","needle","gid","includeGlyph","codePoints","isCFF","cff","fontFile","familyClass","sFamilyClass","flags","post","isFixedPitch","head","macStyle","italic","tag","fromCharCode","replaceAll","descriptor","FontName","Flags","FontBBox","minX","minY","maxX","ItalicAngle","italicAngle","Ascent","Descent","CapHeight","XHeight","StemV","FontFile3","FontFile2","CIDSet","CIDSetRef","descendantFontData","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","W","CIDToGIDMap","descendantFont","DescendantFonts","ToUnicode","toUnicodeCmap","cmap","entries","chunkSize","chunks","ranges","start","PDFFontFactory","src","family","fontkit","ArrayBuffer","isEqualFont","font1","font2","_tables","checkSumAdjustment","records","initFonts","defaultFont","defaultFontFamily","defaultFontSize","_fontFamilies","_fontCount","_fontSource","_fontFamily","_fontSize","_font","_remSize","_registeredFonts","cacheKey","currentLineHeight","registerFont","defaultValue","percentageWidth","multiplier","SOFT_HYPHEN","HYPHEN","LineWrapper","EventEmitter","horizontalScaling","indent","characterSpacing","wordSpacing","columns","columnGap","spaceLeft","startX","startY","column","ellipsis","continuedX","on","indentAllLines","once","continued","align","lastLine","paragraphGap","wordWidth","word","canFit","eachWord","bk","breaker","LineBreaker","wordWidths","nextBreak","shouldContinue","lbk","fbk","mightGrow","mustShrink","required","wrap","nextY","nextSection","textWidth","wc","lc","emitLine","wordCount","emit","lh","continueOnNewPage","initText","_line","bind","_lineGap","moveDown","lines","moveUp","_text","lineCallback","_initOptions","addStructure","structParent","struct","structType","markStructureContent","rotation","wrapper","_wrapper","_textOptions","boundsOfString","trim","spaceWidth","x4","y4","xMin","xMax","yMin","yMax","heightOfString","Infinity","list","listType","unit","midLine","bulletRadius","textIndent","itemIndent","bulletIndent","level","levels","numbers","flatten","item","label","letter","times","drawListItem","listItem","itemType","labelType","bodyType","structTypes","diff","_fragment","assign","lineBreak","baseline","renderedWidth","link","goTo","destination","addNamedDestination","underline","lineY","strike","oblique","skew","encodedWord","positionsWord","hadOffset","addSegment","cur","flush","MARKERS","COLOR_SPACE_MAP","JPEG","marker","readUInt16BE","orientation","exif","fromBuffer","Orientation","bits","channels","colorSpace","BitsPerComponent","Width","Height","PNGImage","image","PNG","imgData","dataDecoded","hasAlphaChannel","isInterlaced","interlaceMethod","Predictor","Colors","colors","Columns","palette","transparency","grayscale","rgb","mask","indexed","loadIndexedAlphaChannel","splitAlphaChannel","decodeData","alphaChannel","sMask","Decode","decodePixels","pixels","p","colorCount","pixelCount","skipByteCount","colorIndex","PDFImage","exec","initImages","_imageRegistry","_imageCount","bh","bp","bw","ip","left1","originX","originY","ignoreOrientation","inDocumentFlow","openImage","wp","hp","fit","cover","valign","rotateAngle","xTransform","yTransform","hTransform","wTransform","annotate","Rect","_convertRect","Border","F","Dest","note","Name","D","url","pages","Kids","URI","_markup","QuadPoints","highlight","lineAnnotation","rectAnnotation","ellipseAnnotation","textAnnotation","DA","fileAnnotation","file","filespec","hidden","FS","Desc","PDFOutline","parent","title","dest","expanded","outlineData","children","addItem","endOutline","Count","First","Last","child","Prev","Next","initOutline","outline","Outlines","PageMode","PDFStructureContent","pageRef","mcid","refs","structContent","PDFStructureElement","type","_attached","_ended","_flushed","_isValidChild","lang","Lang","alt","Alt","E","actual","ActualText","_children","setParent","setAttached","_addContentToParentTree","_contentForClosure","pageStructParents","getStructParentTree","parentRef","_flush","closure","endMarkedContent","_isFlushable","_flushChild","Pg","MCID","PDFNumberTree","initMarkings","structChildren","tagged","getMarkInfoDictionary","Marked","getStructTreeRoot","markContent","toClose","marking","attached","Attached","structElem","structTreeRoot","initPageMarkings","pageMarkings","newStructContent","endPageMarkings","MarkInfo","StructTreeRoot","ParentTree","ParentTreeNextKey","endMarkings","FIELD_FLAGS","readOnly","noExport","multiline","toggleToOffButton","radioButton","pushButton","combo","edit","multiSelect","noSpell","FIELD_JUSTIFY","center","VALUE_MAP","FORMAT_SPECIAL","zip","zipPlus4","zip4","phone","ssn","FORMAT_DEFAULT","nDec","sepComma","negStyle","currency","currencyPrepend","percent","initForm","_acroform","Fields","NeedAppearances","DR","AcroForm","endAcroForm","fontDict","fieldRef","_endChild","childRef","formField","fieldDict","_fieldDict","_addToParent","formAnnotation","annotRef","formText","formPushButton","formCombo","formList","formRadioButton","formCheckbox","_resolveType","_resolveFlags","_resolveJustify","_resolveFont","_resolveStrings","_resolveColors","_resolveFormat","FT","f","format","fnKeystroke","fnFormat","param","AA","JS","backgroundColor","MK","BG","borderColor","BC","Ff","select","appendChoices","idx","Opt","relationship","refBody","Params","birthtime","ctime","statSync","ModDate","creationDate","modifiedDate","checksum","CheckSum","Size","byteLength","_fileRegistry","isEqual","fileSpecBody","AFRelationship","EF","UF","description","addNamedEmbeddedFile","AF","initPDFA","pSubset","subset_conformance","endSubset","_addPdfaMetadata","_addColorOutputIntent","iccProfile","colorProfileRef","intentRef","Info","OutputConditionIdentifier","DestOutputProfile","OutputIntents","_getPdfaid","appendXML","initPDFUA","_addPdfuaMetadata","_getPdfuaid","_importSubset","initSubset","PDFA","PDFUA","ROW_FIELDS","COLUMN_FIELDS","memoize","maxSize","cache","Map","has","delete","isObject","deepMerge","target","sources","deepClone","source","normalizedDefaultStyle","defaultStyleInternal","defaultStyle","defaultRowStyle","fromEntries","defaultColStyle","border","normalizeAlignment","normalizedRowStyle","rowStyleInternal","rowStyle","minHeight","maxHeight","normalizedColumnStyle","colStyleInternal","colStyle","_maxWidth","minWidth","maxWidth","normalizeTable","_tableIndex","_position","_defaultStyle","columnStyles","_colStyle","rowStyles","_rowStyle","normalizeText","normalizeCell","cell","rowIndex","colIndex","customFont","rollbackFont","rollbackFontSize","rollbackFontFamily","config","rowSpan","colSpan","textStroke","textStrokeColor","textColor","textOptions","scope","toLowerCase","debug","normalizeRow","row","_cellClaim","Set","ensure","_columnWidths","ensureColumnWidths","reduce","_rowHeights","_rowYPos","_rowBuffer","numCols","starColumnIndexes","starMinAcc","unclaimedWidth","col","starColCount","starSize","tempX","_columnXPos","measure","toRender","measureCell","rowHeight","acc","textBounds","newPage","console","warn","stack","cellWidth","cellHeight","textAllocatedWidth","textAllocatedHeight","textMaxWidth","textMaxHeight","computeBounds","unRotatedTextBounds","textX","textY","allocWidth","allocHeight","FG","denominator","accommodateTable","_tableStruct","ID","PDFDocument","_headerRowLookup","_headerColumnLookup","accommodateCleanup","accessibleRow","renderCell","rowStruct","accessibleCell","callback","cellStruct","Padding","RowSpan","ColSpan","BorderThickness","Scope","Headers","_","flat","Boolean","normalizeColor","BackgroundColor","hasBorder","BorderColor","renderRow","cellRenderer","renderBorder","renderCellText","Ah","Aw","Cw","Ch","Ox","Oy","PxScale","Px","PyScale","Py","PDFTable","freeze","_currRowIndex","lastRow","yPos","initTables","table","PDFMetadata","_metadata","_closeTags","append","xml","newline","getXML","getLength","initMetadata","metadata","_addInfo","toISOString","Creator","Title","Author","Subject","Keywords","endMetadata","metadataRef","Metadata","Readable","_pageBuffer","_pageBufferStart","_offsets","_waiting","Names","Dests","Producer","displayTitle","ViewerPreferences","DisplayDocTitle","autoFirstPage","addPage","bufferPages","flushPages","bufferedPageRange","count","switchToPage","unshift","EmbeddedFiles","addNamedJavaScript","js","JavaScript","_read","_finalize","_info","entry","xRefOffset","trailer","Root","Encrypt","mixin","methods","prototype","MetadataMixin","ColorMixin","VectorMixin","FontsMixin","TextMixin","ImagesMixin","AnnotationsMixin","OutlineMixin","MarkingsMixin","AcroFormMixin","AttachmentsMixin","SubsetMixin","TableMixin"],"mappings":"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,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAC1E,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACtE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACtE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACtE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACtE,OAAO,EAAE,OAAO,EAAE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AE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EACxE,OAAO,EAAE,O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","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/main.cjs":{"lineLengths":[48,30,95,87,54,61,49,32,36,49,64,0,0,47,45,103,13,5,0,38,23,27,27,7,7,5,0,14,1,0,37,86,1,0,36,43,1,35,0,104,108,101,110,113,0,54,39,59,47,1,76,66,54,35,84,68,24,9,5,43,1,53,65,53,1,0,0,35,0,103,99,0,0,78,81,82,1,94,47,34,30,5,92,82,1,0,0,0,0,0,3,68,57,11,81,25,33,37,39,46,28,15,25,10,56,34,16,20,36,44,66,62,54,43,34,17,50,35,19,32,13,10,5,1,0,0,0,0,0,69,41,42,38,44,3,69,45,43,38,3,77,49,45,3,70,44,38,3,136,132,77,43,109,22,7,115,22,6,3,108,8,42,44,80,6,8,42,44,84,67,104,102,6,8,42,44,46,41,47,49,46,89,80,91,88,95,124,6,8,42,44,45,46,95,6,8,77,42,44,79,43,92,6,9,77,42,44,45,46,93,6,9,77,42,44,43,92,6,9,77,42,44,43,92,6,9,42,46,109,5,3,69,42,42,106,23,18,6,3,33,74,39,44,89,3,0,0,0,18,74,38,39,50,43,37,42,71,72,35,35,35,35,74,15,17,20,18,17,20,18,7,45,48,47,69,3,0,0,0,24,74,38,37,38,38,47,49,50,41,45,44,42,75,47,90,3,0,0,0,69,39,37,3,78,115,134,3,0,0,0,23,74,38,41,41,43,50,52,40,49,42,47,50,48,53,52,104,3,0,0,0,3,67,68,96,144,77,1,61,18,21,17,16,3,45,634,644,707,619,777,714,638,628,2,54,62,67,30,55,64,18,28,88,63,19,5,52,68,89,55,48,43,59,28,40,72,63,19,5,1,51,14,5,19,19,19,19,19,19,18,6,16,78,43,42,41,38,37,40,42,42,52,40,43,38,41,45,41,49,17,5,22,20,15,17,21,21,22,25,23,27,25,25,16,18,16,17,18,20,20,18,16,22,18,19,19,14,18,20,15,19,21,16,6,23,5,16,13,20,6,14,93,5,17,19,20,18,15,17,16,13,13,13,18,5,2,51,26,24,25,19,19,19,19,19,26,25,19,19,19,23,23,2,50,14,7,5,16,17,17,17,16,17,17,17,16,17,17,17,16,17,17,17,16,20,17,17,16,17,17,18,16,17,17,18,16,17,17,18,16,17,17,18,16,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,17,18,22,22,17,18,17,22,17,18,17,17,17,18,17,17,17,18,17,17,17,18,17,17,22,18,17,17,17,26,17,17,17,18,17,20,17,18,17,17,17,18,17,17,16,6,23,7,5,21,24,21,21,21,24,21,21,22,24,22,21,21,24,21,21,24,24,21,24,24,24,21,24,21,24,21,24,24,24,21,24,24,24,22,24,24,24,21,24,24,21,21,24,24,24,24,24,22,21,21,24,24,21,21,24,24,22,21,24,24,21,21,24,24,24,22,24,22,24,21,24,24,21,22,24,24,24,21,24,21,24,24,21,21,24,21,21,26,21,21,24,21,21,21,24,21,21,21,24,21,24,21,24,21,21,21,21,21,24,21,22,24,24,21,21,26,24,24,22,21,21,21,21,21,21,24,21,21,21,24,21,21,21,21,21,24,21,21,21,24,21,21,21,21,21,21,21,24,21,22,21,24,21,25,21,21,21,22,22,21,21,24,21,24,26,21,26,21,21,24,21,21,21,22,21,22,21,25,21,21,21,22,21,24,24,21,22,21,21,29,21,24,21,21,21,24,21,29,24,21,26,25,22,21,5,2,0,0,70,42,42,42,38,38,207,23,51,24,6,3,73,38,120,23,43,6,3,105,8,41,48,88,6,8,41,48,89,48,99,5,3,79,37,16,17,20,22,15,14,21,16,19,15,18,16,18,14,17,9,22,25,21,17,28,20,22,2,60,21,37,45,107,143,85,69,118,52,31,88,114,5,27,2,56,44,21,21,33,36,45,22,26,26,30,61,38,26,11,52,26,26,26,61,34,26,11,5,27,32,80,2,0,0,0,99,13,48,49,48,76,17,26,23,23,17,17,17,17,27,24,11,50,50,52,52,52,52,54,54,49,53,47,75,80,51,81,21,25,23,23,24,19,22,29,18,21,11,52,92,6,87,10,8,47,48,46,45,46,81,6,8,56,47,48,46,45,46,82,42,44,47,45,45,6,8,47,48,46,45,46,82,42,44,47,45,46,59,58,5,3,72,106,73,0,0,0,29,111,13,48,52,53,48,48,48,47,122,6,10,8,50,98,100,6,10,50,89,6,10,8,98,5,3,0,0,0,63,74,73,3,0,0,0,79,79,85,74,72,3,0,0,0,98,8,72,6,8,72,5,3,49,49,74,31,5,2,51,58,75,32,5,2,74,0,0,0,89,74,79,3,0,0,0,29,103,0,0,0,0,48,24,51,38,5,28,49,81,35,41,23,65,71,71,71,86,21,62,46,39,48,36,37,46,44,59,33,29,41,35,15,24,9,38,19,5,23,21,42,62,55,23,44,30,46,9,23,66,74,76,78,55,57,27,20,5,33,41,37,62,55,23,23,30,44,26,24,9,23,66,74,76,78,55,28,45,25,19,42,32,27,46,9,63,15,5,22,25,5,1,0,0,0,0,0,44,44,8,8,8,8,8,8,8,8,8,8,8,8,9,9,7,2,51,12,12,13,11,2,48,34,60,96,97,54,54,27,25,24,43,32,66,62,32,66,62,13,35,9,20,5,24,71,50,44,36,33,55,59,92,61,22,5,34,71,73,32,31,34,44,39,34,31,51,32,78,83,22,40,82,17,53,13,119,82,45,23,48,49,49,29,48,49,51,34,44,16,34,44,9,5,1,0,0,48,49,105,18,16,80,26,26,26,23,35,27,37,20,32,9,5,49,112,80,55,20,10,56,21,10,58,21,20,10,5,28,45,21,26,35,38,21,29,14,27,33,13,11,27,36,41,37,9,32,39,25,62,43,69,79,34,125,45,17,30,98,9,19,5,48,19,27,22,27,48,10,20,34,39,37,108,73,98,60,24,14,30,9,52,19,5,34,19,25,36,27,22,26,10,69,36,37,108,75,101,60,24,14,53,9,18,39,40,57,9,15,5,26,23,25,31,90,37,9,5,1,0,0,0,0,83,38,27,35,10,54,5,32,22,63,31,27,14,34,20,48,14,9,23,27,44,10,41,16,46,10,5,36,58,35,5,1,33,15,24,5,21,23,31,5,1,0,0,0,0,0,40,45,39,64,55,57,5,1,98,94,5,10,21,16,12,6,5,10,21,16,12,6,5,10,22,16,12,6,5,10,27,16,12,6,5,9,15,13,10,20,17,16,6,5,9,15,14,10,20,17,9,6,5,9,15,14,10,19,17,9,6,5,11,16,17,12,6,5,11,16,17,12,6,5,9,15,14,10,20,16,12,6,5,9,15,14,10,20,16,12,6,5,9,15,14,10,20,18,13,6,5,9,15,14,10,24,17,9,6,5,9,15,14,10,26,17,12,6,5,9,15,14,10,28,17,9,6,5,11,24,17,9,6,5,11,24,17,9,6,5,11,18,17,9,6,5,11,16,41,12,6,5,11,16,110,25,11,12,5,3,0,0,71,34,48,14,12,13,15,17,13,14,16,17,16,17,15,11,12,13,13,12,11,10,10,12,11,11,10,12,12,11,12,16,11,12,14,15,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,16,19,18,17,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,10,17,17,17,11,15,15,10,13,14,15,18,19,20,20,21,9,9,13,13,16,21,16,13,21,19,20,21,15,18,19,12,12,17,12,13,12,16,15,11,14,19,13,12,13,9,18,13,13,9,19,9,15,13,13,9,17,18,17,9,16,10,14,16,12,17,13,16,13,12,20,18,17,12,10,15,20,16,13,18,16,13,12,13,15,13,18,16,13,13,18,16,13,13,13,18,16,13,13,13,13,18,16,13,13,16,13,13,18,16,13,12,13,15,13,18,16,13,13,18,16,13,13,13,18,16,13,13,13,13,18,16,13,13,16,13,18,24,21,21,21,17,24,25,21,21,19,18,18,20,19,19,18,20,20,19,20,26,21,20,16,16,19,16,16,16,16,16,16,16,16,16,16,9,10,10,24,25,22,21,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,20,16,13,17,22,19,18,18,18,20,17,17,21,18,17,21,18,16,19,24,16,19,18,19,15,16,19,19,19,18,20,20,19,19,18,18,20,19,19,18,20,20,19,19,21,21,20,18,18,23,18,21,17,14,20,18,18,23,21,18,18,23,21,15,18,18,18,23,18,21,14,18,18,18,23,21,18,17,21,14,14,14,14,12,11,11,12,13,14,12,14,2,0,0,49,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,12,13,15,17,13,14,16,17,16,17,15,11,12,13,13,12,11,10,10,12,11,11,10,12,12,11,12,16,11,12,14,15,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,16,19,18,17,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,10,17,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,17,11,15,15,10,13,14,15,18,19,20,20,21,9,9,7,13,13,16,21,7,16,13,21,19,20,21,15,18,7,19,7,12,12,17,12,13,12,16,15,7,11,14,7,19,13,12,13,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,18,7,7,7,7,13,13,9,19,7,7,7,7,7,9,7,7,7,15,7,7,13,13,9,16,2,49,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,12,18,24,7,21,21,21,17,24,25,21,21,12,13,13,15,19,18,18,20,19,19,18,20,20,19,12,16,20,26,21,20,7,16,16,19,16,16,7,7,16,7,7,16,16,16,16,7,7,16,16,16,7,9,9,9,10,10,24,7,25,22,21,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,20,16,13,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,22,19,18,7,7,18,18,20,17,17,7,21,7,7,18,7,7,17,21,7,7,18,16,19,7,7,7,17,14,20,24,16,19,18,19,15,16,7,7,19,18,18,20,19,19,18,20,20,19,19,18,18,20,19,19,18,20,20,19,19,21,21,20,18,18,23,18,21,17,14,20,18,18,23,21,18,18,23,21,15,18,18,18,23,18,21,14,18,18,18,23,21,18,17,20,2,0,0,49,14,12,13,15,17,13,14,16,17,16,17,15,11,12,13,13,12,11,10,10,12,11,11,10,12,12,11,12,16,11,12,14,15,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,16,19,18,17,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,10,17,17,17,11,15,15,10,13,14,15,18,19,20,20,21,9,9,13,13,16,21,16,13,21,19,20,21,15,18,19,12,12,17,12,13,12,16,15,11,14,19,13,12,13,9,18,13,13,9,19,9,15,13,13,9,17,18,17,9,16,10,14,16,12,17,13,16,13,12,20,18,17,12,10,15,20,16,13,18,16,13,12,13,15,13,18,16,13,13,18,16,13,13,13,18,16,13,13,13,13,18,16,13,13,16,13,13,18,16,13,12,13,15,13,18,16,13,13,18,16,13,13,13,18,16,13,13,13,13,18,16,13,13,16,12,2,49,14,12,18,24,21,21,21,17,24,25,21,21,12,13,13,15,19,18,18,20,19,19,18,20,20,19,12,16,20,26,21,20,16,16,19,16,16,16,16,16,16,16,16,16,16,9,9,9,10,10,24,25,22,21,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,20,16,13,17,22,19,18,18,18,20,17,17,21,18,17,21,18,16,19,17,14,20,24,16,19,18,19,15,16,19,18,18,20,19,19,18,20,20,19,19,18,18,20,19,19,18,20,20,19,19,21,21,20,18,18,23,18,21,17,14,20,18,18,23,21,18,18,23,21,15,18,18,18,23,18,21,14,18,18,18,23,21,18,17,20,2,49,14,12,21,21,24,25,21,21,12,13,13,15,19,18,18,20,19,19,18,20,20,19,12,16,20,26,21,16,16,19,16,16,16,16,16,16,16,16,16,16,9,9,9,10,10,24,25,21,20,16,13,19,17,21,17,14,20,16,19,18,19,15,16,19,18,18,20,19,19,18,20,20,19,19,18,18,20,19,19,18,20,20,19,19,21,21,19,2,0,0,0,26,26,26,72,73,47,44,91,3,73,42,108,22,6,3,66,114,37,94,3,72,42,101,22,6,3,140,25,25,25,73,39,37,3,78,114,43,93,3,73,42,114,22,6,3,141,71,49,70,22,27,26,22,29,6,3,62,48,46,49,49,134,124,7,138,1,19,19,19,71,37,35,49,3,114,8,46,85,6,8,46,99,5,3,27,27,27,76,37,35,36,3,115,8,46,46,94,6,8,51,113,5,3,79,33,33,42,3,47,47,47,72,45,46,3,64,42,43,90,98,3,179,69,42,43,92,98,3,185,115,8,118,48,152,6,8,118,119,47,152,6,8,46,47,163,102,5,3,56,56,56,69,51,94,47,95,51,94,43,98,3,189,115,8,118,46,160,6,8,118,128,124,128,46,160,6,8,55,180,51,172,55,180,47,102,5,3,0,0,0,20,20,101,81,46,45,43,3,79,41,43,153,3,68,103,131,53,3,77,41,47,48,95,88,3,79,38,126,50,173,3,23,23,135,8,45,45,59,58,5,3,72,46,163,3,90,44,133,22,6,3,84,40,49,122,3,82,113,22,7,137,22,6,3,79,44,44,59,134,3,0,0,58,44,42,38,84,58,5,22,42,5,32,54,39,52,5,37,43,25,5,1,82,20,62,5,18,23,5,1,66,37,35,3,66,37,36,3,134,8,41,79,6,8,42,85,5,3,80,51,50,95,14,4,45,42,73,28,88,22,21,30,57,33,37,28,9,19,5,1,111,8,109,6,8,120,6,8,120,5,3,79,51,51,50,94,14,4,68,37,32,3,68,37,33,3,103,8,101,6,8,43,88,43,6,8,43,88,43,5,3,129,42,38,36,65,23,11,5,21,16,81,56,10,5,31,16,81,66,10,5,1,88,87,5,11,18,47,12,6,5,9,15,14,10,19,14,12,6,5,9,15,13,10,21,16,9,18,14,14,18,14,13,9,6,5,9,15,13,10,20,17,9,5,3,90,87,5,9,15,14,10,14,9,18,18,20,10,12,6,5,10,18,14,12,6,5,10,17,14,12,6,5,9,15,13,10,20,14,12,6,5,10,19,14,12,6,5,10,21,14,12,6,5,10,17,14,12,6,5,9,15,13,10,23,18,13,6,5,9,15,13,10,22,17,9,6,5,9,15,13,10,28,17,12,6,5,9,15,13,10,29,17,10,6,5,9,15,13,10,20,17,9,6,5,9,15,13,10,25,17,9,6,5,9,15,13,10,21,16,9,18,14,14,18,14,13,9,6,5,11,19,17,12,6,5,10,19,16,9,14,14,14,13,9,6,5,9,15,13,10,22,17,9,6,5,11,15,16,12,6,5,11,18,41,54,6,5,11,19,42,54,6,5,11,22,109,12,6,5,11,18,47,12,6,5,9,15,14,10,24,17,12,6,5,9,15,14,10,21,14,12,6,5,9,15,14,10,23,14,12,6,5,9,15,14,10,24,16,12,6,24,5,9,15,14,10,25,17,9,6,5,9,15,14,10,26,17,9,6,5,9,15,14,10,22,17,9,6,5,9,15,14,10,19,17,12,6,5,9,15,14,10,18,17,12,6,5,9,15,14,10,19,90,12,6,5,9,15,14,10,18,141,12,6,5,9,15,14,10,19,14,12,5,3,74,38,70,3,91,5,9,15,13,10,21,16,9,18,14,14,18,14,13,9,6,5,11,22,109,12,6,5,9,15,14,10,19,90,12,6,5,9,15,14,10,18,141,12,6,5,11,17,96,12,6,5,11,19,17,11,5,3,103,8,42,42,110,106,112,74,6,8,42,42,51,74,5,3,76,0,0,0,0,37,27,57,5,14,36,84,28,31,28,9,31,104,48,9,50,20,5,17,43,130,92,5,26,55,20,5,20,50,5,22,52,5,26,65,78,5,23,50,43,49,40,48,56,40,17,32,19,56,19,19,63,50,137,17,22,9,20,5,21,48,46,19,54,19,19,63,28,45,35,46,64,87,47,17,20,94,9,5,30,36,42,82,24,9,58,47,5,24,29,22,5,1,77,0,0,0,74,42,41,3,78,44,44,49,53,104,3,0,0,0,0,79,37,36,42,42,42,42,42,41,3,79,37,36,38,38,37,3,73,37,37,36,3,41,1,40,1,97,8,59,47,6,8,59,46,6,29,45,8,46,6,8,59,47,6,8,59,46,6,8,59,71,49,102,6,8,59,71,49,102,6,9,59,43,54,6,9,59,43,54,6,9,43,54,5,3,0,0,75,38,39,39,49,51,41,41,42,41,40,68,3,74,41,37,3,109,13,47,50,6,8,137,6,8,45,66,6,8,137,6,8,45,108,6,8,45,67,45,92,5,3,78,47,46,108,3,75,158,22,7,47,54,40,48,48,47,45,36,36,39,70,21,18,6,3,78,39,40,90,3,0,0,0,70,36,42,154,3,74,69,30,74,39,71,24,7,44,154,3,0,0,0,71,35,109,67,63,62,44,75,35,37,47,71,40,3,78,39,51,171,161,18,7,46,3,0,0,0,71,35,36,34,35,3,114,13,53,47,51,164,98,6,10,8,162,163,173,5,3,0,0,0,0,0,105,8,77,6,8,45,50,97,6,8,45,159,5,3,70,44,46,154,3,76,42,106,22,7,106,22,21,3,66,105,105,47,135,3,77,42,101,22,6,3,70,108,107,48,156,3,76,42,105,22,6,3,139,77,130,64,110,115,3,114,13,105,118,6,19,17,133,5,3,0,0,0,0,0,123,70,119,42,154,3,106,8,44,6,8,50,6,8,45,126,5,3,186,72,119,45,151,3,76,50,44,164,3,114,13,129,112,116,133,6,19,17,123,6,17,124,133,5,3,0,0,0,0,0,100,17,17,15,15,17,17,17,16,3,35,41,41,39,39,123,23,34,7,123,23,34,7,123,23,34,7,123,23,34,6,2,41,25,28,72,38,24,45,38,94,53,5,20,52,5,28,66,23,19,5,37,23,5,1,75,43,66,65,3,131,72,66,65,3,102,8,46,45,6,8,46,46,46,6,8,46,46,128,127,5,3,75,106,22,7,105,22,6,3,70,37,105,22,6,3,128,183,128,195,138,195,102,74,12,127,59,58,10,12,127,59,50,107,9,7,74,12,127,60,60,52,160,10,12,127,60,60,129,129,51,51,158,9,7,8,42,123,50,111,6,8,42,127,127,46,110,109,6,8,42,127,131,46,110,117,6,8,42,128,128,46,111,110,6,54,54,8,45,46,82,5,3,25,113,114,13,126,127,172,6,19,17,132,5,3,0,0,0,0,0,120,72,68,37,41,93,3,187,93,74,12,127,50,10,12,127,50,97,9,7,8,47,123,41,151,6,8,47,123,41,158,6,8,47,123,41,157,6,54,54,8,47,46,82,6,8,47,123,185,55,185,46,90,5,3,25,95,114,13,126,127,163,6,19,17,132,5,3,0,0,0,0,0,127,72,122,123,122,123,180,122,123,122,123,179,3,191,77,42,109,3,70,162,113,44,105,3,76,42,105,22,6,3,78,39,43,99,3,0,0,0,0,32,48,28,37,19,42,19,45,19,45,19,45,9,5,23,79,5,22,26,5,1,72,105,68,77,3,76,43,40,89,3,78,44,44,130,123,114,113,3,0,0,0,69,38,38,37,3,74,76,43,59,3,78,41,41,38,91,100,3,0,0,0,69,44,83,20,18,29,62,6,3,78,39,41,108,3,0,0,0,72,40,43,103,3,105,74,39,41,47,91,3,0,0,0,68,36,37,35,3,70,42,39,80,65,3,70,60,99,77,3,91,8,42,47,49,46,85,6,8,44,112,26,11,113,26,11,108,26,10,6,8,46,49,49,50,40,92,88,89,116,5,3,89,8,46,42,41,77,25,22,26,92,11,53,108,6,8,42,77,17,17,17,17,17,24,26,66,11,41,46,53,108,5,3,114,8,43,88,6,8,77,43,88,5,3,0,0,0,29,77,51,74,39,41,78,3,0,0,0,18,89,74,39,42,37,39,37,42,41,41,48,58,47,51,48,41,71,3,0,0,0,79,67,65,39,37,42,63,3,66,42,35,81,3,69,36,38,36,99,3,78,39,39,41,88,82,113,3,0,0,0,28,74,39,37,38,38,47,48,51,41,45,44,42,75,47,105,3,0,0,0,69,39,73,3,29,74,115,134,3,0,0,0,81,74,47,44,3,67,41,99,3,78,40,41,85,3,0,0,0,0,52,20,41,38,84,76,34,9,34,5,15,64,5,38,25,29,29,36,25,5,1,82,28,91,5,22,23,5,1,97,72,18,29,36,49,9,24,36,44,9,34,36,54,9,26,29,9,5,38,60,44,42,47,49,45,7,61,45,46,24,7,60,45,46,153,26,10,7,54,41,24,7,78,12,113,10,12,51,105,10,12,51,104,10,12,51,98,10,12,50,45,68,9,7,2,108,31,44,40,18,53,141,53,44,137,90,131,7,23,1,108,58,20,21,10,46,97,7,31,50,45,115,40,18,53,140,54,44,96,90,131,7,24,1,0,0,91,8,74,6,8,75,98,6,8,49,82,6,8,49,83,98,5,3,78,40,38,47,48,3,0,0,0,67,39,40,76,3,71,39,41,151,22,7,77,13,13,13,13,13,13,21,19,7,45,40,69,3,78,40,48,74,74,101,3,0,0,0,64,46,41,45,41,37,38,66,3,68,38,67,37,93,131,3,78,40,44,46,41,40,45,44,80,91,3,0,0,0,81,36,35,56,62,47,80,5,1,64,39,73,41,48,202,42,37,44,112,44,24,30,3,74,0,0,0,0,70,38,40,47,66,3,76,41,48,50,47,49,41,42,3,142,93,8,47,47,41,98,6,8,43,6,8,51,44,45,6,10,8,49,49,51,48,6,8,41,40,5,3,66,43,42,44,49,110,3,137,81,172,3,78,109,22,7,41,131,22,7,175,23,40,7,3,78,39,38,116,113,3,0,0,0,0,42,37,2,44,41,43,2,43,50,48,2,77,172,3,89,8,70,6,8,109,125,6,8,107,162,157,158,6,8,71,6,8,108,162,5,3,68,38,40,35,47,46,104,3,72,43,46,43,43,3,69,44,43,47,42,98,89,3,78,39,71,39,84,3,0,0,0,0,73,35,34,36,36,3,78,40,38,104,3,0,0,38,76,82,82,82,82,82,82,85,82,82,82,82,85,82,85,85,82,82,70,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,70,42,40,79,22,7,37,3,69,42,41,43,45,42,87,3,54,20,60,25,2,56,38,24,36,41,36,25,28,118,86,15,9,29,5,22,40,74,51,40,58,61,2,79,0,0,0,0,62,16,29,22,33,32,35,40,24,5,14,1,64,19,42,17,1,75,72,103,57,135,60,44,44,23,62,5,45,14,57,74,78,78,78,51,58,57,5,17,1,0,0,0,0,48,36,86,100,9,20,5,42,73,64,81,37,78,32,9,29,29,19,56,19,17,32,48,38,49,79,82,30,74,36,91,34,124,75,76,29,48,25,21,29,17,19,55,19,20,78,20,20,17,32,47,38,49,57,75,78,30,110,54,25,21,29,17,20,56,20,71,9,5,56,32,56,114,31,212,44,115,62,9,17,5,23,29,29,19,94,19,17,33,58,61,51,58,97,21,31,17,19,55,19,20,129,20,20,17,33,164,31,17,20,56,20,71,9,5,29,29,29,19,17,33,93,31,17,19,17,33,59,54,58,68,56,58,38,65,34,96,73,56,29,55,25,21,31,17,20,17,33,208,31,17,20,17,33,191,31,17,20,71,9,5,27,47,29,50,31,13,18,18,14,13,18,17,14,13,18,17,14,31,13,18,17,14,13,18,17,14,13,18,17,14,13,18,17,14,13,18,17,13,11,89,59,133,83,26,39,40,13,9,81,49,13,18,17,13,11,65,5,1,44,50,80,44,50,83,0,0,0,48,32,78,45,50,75,9,5,29,20,44,53,34,23,61,26,23,86,26,24,90,13,24,35,33,23,106,70,23,67,26,23,56,175,50,184,77,52,26,23,80,112,26,24,92,13,76,79,51,28,9,19,5,22,30,5,1,0,0,0,48,39,85,29,27,59,38,49,18,115,50,13,9,107,25,5,66,40,39,50,66,94,56,24,45,70,72,37,36,44,76,53,56,32,39,40,40,50,92,30,47,38,38,37,72,30,48,39,39,38,88,30,28,39,110,17,32,39,40,38,33,39,47,42,86,130,72,55,30,40,38,33,39,42,48,86,131,71,55,30,17,58,44,44,20,45,45,13,9,15,5,34,88,50,44,70,28,28,28,28,28,28,28,28,28,41,28,28,28,28,28,28,28,28,35,28,35,13,64,9,31,21,25,25,25,25,25,25,25,25,25,25,25,31,25,40,25,37,25,25,36,25,31,25,22,32,25,25,25,25,25,25,25,25,31,25,25,31,19,26,37,26,37,18,26,31,26,31,22,26,26,31,26,31,9,30,5,22,25,5,1,0,0,3,34,52,7,34,19,19,37,5,7,35,19,20,37,5,20,39,45,45,9,39,45,45,9,5,12,104,5,86,11,49,21,25,11,49,21,25,11,50,21,25,11,50,21,25,5,1,0,0,0,66,70,70,47,31,19,29,21,20,21,18,22,18,14,15,14,6,21,19,20,21,18,19,32,19,17,21,19,20,21,17,15,14,6,20,21,33,20,21,21,23,19,20,18,15,15,14,6,15,15,14,6,19,16,20,19,21,25,33,23,21,21,21,23,18,19,14,15,14,6,19,21,16,18,19,18,21,21,17,19,19,21,20,23,26,29,33,16,15,14,6,17,22,16,25,14,15,14,6,30,22,16,18,21,23,12,15,14,6,20,22,24,23,21,34,28,23,17,35,19,18,22,30,23,20,20,20,22,20,25,22,25,19,21,18,19,24,12,15,14,6,21,13,15,14,6,21,20,19,17,20,20,21,16,24,24,22,15,22,19,19,2,50,57,60,97,62,1,60,57,1,57,55,1,60,28,16,21,44,44,60,46,47,51,22,73,13,9,67,136,5,57,1,64,47,38,72,136,5,57,1,57,35,15,15,15,15,15,15,15,17,15,15,15,15,15,15,15,15,15,15,15,92,15,15,15,15,15,33,2,60,56,17,1,0,0,48,7,40,19,26,22,71,21,5,7,40,18,26,23,72,22,5,7,54,16,17,69,18,18,64,43,42,31,74,74,28,28,9,20,5,63,11,43,22,29,11,66,30,30,11,102,21,29,11,96,23,21,41,11,77,62,21,88,11,75,60,21,27,40,88,72,5,1,0,0,3,64,52,70,11,88,21,33,11,88,21,33,11,89,21,31,11,89,21,31,5,1,0,0,0,86,98,40,29,16,25,26,6,16,16,25,29,27,25,19,25,31,29,35,28,32,31,6,24,16,24,23,30,18,6,17,16,23,6,49,49,49,49,49,49,27,16,25,34,6,30,16,25,34,6,20,16,24,29,31,29,30,6,17,16,25,30,28,32,30,26,6,17,16,24,26,26,30,6,23,17,24,26,21,21,20,30,6,16,17,24,23,29,28,6,28,17,25,25,6,24,17,25,29,28,22,6,25,21,28,25,17,25,27,31,27,33,23,29,6,19,17,24,23,20,24,20,29,32,22,6,28,17,24,23,6,27,23,17,24,24,24,24,24,23,6,19,17,24,26,23,24,27,23,19,6,21,17,24,33,32,29,29,29,29,29,31,30,30,29,30,27,26,38,6,17,17,24,28,27,6,18,17,24,28,26,25,26,28,31,27,6,22,17,24,28,6,23,28,28,28,32,32,29,29,31,17,17,24,24,25,32,28,36,33,28,34,29,33,40,6,18,17,24,25,27,6,25,17,24,31,34,30,6,27,17,25,32,36,33,6,15,17,25,67,64,19,6,28,17,24,35,27,27,29,28,27,6,30,17,24,37,29,29,31,30,29,6,32,17,24,36,36,6,21,17,25,79,76,25,6,26,17,25,31,31,6,20,17,25,30,28,6,28,17,25,33,27,27,29,28,29,28,30,30,29,28,31,31,33,33,32,32,34,33,33,30,6,27,17,25,32,27,36,6,16,17,24,28,30,30,6,16,17,24,28,30,30,6,18,17,23,6,22,18,24,29,32,27,28,5,2,57,50,54,6,41,74,76,70,76,72,76,75,76,74,74,74,74,11,96,96,41,26,31,40,32,39,86,88,97,97,83,93,72,76,75,76,74,73,73,74,74,75,72,75,79,78,76,76,74,74,83,54,41,88,91,91,78,80,73,73,72,75,72,75,73,75,78,83,82,79,79,79,79,78,76,75,88,64,71,76,84,84,86,85,85,84,86,86,85,84,87,87,89,89,88,88,90,89,89,86,2,86,25,90,62,5,2,25,42,47,50,104,58,1,62,17,27,14,53,50,42,9,5,15,1,50,35,53,28,118,29,128,35,12,17,19,6,1,62,17,74,14,69,118,5,69,37,36,18,61,21,23,15,144,9,5,28,1,0,0,0,0,0,0,0,48,19,35,19,56,19,19,17,32,71,38,49,59,54,67,66,70,30,75,75,25,21,32,17,19,17,32,71,38,49,59,54,62,61,66,46,21,32,17,19,72,20,86,9,5,32,21,35,19,19,221,22,157,17,22,19,114,22,19,142,22,20,86,9,19,5,23,27,5,1,44,50,79,0,0,52,52,50,52,52,50,50,48,44,148,52,35,80,29,70,37,109,18,38,95,22,66,97,17,13,71,44,71,131,50,84,13,42,44,9,22,5,7,58,38,52,39,27,101,44,34,66,44,55,42,74,57,87,55,13,9,5,28,37,100,5,1,0,0,0,0,26,48,47,42,51,46,23,51,52,24,51,52,53,53,57,63,24,61,60,59,58,58,57,48,70,79,36,44,43,52,48,22,56,52,54,53,69,55,54,21,17,13,126,9,32,38,26,69,20,9,22,5,39,33,29,39,79,19,9,32,32,31,30,32,58,42,91,67,5,31,92,5,20,35,19,53,19,58,19,44,19,62,19,50,20,85,9,5,51,84,82,132,5,56,71,41,63,88,50,51,95,9,44,66,88,39,51,84,9,83,5,42,94,65,62,60,64,43,29,34,32,36,25,62,78,60,68,74,113,57,59,43,36,76,96,56,38,36,80,13,59,55,9,5,64,104,55,38,38,55,83,13,9,5,70,28,23,91,53,9,36,57,5,48,83,49,88,88,91,9,50,89,89,81,9,5,28,26,93,32,34,11,24,5,25,56,42,5,26,29,44,43,128,9,5,41,57,40,86,73,33,32,58,42,23,23,25,31,36,41,28,43,61,19,60,50,30,53,48,77,88,30,30,98,28,41,17,34,54,55,50,51,30,22,17,14,23,91,28,13,11,5,22,81,91,63,99,75,25,30,31,5,1,44,50,80,50,54,40,97,68,32,60,34,60,18,1,83,44,17,15,26,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,28,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,28,15,55,27,17,16,26,17,15,15,55,27,17,16,26,17,28,16,55,27,17,16,26,17,15,16,55,27,17,16,26,17,28,16,55,27,17,16,26,17,15,16,55,27,17,16,26,17,28,16,55,27,17,16,26,17,28,16,55,27,17,16,26,17,27,16,53,5,1,0,0,48,26,81,64,68,114,5,44,100,5,26,66,29,80,22,5,49,84,42,61,91,32,9,5,22,25,85,38,5,1,0,0,0,48,7,47,53,38,48,44,77,32,51,60,9,5,7,35,31,59,44,15,10,63,43,54,54,74,5,7,20,29,65,14,33,34,9,5,35,56,72,45,53,63,52,45,48,13,9,5,7,52,36,103,5,7,60,45,39,46,63,91,9,5,41,25,29,35,25,33,30,5,1,0,0,0,0,50,10,2,47,11,11,11,11,10,2,51,11,11,10,2,51,11,11,11,11,11,10,2,49,10,2,52,10,15,14,6,10,15,14,5,2,48,41,45,37,32,48,55,42,42,42,5,36,18,21,60,77,14,60,11,5,31,59,5,51,18,53,56,11,47,5,41,38,47,34,49,30,32,34,107,59,59,28,17,36,111,53,53,26,17,39,43,28,13,9,5,1,121,0,0,0,0,0,0,845,40,11,11,11,11,11,11,10,2,46,19,20,21,20,20,13,21,18,2,42,42,42,42,42,42,42,40,51,43,121,49,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,63,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,60,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,58,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,58,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,63,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,6,59,5,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,10,9,39,39,13,9,5,2,102,31,18,19,18,11,71,60,42,9,30,5,41,43,22,22,25,60,47,38,34,82,76,56,25,13,92,101,35,21,9,63,59,24,38,73,9,5,1,59,56,28,72,125,60,1,0,0,0,0,0,48,36,31,41,66,27,5,15,47,5,25,250,5,15,26,129,76,39,5,12,28,5,12,29,5,21,29,40,25,19,5,26,29,30,29,25,19,5,26,37,32,37,39,5,33,29,28,5,1,0,0,0,47,11,11,10,2,48,24,55,46,18,10,70,46,9,20,5,47,28,18,56,44,87,46,39,39,33,36,27,9,136,89,57,33,84,45,44,22,13,33,59,40,13,27,9,39,22,31,86,66,90,80,13,9,30,5,52,25,38,45,35,63,77,30,33,39,66,19,13,9,48,23,5,50,53,96,74,48,102,9,20,5,33,54,35,57,48,68,76,9,18,5,50,46,94,100,11,5,51,60,53,5,46,29,35,87,66,42,51,60,68,46,29,17,52,73,35,17,42,13,9,5,32,73,5,36,49,50,48,70,58,69,59,81,77,55,48,70,13,9,54,20,5,36,61,33,19,54,19,57,122,17,22,9,18,5,49,43,64,20,74,64,18,46,9,39,48,31,5,46,95,5,51,72,66,71,42,15,5,54,115,5,33,33,19,52,102,22,19,61,87,17,22,9,17,5,61,118,5,25,23,30,19,59,47,44,38,109,17,22,19,76,83,47,44,38,132,17,22,19,119,22,9,21,5,33,18,30,19,59,47,53,38,236,17,22,19,76,88,55,41,40,322,17,22,19,288,22,9,21,5,29,25,27,27,30,29,32,27,26,40,131,50,28,49,25,49,28,35,5,1,0,0,48,14,24,5,16,22,32,35,41,34,117,40,44,40,164,16,116,39,57,40,9,5,12,113,5,53,26,37,21,27,78,38,42,9,86,31,38,31,38,35,31,33,34,5,1,0,0,102,31,18,19,19,18,18,5,41,22,18,33,23,34,43,59,77,27,53,90,121,26,51,92,76,26,53,122,80,26,51,94,87,26,13,16,9,5,1,115,49,48,116,52,53,53,41,41,41,101,101,101,51,111,111,111,78,130,205,127,127,136,23,53,55,50,56,61,63,47,67,46,72,72,72,74,76,75,35,1,24,42,42,40,42,40,89,71,43,122,27,5,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,42,13,9,6,19,5,9,44,13,10,9,44,13,10,9,42,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,42,13,9,6,29,5,9,44,13,10,9,44,13,10,9,44,13,10,9,42,13,10,9,44,13,10,9,44,13,10,9,44,13,9,6,32,5,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,10,9,44,13,9,5,2,63,101,12,17,1,59,26,35,53,77,46,81,77,65,152,68,64,71,30,71,30,18,13,12,6,43,75,34,26,5,35,33,1,57,26,39,51,43,55,58,29,84,17,18,21,12,47,20,33,25,16,22,33,33,25,9,35,35,53,271,5,71,102,56,66,74,43,67,101,31,9,5,80,40,40,40,48,69,77,59,61,21,5,13,1,48,48,38,39,21,37,21,37,21,5,1,65,26,39,88,64,43,52,24,44,1,68,26,39,73,117,91,78,44,12,5,13,1,0,0,0,0,0,0,0,0,0,35,44684,0,0,35,7613,0,0,39,69,51,9,9,9,9,10,13,12,11,12,12,12,22,24,13,17,17,14,15,62,2,51,13,25,13,13,15,19,16,20,17,19,22,17,21,18,16,14,2,347,145,143,51,14,26,18,24,71,29,32,6,17,25,23,24,71,29,32,6,14,25,23,24,69,29,32,6,15,25,23,24,70,29,32,6,15,25,23,24,71,29,32,6,12,25,23,24,70,29,32,6,12,25,23,24,70,29,32,6,13,25,23,24,70,29,29,6,14,25,23,24,70,29,29,6,16,25,23,24,70,30,32,6,33,17,27,24,33,39,30,33,9,12,26,23,25,77,30,32,5,2,51,12,13,15,14,6,13,15,14,6,13,15,14,6,13,15,14,6,13,15,14,5,2,0,0,0,135,5421,160,102,31,60,23,19,18,11,63,30,30,37,30,37,37,37,37,37,30,30,37,61,23,20,22,14,21,23,23,23,23,23,23,23,23,23,22,13,11,57,84,152,100,53,5,41,33,61,52,52,129,20,45,59,95,25,43,19,51,13,9,5,1,115,53,68,1,53,77,1,39,60,33,33,41,33,5,1,61,21,17,126,27,23,237,9,19,29,220,23,5,31,19,241,5,1,51,85,1,48,86,1,55,85,1,65,47,23,6,66,24,15,15,31,1,75,18,15,18,14,6,206,210,210,65,1,70,39,68,57,63,17,84,30,11,241,5,169,90,96,64,91,22,15,222,43,26,120,37,18,9,34,10,81,85,82,83,82,39,23,26,28,78,78,27,370,52,21,37,41,40,14,170,27,91,29,31,13,152,20,87,25,27,9,36,24,17,76,32,42,24,58,53,75,80,81,197,41,38,29,71,30,52,30,101,58,30,94,43,123,37,214,39,26,17,25,58,29,59,188,9,78,78,27,10,66,76,43,10,84,80,85,83,82,31,10,53,41,40,53,10,32,10,84,36,48,10,84,52,10,32,10,85,29,42,44,106,9,113,84,25,132,95,103,22,13,18,9,30,122,81,26,10,81,81,78,82,10,29,38,47,61,10,31,52,54,29,75,136,22,45,187,17,114,59,38,72,34,17,22,13,9,64,75,41,44,302,40,163,73,50,68,78,77,76,42,147,74,30,21,17,118,9,69,45,24,44,63,200,25,116,9,43,72,49,26,134,21,18,9,29,15,173,19,78,42,43,53,9,20,44,43,43,43,9,68,69,20,14,70,72,72,71,76,14,60,39,14,69,69,32,14,67,341,47,51,13,9,24,127,58,21,33,36,14,67,81,73,41,86,53,53,85,22,13,9,33,92,114,22,16,20,72,69,45,40,62,80,9,5,1,68,39,68,169,31,10,84,76,83,19,38,26,25,129,44,81,101,79,49,33,103,113,40,21,26,17,13,78,88,79,90,36,79,170,29,109,17,13,129,18,9,144,187,28,10,81,81,79,78,78,46,10,46,75,60,83,83,52,87,188,53,60,50,235,17,105,50,13,128,63,148,39,64,45,92,41,29,17,13,9,26,10,79,81,77,81,81,21,10,85,78,10,87,88,52,291,27,46,30,79,36,88,85,84,88,85,81,48,18,84,85,50,39,115,101,94,118,33,17,87,78,79,102,38,167,45,17,83,87,82,72,18,89,101,38,281,45,17,13,84,82,84,82,80,38,25,38,39,115,101,94,118,33,17,13,69,25,37,152,80,84,82,45,59,80,163,17,13,37,85,38,59,9,52,10,79,31,40,77,86,92,78,91,56,18,51,69,91,75,22,83,36,38,91,91,60,95,200,98,103,140,43,155,41,38,29,25,21,169,21,101,21,35,45,92,41,64,17,22,13,9,63,244,5,1,60,45,53,85,17,1,0,0,0,0,0,0,0,0,0,181,4949,160,102,31,60,45,23,19,19,19,18,11,27,68,23,18,18,56,68,23,18,11,56,42,23,19,19,19,19,19,19,18,11,53,33,97,90,79,23,19,19,19,19,19,19,18,11,5,41,33,61,52,52,66,91,59,95,25,43,19,51,13,9,5,1,122,51,63,1,37,50,33,41,33,5,1,61,21,124,19,29,197,30,93,81,5,1,69,55,1,57,103,36,1,57,116,39,1,54,57,169,17,44,37,53,119,59,56,91,22,15,32,43,82,37,18,9,31,122,41,40,98,90,63,67,91,22,13,9,28,46,40,170,59,70,146,9,5,1,60,45,53,85,17,1,48,65,1,45,59,1,0,0,39,56,56,56,58,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,40,43,56,56,42,39,56,41,48,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,65,5,2,60,42,14,6,26,54,34,5,55,1,0,0,0,0,0,102,36,27,19,17,67,51,55,42,31,78,34,31,67,34,21,32,17,19,17,67,39,66,52,80,112,76,40,25,64,69,71,62,75,127,67,65,60,53,54,41,27,92,36,21,33,17,19,17,67,39,51,94,36,21,33,17,19,17,67,51,72,88,47,62,92,69,100,64,152,71,55,57,41,103,103,104,100,104,101,97,104,26,104,100,98,99,100,54,26,101,101,105,102,74,26,118,61,129,93,60,70,52,63,116,95,56,98,65,57,146,87,87,38,29,68,78,53,53,25,77,104,74,144,85,41,25,107,102,78,36,21,33,17,19,48,19,56,19,75,20,82,9,5,1,0,0,0,102,46,83,72,72,75,75,42,63,81,51,138,138,139,139,9,26,5,36,27,19,17,67,51,42,31,68,34,31,80,34,21,32,17,19,17,62,49,67,51,42,31,64,89,72,72,44,29,41,31,101,88,77,82,68,68,40,21,17,19,17,67,59,49,95,74,110,77,71,68,71,57,26,43,35,64,55,47,46,34,35,53,46,45,67,34,21,63,77,55,28,79,55,21,32,17,19,17,75,55,55,66,142,57,107,55,64,82,77,32,17,19,17,75,55,55,66,87,57,110,54,66,59,63,244,64,76,77,32,17,19,17,77,56,57,69,54,60,53,69,37,61,57,95,99,65,124,44,86,56,66,84,72,32,17,19,48,19,56,19,75,20,73,9,5,57,52,63,53,63,54,54,63,5,23,45,35,35,42,63,81,51,132,132,9,16,17,16,10,5,51,60,80,33,5,29,35,46,44,43,41,67,9,5,25,52,39,47,45,71,71,73,76,76,17,56,76,76,17,13,9,5,1,0,0,48,21,72,74,127,35,16,67,26,129,129,73,67,72,109,72,53,75,5,26,33,67,59,119,9,5,24,100,107,99,74,43,38,41,9,65,5,33,87,38,38,9,5,15,31,25,27,5,44,26,33,62,71,9,33,62,71,9,24,5,22,25,31,25,34,34,37,111,111,5,1,0,0,48,59,47,43,33,30,30,26,9,41,41,76,91,59,16,87,33,36,78,79,13,32,9,120,46,34,36,28,9,43,74,45,34,32,72,65,70,24,5,26,64,84,5,24,38,129,30,73,93,79,76,131,89,9,91,102,119,76,42,9,5,46,54,101,30,38,38,9,5,28,66,65,37,29,31,24,22,37,22,37,22,37,22,52,22,52,22,116,22,69,22,52,20,29,9,28,22,22,88,22,54,20,29,9,5,44,26,94,85,24,5,26,29,74,85,127,34,5,22,25,40,34,87,92,103,126,5,1,0,0,0,0,0,0,44,16,16,26,23,18,2,48,7,72,52,21,20,23,40,57,15,10,5,7,49,21,15,43,70,87,11,29,5,7,38,72,73,27,17,18,26,73,145,45,9,26,5,7,74,63,17,18,42,69,27,149,54,26,26,36,36,23,23,22,36,33,55,55,56,87,56,89,58,71,100,40,26,23,22,18,26,25,24,18,26,25,24,18,26,24,23,18,44,63,75,46,34,46,39,45,72,77,25,33,21,58,43,62,43,69,74,21,62,43,69,74,21,17,25,25,22,9,48,5,7,58,25,19,21,64,37,26,54,58,32,13,37,9,20,5,7,45,41,39,44,44,20,19,18,14,11,5,7,45,23,48,5,7,54,21,34,34,57,5,7,21,38,58,5,18,27,26,26,5,1,21,13,13,23,20,15,83,35,24,25,18,7,16,2,0,0,0,48,14,12,23,12,13,15,17,13,14,16,18,16,17,15,11,12,13,13,12,11,10,10,12,11,11,10,12,12,11,12,16,11,12,14,15,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,16,19,18,17,12,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,10,17,17,16,12,15,13,13,16,16,13,13,18,16,13,12,15,13,13,18,16,13,13,18,16,13,13,13,18,16,13,13,13,18,16,13,13,11,15,14,13,16,17,17,16,16,12,15,15,9,13,15,16,16,19,10,9,18,16,14,9,15,18,19,12,9,13,19,17,17,14,13,18,12,20,21,15,23,13,13,13,9,9,13,13,19,20,16,17,13,14,16,16,15,15,20,21,9,9,16,21,21,19,18,18,18,13,16,13,13,18,16,13,13,18,12,13,13,18,13,15,17,12,13,12,16,11,14,19,13,12,13,13,13,13,13,13,16,10,10,13,13,12,12,12,15,18,18,20,14,17,20,12,13,13,17,15,15,13,13,13,13,12,2,0,0,48,16,67,5,16,30,5,16,30,5,29,78,65,19,49,76,10,19,5,23,48,101,101,122,14,20,86,64,83,62,20,48,73,57,13,9,157,32,39,41,37,34,10,5,7,29,74,77,78,73,86,37,4,17,18,31,5,7,67,42,17,18,31,5,7,57,17,18,51,55,31,5,7,50,25,19,27,53,38,5,7,31,19,26,47,5,7,32,19,27,48,5,35,16,40,31,29,19,78,19,54,136,93,21,102,19,62,9,5,7,21,19,18,31,5,7,81,42,25,25,19,58,32,40,16,19,22,5,38,11,31,21,21,11,74,82,49,23,37,26,53,112,53,5,1,44,50,69,44,50,69,44,50,69,44,50,77,44,50,78,44,50,69,0,0,0,0,0,50,70,47,35,35,35,34,3,26,41,47,47,39,40,40,29,54,51,49,48,49,58,55,55,49,52,59,61,49,12,108,5,51,31,37,19,19,5,1,46,39,33,31,21,21,21,38,40,5,1,102,64,24,76,75,79,56,55,68,117,35,5,39,49,20,41,34,24,40,51,19,5,60,41,15,55,59,59,45,56,30,34,68,74,92,21,5,34,33,26,126,126,23,74,40,42,29,36,54,47,63,13,9,46,32,153,37,9,19,46,32,153,9,19,46,32,153,9,45,46,58,76,51,9,15,5,49,36,30,37,58,61,42,43,48,113,70,46,46,20,43,43,13,81,33,103,117,78,102,102,76,102,103,103,102,13,45,9,45,28,61,52,115,13,58,76,55,51,38,49,49,13,9,32,5,30,39,136,139,16,100,115,99,114,10,5,85,20,35,30,24,67,48,81,53,42,56,43,100,100,118,17,13,9,41,105,71,93,94,78,77,9,26,21,47,34,28,35,35,25,13,9,24,5,19,48,39,32,139,18,29,5,62,16,43,69,49,38,37,53,26,34,94,35,26,20,125,33,91,142,38,13,46,56,36,64,74,73,58,53,53,74,37,59,76,39,65,13,48,91,29,9,20,5,25,23,76,5,1,0,0,0,0,0,102,16,53,56,5,13,40,47,26,5,16,56,37,51,42,32,69,23,23,25,23,25,23,22,25,43,41,47,43,65,44,41,81,42,64,31,81,9,31,53,40,36,9,31,39,30,24,9,32,36,44,30,43,53,53,28,31,31,31,32,32,41,34,31,63,47,41,34,31,53,51,51,50,29,34,31,31,45,53,62,56,50,47,29,34,31,52,56,56,58,58,56,56,77,29,34,32,60,48,39,56,51,44,57,64,40,47,40,29,34,32,56,35,32,56,63,39,49,45,29,34,32,109,50,34,32,29,111,113,101,60,81,71,61,67,62,118,58,33,64,38,29,32,32,41,58,34,32,63,47,47,41,34,32,63,47,41,34,32,53,56,56,58,58,56,56,77,29,47,47,46,34,32,53,51,51,50,29,52,52,54,54,52,52,73,34,32,69,53,40,56,58,58,40,56,77,29,34,32,69,53,56,40,58,58,56,40,77,29,34,32,61,34,32,61,49,39,57,51,44,57,64,40,47,40,29,34,32,32,46,53,44,60,44,62,62,60,87,40,44,60,62,62,60,87,33,77,47,29,34,32,52,39,39,56,56,63,42,39,52,52,63,42,39,52,58,42,39,52,60,42,40,52,52,54,42,40,52,52,54,42,40,52,52,54,42,40,52,51,42,40,52,52,64,42,40,48,42,40,58,58,53,42,40,54,64,42,40,57,57,57,57,67,42,40,62,42,40,52,52,54,42,40,52,61,42,40,52,53,42,40,52,52,53,42,40,54,57,92,59,42,40,56,56,61,61,95,53,44,37,54,57,91,57,44,37,42,40,60,44,62,62,62,46,62,46,62,46,62,46,44,44,85,85,42,40,45,64,59,59,55,37,75,72,56,42,40,60,60,62,62,62,46,62,46,62,62,62,46,44,44,85,85,42,40,51,51,45,64,59,59,55,37,86,59,51,44,51,59,37,51,75,72,42,40,76,29,34,32,65,21,58,36,48,60,38,48,61,64,13,10,16,35,20,5,25,23,76,5,1,0,0,0,0,0,69,39,39,43,80,3,102,7,74,83,43,4,25,21,29,68,55,42,9,41,37,39,39,38,74,31,11,5,23,45,26,53,33,29,31,57,15,9,74,5,25,23,77,5,1,0,0,0,0,0,39,30,27,27,5,1,102,16,69,52,39,37,42,42,9,20,5,7,67,45,21,20,35,35,20,51,27,38,48,50,54,18,36,22,13,9,49,51,32,54,25,23,25,24,26,14,20,61,14,9,55,24,105,43,60,54,71,9,22,5,23,64,27,26,28,26,40,36,9,15,5,25,23,77,5,1,0,0,64,54,58,56,59,54,52,56,51,52,56,48,29,74,80,28,60,46,168,138,9,72,66,83,52,67,53,63,61,188,26,17,13,9,26,5,39,55,39,43,39,53,44,43,28,48,47,58,76,34,38,51,38,30,9,58,61,44,54,51,74,37,102,20,138,105,13,72,37,102,35,100,13,58,91,31,46,25,13,34,38,107,43,70,83,53,53,81,43,59,59,13,18,64,58,55,40,51,51,45,55,55,21,17,79,60,66,66,77,77,17,13,42,30,9,5,20,38,39,147,44,18,22,25,41,82,105,59,41,36,13,9,22,5,25,38,18,43,25,41,82,75,18,109,92,13,9,22,5,66,47,39,23,48,47,46,80,121,103,20,93,178,138,13,9,22,5,48,45,31,58,40,22,37,35,48,33,38,57,52,64,43,35,33,20,37,88,38,102,37,17,24,13,59,107,18,97,102,126,13,33,9,5,63,28,24,16,15,10,49,32,56,29,28,25,13,40,40,42,42,77,69,47,74,46,45,54,59,58,42,17,13,9,5,50,56,56,49,53,37,37,9,5,38,35,40,26,104,68,106,16,27,29,9,79,5,54,37,49,71,62,61,53,69,30,135,29,5,43,62,82,53,29,64,73,27,60,83,59,49,35,31,63,40,103,106,62,118,22,79,191,145,17,55,37,13,41,9,52,27,5,30,25,61,36,5,1,0,0,0,0,57,48,25,56,42,36,57,9,35,5,22,25,25,26,43,29,5,1,0,0,0,0,0,26,41,47,47,39,40,40,35,22,46,5,34,65,40,5,1,64,47,35,35,35,35,98,100,69,74,73,3,48,43,34,25,25,23,21,47,27,54,37,54,34,38,29,75,78,65,66,52,70,62,62,63,21,17,65,107,134,134,54,76,27,24,35,41,33,21,37,36,17,26,26,29,13,81,9,60,143,29,20,54,28,28,28,28,47,39,25,29,28,10,57,32,70,56,33,45,29,5,66,32,45,14,46,34,43,38,13,30,9,20,5,1,0,0,102,20,44,35,58,52,57,55,32,63,60,48,44,51,51,59,51,13,118,79,31,44,32,40,52,11,37,36,5,14,39,65,10,59,35,23,24,21,24,43,10,21,24,24,10,33,70,76,18,70,79,42,44,79,50,79,56,19,33,36,37,19,33,10,22,25,26,26,27,10,17,25,30,24,32,32,35,16,40,71,21,27,27,32,27,42,37,32,32,36,13,11,5,22,20,78,5,1,0,0,0,0,0,0,102,25,30,24,37,63,48,72,66,9,73,5,30,21,46,32,26,50,66,44,18,26,9,19,5,29,29,28,23,19,10,26,28,27,37,46,37,32,86,36,59,13,32,53,48,72,84,9,56,42,33,53,63,89,13,9,15,5,32,28,37,48,72,69,9,70,153,27,13,36,13,10,35,23,23,21,17,29,25,17,14,45,10,5,23,33,45,34,94,5,14,33,23,59,21,17,29,54,17,13,10,58,31,34,32,47,25,22,21,24,23,25,21,25,27,22,71,23,36,39,13,10,51,61,45,19,23,38,23,36,24,39,14,27,23,14,38,40,10,75,5,22,20,37,57,5,1,0,0,0,0,48,26,95,100,5,37,36,5,22,47,63,21,60,67,39,13,9,39,5,26,47,20,43,31,9,20,5,24,99,27,11,5,25,34,53,113,30,22,5,7,47,38,21,94,57,98,203,17,20,5,7,68,19,28,46,5,7,48,19,22,40,5,7,45,19,24,42,5,7,40,19,27,45,5,7,37,19,23,41,5,7,30,19,21,39,5,7,79,19,20,32,5,7,68,19,21,33,5,7,62,19,21,33,5,7,70,19,31,43,5,7,52,19,32,44,5,7,96,19,25,37,5,7,54,75,19,23,31,49,5,7,50,73,19,21,31,37,5,7,38,19,23,35,5,7,52,19,24,36,5,7,80,17,18,144,5,26,76,5,7,70,21,26,53,5,7,81,4,30,22,39,55,5,7,56,80,4,30,20,36,69,21,11,5,7,60,65,71,79,4,27,22,31,24,32,20,22,23,26,25,30,28,56,48,68,54,59,30,81,21,17,104,107,25,97,79,21,20,16,100,54,24,30,9,22,5,25,71,5,7,106,4,27,37,29,31,32,23,65,92,5,7,64,35,28,55,5,7,105,48,110,82,4,21,31,57,5,44,73,5,43,35,141,179,9,43,5,7,51,68,63,4,26,33,20,40,35,141,176,55,9,43,5,7,36,21,22,106,71,5,7,62,63,53,4,19,27,21,35,68,31,31,39,30,10,19,5,7,63,67,61,4,19,29,21,35,49,30,59,45,66,13,45,9,19,5,7,66,69,65,4,29,22,30,226,84,132,36,52,46,112,42,11,77,40,80,36,20,5,31,36,51,53,56,94,88,5,37,19,39,5,48,76,36,29,47,45,26,26,32,59,46,51,122,53,15,9,5,1,44,50,69,44,50,79,44,50,77,44,50,78,44,50,78,44,50,80,44,50,84,0,0,0,0,0,0,78,42,79,22,7,42,38,43,3,73,42,38,38,41,73,45,44,44,42,42,46,42,42,95,3,58,20,60,25,2,83,0,0,0,0,0,0,102,26,100,5,24,92,27,11,5,26,47,20,43,50,60,61,133,64,38,9,20,5,25,23,77,5,1,0,0,0,0,0,0,0,0,0,102,15,92,54,5,16,30,5,25,23,78,5,1,0,0,0,39,21,23,24,14,14,14,14,13,10,49,32,42,81,65,47,51,9,47,5,2,39,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,2,79,36,113,77,42,48,113,103,3,74,42,38,38,41,73,45,51,44,44,42,42,46,42,42,96,3,59,20,48,35,34,5,32,2,84,0,0,0,102,26,100,5,24,91,40,5,19,72,34,44,84,37,50,55,48,105,13,114,90,76,38,9,5,25,27,41,5,57,48,43,35,87,73,120,65,9,5,27,27,60,72,24,61,27,58,47,32,33,36,51,79,37,46,17,107,97,88,39,118,31,44,110,13,31,9,41,5,25,23,78,5,1,77,39,28,85,5,24,29,58,5,1,47,69,39,41,43,50,49,46,47,51,46,53,73,70,65,67,75,66,78,3,44,54,54,48,54,34,79,124,128,16,1,56,41,1,70,10,18,17,37,27,37,35,21,24,19,95,31,100,19,31,31,40,83,97,32,31,95,105,32,40,40,77,100,16,77,82,9,16,16,91,5,15,1,0,0,0,0,0,0,0,0,105,17,44,84,6,17,44,85,43,46,45,5,3,48,26,100,5,19,48,81,32,81,185,9,20,5,17,23,48,81,32,82,9,21,5,24,76,29,90,69,5,1,0,0,0,0,0,94,69,35,45,3,63,34,41,35,42,37,3,64,43,44,154,22,6,3,68,38,86,3,68,76,104,85,3,71,42,99,42,40,3,48,26,65,13,74,21,25,9,52,50,9,21,5,19,36,43,66,92,81,185,9,20,5,17,23,43,66,92,82,9,21,5,24,78,29,76,57,67,82,79,35,55,9,5,1,0,0,24,93,93,93,93,93,66,66,0,0,33,0],"data":{"mappings":"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AAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QACvE,QAAQ;QAAY,QAAQ;QAAY,QAAQ;QAAe,QAAQ;QA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","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/node.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/base.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/fs.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/TTFFont.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/decorators.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/directory.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/cmap.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/head.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/hhea.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/hmtx.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/maxp.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/name.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/encodings.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/OS2.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/post.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/cvt.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/fpgm.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/loca.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/prep.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/glyf.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFFont.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFIndex.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFTop.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFDict.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFOperand.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFPointer.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFPrivateDict.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFStandardStrings.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFEncodings.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/cff/CFFCharsets.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/variations.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/opentype.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/VORG.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/EBLC.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/EBDT.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/sbix.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/COLR.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/CPAL.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/BASE.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/GDEF.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/GPOS.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/GSUB.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/JSTF.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/HVAR.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/DSIG.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/gasp.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/hdmx.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/kern.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/LTSH.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/PCLT.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/VDMX.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/vhea.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/vmtx.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/avar.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/bsln.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/aat.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/feat.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/fvar.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/gvar.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/just.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/morx.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/opbd.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/CmapProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/utils.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/LayoutEngine.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/KernProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/UnicodeLayoutEngine.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/GlyphRun.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/BBox.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/Script.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/layout/GlyphPosition.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/aat/AATLayoutEngine.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/aat/AATFeatureMap.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/aat/AATMorxProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/aat/AATStateMachine.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/aat/AATLookupTable.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/OTLayoutEngine.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/ShapingPlan.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/DefaultShaper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/ArabicShaper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/HangulShaper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/GlyphInfo.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/OTProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/GlyphIterator.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/IndicShaper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/indic.json","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/use.json","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/indic-data.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/shapers/UniversalShaper.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/GSUBProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/opentype/GPOSProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/TTFGlyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/Glyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/Path.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/StandardNames.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/CFFGlyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/SBIXGlyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/COLRGlyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/GlyphVariationProcessor.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/subset/TTFSubset.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/subset/Subset.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/TTFGlyphEncoder.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/subset/CFFSubset.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/WOFFFont.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/WOFFDirectory.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/WOFF2Font.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/glyph/WOFF2Glyph.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/tables/WOFF2Directory.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/TrueTypeCollection.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/fontkit/dist/src/DFont.js"],"sourcesContent":["import { registerFormat, create, defaultLanguage, setDefaultLanguage } from './base';\nimport { open, openSync } from './fs';\nimport TTFFont from './TTFFont';\nimport WOFFFont from './WOFFFont';\nimport WOFF2Font from './WOFF2Font';\nimport TrueTypeCollection from './TrueTypeCollection';\nimport DFont from './DFont';\n\n// Register font formats\nregisterFormat(TTFFont);\nregisterFormat(WOFFFont);\nregisterFormat(WOFF2Font);\nregisterFormat(TrueTypeCollection);\nregisterFormat(DFont);\n\nexport * from './base';\nexport * from './fs';\n","import {DecodeStream} from 'restructure';\n\nexport let logErrors = false;\n\nlet formats = [];\nexport function registerFormat(format) {\n  formats.push(format);\n};\n\nexport function create(buffer, postscriptName) {\n  for (let i = 0; i < formats.length; i++) {\n    let format = formats[i];\n    if (format.probe(buffer)) {\n      let font = new format(new DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nexport let defaultLanguage = 'en';\nexport function setDefaultLanguage(lang = 'en') {\n  defaultLanguage = lang;\n};\n","import { create } from './base';\nimport fs from 'fs';\n\nexport function openSync(filename, postscriptName) {\n  let buffer = fs.readFileSync(filename);\n  return create(buffer, postscriptName);\n}\n\nexport async function open(filename, postscriptName, callback) {\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  let buffer = await fs.promises.readFile(filename);\n  return create(buffer, postscriptName);\n}\n","import * as r from 'restructure';\nimport { cache } from './decorators';\nimport * as fontkit from './base';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport CmapProcessor from './CmapProcessor';\nimport LayoutEngine from './layout/LayoutEngine';\nimport TTFGlyph from './glyph/TTFGlyph';\nimport CFFGlyph from './glyph/CFFGlyph';\nimport SBIXGlyph from './glyph/SBIXGlyph';\nimport COLRGlyph from './glyph/COLRGlyph';\nimport GlyphVariationProcessor from './glyph/GlyphVariationProcessor';\nimport TTFSubset from './subset/TTFSubset';\nimport CFFSubset from './subset/CFFSubset';\nimport BBox from './glyph/BBox';\nimport { asciiDecoder } from './utils';\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nexport default class TTFFont {\n  type = 'TTF';\n\n  static probe(buffer) {\n    let format = asciiDecoder.decode(buffer.slice(0, 4));\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  }\n\n  constructor(stream, variationCoords = null) {\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (let tag in this.directory.tables) {\n      let table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  setDefaultLanguage(lang = null) {\n    this.defaultLanguage = lang;\n  }\n\n  _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(`Error decoding table ${table.tag}`);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  }\n\n  _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {_startOffset: 0});\n  }\n\n  _decodeTable(table) {\n    let pos = this.stream.pos;\n\n    let stream = this._getTableStream(table.tag);\n    let result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  }\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  getName(key, lang = this.defaultLanguage || fontkit.defaultLanguage) {\n    let record = this.name && this.name.records[key];\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return (\n          record[lang]\n          || record[this.defaultLanguage]\n          || record[fontkit.defaultLanguage]\n          || record['en']\n          || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n          || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  get postscriptName() {\n    return this.getName('postscriptName');\n  }\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n  get fullName() {\n    return this.getName('fullName');\n  }\n\n  /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */\n  get familyName() {\n    return this.getName('fontFamily');\n  }\n\n  /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */\n  get subfamilyName() {\n    return this.getName('fontSubfamily');\n  }\n\n  /**\n   * The font's copyright information\n   * @type {string}\n   */\n  get copyright() {\n    return this.getName('copyright');\n  }\n\n  /**\n   * The font's version number\n   * @type {string}\n   */\n  get version() {\n    return this.getName('version');\n  }\n\n  /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */\n  get ascent() {\n    return this.hhea.ascent;\n  }\n\n  /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */\n  get descent() {\n    return this.hhea.descent;\n  }\n\n  /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */\n  get lineGap() {\n    return this.hhea.lineGap;\n  }\n\n  /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */\n  get underlinePosition() {\n    return this.post.underlinePosition;\n  }\n\n  /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */\n  get underlineThickness() {\n    return this.post.underlineThickness;\n  }\n\n  /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */\n  get italicAngle() {\n    return this.post.italicAngle;\n  }\n\n  /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */\n  get capHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.capHeight : this.ascent;\n  }\n\n  /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */\n  get xHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.xHeight : 0;\n  }\n\n  /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */\n  get numGlyphs() {\n    return this.maxp.numGlyphs;\n  }\n\n  /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */\n  get unitsPerEm() {\n    return this.head.unitsPerEm;\n  }\n\n  /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n  }\n\n  @cache\n  get _cmapProcessor() {\n    return new CmapProcessor(this.cmap);\n  }\n\n  /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */\n  @cache\n  get characterSet() {\n    return this._cmapProcessor.getCharacterSet();\n  }\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  glyphsForString(string) {\n    let glyphs = [];\n    let len = string.length;\n    let idx = 0;\n    let last = -1;\n    let state = -1;\n\n    while (idx <= len) {\n      let code = 0;\n      let nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          let next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = ((0xfe00 <= code && code <= 0xfe0f) || (0xe0100 <= code && code <= 0xe01ef)) ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  }\n\n  @cache\n  get _layoutEngine() {\n    return new LayoutEngine(this);\n  }\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  get availableFeatures() {\n    return this._layoutEngine.getAvailableFeatures();\n  }\n\n  getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  }\n\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  getGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n\n      } else if ((this.directory.tables.COLR) && (this.directory.tables.CPAL)) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  @cache\n  get variationAxes() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let axis of this.fvar.axis) {\n      res[axis.axisTag.trim()] = {\n        name: axis.name.en,\n        min: axis.minValue,\n        default: axis.defaultValue,\n        max: axis.maxValue\n      };\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */\n  @cache\n  get namedVariations() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let instance of this.fvar.instance) {\n      let settings = {};\n      for (let i = 0; i < this.fvar.axis.length; i++) {\n        let axis = this.fvar.axis[i];\n        settings[axis.axisTag.trim()] = instance.coord[i];\n      }\n\n      res[instance.name.en] = settings;\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  getVariation(settings) {\n    if (!(this.directory.tables.fvar && ((this.directory.tables.gvar && this.directory.tables.glyf) || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    let coords = this.fvar.axis.map((axis, i) => {\n      let axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    let stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    let font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  }\n\n  @cache\n  get _variationProcessor() {\n    if (!this.fvar) {\n      return null;\n    }\n\n    let variationCoords = this.variationCoords;\n\n    // Ignore if no variation coords and not CFF2\n    if (!variationCoords && !this.CFF2) {\n      return null;\n    }\n\n    if (!variationCoords) {\n      variationCoords = this.fvar.axis.map(axis => axis.defaultValue);\n    }\n\n    return new GlyphVariationProcessor(this, variationCoords);\n  }\n\n  // Standardized format plugin API\n  getFont(name) {\n    return this.getVariation(name);\n  }\n}\n","/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nexport function cache(target, key, descriptor) {\n  if (descriptor.get) {\n    let get = descriptor.get;\n    descriptor.get = function() {\n      let value = get.call(this);\n      Object.defineProperty(this, key, { value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    let fn = descriptor.value;\n\n    return {\n      get() {\n        let cache = new Map;\n        function memoized(...args) {\n          let key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          let result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        };\n\n        Object.defineProperty(this, key, {value: memoized});\n        return memoized;\n      }\n    };\n  }\n}\n","import * as r from 'restructure';\nimport Tables from './';\n\nlet TableEntry = new r.Struct({\n  tag:        new r.String(4),\n  checkSum:   r.uint32,\n  offset:     new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length:     r.uint32\n});\n\nlet Directory = new r.Struct({\n  tag:            new r.String(4),\n  numTables:      r.uint16,\n  searchRange:    r.uint16,\n  entrySelector:  r.uint16,\n  rangeShift:     r.uint16,\n  tables:         new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function() {\n  if (!Array.isArray(this.tables)) {\n    let tables = [];\n    for (let tag in this.tables) {\n      let table = this.tables[tag];\n      if (table) {\n        tables.push({\n          tag: tag,\n          checkSum: 0,\n          offset: new r.VoidPointer(Tables[tag], table),\n          length: Tables[tag].size(table)\n        });\n      }\n    }\n    \n    this.tables = tables;\n  }\n\n  this.tag = 'true';\n  this.numTables = this.tables.length;\n\n  let maxExponentFor2 = Math.floor((Math.log(this.numTables) / Math.LN2));\n  let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n\n  this.searchRange =  maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nexport default Directory;\n","let tables = {};\nexport default tables;\n\n// Required Tables\nimport cmap from './cmap';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport maxp from './maxp';\nimport name from './name';\nimport OS2 from './OS2';\nimport post from './post';\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = name;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n\n// TrueType Outlines\nimport cvt from './cvt';\nimport fpgm from './fpgm';\nimport loca from './loca';\nimport prep from './prep';\nimport glyf from './glyf';\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n\n// PostScript Outlines\nimport CFFFont from '../cff/CFFFont';\nimport VORG from './VORG';\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n\n// Bitmap Glyphs\nimport EBLC from './EBLC';\nimport sbix from './sbix';\nimport COLR from './COLR';\nimport CPAL from './CPAL';\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n\n// Advanced OpenType Tables\nimport BASE from './BASE';\nimport GDEF from './GDEF';\nimport GPOS from './GPOS';\nimport GSUB from './GSUB';\nimport JSTF from './JSTF';\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\nimport HVAR from './HVAR';\n\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\nimport DSIG from './DSIG';\nimport gasp from './gasp';\nimport hdmx from './hdmx';\nimport kern from './kern';\nimport LTSH from './LTSH';\nimport PCLT from './PCLT';\nimport VDMX from './VDMX';\nimport vhea from './vhea';\nimport vmtx from './vmtx';\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n\n// Apple Advanced Typography Tables\nimport avar from './avar';\nimport bsln from './bsln';\nimport feat from './feat';\nimport fvar from './fvar';\nimport gvar from './gvar';\nimport just from './just';\nimport morx from './morx';\nimport opbd from './opbd';\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n","import * as r from 'restructure';\n\nlet SubHeader = new r.Struct({\n  firstCode:      r.uint16,\n  entryCount:     r.uint16,\n  idDelta:        r.int16,\n  idRangeOffset:  r.uint16\n});\n\nlet CmapGroup = new r.Struct({\n  startCharCode:  r.uint32,\n  endCharCode:    r.uint32,\n  glyphID:        r.uint32\n});\n\nlet UnicodeValueRange = new r.Struct({\n  startUnicodeValue:  r.uint24,\n  additionalCount:    r.uint8\n});\n\nlet UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID:      r.uint16\n});\n\nlet DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nlet NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nlet VarSelectorRecord = new r.Struct({\n  varSelector:    r.uint24,\n  defaultUVS:     new r.Pointer(r.uint32, DefaultUVS, {type: 'parent'}),\n  nonDefaultUVS:  new r.Pointer(r.uint32, NonDefaultUVS, {type: 'parent'})\n});\n\nlet CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length:     r.uint16,   // Total table length in bytes (set to 262 for format 0)\n    language:   r.uint16,   // Language code for this encoding subtable, or zero if language-independent\n    codeMap:    new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length:           r.uint16,\n    language:         r.uint16,\n    subHeaderKeys:    new r.Array(r.uint16, 256),\n    subHeaderCount:   t => Math.max.apply(Math, t.subHeaderKeys),\n    subHeaders:       new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length:           r.uint16,              // Total table length in bytes\n    language:         r.uint16,              // Language code\n    segCountX2:       r.uint16,\n    segCount:         t => t.segCountX2 >> 1,\n    searchRange:      r.uint16,\n    entrySelector:    r.uint16,\n    rangeShift:       r.uint16,\n    endCode:          new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad:      new r.Reserved(r.uint16),       // This value should be zero\n    startCode:        new r.LazyArray(r.uint16, 'segCount'),\n    idDelta:          new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset:    new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, t => (t.length - t._currentOffset) / 2)\n  },\n\n  6: { // Trimmed table\n    length:         r.uint16,\n    language:       r.uint16,\n    firstCode:      r.uint16,\n    entryCount:     r.uint16,\n    glyphIndices:   new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint16,\n    is32:     new r.LazyArray(r.uint8, 8192),\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved:       new r.Reserved(r.uint16),\n    length:         r.uint32,\n    language:       r.uint32,\n    firstCode:      r.uint32,\n    entryCount:     r.uint32,\n    glyphIndices:   new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length:       r.uint32,\n    numRecords:   r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nlet CmapEntry = new r.Struct({\n  platformID:  r.uint16,  // Platform identifier\n  encodingID:  r.uint16,  // Platform-specific encoding identifier\n  table:       new r.Pointer(r.uint32, CmapSubtable, {type: 'parent', lazy: true})\n});\n\n// character to glyph mapping\nexport default new r.Struct({\n  version:      r.uint16,\n  numSubtables: r.uint16,\n  tables:       new r.Array(CmapEntry, 'numSubtables')\n});\n","import * as r from 'restructure';\n\n// font header\nexport default new r.Struct({\n  version:            r.int32,                   // 0x00010000 (version 1.0)\n  revision:           r.int32,                   // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber:        r.uint32,                  // set to 0x5F0F3CF5\n  flags:              r.uint16,\n  unitsPerEm:         r.uint16,                  // range from 64 to 16384\n  created:            new r.Array(r.int32, 2),\n  modified:           new r.Array(r.int32, 2),\n  xMin:               r.int16,                   // for all glyph bounding boxes\n  yMin:               r.int16,                   // for all glyph bounding boxes\n  xMax:               r.int16,                   // for all glyph bounding boxes\n  yMax:               r.int16,                   // for all glyph bounding boxes\n  macStyle:           new r.Bitfield(r.uint16, [\n    'bold', 'italic', 'underline', 'outline',\n    'shadow', 'condensed', 'extended'\n  ]),\n  lowestRecPPEM:      r.uint16,                  // smallest readable size in pixels\n  fontDirectionHint:  r.int16,\n  indexToLocFormat:   r.int16,                   // 0 for short offsets, 1 for long\n  glyphDataFormat:    r.int16                    // 0 for current format\n});\n","import * as r from 'restructure';\n\n// horizontal header\nexport default new r.Struct({\n  version:              r.int32,\n  ascent:               r.int16,   // Distance from baseline of highest ascender\n  descent:              r.int16,   // Distance from baseline of lowest descender\n  lineGap:              r.int16,   // Typographic line gap\n  advanceWidthMax:      r.uint16,  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing:   r.int16,   // Maximum advance width value in 'hmtx' table\n  minRightSideBearing:  r.int16,   // Minimum right sidebearing value\n  xMaxExtent:           r.int16,\n  caretSlopeRise:       r.int16,   // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun:        r.int16,   // 0 for vertical\n  caretOffset:          r.int16,   // Set to 0 for non-slanted fonts\n  reserved:             new r.Reserved(r.int16, 4),\n  metricDataFormat:     r.int16,   // 0 for current format\n  numberOfMetrics:      r.uint16   // Number of advance widths in 'hmtx' table\n});\n","import * as r from 'restructure';\n\nlet HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nexport default new r.Struct({\n  metrics:    new r.LazyArray(HmtxEntry, t => t.parent.hhea.numberOfMetrics),\n  bearings:   new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\n// maxiumum profile\nexport default new r.Struct({\n  version:                r.int32,\n  numGlyphs:              r.uint16,  // The number of glyphs in the font\n  maxPoints:              r.uint16,  // Maximum points in a non-composite glyph\n  maxContours:            r.uint16,  // Maximum contours in a non-composite glyph\n  maxComponentPoints:     r.uint16,  // Maximum points in a composite glyph\n  maxComponentContours:   r.uint16,  // Maximum contours in a composite glyph\n  maxZones:               r.uint16,  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints:      r.uint16,  // Maximum points used in Z0\n  maxStorage:             r.uint16,  // Number of Storage Area locations\n  maxFunctionDefs:        r.uint16,  // Number of FDEFs\n  maxInstructionDefs:     r.uint16,  // Number of IDEFs\n  maxStackElements:       r.uint16,  // Maximum stack depth\n  maxSizeOfInstructions:  r.uint16,  // Maximum byte count for glyph instructions\n  maxComponentElements:   r.uint16,  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth:      r.uint16   // Maximum levels of recursion; 1 for simple components\n});\n","import * as r from 'restructure';\nimport {getEncoding, LANGUAGES} from '../encodings';\n\nlet NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID:     r.uint16,\n  length:     r.uint16,\n  string:     new r.Pointer(r.uint16,\n    new r.String('length', t => getEncoding(t.platformID, t.encodingID, t.languageID)),\n    { type: 'parent', relativeTo: ctx => ctx.parent.stringOffset, allowNull: false }\n  )\n});\n\nlet LangTagRecord = new r.Struct({\n  length:  r.uint16,\n  tag:     new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {type: 'parent', relativeTo: ctx => ctx.stringOffset})\n});\n\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count'),\n    langTagCount:   r.uint16,\n    langTags:       new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nexport default NameTable;\n\nconst NAMES = [\n  'copyright',\n  'fontFamily',\n  'fontSubfamily',\n  'uniqueSubfamily',\n  'fullName',\n  'version',\n  'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n  'trademark',\n  'manufacturer',\n  'designer',\n  'description',\n  'vendorURL',\n  'designerURL',\n  'license',\n  'licenseURL',\n  null, // reserved\n  'preferredFamily',\n  'preferredSubfamily',\n  'compatibleFull',\n  'sampleText',\n  'postscriptCIDFontName',\n  'wwsFamilyName',\n  'wwsSubfamilyName'\n];\n\nNameTable.process = function(stream) {\n  var records = {};\n  for (let record of this.records) {\n    // find out what language this is for\n    let language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    let key = record.nameID >= 256 ? 'fontFeatures' : (NAMES[record.nameID] || record.nameID);\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    let obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function() {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  let records = [];\n  for (let key in this.records) {\n    let val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: val.en.length * 2,\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n","/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nexport function getEncoding(platformID, encodingID, languageID = 0) {\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n  \n  return ENCODINGS[platformID][encodingID];\n}\n\nconst SINGLE_BYTE_ENCODINGS = new Set(['x-mac-roman', 'x-mac-cyrillic', 'iso-8859-6', 'iso-8859-8']);\nconst MAC_ENCODINGS = {\n  'x-mac-croatian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n  'x-mac-gaelic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n  'x-mac-greek': 'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n  'x-mac-icelandic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-inuit': 'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n  'x-mac-ce': 'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n  'x-mac-romanian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-turkish': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\nconst encodingCache = new Map();\n\nexport function getEncodingMapping(encoding) {\n  let cached = encodingCache.get(encoding);\n  if (cached) {\n    return cached;\n  }\n\n  // These encodings aren't supported by TextDecoder.\n  let mapping = MAC_ENCODINGS[encoding];\n  if (mapping) {\n    let res = new Map();\n    for (let i = 0; i < mapping.length; i++) {\n      res.set(mapping.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n\n  // Only single byte encodings can be mapped 1:1.\n  if (SINGLE_BYTE_ENCODINGS.has(encoding)) {\n    // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n    // Use this to create a mapping of code points.\n    let decoder = new TextDecoder(encoding);\n    let mapping = new Uint8Array(0x80);\n    for (let i = 0; i < 0x80; i++) {\n      mapping[i] = 0x80 + i;\n    }\n\n    let res = new Map();\n    let s = decoder.decode(mapping);\n    for (let i = 0; i < 0x80; i++) {\n      res.set(s.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n}\n\n// Map of platform ids to encoding ids.\nexport const ENCODINGS = [\n  // unicode\n  ['utf-16be', 'utf-16be', 'utf-16be', 'utf-16be', 'utf-16be', 'utf-16be', 'utf-16be'],\n  \n  // macintosh\n  // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n  // 0\tRoman                 17\tMalayalam\n  // 1\tJapanese\t            18\tSinhalese\n  // 2\tTraditional Chinese\t  19\tBurmese\n  // 3\tKorean\t              20\tKhmer\n  // 4\tArabic\t              21\tThai\n  // 5\tHebrew\t              22\tLaotian\n  // 6\tGreek\t                23\tGeorgian\n  // 7\tRussian\t              24\tArmenian\n  // 8\tRSymbol\t              25\tSimplified Chinese\n  // 9\tDevanagari\t          26\tTibetan\n  // 10\tGurmukhi\t            27\tMongolian\n  // 11\tGujarati\t            28\tGeez\n  // 12\tOriya\t                29\tSlavic\n  // 13\tBengali\t              30\tVietnamese\n  // 14\tTamil\t                31\tSindhi\n  // 15\tTelugu\t              32\t(Uninterpreted)\n  // 16\tKannada\n  ['x-mac-roman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8',\n   'x-mac-greek', 'x-mac-cyrillic', 'x-mac-symbol', 'x-mac-devanagari', 'x-mac-gurmukhi', 'x-mac-gujarati',\n   'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese',\n   'Burmese', 'Khmer', 'iso-8859-11', 'Laotian', 'Georgian', 'Armenian', 'gbk', \n   'Tibetan', 'Mongolian', 'Geez', 'x-mac-ce', 'Vietnamese', 'Sindhi'],\n  \n  // ISO (deprecated)\n  ['ascii', null, 'iso-8859-1'],\n  \n  // windows\n  // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n  ['symbol', 'utf-16be', 'shift-jis', 'gb18030', 'big5', 'euc-kr', 'johab', null, null, null, 'utf-16be']\n];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nexport const MAC_LANGUAGE_ENCODINGS = {\n  15: 'x-mac-icelandic',\n  17: 'x-mac-turkish',\n  18: 'x-mac-croatian',\n  24: 'x-mac-ce',\n  25: 'x-mac-ce',\n  26: 'x-mac-ce',\n  27: 'x-mac-ce',\n  28: 'x-mac-ce',\n  30: 'x-mac-icelandic',\n  37: 'x-mac-romanian',\n  38: 'x-mac-ce',\n  39: 'x-mac-ce',\n  40: 'x-mac-ce',\n  143: 'x-mac-inuit',\n  146: 'x-mac-gaelic'\n};\n\n// Map of platform ids to BCP-47 language codes.\nexport const LANGUAGES = [\n  // unicode\n  [],\n  \n  { // macintosh\n    0: 'en',        30: 'fo',       60: 'ks',       90: 'rw',\n    1: 'fr',        31: 'fa',       61: 'ku',       91: 'rn',\n    2: 'de',        32: 'ru',       62: 'sd',       92: 'ny',\n    3: 'it',        33: 'zh',       63: 'bo',       93: 'mg',\n    4: 'nl',        34: 'nl-BE',    64: 'ne',       94: 'eo',\n    5: 'sv',        35: 'ga',       65: 'sa',       128: 'cy',\n    6: 'es',        36: 'sq',       66: 'mr',       129: 'eu',\n    7: 'da',        37: 'ro',       67: 'bn',       130: 'ca',\n    8: 'pt',        38: 'cz',       68: 'as',       131: 'la',\n    9: 'no',        39: 'sk',       69: 'gu',       132: 'qu',\n    10: 'he',       40: 'si',       70: 'pa',       133: 'gn',\n    11: 'ja',       41: 'yi',       71: 'or',       134: 'ay',\n    12: 'ar',       42: 'sr',       72: 'ml',       135: 'tt',\n    13: 'fi',       43: 'mk',       73: 'kn',       136: 'ug',\n    14: 'el',       44: 'bg',       74: 'ta',       137: 'dz',\n    15: 'is',       45: 'uk',       75: 'te',       138: 'jv',\n    16: 'mt',       46: 'be',       76: 'si',       139: 'su',\n    17: 'tr',       47: 'uz',       77: 'my',       140: 'gl',\n    18: 'hr',       48: 'kk',       78: 'km',       141: 'af',\n    19: 'zh-Hant',  49: 'az-Cyrl',  79: 'lo',       142: 'br',\n    20: 'ur',       50: 'az-Arab',  80: 'vi',       143: 'iu',\n    21: 'hi',       51: 'hy',       81: 'id',       144: 'gd',\n    22: 'th',       52: 'ka',       82: 'tl',       145: 'gv',\n    23: 'ko',       53: 'mo',       83: 'ms',       146: 'ga',\n    24: 'lt',       54: 'ky',       84: 'ms-Arab',  147: 'to',\n    25: 'pl',       55: 'tg',       85: 'am',       148: 'el-polyton',\n    26: 'hu',       56: 'tk',       86: 'ti',       149: 'kl',\n    27: 'es',       57: 'mn-CN',    87: 'om',       150: 'az',\n    28: 'lv',       58: 'mn',       88: 'so',       151: 'nn',\n    29: 'se',       59: 'ps',       89: 'sw',\n  },\n  \n  // ISO (deprecated)\n  [],\n  \n  { // windows                                        \n    0x0436: 'af',       0x4009: 'en-IN',    0x0487: 'rw',          0x0432: 'tn',       \n    0x041C: 'sq',       0x1809: 'en-IE',    0x0441: 'sw',          0x045B: 'si',          \n    0x0484: 'gsw',      0x2009: 'en-JM',    0x0457: 'kok',         0x041B: 'sk',          \n    0x045E: 'am',       0x4409: 'en-MY',    0x0412: 'ko',          0x0424: 'sl',          \n    0x1401: 'ar-DZ',    0x1409: 'en-NZ',    0x0440: 'ky',          0x2C0A: 'es-AR',       \n    0x3C01: 'ar-BH',    0x3409: 'en-PH',    0x0454: 'lo',          0x400A: 'es-BO',       \n    0x0C01: 'ar',       0x4809: 'en-SG',    0x0426: 'lv',          0x340A: 'es-CL',       \n    0x0801: 'ar-IQ',    0x1C09: 'en-ZA',    0x0427: 'lt',          0x240A: 'es-CO',       \n    0x2C01: 'ar-JO',    0x2C09: 'en-TT',    0x082E: 'dsb',         0x140A: 'es-CR',       \n    0x3401: 'ar-KW',    0x0809: 'en-GB',    0x046E: 'lb',          0x1C0A: 'es-DO',       \n    0x3001: 'ar-LB',    0x0409: 'en',       0x042F: 'mk',          0x300A: 'es-EC',       \n    0x1001: 'ar-LY',    0x3009: 'en-ZW',    0x083E: 'ms-BN',       0x440A: 'es-SV',       \n    0x1801: 'ary',      0x0425: 'et',       0x043E: 'ms',          0x100A: 'es-GT',       \n    0x2001: 'ar-OM',    0x0438: 'fo',       0x044C: 'ml',          0x480A: 'es-HN',       \n    0x4001: 'ar-QA',    0x0464: 'fil',      0x043A: 'mt',          0x080A: 'es-MX',       \n    0x0401: 'ar-SA',    0x040B: 'fi',       0x0481: 'mi',          0x4C0A: 'es-NI',       \n    0x2801: 'ar-SY',    0x080C: 'fr-BE',    0x047A: 'arn',         0x180A: 'es-PA',       \n    0x1C01: 'aeb',      0x0C0C: 'fr-CA',    0x044E: 'mr',          0x3C0A: 'es-PY',       \n    0x3801: 'ar-AE',    0x040C: 'fr',       0x047C: 'moh',         0x280A: 'es-PE',       \n    0x2401: 'ar-YE',    0x140C: 'fr-LU',    0x0450: 'mn',          0x500A: 'es-PR',       \n    0x042B: 'hy',       0x180C: 'fr-MC',    0x0850: 'mn-CN',       0x0C0A: 'es',          \n    0x044D: 'as',       0x100C: 'fr-CH',    0x0461: 'ne',          0x040A: 'es',          \n    0x082C: 'az-Cyrl',  0x0462: 'fy',       0x0414: 'nb',          0x540A: 'es-US',       \n    0x042C: 'az',       0x0456: 'gl',       0x0814: 'nn',          0x380A: 'es-UY',     \n    0x046D: 'ba',       0x0437: 'ka',       0x0482: 'oc',          0x200A: 'es-VE',       \n    0x042D: 'eu',       0x0C07: 'de-AT',    0x0448: 'or',          0x081D: 'sv-FI',       \n    0x0423: 'be',       0x0407: 'de',       0x0463: 'ps',          0x041D: 'sv',          \n    0x0845: 'bn',       0x1407: 'de-LI',    0x0415: 'pl',          0x045A: 'syr',         \n    0x0445: 'bn-IN',    0x1007: 'de-LU',    0x0416: 'pt',          0x0428: 'tg',          \n    0x201A: 'bs-Cyrl',  0x0807: 'de-CH',    0x0816: 'pt-PT',       0x085F: 'tzm',         \n    0x141A: 'bs',       0x0408: 'el',       0x0446: 'pa',          0x0449: 'ta',          \n    0x047E: 'br',       0x046F: 'kl',       0x046B: 'qu-BO',       0x0444: 'tt',          \n    0x0402: 'bg',       0x0447: 'gu',       0x086B: 'qu-EC',       0x044A: 'te',          \n    0x0403: 'ca',       0x0468: 'ha',       0x0C6B: 'qu',          0x041E: 'th',          \n    0x0C04: 'zh-HK',    0x040D: 'he',       0x0418: 'ro',          0x0451: 'bo',          \n    0x1404: 'zh-MO',    0x0439: 'hi',       0x0417: 'rm',          0x041F: 'tr',          \n    0x0804: 'zh',       0x040E: 'hu',       0x0419: 'ru',          0x0442: 'tk',          \n    0x1004: 'zh-SG',    0x040F: 'is',       0x243B: 'smn',         0x0480: 'ug',          \n    0x0404: 'zh-TW',    0x0470: 'ig',       0x103B: 'smj-NO',      0x0422: 'uk',          \n    0x0483: 'co',       0x0421: 'id',       0x143B: 'smj',         0x042E: 'hsb',         \n    0x041A: 'hr',       0x045D: 'iu',       0x0C3B: 'se-FI',       0x0420: 'ur',          \n    0x101A: 'hr-BA',    0x085D: 'iu-Latn',  0x043B: 'se',          0x0843: 'uz-Cyrl',     \n    0x0405: 'cs',       0x083C: 'ga',       0x083B: 'se-SE',       0x0443: 'uz',          \n    0x0406: 'da',       0x0434: 'xh',       0x203B: 'sms',         0x042A: 'vi',          \n    0x048C: 'prs',      0x0435: 'zu',       0x183B: 'sma-NO',      0x0452: 'cy',          \n    0x0465: 'dv',       0x0410: 'it',       0x1C3B: 'sms',         0x0488: 'wo',          \n    0x0813: 'nl-BE',    0x0810: 'it-CH',    0x044F: 'sa',          0x0485: 'sah',         \n    0x0413: 'nl',       0x0411: 'ja',       0x1C1A: 'sr-Cyrl-BA',  0x0478: 'ii',          \n    0x0C09: 'en-AU',    0x044B: 'kn',       0x0C1A: 'sr',          0x046A: 'yo',           \n    0x2809: 'en-BZ',    0x043F: 'kk',       0x181A: 'sr-Latn-BA',  \n    0x1009: 'en-CA',    0x0453: 'km',       0x081A: 'sr-Latn',     \n    0x2409: 'en-029',   0x0486: 'quc',      0x046C: 'nso',         \n  }\n];\n","import * as r from 'restructure';\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth:          r.int16,   // average weighted advance width of lower case letters and space\n    usWeightClass:          r.uint16,  // visual weight of stroke in glyphs\n    usWidthClass:           r.uint16,  // relative change from the normal aspect ratio (width to height ratio)\n    fsType:                 new r.Bitfield(r.uint16, [ // Indicates font embedding licensing rights\n      null, 'noEmbedding', 'viewOnly', 'editable', null,\n      null, null, null, 'noSubsetting', 'bitmapOnly'\n    ]),\n    ySubscriptXSize:        r.int16,   // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize:        r.int16,   // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset:      r.int16,   // recommended horizontal offset for subscripts\n    ySubscriptYOffset:      r.int16,   // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize:      r.int16,   // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize:      r.int16,   // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset:    r.int16,   // recommended horizontal offset for superscripts\n    ySuperscriptYOffset:    r.int16,   // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize:         r.int16,   // width of the strikeout stroke\n    yStrikeoutPosition:     r.int16,   // position of the strikeout stroke relative to the baseline\n    sFamilyClass:           r.int16,   // classification of font-family design\n    panose:                 new r.Array(r.uint8, 10),   // describe the visual characteristics of a given typeface\n    ulCharRange:            new r.Array(r.uint32, 4),\n    vendorID:               new r.String(4),          // four character identifier for the font vendor\n    fsSelection:            new r.Bitfield(r.uint16, [  // bit field containing information about the font\n      'italic', 'underscore', 'negative', 'outlined', 'strikeout',\n      'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique'\n    ]),\n    usFirstCharIndex:       r.uint16,  // The minimum Unicode index in this font\n    usLastCharIndex:        r.uint16   // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16\n  },\n\n  5: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nlet versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nexport default OS2;\n","import * as r from 'restructure';\n\n// PostScript information\nexport default new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle:        r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition:  r.int16,   // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,   // Suggested values for the underline thickness\n    isFixedPitch:       r.uint32,  // Whether the font is monospaced\n    minMemType42:       r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42:       r.uint32,  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1:        r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1:        r.uint32   // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names:          new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets:        new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, t => t.parent.maxp.numGlyphs)\n  }\n});\n","import * as r from 'restructure';\n\n// An array of predefined values accessible by instructions\nexport default new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n","import * as r from 'restructure';\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nexport default new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\nlet loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function() {\n  if (this.version === 0 && !this._processed) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n    this._processed = true;\n  }\n};\n\nloca.preEncode = function() {\n  if (this.version === 0 && this._processed !== false) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n    this._processed = false;\n  }\n};\n\nexport default loca;\n","import * as r from 'restructure';\n\n// Set of instructions executed whenever the point size or font transformation change\nexport default new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\n// only used for encoding\nexport default new r.Array(new r.Buffer);\n","import * as r from 'restructure';\nimport CFFIndex from './CFFIndex';\nimport CFFTop from './CFFTop';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport standardStrings from './CFFStandardStrings';\n\nclass CFFFont {\n  constructor(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  static decode(stream) {\n    return new CFFFont(stream);\n  }\n\n  decode() {\n    let start = this.stream.pos;\n    let top = CFFTop.decode(this.stream);\n    for (let key in top) {\n      let val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  }\n\n  string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  }\n\n  get postscriptName() {\n    if (this.version < 2) {\n      return this.nameIndex[0];\n    }\n\n    return null;\n  }\n\n  get fullName() {\n    return this.string(this.topDict.FullName);\n  }\n\n  get familyName() {\n    return this.string(this.topDict.FamilyName);\n  }\n\n  getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  }\n\n  getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    let { charset } = this.topDict;\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (let i = 0; i < charset.ranges.length; i++) {\n          let range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  }\n\n  fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        let { ranges } = this.topDict.FDSelect;\n        let low = 0;\n        let high = ranges.length - 1;\n\n        while (low <= high) {\n          let mid = (low + high) >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n    }\n  }\n\n  privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      let fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  }\n}\n\nexport default CFFFont;\n","import * as r from 'restructure';\n\nexport default class CFFIndex {\n  constructor(type) {\n    this.type = type;\n  }\n\n  getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  }\n\n  decode(stream, parent) {\n    let version = this.getCFFVersion(parent);\n    let count = version >= 2\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    let offSize = stream.readUInt8();\n    let offsetType;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n    }\n\n    let ret = [];\n    let startPos = stream.pos + ((count + 1) * offSize) - 1;\n\n    let start = offsetType.decode(stream);\n    for (let i = 0; i < count; i++) {\n      let end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        let pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  }\n\n  size(arr, parent) {\n    let size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let offset = 1;\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  }\n\n  encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let sizes = [];\n    let offset = 1;\n    for (let item of arr) {\n      let s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (let size of sizes) {\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (let item of arr) {\n      type.encode(stream, item, parent);\n    }\n\n    return;\n  }\n}\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport StandardStrings from './CFFStandardStrings';\nimport { StandardEncoding, ExpertEncoding } from './CFFEncodings';\nimport { ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset } from './CFFCharsets';\nimport { ItemVariationStore } from '../tables/variations';\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass PredefinedOp {\n  constructor(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  }\n\n  size(value, ctx) {\n    return this.type.size(value, ctx);\n  }\n\n  encode(stream, value, ctx) {\n    let index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  }\n}\n\nclass CFFEncodingVersion extends r.Number {\n  constructor() {\n    super('UInt8');\n  }\n\n  decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  }\n}\n\nlet Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nlet Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nlet CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  }\n\n  // TODO: supplement?\n});\n\nlet CFFEncoding = new PredefinedOp([ StandardEncoding, ExpertEncoding ], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass RangeArray extends r.Array {\n  decode(stream, parent) {\n    let length = resolveLength(this.length, stream, parent);\n    let count = 0;\n    let res = [];\n    while (count < length) {\n      let range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  }\n}\n\nlet CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, t => t.parent.CharStrings.length - 1)\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, t => t.parent.CharStrings.length - 1)\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, t => t.parent.CharStrings.length - 1)\n  }\n});\n\nlet CFFCharset = new PredefinedOp([ ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset ], new CFFPointer(CFFCustomCharset, {lazy: true}));\n\nlet FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nlet FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\n\nlet FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, t => t.parent.CharStrings.length)\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\n\nlet ptr = new CFFPointer(CFFPrivateDict);\nclass CFFPrivateOp {\n  decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  }\n\n  size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  }\n\n  encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  }\n}\n\nlet FontDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 38],  'FontName',             'sid',                                  null],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [[12, 5],   'PaintType',            'number',                               0],\n]);\n\nlet CFFTopDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [[12, 30],  'ROS',                  ['sid', 'sid', 'number'],               null],\n\n  [0,         'version',              'sid',                                  null],\n  [1,         'Notice',               'sid',                                  null],\n  [[12, 0],   'Copyright',            'sid',                                  null],\n  [2,         'FullName',             'sid',                                  null],\n  [3,         'FamilyName',           'sid',                                  null],\n  [4,         'Weight',               'sid',                                  null],\n  [[12, 1],   'isFixedPitch',         'boolean',                              false],\n  [[12, 2],   'ItalicAngle',          'number',                               0],\n  [[12, 3],   'UnderlinePosition',    'number',                               -100],\n  [[12, 4],   'UnderlineThickness',   'number',                               50],\n  [[12, 5],   'PaintType',            'number',                               0],\n  [[12, 6],   'CharstringType',       'number',                               2],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [13,        'UniqueID',             'number',                               null],\n  [5,         'FontBBox',             'array',                                [0, 0, 0, 0]],\n  [[12, 8],   'StrokeWidth',          'number',                               0],\n  [14,        'XUID',                 'array',                                null],\n  [15,        'charset',              CFFCharset,                             ISOAdobeCharset],\n  [16,        'Encoding',             CFFEncoding,                            StandardEncoding],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 20],  'SyntheticBase',        'number',                               null],\n  [[12, 21],  'PostScript',           'sid',                                  null],\n  [[12, 22],  'BaseFontName',         'sid',                                  null],\n  [[12, 23],  'BaseFontBlend',        'delta',                                null],\n\n  // CID font specific\n  [[12, 31],  'CIDFontVersion',       'number',                               0],\n  [[12, 32],  'CIDFontRevision',      'number',                               0],\n  [[12, 33],  'CIDFontType',          'number',                               0],\n  [[12, 34],  'CIDCount',             'number',                               8720],\n  [[12, 35],  'UIDBase',              'number',                               null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [[12, 38],  'FontName',             'sid',                                  null]\n]);\n\nlet VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n})\n\nlet CFF2TopDict = new CFFDict([\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [24,        'vstore',               new CFFPointer(VariationStore),         null],\n  [25,        'maxstack',             'number',                               193]\n]);\n\nlet CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize:            r.uint8,\n    offSize:            r.uint8,\n    nameIndex:          new CFFIndex(new r.String('length')),\n    topDictIndex:       new CFFIndex(CFFTopDict),\n    stringIndex:        new CFFIndex(new r.String('length')),\n    globalSubrIndex:    new CFFIndex\n  },\n\n  2: {\n    hdrSize:            r.uint8,\n    length:             r.uint16,\n    topDict:            CFF2TopDict,\n    globalSubrIndex:    new CFFIndex\n  }\n});\n\nexport default CFFTop;\n","import isEqual from 'fast-deep-equal';\nimport * as r from 'restructure';\nimport CFFOperand from './CFFOperand';\nimport { PropertyDescriptor } from 'restructure';\n\nexport default class CFFDict {\n  constructor(ops = []) {\n    this.ops = ops;\n    this.fields = {};\n    for (let field of ops) {\n      let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  decodeOperands(type, stream, ret, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.decodeOperands(type[i], stream, ret, [op]));\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  }\n\n  encodeOperands(type, stream, ctx, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.encodeOperands(type[i], stream, ctx, op)[0]);\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  }\n\n  decode(stream, parent) {\n    let end = stream.pos + parent.length;\n    let ret = {};\n    let operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (let key in this.fields) {\n      let field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      let b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = (b << 8) | stream.readUInt8();\n        }\n\n        let field = this.fields[b];\n        if (!field) {\n          throw new Error(`Unknown operator ${b}`);\n        }\n\n        let val = this.decodeOperands(field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, field[1], val);\n          } else {\n            ret[field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  }\n\n  size(dict, parent, includePointers = true) {\n    let ctx = {\n      parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    let len = 0;\n\n    for (let k in this.fields) {\n      let field = this.fields[k];\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], null, ctx, val);\n      for (let op of operands) {\n        len += CFFOperand.size(op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  }\n\n  encode(stream, dict, parent) {\n    let ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (let field of this.ops) {\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (let op of operands) {\n        CFFOperand.encode(stream, op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (let op of key) {\n        stream.writeUInt8(op);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      let ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  }\n}\n","const FLOAT_EOF = 0xf;\nconst FLOAT_LOOKUP = [\n  '0', '1', '2', '3', '4', '5', '6', '7',\n  '8', '9', '.', 'E', 'E-', null, '-'\n];\n\nconst FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nexport default class CFFOperand {\n  static decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      let str = '';\n      while (true) {\n        let b = stream.readUInt8();\n\n        let n1 = b >> 4;\n        if (n1 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n1];\n\n        let n2 = b & 15;\n        if (n2 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  }\n\n  static size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) { // floating point\n      let str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n\n    } else {\n      return 5;\n    }\n  }\n\n  static encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    let val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n\n    } else if ((val | 0) !== val) { // floating point\n      stream.writeUInt8(30);\n\n      let str = '' + val;\n      for (let i = 0; i < str.length; i += 2) {\n        let c1 = str[i];\n        let n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          let c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8((n1 << 4) | (n2 & 15));\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8((FLOAT_EOF << 4));\n      }\n\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  }\n}\n","import * as r from 'restructure';\n\nexport default class CFFPointer extends r.Pointer {\n  constructor(type, options = {}) {\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    super(null, type, options);\n  }\n\n  decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: () => operands[0]\n    };\n\n    return super.decode(stream, parent, operands);\n  }\n\n  encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: () => 0\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    let ptr = null;\n    this.offsetType = {\n      encode: (stream, val) => ptr = val\n    };\n\n    super.encode(stream, value, ctx);\n    return [new Ptr(ptr)];\n  }\n}\n\nclass Ptr {\n  constructor(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  valueOf() {\n    return this.val;\n  }\n}\n","import CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\n\nclass CFFBlendOp {\n  static decode(stream, parent, operands) {\n    let numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  }\n}\n\nexport default new CFFDict([\n  // key       name                    type                                          default\n  [6,         'BlueValues',           'delta',                                       null],\n  [7,         'OtherBlues',           'delta',                                       null],\n  [8,         'FamilyBlues',          'delta',                                       null],\n  [9,         'FamilyOtherBlues',     'delta',                                       null],\n  [[12, 9],   'BlueScale',            'number',                                      0.039625],\n  [[12, 10],  'BlueShift',            'number',                                      7],\n  [[12, 11],  'BlueFuzz',             'number',                                      1],\n  [10,        'StdHW',                'number',                                      null],\n  [11,        'StdVW',                'number',                                      null],\n  [[12, 12],  'StemSnapH',            'delta',                                       null],\n  [[12, 13],  'StemSnapV',            'delta',                                       null],\n  [[12, 14],  'ForceBold',            'boolean',                                     false],\n  [[12, 17],  'LanguageGroup',        'number',                                      0],\n  [[12, 18],  'ExpansionFactor',      'number',                                      0.06],\n  [[12, 19],  'initialRandomSeed',    'number',                                      0],\n  [20,        'defaultWidthX',        'number',                                      0],\n  [21,        'nominalWidthX',        'number',                                      0],\n  [22,        'vsindex',              'number',                                      0],\n  [23,        'blend',                CFFBlendOp,                                    null],\n  [19,        'Subrs',                new CFFPointer(new CFFIndex, {type: 'local'}), null]\n]);\n","// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nexport default [\n  \".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\",\n  \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\",\n  \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\",\n  \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\",\n  \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\",\n  \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n  \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\",\n  \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\",\n  \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\",\n  \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\",\n  \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\",\n  \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\",\n  \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\",\n  \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\",\n  \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\",\n  \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\",\n  \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\",\n  \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\",\n  \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\",\n  \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\",\n  \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\",\n  \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\",\n  \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\",\n  \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\",\n  \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\",\n  \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\",\n  \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\",\n  \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\",\n  \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\",\n  \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\",\n  \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\",\n  \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\",\n  \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\",\n  \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\",\n  \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\",\n  \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\",\n  \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\",\n  \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\",\n  \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\",\n  \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\",\n  \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\",\n  \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\",\n  \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\",\n  \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\",\n  \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\",\n  \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\",\n  \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\",\n  \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\",\n  \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\",\n  \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\",\n  \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\",\n  \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\",\n  \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\",\n  \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\",\n  \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\",\n  \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\",\n  \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\",\n  \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\",\n  \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\",\n  \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\",\n  \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\",\n  \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\",\n  \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\",\n  \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\",\n  \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\",\n  \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\",\n  \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"\n];\n","export let StandardEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n  'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n  'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n  'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n  'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n  'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n  'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n  'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n  'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n  '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n  'lslash', 'oslash', 'oe', 'germandbls'\n];\n\nexport let ExpertEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n  'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n  'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n  'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n  'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n  'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n  'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n  'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n  'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n  'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n  '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n  '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n  'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n  'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n  'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n  'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n  'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'\n];\n","export let ISOAdobeCharset = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar',\n  'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright',\n  'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero',\n  'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question',\n  'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\n  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n  'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase',\n  'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n  'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla',\n  'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine',\n  'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n  'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n  'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter',\n  'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior',\n  'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n  'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n  'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n  'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex',\n  'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute',\n  'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla',\n  'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n  'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis',\n  'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis',\n  'ugrave', 'yacute', 'ydieresis', 'zcaron'\n];\n\nexport let ExpertCharset = [\n  '.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n  'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n  'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n  'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n  'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n  'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n  'colon', 'semicolon', 'commasuperior', 'threequartersemdash',\n  'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n  'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n  'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n  'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n  'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n  'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle',\n  'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall',\n  'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall',\n  'Cedillasmall', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall',\n  'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall',\n  'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n  'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n  'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n  'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n  'Ydieresissmall'\n];\n\nexport let ExpertSubsetCharset = [\n  '.notdef', 'space', 'dollaroldstyle', 'dollarsuperior',\n  'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'comma', 'hyphen', 'period', 'fraction',\n  'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle',\n  'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted',\n  'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter',\n  'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior'\n];\n","import {Feature} from './opentype';\nimport * as r from 'restructure';\n\n/*******************\n * Variation Store *\n *******************/\n\nlet F2DOT14 = new r.Fixed(16, 'BE', 14);\nlet RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nlet VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nlet DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, t => t.parent.shortDeltaCount),\n  regionDeltas: new r.Array(r.int8, t => t.parent.regionIndexCount - t.parent.shortDeltaCount),\n  deltas: t => t.shortDeltas.concat(t.regionDeltas)\n});\n\nlet ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\n\nexport let ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nlet ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: {\n    axisIndex: r.uint16,\n    axisIndex: r.uint16,\n    filterRangeMinValue: F2DOT14,\n    filterRangeMaxValue: F2DOT14\n  }\n});\n\nlet ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\n\nlet FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {type: 'parent'})\n});\n\nlet FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nlet FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {type: 'parent'}),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {type: 'parent'})\n});\n\nexport let FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n","import * as r from 'restructure';\n\n//########################\n// Scripts and Languages #\n//########################\n\nlet LangSysTable = new r.Struct({\n  reserved:         new r.Reserved(r.uint16),\n  reqFeatureIndex:  r.uint16,\n  featureCount:     r.uint16,\n  featureIndexes:   new r.Array(r.uint16, 'featureCount')\n});\n\nlet LangSysRecord = new r.Struct({\n  tag:      new r.String(4),\n  langSys:  new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nlet Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count:          r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nlet ScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nexport let ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nlet FeatureParams = new r.Struct({\n  version:    r.uint16, // should be set to 0 according OT spec\n  nameID:     r.uint16, //OT spec: UI Name ID or uiLabelNameId\n});\n\nexport let Feature = new r.Struct({\n  featureParams:      new r.Pointer(r.uint16, FeatureParams),\n  lookupCount:        r.uint16,\n  lookupListIndexes:  new r.Array(r.uint16, 'lookupCount')\n});\n\nlet FeatureRecord = new r.Struct({\n  tag:      new r.String(4),\n  feature:  new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nexport let FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nlet LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, [\n    'rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures',\n    'ignoreMarks', 'useMarkFilteringSet'\n  ])\n});\n\nexport function LookupList(SubTable) {\n  let Lookup = new r.Struct({\n    lookupType:         r.uint16,\n    flags:              LookupFlags,\n    subTableCount:      r.uint16,\n    subTables:          new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet:   new r.Optional(r.uint16, t => t.flags.flags.useMarkFilteringSet)\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nlet RangeRecord = new r.Struct({\n  start:              r.uint16,\n  end:                r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nexport let Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount:   r.uint16,\n    glyphs:       new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount:   r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nlet ClassRangeRecord = new r.Struct({\n  start:  r.uint16,\n  end:    r.uint16,\n  class:  r.uint16\n});\n\nexport let ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph:       r.uint16,\n    glyphCount:       r.uint16,\n    classValueArray:  new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount:  r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nexport let Device = new r.Struct({\n  a: r.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nlet LookupRecord = new r.Struct({\n  sequenceIndex:      r.uint16,\n  lookupListIndex:    r.uint16\n});\n\nlet Rule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  input:          new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nlet ClassRule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  classes:        new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nexport let Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    ruleSetCount:  r.uint16,\n    ruleSets:      new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    classDef:      new r.Pointer(r.uint16, ClassDef),\n    classSetCnt:   r.uint16,\n    classSet:      new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount:    r.uint16,\n    lookupCount:   r.uint16,\n    coverages:     new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nlet ChainRule = new r.Struct({\n  backtrackGlyphCount:  r.uint16,\n  backtrack:            new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount:      r.uint16,\n  input:                new r.Array(r.uint16, t => t.inputGlyphCount - 1),\n  lookaheadGlyphCount:  r.uint16,\n  lookahead:            new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount:          r.uint16,\n  lookupRecords:        new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nexport let ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    chainCount:         r.uint16,\n    chainRuleSets:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef:  new r.Pointer(r.uint16, ClassDef),\n    inputClassDef:      new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef:  new r.Pointer(r.uint16, ClassDef),\n    chainCount:         r.uint16,\n    chainClassSet:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount:    r.uint16,\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount:        r.uint16,\n    inputCoverage:          new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount:            r.uint16,\n    lookupRecords:          new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n","import * as r from 'restructure';\n\nlet VerticalOrigin = new r.Struct({\n  glyphIndex:   r.uint16,\n  vertOriginY:  r.int16\n});\n\nexport default new r.Struct({\n  majorVersion:           r.uint16,\n  minorVersion:           r.uint16,\n  defaultVertOriginY:     r.int16,\n  numVertOriginYMetrics:  r.uint16,\n  metrics:                new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n","import * as r from 'restructure';\nimport {BigMetrics} from './EBDT';\n\nlet SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nlet CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nlet IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, t => t.numGlyphs + 1)\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nlet IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nlet BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nexport default new r.Struct({\n  version:  r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes:    new r.Array(BitmapSizeTable, 'numSizes')\n});\n","import * as r from 'restructure';\n\nexport let BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nexport let SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nlet EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nclass ByteAligned {}\n\nclass BitAligned {}\n\nexport let glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\n","import * as r from 'restructure';\n\nlet ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), t => t.parent.parent.maxp.numGlyphs + 1)\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nexport default new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n","import * as r from 'restructure';\n\nlet LayerRecord = new r.Struct({\n  gid: r.uint16,          // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16  // Index value to use in the appropriate palette. This value must\n});                       // be less than numPaletteEntries in the CPAL table, except for\n                          // the special case noted below. Each palette entry is 16 bits.\n                          // A palette index of 0xFFFF is a special case indicating that\n                          // the text foreground color should be used.\n\nlet BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,             // Glyph ID of reference glyph. This glyph is for reference only\n                             // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n                             // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nexport default new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n","import * as r from 'restructure';\n\nlet ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes'),\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate:   r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate:     r.int16,   // X or Y value, in design units\n    referenceGlyph: r.uint16,  // GlyphID of control glyph\n    baseCoordPoint: r.uint16   // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate:   r.int16,                         // X or Y value, in design units\n    deviceTable:  new r.Pointer(r.uint16, Device)  // Device table for X or Y value\n  }\n});\n\nlet BaseValues = new r.Struct({\n  defaultIndex:   r.uint16,  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords:     new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nlet FeatMinMaxRecord = new r.Struct({\n  tag:        new r.String(4),  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'}), // May be NULL\n  maxCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'})  // May be NULL\n});\n\nlet MinMax = new r.Struct({\n  minCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  maxCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  featMinMaxCount:    r.uint16,                            // May be 0\n  featMinMaxRecords:  new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nlet BaseLangSysRecord = new r.Struct({\n  tag:    new r.String(4),  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {type: 'parent'})\n});\n\nlet BaseScript = new r.Struct({\n  baseValues:         new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax:      new r.Pointer(r.uint16, MinMax),     // May be NULL\n  baseLangSysCount:   r.uint16,                            // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nlet BaseScriptRecord = new r.Struct({\n  tag:      new r.String(4),  // 4-byte script identification tag\n  script:   new r.Pointer(r.uint16, BaseScript, {type: 'parent'})\n});\n\nlet BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nlet Axis = new r.Struct({\n  baseTagList:    new r.Pointer(r.uint16, BaseTagList),  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis:    new r.Pointer(r.uint16, Axis),   // May be NULL\n    vertAxis:     new r.Pointer(r.uint16, Axis)    // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet AttachPoint = new r.Array(r.uint16, r.uint16);\nlet AttachList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  glyphCount:     r.uint16,\n  attachPoints:   new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nlet CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate:     r.int16,\n    deviceTable:    new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nlet LigCaretList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount:  r.uint16,\n  ligGlyphs:      new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nlet MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount:       r.uint16,\n  coverage:           new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef:      new r.Pointer(r.uint16, ClassDef),\n    attachList:         new r.Pointer(r.uint16, AttachList),\n    ligCaretList:       new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet ValueFormat = new r.Bitfield(r.uint16, [\n  'xPlacement', 'yPlacement',\n  'xAdvance', 'yAdvance',\n  'xPlaDevice', 'yPlaDevice',\n  'xAdvDevice', 'yAdvDevice'\n]);\n\nlet types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance:   r.int16,\n  yAdvance:   r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel })\n};\n\nclass ValueRecord {\n  constructor(key = 'valueFormat') {\n    this.key = key;\n  }\n\n  buildStruct(parent) {\n    let struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    let fields = {};\n    fields.rel = () => struct._startOffset;\n\n    let format = struct[this.key];\n    for (let key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  }\n\n  size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  }\n\n  decode(stream, parent) {\n    let res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  }\n}\n\nlet PairValueRecord = new r.Struct({\n  secondGlyph:    r.uint16,\n  value1:         new ValueRecord('valueFormat1'),\n  value2:         new ValueRecord('valueFormat2')\n});\n\nlet PairSet = new r.Array(PairValueRecord, r.uint16);\n\nlet Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nlet Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    anchorPoint:    r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    xDeviceTable:   new r.Pointer(r.uint16, Device),\n    yDeviceTable:   new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet EntryExitRecord = new r.Struct({\n  entryAnchor:    new r.Pointer(r.uint16, Anchor, {type: 'parent'}),\n  exitAnchor:     new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkRecord = new r.Struct({\n  class:      r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkArray = new r.Array(MarkRecord, r.uint16);\n\nlet BaseRecord  = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.classCount);\nlet BaseArray   = new r.Array(BaseRecord, r.uint16);\n\nlet ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.parent.classCount);\nlet LigatureAttach  = new r.Array(ComponentRecord, r.uint16);\nlet LigatureArray   = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nlet GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      value:          new ValueRecord()\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      valueCount:     r.uint16,\n      values:         new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      pairSetCount:   r.uint16,\n      pairSets:       new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      classDef1:      new r.Pointer(r.uint16, ClassDef),\n      classDef2:      new r.Pointer(r.uint16, ClassDef),\n      class1Count:    r.uint16,\n      class2Count:    r.uint16,\n      classRecords:   new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format:             r.uint16,\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    entryExitCount:     r.uint16,\n    entryExitRecords:   new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    baseCoverage:       new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    baseArray:          new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage:   new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    ligatureArray:      new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format:             r.uint16,\n    mark1Coverage:      new r.Pointer(r.uint16, Coverage),\n    mark2Coverage:      new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    mark1Array:         new r.Pointer(r.uint16, MarkArray),\n    mark2Array:         new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context,          // Contextual positioning\n  8: ChainingContext,  // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat:   r.uint16,\n    lookupType:  r.uint16,   // cannot also be 9\n    extension:   new r.Pointer(r.uint32, null)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\n// export GPOSLookup for JSTF table\nexport { GPOSLookup };\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet Sequence = new r.Array(r.uint16, r.uint16);\nlet AlternateSet = Sequence;\n\nlet Ligature = new r.Struct({\n  glyph:      r.uint16,\n  compCount:  r.uint16,\n  components: new r.Array(r.uint16, t => t.compCount - 1)\n});\n\nlet LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nlet GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {// Single Substitution\n    1: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID:   r.int16\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      glyphCount:     r.uint16,\n      substitute:     new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    sequences:      new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    alternateSet:   new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    ligatureSets:   new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context,         // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat:   r.uint16,\n    lookupType:    r.uint16,   // cannot also be 7\n    extension:     new r.Pointer(r.uint32, null)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat:            r.uint16,\n    coverage:               new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount:             r.uint16,\n    substitutes:            new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n","import * as r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\nimport { GPOSLookup } from './GPOS';\n\nlet JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nlet JstfPriority = new r.Struct({\n  shrinkageEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nlet JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nlet JstfLangSysRecord = new r.Struct({\n  tag:         new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nlet JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount:   r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nlet JstfScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {type: 'parent'})\n});\n\nexport default new r.Struct({\n  version:     r.uint32,  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList:  new r.Array(JstfScriptRecord, 'scriptCount')\n});\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport { ItemVariationStore } from './variations';\n\n// TODO: add this to restructure\nclass VariableSizeNumber {\n  constructor(size) {\n    this._size = size;\n  }\n\n  decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1: return stream.readUInt8();\n      case 2: return stream.readUInt16BE();\n      case 3: return stream.readUInt24BE();\n      case 4: return stream.readUInt32BE();\n    }\n  }\n\n  size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  }\n}\n\nlet MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(t => ((t.parent.entryFormat & 0x0030) >> 4) + 1),\n  outerIndex: t => t.entry >> ((t.parent.entryFormat & 0x000F) + 1),\n  innerIndex: t => t.entry & ((1 << ((t.parent.entryFormat & 0x000F) + 1)) - 1)\n});\n\nlet DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\n\nexport default new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n","import * as r from 'restructure';\n\nlet Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nlet SignatureBlock = new r.Struct({\n  reserved:       new r.Reserved(r.uint16, 2),\n  cbSignature:    r.uint32,  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature:      new r.Buffer('cbSignature')\n});\n\nexport default new r.Struct({\n  ulVersion:       r.uint32,  // Version number of the DSIG table (0x00000001)\n  usNumSigs:       r.uint16,  // Number of signatures in the table\n  usFlag:          r.uint16,  // Permission flags\n  signatures:      new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n","import * as r from 'restructure';\n\nlet GaspRange = new r.Struct({\n  rangeMaxPPEM:       r.uint16,                  // Upper limit of range, in ppem\n  rangeGaspBehavior:  new r.Bitfield(r.uint16, [ // Flags describing desired rasterizer behavior\n    'grayscale', 'gridfit',\n    'symmetricSmoothing', 'symmetricGridfit'     // only in version 1, for ClearType\n  ])\n});\n\nexport default new r.Struct({\n  version:    r.uint16,  // set to 0\n  numRanges:  r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n","import * as r from 'restructure';\n\nlet DeviceRecord = new r.Struct({\n  pixelSize:      r.uint8,\n  maximumWidth:   r.uint8,\n  widths:         new r.Array(r.uint8, t => t.parent.parent.maxp.numGlyphs)\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nexport default new r.Struct({\n  version:            r.uint16,\n  numRecords:         r.int16,\n  sizeDeviceRecord:   r.int32,\n  records:            new r.Array(DeviceRecord, 'numRecords')\n});\n","import * as r from 'restructure';\n\nlet KernPair = new r.Struct({\n  left:   r.uint16,\n  right:  r.uint16,\n  value:  r.int16\n});\n\nlet ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: t => t.offsets.length && Math.max.apply(Math, t.offsets)\n});\n\nlet Kern2Array = new r.Struct({\n  off: t => t._startOffset - t.parent.parent._startOffset,\n  len: t => (((t.parent.leftTable.max - t.off) / t.parent.rowWidth) + 1) * (t.parent.rowWidth / 2),\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nlet KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs:         r.uint16,\n    searchRange:    r.uint16,\n    entrySelector:  r.uint16,\n    rangeShift:     r.uint16,\n    pairs:          new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth:   r.uint16,\n    leftTable:  new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    array:      new r.Pointer(r.uint16, Kern2Array, {type: 'parent'})\n  },\n\n  3: {\n    glyphCount:       r.uint16,\n    kernValueCount:   r.uint8,\n    leftClassCount:   r.uint8,\n    rightClassCount:  r.uint8,\n    flags:            r.uint8,\n    kernValue:        new r.Array(r.int16, 'kernValueCount'),\n    leftClass:        new r.Array(r.uint8, 'glyphCount'),\n    rightClass:       new r.Array(r.uint8, 'glyphCount'),\n    kernIndex:        new r.Array(r.uint8, t => t.leftClassCount * t.rightClassCount)\n  }\n});\n\nlet KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16,  // Microsoft has an extra sub-table version number\n    length:     r.uint16,  // Length of the subtable, in bytes\n    format:     r.uint8,   // Format of subtable\n    coverage:   new r.Bitfield(r.uint8, [\n      'horizontal',    // 1 if table has horizontal data, 0 if vertical\n      'minimum',       // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n      'crossStream',   // If set to 1, kerning is perpendicular to the flow of the text\n      'override'      // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  },\n  1: { // Apple uses this format\n    length:     r.uint32,\n    coverage:   new r.Bitfield(r.uint8, [\n      null, null, null, null, null,\n      'variation',     // Set if table has variation kerning values\n      'crossStream',   // Set if table has cross-stream kerning values\n      'vertical'      // Set if table has vertical kerning values\n    ]),\n    format:     r.uint8,\n    tupleIndex: r.uint16,\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  }\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables:    r.uint16,\n    tables:     new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved:   new r.Reserved(r.uint16), // the other half of the version number\n    nTables:    r.uint32,\n    tables:     new r.Array(KernTable, 'nTables')\n  }\n});\n","import * as r from 'restructure';\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nexport default new r.Struct({\n  version:    r.uint16,\n  numGlyphs:  r.uint16,\n  yPels:      new r.Array(r.uint8, 'numGlyphs')\n});\n","import * as r from 'restructure';\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nexport default new r.Struct({\n  version:              r.uint16,\n  fontNumber:           r.uint32,\n  pitch:                r.uint16,\n  xHeight:              r.uint16,\n  style:                r.uint16,\n  typeFamily:           r.uint16,\n  capHeight:            r.uint16,\n  symbolSet:            r.uint16,\n  typeface:             new r.String(16),\n  characterComplement:  new r.String(8),\n  fileName:             new r.String(6),\n  strokeWeight:         new r.String(1),\n  widthType:            new r.String(1),\n  serifStyle:           r.uint8,\n  reserved:             new r.Reserved(r.uint8)\n});\n","import * as r from 'restructure';\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nlet Ratio = new r.Struct({\n  bCharSet:       r.uint8,                             // Character set\n  xRatio:         r.uint8,                             // Value to use for x-Ratio\n  yStartRatio:    r.uint8,                             // Starting y-Ratio value\n  yEndRatio:      r.uint8                              // Ending y-Ratio value\n});\n\nlet vTable = new r.Struct({\n  yPelHeight:     r.uint16,                            // yPelHeight to which values apply\n  yMax:           r.int16,                             // Maximum value (in pels) for this yPelHeight\n  yMin:           r.int16                              // Minimum value (in pels) for this yPelHeight\n});\n\nlet VdmxGroup = new r.Struct({\n  recs:           r.uint16,                            // Number of height records in this group\n  startsz:        r.uint8,                             // Starting yPelHeight\n  endsz:          r.uint8,                             // Ending yPelHeight\n  entries:        new r.Array(vTable, 'recs')          // The VDMX records\n});\n\nexport default new r.Struct({\n  version:        r.uint16,                            // Version number (0 or 1)\n  numRecs:        r.uint16,                            // Number of VDMX groups present\n  numRatios:      r.uint16,                            // Number of aspect ratio groupings\n  ratioRanges:    new r.Array(Ratio, 'numRatios'),     // Ratio ranges\n  offsets:        new r.Array(r.uint16, 'numRatios'),  // Offset to the VDMX group for this ratio range\n  groups:         new r.Array(VdmxGroup, 'numRecs')    // The actual VDMX groupings\n});\n","import * as r from 'restructure';\n\n// Vertical Header Table\nexport default new r.Struct({\n  version:                r.uint16,  // Version number of the Vertical Header Table\n  ascent:                 r.int16,   // The vertical typographic ascender for this font\n  descent:                r.int16,   // The vertical typographic descender for this font\n  lineGap:                r.int16,   // The vertical typographic line gap for this font\n  advanceHeightMax:       r.int16,   // The maximum advance height measurement found in the font\n  minTopSideBearing:      r.int16,   // The minimum top side bearing measurement found in the font\n  minBottomSideBearing:   r.int16,   // The minimum bottom side bearing measurement found in the font\n  yMaxExtent:             r.int16,\n  caretSlopeRise:         r.int16,   // Caret slope (rise/run)\n  caretSlopeRun:          r.int16,\n  caretOffset:            r.int16,   // Set value equal to 0 for nonslanted fonts\n  reserved:               new r.Reserved(r.int16, 4),\n  metricDataFormat:       r.int16,   // Set to 0\n  numberOfMetrics:        r.uint16   // Number of advance heights in the Vertical Metrics table\n});\n","import * as r from 'restructure';\n\nlet VmtxEntry = new r.Struct({\n  advance: r.uint16,  // The advance height of the glyph\n  bearing: r.int16    // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nexport default new r.Struct({\n  metrics:  new r.LazyArray(VmtxEntry, t => t.parent.vhea.numberOfMetrics),\n  bearings: new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\n\nlet Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nlet Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n","import * as r from 'restructure';\n\nclass UnboundedArrayAccessor {\n  constructor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  getItem(index) {\n    if (this._items[index] == null) {\n      let pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  }\n\n  inspect() {\n    return `[UnboundedArray ${this.type.constructor.name}]`;\n  }\n}\n\nexport class UnboundedArray extends r.Array {\n  constructor(type) {\n    super(type, 0);\n  }\n\n  decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  }\n}\n\nexport let LookupTable = function(ValueType = r.uint16) {\n  // Helper class that makes internal structures invisible to pointers\n  class Shadow {\n    constructor(type) {\n      this.type = type;\n    }\n\n    decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    }\n\n    size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    }\n\n    encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    }\n  }\n\n  ValueType = new Shadow(ValueType);\n\n  let BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  let LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  let LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, t => t.lastGlyph - t.firstGlyph + 1), {type: 'parent'})\n  });\n\n  let LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, t => t.binarySearchHeader.nUnits)\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, t => t.binarySearchHeader.nUnits)\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, t => t.binarySearchHeader.nUnits)\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nexport function StateTable(entryData = {}, lookupType = r.uint16) {\n  let entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint16, t => t.nClasses));\n\n  let StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nexport function StateTable1(entryData = {}, lookupType = r.uint16) {\n  let ClassLookupTable = new r.Struct({\n    version() { return 8; }, // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  let entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: t => (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint8, t => t.nClasses));\n\n  let StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n","import * as r from 'restructure';\n\nlet Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nlet FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [\n    null, null, null, null, null, null,\n    'hasDefault', 'exclusive'\n  ]),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n","import * as r from 'restructure';\n\nlet Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID]\n});\n\nlet Instance = new r.Struct({\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID],\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, t => t.parent.axisCount),\n  postscriptNameID: new r.Optional(r.uint16, t => t.parent.instanceSize - t._currentOffset > 0)\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\nclass Offset {\n  static decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE() * 2;\n  }\n}\n\nlet gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: ctx => ctx.offsetToData, allowNull: false }), t => t.glyphCount + 1)\n});\n\nexport default gvar;\n","import * as r from 'restructure';\nimport { LookupTable, StateTable1 } from './aat';\n\nlet ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1\n});\n\nlet WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nlet WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nlet ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nlet Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, t => t.actionLength - t._currentOffset)\n});\n\nlet PostcompensationAction = new r.Array(Action, r.uint32);\nlet PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nlet JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: ctx => ctx.wdcOffset }))\n});\n\nexport default new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n","import * as r from 'restructure';\nimport { UnboundedArray, LookupTable, StateTable } from './aat';\n\nlet LigatureData = {\n  action: r.uint16\n};\n\nlet ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nlet InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nlet SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable))\n});\n\nlet SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nlet Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n});\n\nlet FeatureEntry = new r.Struct({\n  featureType:    r.uint16,\n  featureSetting: r.uint16,\n  enableFlags:    r.uint32,\n  disableFlags:   r.uint32\n});\n\nlet MorxChain = new r.Struct({\n  defaultFlags:     r.uint32,\n  chainLength:      r.uint32,\n  nFeatureEntries:  r.uint32,\n  nSubtables:       r.uint32,\n  features:         new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables:        new r.Array(Subtable, 'nSubtables')\n});\n\nexport default new r.Struct({\n  version:  r.uint16,\n  unused:   new r.Reserved(r.uint16),\n  nChains:  r.uint32,\n  chains:   new r.Array(MorxChain, 'nChains')\n});\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n","import { binarySearch } from './utils';\nimport { encodingExists, getEncoding, getEncodingMapping } from './encodings';\nimport { cache } from './decorators';\nimport { range } from './utils';\n\nexport default class CmapProcessor {\n  constructor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n      // 32-bit subtables\n      [3, 10],\n      [0, 6],\n      [0, 4],\n\n      // 16-bit subtables\n      [3, 1],\n      [0, 3],\n      [0, 2],\n      [0, 1],\n      [0, 0]\n    ]);\n\n    // If not unicode cmap was found, take the first table with a supported encoding.\n    if (!this.cmap) {\n      for (let cmap of cmapTable.tables) {\n        let encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        let mapping = getEncodingMapping(encoding);\n        if (mapping) {\n          this.cmap = cmap.table;\n          this.encoding = mapping;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  findSubtable(cmapTable, pairs) {\n    for (let [platformID, encodingID] of pairs) {\n      for (let cmap of cmapTable.tables) {\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      codepoint = this.encoding.get(codepoint) || codepoint;\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      let gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4: {\n        let min = 0;\n        let max = cmap.segCount - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n\n          if (codepoint < cmap.startCode.get(mid)) {\n            max = mid - 1;\n          } else if (codepoint > cmap.endCode.get(mid)) {\n            min = mid + 1;\n          } else {\n            let rangeOffset = cmap.idRangeOffset.get(mid);\n            let gid;\n\n            if (rangeOffset === 0) {\n              gid = codepoint + cmap.idDelta.get(mid);\n            } else {\n              let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n              gid = cmap.glyphIndexArray.get(index) || 0;\n              if (gid !== 0) {\n                gid += cmap.idDelta.get(mid);\n              }\n            }\n\n            return gid & 0xffff;\n          }\n        }\n\n        return 0;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13: {\n        let min = 0;\n        let max = cmap.nGroups - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n          let group = cmap.groups.get(mid);\n\n          if (codepoint < group.startCharCode) {\n            max = mid - 1;\n          } else if (codepoint > group.endCharCode) {\n            min = mid + 1;\n          } else {\n            if (cmap.version === 12) {\n              return group.glyphID + (codepoint - group.startCharCode);\n            } else {\n              return group.glyphID;\n            }\n          }\n        }\n\n        return 0;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    let selectors = this.uvs.varSelectors.toArray();\n    let i = binarySearch(selectors, x => variationSelector - x.varSelector);\n    let sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, x =>\n        codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0\n      );\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, x => codepoint - x.unicodeValue);\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  }\n\n  @cache\n  getCharacterSet() {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4: {\n        let res = [];\n        let endCodes = cmap.endCode.toArray();\n        for (let i = 0; i < endCodes.length; i++) {\n          let tail = endCodes[i] + 1;\n          let start = cmap.startCode.get(i);\n          res.push(...range(start, tail));\n        }\n\n        return res;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          res.push(...range(group.startCharCode, group.endCharCode + 1));\n        }\n\n        return res;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  @cache\n  codePointsForGlyph(gid) {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0: {\n        let res = [];\n        for (let i = 0; i < 256; i++) {\n          if (cmap.codeMap.get(i) === gid) {\n            res.push(i);\n          }\n        }\n\n        return res;\n      }\n\n      case 4: {\n        let res = [];\n        for (let i = 0; i < cmap.segCount; i++) {\n          let end = cmap.endCode.get(i);\n          let start = cmap.startCode.get(i);\n          let rangeOffset = cmap.idRangeOffset.get(i);\n          let delta = cmap.idDelta.get(i);\n\n          for (var c = start; c <= end; c++) {\n            let g = 0;\n            if (rangeOffset === 0) {\n              g = c + delta;\n            } else {\n              let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n              g = cmap.glyphIndexArray.get(index) || 0;\n              if (g !== 0) {\n                g += delta;\n              }\n            }\n\n            if (g === gid) {\n              res.push(c);\n            }\n          }\n        }\n\n        return res;\n      }\n\n      case 12: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n            res.push(group.startCharCode + (gid - group.glyphID));\n          }\n        }\n\n        return res;\n      }\n\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid === group.glyphID) {\n            res.push(...range(group.startCharCode, group.endCharCode + 1));\n          }\n        }\n\n        return res;\n      }\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n}\n","export function binarySearch(arr, cmp) {\n  let min = 0;\n  let max = arr.length - 1;\n  while (min <= max) {\n    let mid = (min + max) >> 1;\n    let res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function range(index, end) {\n  let range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nexport const asciiDecoder = new TextDecoder('ascii');\n\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst LOOKUP = new Uint8Array(256);\nfor (let i = 0; i < CHARS.length; i++) {\n  LOOKUP[CHARS.charCodeAt(i)] = i;\n}\n\nexport function decodeBase64(base64) {\n  let bufferLength = base64.length * 0.75;\n\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n\n  let bytes = new Uint8Array(bufferLength);\n  let p = 0;\n\n  for (let i = 0, len = base64.length; i < len; i += 4) {\n    let encoded1 = LOOKUP[base64.charCodeAt(i)];\n    let encoded2 = LOOKUP[base64.charCodeAt(i + 1)];\n    let encoded3 = LOOKUP[base64.charCodeAt(i + 2)];\n    let encoded4 = LOOKUP[base64.charCodeAt(i + 3)];\n\n    bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n    bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n    bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n  }\n\n  return bytes;\n}\n","import KernProcessor from './KernProcessor';\nimport UnicodeLayoutEngine from './UnicodeLayoutEngine';\nimport GlyphRun from './GlyphRun';\nimport GlyphPosition from './GlyphPosition';\nimport * as Script from './Script';\nimport AATLayoutEngine from '../aat/AATLayoutEngine';\nimport OTLayoutEngine from '../opentype/OTLayoutEngine';\n\nexport default class LayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Map string to glyphs if needed\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = Script.forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        let codePoints = [];\n        for (let glyph of string) {\n          codePoints.push(...glyph.codePoints);\n        }\n\n        script = Script.forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    let glyphRun = new GlyphRun(glyphs, features, script, language, direction);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  }\n\n  substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  }\n\n  position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(glyph => new GlyphPosition(glyph.advanceWidth));\n    let positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  }\n\n  hideDefaultIgnorables(glyphs, positions) {\n    let space = this.font.glyphForCodePoint(0x20);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    let plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n      \tcase 0x00: return ch === 0x00AD;\n      \tcase 0x03: return ch === 0x034F;\n      \tcase 0x06: return ch === 0x061C;\n      \tcase 0x17: return 0x17B4 <= ch && ch <= 0x17B5;\n      \tcase 0x18: return 0x180B <= ch && ch <= 0x180E;\n      \tcase 0x20: return (0x200B <= ch && ch <= 0x200F) || (0x202A <= ch && ch <= 0x202E) || (0x2060 <= ch && ch <= 0x206F);\n      \tcase 0xFE: return (0xFE00 <= ch && ch <= 0xFE0F) || ch === 0xFEFF;\n      \tcase 0xFF: return 0xFFF0 <= ch && ch <= 0xFFF8;\n      \tdefault:   return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n      \tcase 0x01: return (0x1BCA0 <= ch && ch <= 0x1BCA3) || (0x1D173 <= ch && ch <= 0x1D17A);\n      \tcase 0x0E: return 0xE0000 <= ch && ch <= 0xE0FFF;\n      \tdefault:   return false;\n      }\n    }\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.engine) {\n      features.push(...this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  }\n\n  stringsForGlyph(gid) {\n    let result = new Set;\n\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (let codePoint of codePoints) {\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (let string of this.engine.stringsForGlyph(gid)) {\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  }\n}\n","import {binarySearch} from '../utils';\n\nexport default class KernProcessor {\n  constructor(font) {\n    this.kern = font.kern;\n  }\n\n  process(glyphs, positions) {\n    for (let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      let left = glyphs[glyphIndex].id;\n      let right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  }\n\n  getKerning(left, right) {\n    let res = 0;\n\n    for (let table of this.kern.tables) {\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error(`Unsupported kerning table version ${table.version}`);\n      }\n\n      let val = 0;\n      let s = table.subtable;\n      switch (table.format) {\n        case 0:\n          let pairIdx = binarySearch(s.pairs, function (pair) {\n            return (left - pair.left) || (right - pair.right);\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          let leftOffset = 0, rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          let index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  }\n}\n","import {getCombiningClass} from 'unicode-properties';\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\nexport default class UnicodeLayoutEngine {\n  constructor(font) {\n    this.font = font;\n  }\n\n  positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    let clusterStart = 0;\n    let clusterEnd = 0;\n    for (let index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.isMark) { // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  }\n\n  positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    let base = glyphs[clusterStart];\n    let baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += ((base.codePoints.length - 1) * baseBox.width) / base.codePoints.length;\n    }\n\n    let xOffset = -positions[clusterStart].xAdvance;\n    let yOffset = 0;\n    let yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (let index = clusterStart + 1; index <= clusterEnd; index++) {\n      let mark = glyphs[index];\n      let markBox = mark.cbox;\n      let position = positions[index];\n\n      let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default: // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  }\n\n  getCombiningClass(codePoint) {\n    let combiningClass = getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) { // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22': // meteg\n        return 'Below';\n\n      case 'CCC23': // rafe\n        return 'Attached_Above';\n\n      case 'CCC24': // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19': // holam\n        return 'Above_Left';\n\n      case 'CCC26': // point varika\n        return 'Above';\n\n      case 'CCC21': // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36': // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32': // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103': // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107': // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118': // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122': // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132': // sign u\n        return 'Below';\n\n      case 'CCC130': // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  }\n}\n","import BBox from '../glyph/BBox';\nimport * as Script from '../layout/Script';\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\nexport default class GlyphRun {\n  constructor(glyphs, features, script, language, direction) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction || Script.direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (let tag of features) {\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n  get advanceWidth() {\n    let width = 0;\n    for (let position of this.positions) {\n      width += position.xAdvance;\n    }\n\n    return width;\n  }\n\n /**\n  * The total advance height of the run.\n  * @type {number}\n  */\n  get advanceHeight() {\n    let height = 0;\n    for (let position of this.positions) {\n      height += position.yAdvance;\n    }\n\n    return height;\n  }\n\n /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */\n  get bbox() {\n    let bbox = new BBox;\n\n    let x = 0;\n    let y = 0;\n    for (let index = 0; index < this.glyphs.length; index++) {\n      let glyph = this.glyphs[index];\n      let p = this.positions[index];\n      let b = glyph.bbox;\n\n      bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n      bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n      x += p.xAdvance;\n      y += p.yAdvance;\n    }\n\n    return bbox;\n  }\n}\n","/**\n * Represents a glyph bounding box\n */\nexport default class BBox {\n  constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity) {\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n  get width() {\n    return this.maxX - this.minX;\n  }\n\n  /**\n   * The height of the bounding box\n   * @type {number}\n   */\n  get height() {\n    return this.maxY - this.minY;\n  }\n\n  addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  }\n\n  copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  }\n}\n","import {getScript} from 'unicode-properties';\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nconst OPENTYPE_SCRIPTS = {};\nfor (let script in UNICODE_SCRIPTS) {\n  let tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (let t of tag) {\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nexport function fromUnicode(script) {\n  return UNICODE_SCRIPTS[script];\n}\n\nexport function fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nexport function forString(string) {\n  let len = string.length;\n  let idx = 0;\n  while (idx < len) {\n    let code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      let next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    let script = getScript(code);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nexport function forCodePoints(codePoints) {\n  for (let i = 0; i < codePoints.length; i++) {\n    let codePoint = codePoints[i];\n    let script = getScript(codePoint);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n// The scripts in this map are written from right to left\nconst RTL = {\n  arab: true,   // Arabic\n  hebr: true,   // Hebrew\n  syrc: true,   // Syriac\n  thaa: true,   // Thaana\n  cprt: true,   // Cypriot Syllabary\n  khar: true,   // Kharosthi\n  phnx: true,   // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true,   // Lydian\n  avst: true,   // Avestan\n  armi: true,   // Imperial Aramaic\n  phli: true,   // Inscriptional Pahlavi\n  prti: true,   // Inscriptional Parthian\n  sarb: true,   // Old South Arabian\n  orkh: true,   // Old Turkic, Orkhon Runic\n  samr: true,   // Samaritan\n  mand: true,   // Mandaic, Mandaean\n  merc: true,   // Meroitic Cursive\n  mero: true,   // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,   // Manichaean\n  mend: true,   // Mende Kikakui\n  nbat: true,   // Nabataean\n  narb: true,   // Old North Arabian\n  palm: true,   // Palmyrene\n  phlp: true    // Psalter Pahlavi\n};\n\nexport function direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n","/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nexport default class GlyphPosition {\n  constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0) {\n    /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */\n    this.xAdvance = xAdvance;\n\n    /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */\n    this.yAdvance = yAdvance;\n\n    /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */\n    this.xOffset = xOffset;\n\n    /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */\n    this.yOffset = yOffset;\n  }\n}\n","import * as AATFeatureMap from './AATFeatureMap';\nimport * as Script from '../layout/Script';\nimport AATMorxProcessor from './AATMorxProcessor';\n\nexport default class AATLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, AATFeatureMap.mapOTToAAT(glyphRun.features));\n  }\n\n  getAvailableFeatures(script, language) {\n    return AATFeatureMap.mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  }\n\n  stringsForGlyph(gid) {\n    let glyphStrings = this.morxProcessor.generateInputs(gid);\n    let result = new Set;\n\n    for (let glyphs of glyphStrings) {\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  }\n\n  _addStrings(glyphs, index, strings, string) {\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (let codePoint of codePoints) {\n      let s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  }\n}\n","// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n    // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nconst feature = (name, selector) => [features[name].code, features[name][selector]];\n\nconst OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n  // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (let i = 1; i <= 99; i++) {\n  OTMapping[`cv${`00${i}`.slice(-2)}`] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nlet AATMapping = {};\nfor (let ot in OTMapping) {\n  let aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nexport function mapOTToAAT(features) {\n  let res = {};\n  for (let k in features) {\n    let r;\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  let [type, setting] = f;\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nexport function mapAATToOT(features) {\n  let res = {};\n  if (Array.isArray(features)) {\n    for (let k = 0; k < features.length; k++) {\n      let r;\n      let f = mapFeatureStrings(features[k]);\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n\n  } else if (typeof features === 'object') {\n    for (let type in features) {\n      let feature = features[type];\n      for (let setting in feature) {\n        let r;\n        let f = mapFeatureStrings([type, setting]);\n        if (feature[setting] && (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]])) {\n          res[r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n","import AATStateMachine from './AATStateMachine';\nimport AATLookupTable from './AATLookupTable';\nimport {cache} from '../decorators';\n\n// indic replacement flags\nconst MARK_FIRST = 0x8000;\nconst MARK_LAST  = 0x2000;\nconst VERB       = 0x000F;\n\n// contextual substitution and glyph insertion flag\nconst SET_MARK = 0x8000;\n\n// ligature entry flags\nconst SET_COMPONENT  = 0x8000;\nconst PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nconst LAST_MASK   = 0x80000000;\nconst STORE_MASK  = 0x40000000;\nconst OFFSET_MASK = 0x3FFFFFFF;\n\nconst VERTICAL_ONLY           = 0x800000;\nconst REVERSE_DIRECTION       = 0x400000;\nconst HORIZONTAL_AND_VERTICAL = 0x200000;\n\n// glyph insertion flags\nconst CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst MARKED_IS_KASHIDA_LIKE  = 0x1000;\nconst CURRENT_INSERT_BEFORE   = 0x0800;\nconst MARKED_INSERT_BEFORE    = 0x0400;\nconst CURRENT_INSERT_COUNT    = 0x03E0;\nconst MARKED_INSERT_COUNT     = 0x001F;\n\nexport default class AATMorxProcessor {\n  constructor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n  process(glyphs, features = {}) {\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (let feature of chain.features) {\n        let f;\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    let index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  }\n\n  processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  }\n\n  @cache\n  getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  }\n\n  getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n    }\n  }\n\n  processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  }\n\n  processContextualSubstitution(glyph, entry, index) {\n    let subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.markIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.currentIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[index];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  }\n\n  processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      let actions = this.subtable.table.ligatureActions;\n      let components = this.subtable.table.components;\n      let ligatureList = this.subtable.table.ligatureList;\n\n      let actionIndex = entry.action;\n      let last = false;\n      let ligatureIndex = 0;\n      let codePoints = [];\n      let ligatureGlyphs = [];\n\n      while (!last) {\n        let componentGlyph = this.ligatureStack.pop();\n        codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n\n        let action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        let store = !!(action & STORE_MASK);\n        let offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        let component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          let ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      this.ligatureStack.push(...ligatureGlyphs);\n    }\n  }\n\n  processNoncontextualSubstitutions(subtable, glyphs, index) {\n    let lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        let gid = lookupTable.lookup(glyph.id);\n        if (gid) { // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  }\n\n  _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    let insertions = [];\n    while (count--) {\n      let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    this.glyphs.splice(glyphIndex, 0, ...insertions);\n  }\n\n  processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      let count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      let count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n    }\n  }\n\n  getSupportedFeatures() {\n    let features = [];\n    for (let chain of this.morx.chains) {\n      for (let feature of chain.features) {\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  }\n\n  generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  }\n\n  generateInputCache() {\n    this.inputCache = {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  }\n\n  generateInputsForSubtable(subtable) {\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    let reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let input = [];\n    let stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: (glyph, entry) => {\n        let glyphs = this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        let g = this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        let count = 0;\n        let found = 0;\n        for (let i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          let result = input.map(g => g.id);\n          let cache = this.inputCache[found];\n          if (cache) {\n            cache.push(result);\n          } else {\n            this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: () => {\n        ({glyphs: this.glyphs, ligatureStack: this.ligatureStack} = stack.pop());\n        input.pop();\n      }\n    });\n  }\n}\n\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n  let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  let length = lastGlyph - firstGlyph + 1;\n  switch (verb) {\n    case 0: // no change\n      return glyphs;\n\n    case 1: // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2: // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3: // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4: // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5: // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6: // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7: // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8: // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9: // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10: // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11: // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12: // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13: // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14: // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15: // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(`Unknown verb: ${verb}`);\n  }\n}\n","import AATLookupTable from './AATLookupTable';\n\nconst START_OF_TEXT_STATE = 0;\nconst START_OF_LINE_STATE = 1;\n\nconst END_OF_TEXT_CLASS = 0;\nconst OUT_OF_BOUNDS_CLASS = 1;\nconst DELETED_GLYPH_CLASS = 2;\nconst END_OF_LINE_CLASS = 3;\n\nconst DONT_ADVANCE = 0x4000;\n\nexport default class AATStateMachine {\n  constructor(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  process(glyphs, reverse, processEntry) {\n    let currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    let index = reverse ? glyphs.length - 1 : 0;\n    let dir = reverse ? -1 : 1;\n\n    while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {\n      let glyph = null;\n      let classCode = OUT_OF_BOUNDS_CLASS;\n      let shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) { // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      let row = this.stateTable.stateArray.getItem(currentState);\n      let entryIndex = row[classCode];\n      let entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !==  DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  traverse(opts, state = 0, visited = new Set) {\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    let {nClasses, stateArray, entryTable} = this.stateTable;\n    let row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (let classCode = 4; classCode < nClasses; classCode++) {\n      let entryIndex = row[classCode];\n      let entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (let glyph of this.lookupTable.glyphsForValue(classCode)) {\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  }\n}\n","import {cache} from '../decorators';\nimport {range} from '../utils';\n\nexport default class AATLookupTable {\n  constructor(table) {\n    this.table = table;\n  }\n\n  lookup(glyph) {\n    switch (this.table.version) {\n      case 0: // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4: {\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.firstGlyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.firstGlyph) {\n            max = mid - 1;\n          } else if (glyph > seg.lastGlyph) {\n            min = mid + 1;\n          } else {\n            if (this.table.version === 2) {\n              return seg.value;\n            } else {\n              return seg.values[glyph - seg.firstGlyph];\n            }\n          }\n        }\n\n        return null;\n      }\n\n      case 6: { // lookup single\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.glyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.glyph) {\n            max = mid - 1;\n          } else if (glyph > seg.glyph) {\n            min = mid + 1;\n          } else {\n            return seg.value;\n          }\n        }\n\n        return null;\n      }\n\n      case 8: // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n  }\n\n  @cache\n  glyphsForValue(classValue) {\n    let res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4: {\n        for (let segment of this.table.segments) {\n          if ((this.table.version === 2 && segment.value === classValue)) {\n            res.push(...range(segment.firstGlyph, segment.lastGlyph + 1));\n          } else {\n            for (let index = 0; index < segment.values.length; index++) {\n              if (segment.values[index] === classValue) {\n                res.push(segment.firstGlyph + index);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 6: { // lookup single\n        for (let segment of this.table.segments) {\n          if (segment.value === classValue) {\n            res.push(segment.glyph);\n          }\n        }\n\n        break;\n      }\n\n      case 8: { // lookup trimmed\n        for (let i = 0; i < this.table.values.length; i++) {\n          if (this.table.values[i] === classValue) {\n            res.push(this.table.firstGlyph + i);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n\n    return res;\n  }\n}\n","import ShapingPlan from './ShapingPlan';\nimport * as Shapers from './shapers';\nimport GlyphInfo from './GlyphInfo';\nimport GSUBProcessor from './GSUBProcessor';\nimport GPOSProcessor from './GPOSProcessor';\n\nexport default class OTLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  setup(glyphRun) {\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(glyph => new GlyphInfo(this.font, glyph.id, [...glyph.codePoints]));\n\n    // Select a script based on what is available in GSUB/GPOS.\n    let script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = Shapers.choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (let key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  }\n\n  substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos);\n\n      // Map glyph infos back to normal Glyph objects\n      glyphRun.glyphs = this.glyphInfos.map(glyphInfo => this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n    }\n  }\n\n  position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  }\n\n  zeroMarkAdvances(positions) {\n    for (let i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  }\n}\n","import * as Script from '../layout/Script';\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\nexport default class ShapingPlan {\n  constructor(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n  _addFeatures(features, global) {\n    let stageIndex = this.stages.length - 1;\n    let stage = this.stages[stageIndex];\n    for (let feature of features) {\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n\n  /**\n   * Add features to the last stage\n   */\n  add(arg, global = true) {\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n\n  /**\n   * Add a new stage\n   */\n  addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  }\n\n  setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (let tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          let stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  assignGlobalFeatures(glyphs) {\n    for (let glyph of glyphs) {\n      for (let feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  process(processor, glyphs, positions) {\n    for (let stage of this.stages) {\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport ArabicShaper from './ArabicShaper';\nimport HangulShaper from './HangulShaper';\nimport IndicShaper from './IndicShaper';\nimport UniversalShaper from './UniversalShaper';\n\nconst SHAPERS = {\n  arab: ArabicShaper,    // Arabic\n  mong: ArabicShaper,    // Mongolian\n  syrc: ArabicShaper,    // Syriac\n  'nko ': ArabicShaper,  // N'Ko\n  phag: ArabicShaper,    // Phags Pa\n  mand: ArabicShaper,    // Mandaic\n  mani: ArabicShaper,    // Manichaean\n  phlp: ArabicShaper,    // Psalter Pahlavi\n\n  hang: HangulShaper,    // Hangul\n\n  bng2: IndicShaper,     // Bengali\n  beng: IndicShaper,     // Bengali\n  dev2: IndicShaper,     // Devanagari\n  deva: IndicShaper,     // Devanagari\n  gjr2: IndicShaper,     // Gujarati\n  gujr: IndicShaper,     // Gujarati\n  guru: IndicShaper,     // Gurmukhi\n  gur2: IndicShaper,     // Gurmukhi\n  knda: IndicShaper,     // Kannada\n  knd2: IndicShaper,     // Kannada\n  mlm2: IndicShaper,     // Malayalam\n  mlym: IndicShaper,     // Malayalam\n  ory2: IndicShaper,     // Oriya\n  orya: IndicShaper,     // Oriya\n  taml: IndicShaper,     // Tamil\n  tml2: IndicShaper,     // Tamil\n  telu: IndicShaper,     // Telugu\n  tel2: IndicShaper,     // Telugu\n  khmr: IndicShaper,     // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: IndicShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper,   // Latin\n  DFLT: DefaultShaper    // Default\n};\n\nexport function choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (let s of script) {\n    let shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n","import {isDigit} from 'unicode-properties';\n\nconst VARIATION_FEATURES = ['rvrn'];\nconst COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nconst FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nconst HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nconst VERTICAL_FEATURES = ['vert'];\nconst DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nexport default class DefaultShaper {\n  static zeroMarkWidths = 'AFTER_GPOS';\n  static plan(plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(plan);\n    this.planFeatures(plan);\n    this.planPostprocessing(plan, features);\n\n    // Assign the global features to all the glyphs\n    plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(plan, glyphs);\n  }\n\n  static planPreprocessing(plan) {\n    plan.add({\n      global: [...VARIATION_FEATURES, ...DIRECTIONAL_FEATURES[plan.direction]],\n      local: FRACTIONAL_FEATURES\n    });\n  }\n\n  static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  }\n\n  static planPostprocessing(plan, userFeatures) {\n    plan.add([...COMMON_FEATURES, ...HORIZONTAL_FEATURES]);\n    plan.setFeatureOverrides(userFeatures);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (let i = 0; i < glyphs.length; i++) {\n      let glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) { // fraction slash\n        let start = i;\n        let end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport {getCategory} from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport { decodeBase64 } from '../../utils';\n\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\nconst FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nconst ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nconst ISOL = 'isol';\nconst FINA = 'fina';\nconst FIN2 = 'fin2';\nconst FIN3 = 'fin3';\nconst MEDI = 'medi';\nconst MED2 = 'med2';\nconst INIT = 'init';\nconst NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nconst STATE_TABLE = [\n  //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n  // State 0: prev was U,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN2, 5 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 2: prev was D/L in ISOL form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ INIT, FINA, 1 ],  [ INIT, FINA, 3 ],  [ INIT, FINA, 4 ],  [ INIT, FINA, 6 ] ],\n\n  // State 3: prev was D in FINA form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MEDI, FINA, 1 ],  [ MEDI, FINA, 3 ],  [ MEDI, FINA, 4 ],  [ MEDI, FINA, 6 ] ],\n\n  // State 4: prev was FINA ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MED2, ISOL, 1 ],  [ MED2, ISOL, 2 ],  [ MED2, FIN2, 5 ],  [ MED2, ISOL, 6 ] ],\n\n  // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ ISOL, ISOL, 1 ],  [ ISOL, ISOL, 2 ],  [ ISOL, FIN2, 5 ],  [ ISOL, ISOL, 6 ] ],\n\n  // State 6: prev was DALATH/RISH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN3, 5 ],  [ NONE, ISOL, 6 ] ]\n];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\nexport default class ArabicShaper extends DefaultShaper {\n  static planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (let i = 0; i < FEATURES.length; i++) {\n      let feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  }\n\n  static assignFeatures(plan, glyphs) {\n    super.assignFeatures(plan, glyphs);\n\n    let prev = -1;\n    let state = 0;\n    let actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (let i = 0; i < glyphs.length; i++) {\n      let curAction, prevAction;\n      var glyph = glyphs[i];\n      let type = getShapingClass(glyph.codePoints[0]);\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      [prevAction, curAction, state] = STATE_TABLE[state][type];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (let index = 0; index < glyphs.length; index++) {\n      let feature;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n}\n\nfunction getShapingClass(codePoint) {\n  let res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  let category = getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n","import DefaultShaper from './DefaultShaper';\nimport GlyphInfo from '../GlyphInfo';\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nexport default class HangulShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    let state = 0;\n    let i = 0;\n    while (i < glyphs.length) {\n      let action;\n      let glyph = glyphs[i];\n      let code = glyph.codePoints[0];\n      let type = getType(code);\n\n      [ action, state ] = STATE_TABLE[state][type];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  }\n}\n\nconst HANGUL_BASE  = 0xac00;\nconst HANGUL_END   = 0xd7a4;\nconst HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nconst L_BASE  = 0x1100; // lead\nconst V_BASE  = 0x1161; // vowel\nconst T_BASE  = 0x11a7; // trail\nconst L_COUNT = 19;\nconst V_COUNT = 21;\nconst T_COUNT = 28;\nconst L_END   = L_BASE + L_COUNT - 1;\nconst V_END   = V_BASE + V_COUNT - 1;\nconst T_END   = T_BASE + T_COUNT - 1;\nconst DOTTED_CIRCLE = 0x25cc;\n\nconst isL    = code => 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst isV    = code => 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst isT    = code => 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst isTone = code => 0x302e <= code && code <= 0x302f;\nconst isLVT  = code => HANGUL_BASE <= code && code <= HANGUL_END;\nconst isLV   = code => (code - HANGUL_BASE) < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\nconst isCombiningL = code => L_BASE <= code && code <= L_END;\nconst isCombiningV = code => V_BASE <= code && code <= V_END;\nconst isCombiningT = code => T_BASE + 1 && 1 <= code && code <= T_END;\n\n// Character categories\nconst X   = 0; // Other character\nconst L   = 1; // Leading consonant\nconst V   = 2; // Medial vowel\nconst T   = 3; // Trailing consonant\nconst LV  = 4; // Composed <LV> syllable\nconst LVT = 5; // Composed <LVT> syllable\nconst M   = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code))    { return L; }\n  if (isV(code))    { return V; }\n  if (isT(code))    { return T; }\n  if (isLV(code))   { return LV; }\n  if (isLVT(code))  { return LVT; }\n  if (isTone(code)) { return M; }\n  return X;\n}\n\n// State machine actions\nconst NO_ACTION = 0;\nconst DECOMPOSE = 1;\nconst COMPOSE   = 2;\nconst TONE_MARK = 4;\nconst INVALID   = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst STATE_TABLE = [\n  //       X                 L                 V                T                  LV                LVT               M\n  // State 0: start state\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 1: <L>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [  COMPOSE, 2  ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 2: <L,V> or <LV>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [  COMPOSE, 3  ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ],\n\n  // State 3: <L,V,T> or <LVT>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ]\n];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyph.codePoints[0];\n\n  let s = code - HANGUL_BASE;\n  let t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  let l = L_BASE + s / V_COUNT | 0;\n  let v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) ||\n      !font.hasGlyphForCodePoint(v) ||\n      (t !== T_BASE && !font.hasGlyphForCodePoint(t))) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  let ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  let vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  let insert = [ ljmo, vjmo ];\n\n  if (t > T_BASE) {\n    let tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice(i, 1, ...insert);\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n  let type = getType(code);\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  let lv, ljmo, vjmo, tjmo;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    let l = ljmo.codePoints[0];\n    let v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  let t = (tjmo && tjmo.codePoints[0]) || T_BASE;\n  if ((lv != null) && (t === T_BASE || isCombiningT(t))) {\n    let s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      let del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) { ljmo.features.ljmo = true; }\n  if (vjmo) { vjmo.features.vjmo = true; }\n  if (tjmo) { tjmo.features.tjmo = true; }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) { return; }\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    let dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n","import {isMark} from 'unicode-properties';\nimport OTProcessor from './OTProcessor';\n\nexport default class GlyphInfo {\n  constructor(font, id, codePoints = [], features) {\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (let i = 0; i < features.length; i++) {\n        let feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n    this.substituted = true;\n\n    let GDEF = this._font.GDEF;\n    if (GDEF && GDEF.glyphClassDef) {\n      // TODO: clean this up\n      let classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n      this.isBase = classID === 1;\n      this.isLigature = classID === 2;\n      this.isMark = classID === 3;\n      this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n    } else {\n      this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n      this.isBase = !this.isMark;\n      this.isLigature = this.codePoints.length > 1;\n      this.markAttachmentType = 0;\n    }\n  }\n\n  copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  }\n}\n","import GlyphIterator from './GlyphIterator';\nimport * as Script from '../layout/Script';\n\nconst DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nexport default class OTProcessor {\n  constructor(font, table) {\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor\n      ? this.findVariationsIndex(font._variationProcessor.normalizedCoords)\n      : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (let s of script) {\n      for (let entry of this.table.scriptList) {\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  selectScript(script, language, direction) {\n    let changed = false;\n    let entry;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction || direction !== this.direction) {\n      this.direction = direction || Script.direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (let lang of this.script.langSysRecords) {\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (let featureIndex of this.language.featureIndexes) {\n          let record = this.table.featureList[featureIndex];\n          let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  }\n\n  lookupsForFeatures(userFeatures = [], exclude) {\n    let lookups = [];\n    for (let tag of userFeatures) {\n      let feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (let lookupIndex of feature.lookupListIndexes) {\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort((a, b) => a.index - b.index);\n    return lookups;\n  }\n\n  substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    let substitutions = record.featureTableSubstitution.substitutions;\n    for (let substitution of substitutions) {\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  }\n\n  findVariationsIndex(coords) {\n    let variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    let records = variations.featureVariationRecords;\n    for (let i = 0; i < records.length; i++) {\n      let conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  variationConditionsMatch(conditions, coords) {\n    return conditions.every(condition => {\n      let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    let lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  }\n\n  applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (let { feature, lookup } of lookups) {\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (let table of lookup.subTables) {\n          let res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  }\n\n  applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  }\n\n  applyLookupList(lookupRecords) {\n    let options = this.glyphIterator.options;\n    let glyphIndex = this.glyphIterator.index;\n\n    for (let lookupRecord of lookupRecords) {\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (let table of lookup.subTables) {\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  }\n\n  coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (let range of coverage.rangeRecords) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  }\n\n  match(sequenceIndex, sequence, fn, matched) {\n    let pos = this.glyphIterator.index;\n    let glyph = this.glyphIterator.increment(sequenceIndex);\n    let idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  }\n\n  sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph.id);\n  }\n\n  sequenceMatchIndices(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => {\n      // If the current feature doesn't apply to this glyph,\n      if (!(this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  }\n\n  coverageSequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (coverage, glyph) =>\n      this.coverageIndex(coverage, glyph.id) >= 0\n    );\n  }\n\n  getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1: // Class array\n        let i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (let range of classDef.classRangeRecord) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  }\n\n  classSequenceMatches(sequenceIndex, sequence, classDef) {\n    return this.match(sequenceIndex, sequence, (classID, glyph) =>\n      classID === this.getClassID(glyph.id, classDef)\n    );\n  }\n\n  applyContext(table) {\n    let index, set;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.ruleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n        for (let rule of set) {\n          if (this.classSequenceMatches(1, rule.classes, table.classDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  applyChainingContext(table) {\n    let index;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let set = table.chainRuleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack)\n            && this.sequenceMatches(1, rule.input)\n            && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        let rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (let rule of rules) {\n          if (this.classSequenceMatches(-rule.backtrack.length, rule.backtrack, table.backtrackClassDef) &&\n            this.classSequenceMatches(1, rule.input, table.inputClassDef) &&\n            this.classSequenceMatches(1 + rule.input.length, rule.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) &&\n          this.coverageSequenceMatches(0, table.inputCoverage) &&\n          this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n}\n","export default class GlyphIterator {\n  constructor(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  reset(options = {}, index = 0) {\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  }\n\n  get cur() {\n    return this.glyphs[this.index] || null;\n  }\n\n  shouldIgnore(glyph) {\n    return (this.flags.ignoreMarks && glyph.isMark) ||\n           (this.flags.ignoreBaseGlyphs && glyph.isBase) ||\n           (this.flags.ignoreLigatures && glyph.isLigature) ||\n           (this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType);\n  }\n\n  move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  }\n\n  next() {\n    return this.move(+1);\n  }\n\n  prev() {\n    return this.move(-1);\n  }\n\n  peek(count = 1) {\n    let idx = this.index;\n    let res = this.increment(count);\n    this.index = idx;\n    return res;\n  }\n\n  peekIndex(count = 1) {\n    let idx = this.index;\n    this.increment(count);\n    let res = this.index;\n    this.index = idx;\n    return res;\n  }\n\n  increment(count = 1) {\n    let dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport {getCategory} from 'unicode-properties';\nimport * as Script from '../../layout/Script';\nimport GlyphInfo from '../GlyphInfo';\nimport indicMachine from './indic.json';\nimport useData from './use.json';\nimport {\n  CATEGORIES,\n  POSITIONS,\n  CONSONANT_FLAGS,\n  JOINER_FLAGS,\n  HALANT_OR_COENG_FLAGS, INDIC_CONFIGS,\n  INDIC_DECOMPOSITIONS\n} from './indic-data';\nimport { decodeBase64 } from '../../utils';\n\nconst {decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/indic.trie', 'base64')));\nconst stateMachine = new StateMachine(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nexport default class IndicShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = Script.fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      let d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        let decomposed = d.map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction indicCategory(glyph) {\n  return trie.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie.get(glyph.codePoints[0]) & 0xff);\n}\n\nclass IndicInfo {\n  constructor(category, position, syllableType, syllable) {\n    this.category = category;\n    this.position = position;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  let last = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(indicCategory))) {\n    if (start > last) {\n      ++syllable;\n      for (let i = last; i < start; i++) {\n        glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(\n        1 << indicCategory(glyphs[i]),\n        indicPosition(glyphs[i]),\n        tags[0],\n        syllable\n      );\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (let i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (let glyph of glyphs) {\n    glyph.features = {[feature]: true};\n  }\n\n  let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  let glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  let virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    let info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let {category, syllableType} = glyphs[start].shaperInfo;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(\n        1 << indicCategory(g),\n        indicPosition(g),\n        glyphs[start].shaperInfo.syllableType,\n        glyphs[start].shaperInfo.syllable\n      );\n\n      // Insert after possible Repha.\n      let i = start;\n      while (i < end && glyphs[i].shaperInfo.category === CATEGORIES.Repha) {\n        i++;\n      }\n\n      glyphs.splice(i++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    let base = end;\n    let limit = start;\n    let hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph &&\n      features.rphf &&\n      start + 3 <= end && (\n        (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2])) ||\n        (indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)\n      )\n    ) {\n      // See if it matches the 'rphf' feature.\n      let g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(g.slice(0, 2), 'rphf') || (indicConfig.rephMode === 'Explicit' && wouldSubstitute(g, 'rphf'))) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last': {\n        // starting from the end of the syllable, move backwards\n        let i = end;\n        let seenBelow = false;\n\n        do {\n          let info = glyphs[--i].shaperInfo;\n\n          // until a consonant is found\n          if (isConsonant(glyphs[i])) {\n            // that does not have a below-base or post-base form\n            // (post-base forms have to follow below-base forms),\n            if (info.position !== POSITIONS.Below_C && (info.position !== POSITIONS.Post_C || seenBelow)) {\n              base = i;\n              break;\n            }\n\n            // or that is not a pre-base reordering Ra,\n            //\n            // IMPLEMENTATION NOTES:\n            //\n            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n            // by the logic above already.\n            //\n\n            // or arrive at the first consonant. The consonant stopped at will\n            // be the base.\n            if (info.position === POSITIONS.Below_C) {\n              seenBelow = true;\n            }\n\n            base = i;\n          } else if (start < i && info.category === CATEGORIES.ZWJ && glyphs[i - 1].shaperInfo.category === CATEGORIES.H) {\n            // A ZWJ after a Halant stops the base search, and requests an explicit\n            // half form.\n            // A ZWJ before a Halant, requests a subjoined form instead, and hence\n            // search continues.  This is particularly important for Bengali\n            // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n            break;\n          }\n        } while (i > limit);\n        break;\n      }\n\n      case 'First': {\n        // The first consonant is always the base.\n        base = start;\n\n        // Mark all subsequent consonants as below.\n        for (let i = base + 1; i < end; i++) {\n          if (isConsonant(glyphs[i])) {\n            glyphs[i].shaperInfo.position = POSITIONS.Below_C;\n          }\n        }\n      }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (let i = start; i < base; i++) {\n      let info = glyphs[i].shaperInfo;\n      info.position = Math.min(POSITIONS.Pre_C, info.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (let i = base + 1; i < end; i++) {\n      if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        for (let j = i + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      let disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.H) {\n          let j;\n          for (j = end - 1; j > i; j--) {\n            if (isConsonant(glyphs[j]) || (disallowDoubleHalants && glyphs[j].shaperInfo.category === CATEGORIES.H)) {\n              break;\n            }\n          }\n\n          if (glyphs[j].shaperInfo.category !== CATEGORIES.H && j > i) {\n            // Move Halant to after last consonant.\n            let t = glyphs[i];\n            glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n            glyphs[j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    let lastPos = POSITIONS.Start;\n    for (let i = start; i < end; i++) {\n      let info = glyphs[i].shaperInfo;\n      if (info.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & info.category)) {\n        info.position = lastPos;\n        if (info.category === CATEGORIES.H && info.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (let j = i; j > start; j--) {\n            if (glyphs[j - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              info.position = glyphs[j - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (info.position !== POSITIONS.SMVD) {\n        lastPos = info.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    let last = base;\n    for (let i = base + 1; i < end; i++) {\n      if (isConsonant(glyphs[i])) {\n        for (let j = last + 1; j < i; j++) {\n          if (glyphs[j].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[j].shaperInfo.position = glyphs[i].shaperInfo.position;\n          }\n        }\n        last = i;\n      } else if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        last = i;\n      }\n    }\n\n    let arr = glyphs.slice(start, end);\n    arr.sort((a, b) => a.shaperInfo.position - b.shaperInfo.position);\n    glyphs.splice(start, arr.length, ...arr);\n\n    // Find base again\n    for (let i = start; i < end; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        base = i;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (let i = start; i < end && glyphs[i].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; i++) {\n      glyphs[i].features.rphf = true;\n    }\n\n    // Pre-base\n    let blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (let i = start; i < base; i++) {\n      glyphs[i].features.half = true;\n      if (blwf) {\n        glyphs[i].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (let i = base + 1; i < end; i++) {\n      glyphs[i].features.abvf = true;\n      glyphs[i].features.pstf = true;\n      glyphs[i].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (let i = start; i + 1 < base; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.Ra &&\n          glyphs[i + 1].shaperInfo.category === CATEGORIES.H &&\n          (i + 1 === base || glyphs[i + 2].shaperInfo.category === CATEGORIES.ZWJ)\n        ) {\n          glyphs[i].features.blwf = true;\n          glyphs[i + 1].features.blwf = true;\n        }\n      }\n    }\n\n    let prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (let i = base + 1; i + prefLen - 1 < end; i++) {\n        let g = [glyphs[i].copy(), glyphs[i + 1].copy()];\n        if (wouldSubstitute(g, 'pref')) {\n          for (let j = 0; j < prefLen; j++) {\n            glyphs[i++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; i < end; i++) {\n              glyphs[i].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (let i = start + 1; i < end; i++) {\n      if (isJoiner(glyphs[i])) {\n        let nonJoiner = glyphs[i].shaperInfo.category === CATEGORIES.ZWNJ;\n        let j = i;\n\n        do {\n          j--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[j].features.half;\n          }\n        } while (j > start && !isConsonant(glyphs[j]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    let tryPref = !!features.pref;\n\n    // Find base again\n    let base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (let i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (let i = base + 1; i < end; i++) {\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i === end || !isHalantOrCoeng(glyphs[i])) {\n              break;\n            }\n\n            i++; // Skip halant.\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i < end && isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === POSITIONS.Below_C) {\n              base = i;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) { // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      let newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (let i = newPos; i > start; i--) {\n          if (glyphs[i - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            let oldPos = i - 1;\n            if (oldPos < base && base <= newPos) { // Shouldn't actually happen.\n              base--;\n            }\n\n            let tmp = glyphs[oldPos];\n            glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end &&\n      glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph &&\n      (glyphs[start].shaperInfo.category === CATEGORIES.Repha) !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)\n    ) {\n      let newRephPos;\n      let rephPos = indicConfig.rephPos;\n      let found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (let i = base + 1; i < newRephPos; i++) {\n            if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      let reph = glyphs[start];\n      glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].features.pref) {\n           // 1. Only reorder a glyph produced by substitution during application\n           //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n           //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            let newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (newPos > start && !(glyphs[newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (newPos > start && glyphs[newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                let oldPos = i;\n                for (let j = base + 1; j < oldPos; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (newPos > start && isHalantOrCoeng(glyphs[newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (newPos < end && isJoiner(glyphs[newPos])) {\n                newPos++;\n              }\n            }\n\n            let oldPos = i;\n            let tmp = glyphs[oldPos];\n            glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n            glyphs[newPos] = tmp;\n\n            if (newPos <= base && base < oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n","{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}","{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"null\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"M\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,0,23,0,0,2,0,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}","// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nexport const CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,    // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,    // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nexport const POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nexport const CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nexport const JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nexport const HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nexport const INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nexport const INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport GlyphInfo from '../GlyphInfo';\nimport useData from './use.json';\nimport { decodeBase64 } from '../../utils';\n\nconst {categories, decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/use.trie', 'base64')));\nconst stateMachine = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nexport default class UniversalShaper extends DefaultShaper {\n  static zeroMarkWidths = 'BEFORE_GPOS';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      if (decompositions[codepoint]) {\n        let decomposed = decompositions[codepoint].map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nclass USEInfo {\n  constructor(category, syllableType, syllable) {\n    this.category = category;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(useCategory))) {\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    let limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (let i = start; i < start + limit; i++) {\n      glyphs[i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (let glyph of glyphs) {\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let i, j;\n    let info = glyphs[start].shaperInfo;\n    let type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++);\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n","import OTProcessor from './OTProcessor';\nimport GlyphInfo from './GlyphInfo';\n\nexport default class GSUBProcessor extends OTProcessor {\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let glyph = this.glyphIterator.cur;\n        switch (table.version) {\n          case 1:\n            glyph.id = (glyph.id + table.deltaGlyphID) & 0xffff;\n            break;\n\n          case 2:\n            glyph.id = table.substitute.get(index);\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Multiple Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let sequence = table.sequences.get(index);\n\n          if (sequence.length === 0) {\n            // If the sequence length is zero, delete the glyph.\n            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n            this.glyphs.splice(this.glyphIterator.index, 1);\n            return true;\n          }\n\n          this.glyphIterator.cur.id = sequence[0];\n          this.glyphIterator.cur.ligatureComponent = 0;\n\n          let features = this.glyphIterator.cur.features;\n          let curGlyph = this.glyphIterator.cur;\n          let replacement = sequence.slice(1).map((gid, i) => {\n            let glyph = new GlyphInfo(this.font, gid, undefined, features);\n            glyph.shaperInfo = curGlyph.shaperInfo;\n            glyph.isLigated = curGlyph.isLigated;\n            glyph.ligatureComponent = i + 1;\n            glyph.substituted = true;\n            glyph.isMultiplied = true;\n            return glyph;\n          });\n\n          this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n          return true;\n        }\n\n        return false;\n      }\n\n      case 3: { // Alternate Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let USER_INDEX = 0; // TODO\n          this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n          return true;\n        }\n\n        return false;\n      }\n\n      case 4: { // Ligature Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        for (let ligature of table.ligatureSets.get(index)) {\n          let matched = this.sequenceMatchIndices(1, ligature.components);\n          if (!matched) {\n            continue;\n          }\n\n          let curGlyph = this.glyphIterator.cur;\n\n          // Concatenate all of the characters the new ligature will represent\n          let characters = curGlyph.codePoints.slice();\n          for (let index of matched) {\n            characters.push(...this.glyphs[index].codePoints);\n          }\n\n          // Create the replacement ligature glyph\n          let ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, curGlyph.features);\n          ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n          ligatureGlyph.isLigated = true;\n          ligatureGlyph.substituted = true;\n\n          // From Harfbuzz:\n          // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n          //   the ligature to keep its old ligature id.  This will allow it to attach to\n          //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n          //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n          //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n          //   later, we don't want them to lose their ligature id/component, otherwise\n          //   GPOS will fail to correctly position the mark ligature on top of the\n          //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n          //\n          // - If a ligature is formed of components that some of which are also ligatures\n          //   themselves, and those ligature components had marks attached to *their*\n          //   components, we have to attach the marks to the new ligature component\n          //   positions!  Now *that*'s tricky!  And these marks may be following the\n          //   last component of the whole sequence, so we should loop forward looking\n          //   for them and update them.\n          //\n          //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n          //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n          //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n          //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n          //   the new ligature with a component value of 2.\n          //\n          //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n          let isMarkLigature = curGlyph.isMark;\n          for (let i = 0; i < matched.length && isMarkLigature; i++) {\n            isMarkLigature = this.glyphs[matched[i]].isMark;\n          }\n\n          ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n          let lastLigID = curGlyph.ligatureID;\n          let lastNumComps = curGlyph.codePoints.length;\n          let curComps = lastNumComps;\n          let idx = this.glyphIterator.index + 1;\n\n          // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n          // This allows GPOS to attach marks to the correct ligature components.\n          for (let matchIndex of matched) {\n            // Don't assign new ligature components for mark ligatures (see above)\n            if (isMarkLigature) {\n              idx = matchIndex;\n            } else {\n              while (idx < matchIndex) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                idx++;\n              }\n            }\n\n            lastLigID = this.glyphs[idx].ligatureID;\n            lastNumComps = this.glyphs[idx].codePoints.length;\n            curComps += lastNumComps;\n            idx++; // skip base glyph\n          }\n\n          // Adjust ligature components for any marks following\n          if (lastLigID && !isMarkLigature) {\n            for (let i = idx; i < this.glyphs.length; i++) {\n              if (this.glyphs[i].ligatureID === lastLigID) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i].ligatureComponent || 1, lastNumComps);\n                this.glyphs[i].ligatureComponent = ligatureComponent;\n              } else {\n                break;\n              }\n            }\n          }\n\n          // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n          for (let i = matched.length - 1; i >= 0; i--) {\n            this.glyphs.splice(matched[i], 1);\n          }\n\n          this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n          return true;\n        }\n\n        return false;\n      }\n\n      case 5: // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6: // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7: // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n    }\n  }\n}\n","import OTProcessor from './OTProcessor';\n\nexport default class GPOSProcessor extends OTProcessor {\n  applyPositionValue(sequenceIndex, value) {\n    let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  }\n\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single positioning value\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1:\n            this.applyPositionValue(0, table.value);\n            break;\n\n          case 2:\n            this.applyPositionValue(0, table.values.get(index));\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Pair Adjustment Positioning\n        let nextGlyph = this.glyphIterator.peek();\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1: // Adjustments for glyph pairs\n            let set = table.pairSets.get(index);\n\n            for (let pair of set) {\n              if (pair.secondGlyph === nextGlyph.id) {\n                this.applyPositionValue(0, pair.value1);\n                this.applyPositionValue(1, pair.value2);\n                return true;\n              }\n            }\n\n            return false;\n\n          case 2: // Class pair adjustment\n            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n            if (class1 === -1 || class2 === -1) {\n              return false;\n            }\n\n            var pair = table.classRecords.get(class1).get(class2);\n            this.applyPositionValue(0, pair.value1);\n            this.applyPositionValue(1, pair.value2);\n            return true;\n        }\n      }\n\n      case 3: { // Cursive Attachment Positioning\n        let nextIndex = this.glyphIterator.peekIndex();\n        let nextGlyph = this.glyphs[nextIndex];\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n        if (!curRecord || !curRecord.exitAnchor) {\n          return false;\n        }\n\n        let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n        if (!nextRecord || !nextRecord.entryAnchor) {\n          return false;\n        }\n\n        let entry = this.getAnchor(nextRecord.entryAnchor);\n        let exit = this.getAnchor(curRecord.exitAnchor);\n\n        let cur = this.positions[this.glyphIterator.index];\n        let next = this.positions[nextIndex];\n        let d;\n\n        switch (this.direction) {\n          case 'ltr':\n            cur.xAdvance = exit.x + cur.xOffset;\n\n            d = entry.x + next.xOffset;\n            next.xAdvance -= d;\n            next.xOffset -= d;\n            break;\n\n          case 'rtl':\n            d = exit.x + cur.xOffset;\n            cur.xAdvance -= d;\n            cur.xOffset -= d;\n            next.xAdvance = entry.x + next.xOffset;\n            break;\n        }\n\n        if (this.glyphIterator.flags.rightToLeft) {\n          this.glyphIterator.cur.cursiveAttachment = nextIndex;\n          cur.yOffset = entry.y - exit.y;\n        } else {\n          nextGlyph.cursiveAttachment = this.glyphIterator.index;\n          cur.yOffset = exit.y - entry.y;\n        }\n\n        return true;\n      }\n\n      case 4: { // Mark to base positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n        if (baseIndex === -1) {\n          return false;\n        }\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 5: { // Mark to ligature positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n        if (ligIndex === -1) {\n          return false;\n        }\n\n        let ligAttach = table.ligatureArray[ligIndex];\n        let markGlyph = this.glyphIterator.cur;\n        let ligGlyph = this.glyphs[baseGlyphIndex];\n        let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && (markGlyph.ligatureComponent > 0)\n          ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1\n          : ligGlyph.codePoints.length - 1;\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = ligAttach[compIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 6: { // Mark to mark positioning\n        let mark1Index = this.coverageIndex(table.mark1Coverage);\n        if (mark1Index === -1) {\n          return false;\n        }\n\n        // get the previous mark to attach to\n        let prevIndex = this.glyphIterator.peekIndex(-1);\n        let prev = this.glyphs[prevIndex];\n        if (!prev || !prev.isMark) {\n          return false;\n        }\n\n        let cur = this.glyphIterator.cur;\n\n        // The following logic was borrowed from Harfbuzz\n        let good = false;\n        if (cur.ligatureID === prev.ligatureID) {\n          if (!cur.ligatureID) { // Marks belonging to the same base\n            good = true;\n          } else if (cur.ligatureComponent === prev.ligatureComponent) { // Marks belonging to the same ligature component\n            good = true;\n          }\n        } else {\n          // If ligature ids don't match, it may be the case that one of the marks\n          // itself is a ligature, in which case match.\n          if ((cur.ligatureID && !cur.ligatureComponent) || (prev.ligatureID && !prev.ligatureComponent)) {\n            good = true;\n          }\n        }\n\n        if (!good) {\n          return false;\n        }\n\n        let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n        if (mark2Index === -1) {\n          return false;\n        }\n\n        let markRecord = table.mark1Array[mark1Index];\n        let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, prevIndex);\n        return true;\n      }\n\n      case 7: // Contextual positioning\n        return this.applyContext(table);\n\n      case 8: // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9: // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`Unsupported GPOS table: ${lookupType}`);\n    }\n  }\n\n  applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    let baseCoords = this.getAnchor(baseAnchor);\n    let markCoords = this.getAnchor(markRecord.markAnchor);\n\n    let basePos = this.positions[baseGlyphIndex];\n    let markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  }\n\n  getAnchor(anchor) {\n    // TODO: contour point, device tables\n    let x = anchor.xCoordinate;\n    let y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x, y };\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    super.applyFeatures(userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  }\n\n  fixCursiveAttachment(i) {\n    let glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      let j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  }\n\n  fixMarkAttachment() {\n    for (let i = 0; i < this.glyphs.length; i++) {\n      let glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        let j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (let k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (let k = j + 1; k < i + 1; k++) {\n            this.positions[i].xOffset += this.positions[k].xAdvance;\n            this.positions[i].yOffset += this.positions[k].yAdvance;\n          }\n        }\n      }\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\nimport BBox from './BBox';\nimport * as r from 'restructure';\n\n// The header for both simple and composite glyphs\nlet GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin:             r.int16,\n  yMin:             r.int16,\n  xMax:             r.int16,\n  yMax:             r.int16\n});\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\n// Flags for composite glyphs\nconst ARG_1_AND_2_ARE_WORDS     = 1 << 0;\nconst ARGS_ARE_XY_VALUES        = 1 << 1;\nconst ROUND_XY_TO_GRID          = 1 << 2;\nconst WE_HAVE_A_SCALE           = 1 << 3;\nconst MORE_COMPONENTS           = 1 << 5;\nconst WE_HAVE_AN_X_AND_Y_SCALE  = 1 << 6;\nconst WE_HAVE_A_TWO_BY_TWO      = 1 << 7;\nconst WE_HAVE_INSTRUCTIONS      = 1 << 8;\nconst USE_MY_METRICS            = 1 << 9;\nconst OVERLAP_COMPOUND          = 1 << 10;\nconst SCALED_COMPONENT_OFFSET   = 1 << 11;\nconst UNSCALED_COMPONENT_OFFSET = 1 << 12;\n\n// Represents a point in a simple glyph\nexport class Point {\n  constructor(onCurve, endContour, x = 0, y = 0) {\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  }\n}\n\n// Represents a component in a composite glyph\nclass Component {\n  constructor(glyphID, dx, dy) {\n    this.glyphID = glyphID;\n    this.dx = dx;\n    this.dy = dy;\n    this.pos = 0;\n    this.scaleX = this.scaleY = 1;\n    this.scale01 = this.scale10 = 0;\n  }\n}\n\n/**\n * Represents a TrueType glyph.\n */\nexport default class TTFGlyph extends Glyph {\n  type = 'TTF';\n\n  // Parses just the glyph header and returns the bounding box\n  _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    let glyph = GlyfHeader.decode(stream);\n\n    let cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  }\n\n  // Parses a single glyph coordinate\n  _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  _decode() {\n    let glyfPos = this._font.loca.offsets[this.id];\n    let nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) { return null; }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    let startPos = stream.pos;\n\n    let glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  }\n\n  _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    let endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    let flags = [];\n    let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        let count = stream.readUInt8();\n        for (let j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      let point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    let px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    let py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = glyph.points.slice();\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  }\n\n  _decodeComposite(glyph, stream, offset = 0) {\n    // this is a composite glyph\n    glyph.components = [];\n    let haveInstructions = false;\n    let flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      let gPos = stream.pos - offset;\n      let glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX =\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale01 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale10 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = [];\n      for (let j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (let i = 0; i < points.length; i++) {\n        let point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  }\n\n  _getPhantomPoints(glyph) {\n    let cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    let { advanceWidth, advanceHeight, leftBearing, topBearing } = this._metrics;\n\n    return [\n      new Point(false, true, glyph.xMin - leftBearing, 0),\n      new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n      new Point(false, true, 0, glyph.yMax + topBearing),\n      new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n    ];\n  }\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n  _getContours() {\n    let glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    let points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (let component of glyph.components) {\n        let contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (let i = 0; i < contours.length; i++) {\n          let contour = contours[i];\n          for (let j = 0; j < contour.length; j++) {\n            let point = contour[j];\n            let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n            let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n            points.push(new Point(point.onCurve, point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth  = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing   = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing    = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    let contours = [];\n    let cur = [];\n    for (let k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  }\n\n  _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    let cbox = this._getCBox(true);\n    super._getMetrics(cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  }\n\n  // Converts contours to a Path object that can be rendered\n  _getPath() {\n    let contours = this._getContours();\n    let path = new Path;\n\n    for (let i = 0; i < contours.length; i++) {\n      let contour = contours[i];\n      let firstPt = contour[0];\n      let lastPt = contour[contour.length - 1];\n      let start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (let j = start; j < contour.length; j++) {\n        let pt = contour[j];\n        let prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          let midX = (prevPt.x + pt.x) / 2;\n          let midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import { cache } from '../decorators';\nimport Path from './Path';\nimport {isMark} from 'unicode-properties';\nimport StandardNames from './StandardNames';\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nexport default class Glyph {\n  constructor(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  _getPath() {\n    return new Path();\n  }\n\n  _getCBox() {\n    return this.path.cbox;\n  }\n\n  _getBBox() {\n    return this.path.bbox;\n  }\n\n  _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    let metric = table.metrics.get(table.metrics.length - 1);\n    let res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  }\n\n  _getMetrics(cbox) {\n    if (this._metrics) { return this._metrics; }\n\n    let {advance:advanceWidth, bearing:leftBearing} = this._getTableMetrics(this._font.hmtx);\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n    if (this._font.vmtx) {\n      var {advance:advanceHeight, bearing:topBearing} = this._getTableMetrics(this._font.vmtx);\n\n    } else {\n      let os2;\n      if (typeof cbox === 'undefined' || cbox === null) { ({ cbox } = this); }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n\n      } else {\n        let { hhea } = this._font;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth, advanceHeight, leftBearing, topBearing };\n  }\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  @cache\n  get cbox() {\n    return this._getCBox();\n  }\n\n  /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return this._getBBox();\n  }\n\n  /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */\n  @cache\n  get path() {\n    // Cache the path so we only decode it once\n    // Decoding is actually performed by subclasses\n    return this._getPath();\n  }\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  getScaledPath(size) {\n    let scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  @cache\n  get advanceWidth() {\n    return this._getMetrics().advanceWidth;\n  }\n\n  /**\n   * The glyph's advance height.\n   * @type {number}\n   */\n  @cache\n  get advanceHeight() {\n    return this._getMetrics().advanceHeight;\n  }\n\n  get ligatureCaretPositions() {}\n\n  _getName() {\n    let { post } = this._font;\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        let id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  @cache\n  get name() {\n    return this._getName();\n  }\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  render(ctx, size) {\n    ctx.save();\n\n    let scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    let fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import BBox from './BBox';\n\nconst SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\nexport default class Path {\n  constructor() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n  toFunction() {\n    return ctx => {\n      this.commands.forEach(c => {\n        return ctx[c.command].apply(ctx, c.args)\n      })\n    };\n  }\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  toSVG() {\n    let cmds = this.commands.map(c => {\n      let args = c.args.map(arg => Math.round(arg * 100) / 100);\n      return `${SVG_COMMANDS[c.command]}${args.join(' ')}`;\n    });\n\n    return cmds.join('');\n  }\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  get cbox() {\n    if (!this._cbox) {\n      let cbox = new BBox;\n      for (let command of this.commands) {\n        for (let i = 0; i < command.args.length; i += 2) {\n          cbox.addPoint(command.args[i], command.args[i + 1]);\n        }\n      }\n\n      this._cbox = Object.freeze(cbox);\n    }\n\n    return this._cbox;\n  }\n\n  /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */\n  get bbox() {\n    if (this._bbox) {\n      return this._bbox;\n    }\n\n    let bbox = new BBox;\n    let cx = 0, cy = 0;\n\n    let f = t => (\n      Math.pow(1 - t, 3) * p0[i]\n        + 3 * Math.pow(1 - t, 2) * t * p1[i]\n        + 3 * (1 - t) * Math.pow(t, 2) * p2[i]\n        + Math.pow(t, 3) * p3[i]\n    );\n\n    for (let c of this.commands) {\n      switch (c.command) {\n        case 'moveTo':\n        case 'lineTo':\n          let [x, y] = c.args;\n          bbox.addPoint(x, y);\n          cx = x;\n          cy = y;\n          break;\n\n        case 'quadraticCurveTo':\n        case 'bezierCurveTo':\n          if (c.command === 'quadraticCurveTo') {\n            // http://fontforge.org/bezier.html\n            var [qp1x, qp1y, p3x, p3y] = c.args;\n            var cp1x = cx + 2 / 3 * (qp1x - cx);    // CP1 = QP0 + 2/3 * (QP1-QP0)\n            var cp1y = cy + 2 / 3 * (qp1y - cy);\n            var cp2x = p3x + 2 / 3 * (qp1x - p3x);  // CP2 = QP2 + 2/3 * (QP1-QP2)\n            var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n          } else {\n            var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n          }\n\n          // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n          bbox.addPoint(p3x, p3y);\n\n          var p0 = [cx, cy];\n          var p1 = [cp1x, cp1y];\n          var p2 = [cp2x, cp2y];\n          var p3 = [p3x, p3y];\n\n          for (var i = 0; i <= 1; i++) {\n            let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            c = 3 * p1[i] - 3 * p0[i];\n\n            if (a === 0) {\n              if (b === 0) {\n                continue;\n              }\n\n              let t = -c / b;\n              if (0 < t && t < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t));\n                }\n              }\n\n              continue;\n            }\n\n            let b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0) {\n              continue;\n            }\n\n            let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t1), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t1));\n              }\n            }\n\n            let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t2), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t2));\n              }\n            }\n          }\n\n          cx = p3x;\n          cy = p3y;\n          break;\n      }\n    }\n\n    return this._bbox = Object.freeze(bbox);\n  }\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  mapPoints(fn) {\n    let path = new Path;\n\n    for (let c of this.commands) {\n      let args = [];\n      for (let i = 0; i < c.args.length; i += 2) {\n        let [x, y] = fn(c.args[i], c.args[i + 1]);\n        args.push(x, y);\n      }\n\n      path[c.command](...args);\n    }\n\n    return path;\n  }\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n  transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints((x, y) => {\n      const tx = m0 * x + m2 * y + m4;\n      const ty = m1 * x + m3 * y + m5;\n      return [tx, ty];\n    });\n  }\n\n  /**\n   * Translates the path by the given offset.\n   */\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  rotate(angle) {\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n\n  /**\n   * Scales the path.\n   */\n  scale(scaleX, scaleY = scaleX) {\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  }\n}\n\nfor (let command of ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']) {\n  Path.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command,\n      args\n    });\n\n    return this;\n  };\n}\n","export default [\n  '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n  'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n  'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n  'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n  'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n  'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n  'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n  'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n  'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n  'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n  'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n  'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n  'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n  'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n  'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n  'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n  'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n  'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n  'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n  'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n  'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n  'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n  'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n  'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'\n];\n","import Glyph from './Glyph';\nimport Path from './Path';\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\nexport default class CFFGlyph extends Glyph {\n  type = 'CFF';\n\n  _getName() {\n    if (this._font.CFF2) {\n      return super._getName();\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  }\n\n  bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  }\n\n  _getPath() {\n    let cff = this._font.CFF2 || this._font['CFF '];\n    let { stream } = cff;\n    let str = cff.topDict.CharStrings[this.id];\n    let end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    let path = new Path;\n    let stack = [];\n    let trans = [];\n\n    let width = null;\n    let nStems = 0;\n    let x = 0, y = 0;\n    let usedGsubrs;\n    let usedSubrs;\n    let open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    let gsubrs = cff.globalSubrIndex || [];\n    let gsubrsBias = this.bias(gsubrs);\n\n    let privateDict = cff.privateDictForGlyph(this.id) || {};\n    let subrs = privateDict.Subrs || [];\n    let subrsBias = this.bias(subrs);\n\n    let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    let vsindex = privateDict.vsindex;\n    let variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    let parse = function () {\n      while (stream.pos < end) {\n        let op = stream.readUInt8();\n        if (op < 32) {\n          let index, subr, phase;\n          let c1x, c1y, c2x, c2y, c3x, c3y;\n          let c4x, c4y, c5x, c5y, c6x, c6y;\n          let pts;\n\n          switch (op) {\n            case 1:  // hstem\n            case 3:  // vstem\n            case 18: // hstemhm\n            case 23: // vstemhm\n              parseStems();\n              break;\n\n            case 4: // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5: // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7: // vlineto\n              phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8: // rrcurveto\n              while (stack.length > 0) {\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10: // callsubr\n              index = stack.pop() + subrsBias;\n              subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                let p = stream.pos;\n                let e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11: // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14: // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15: { // vsindex\n              if (cff.version < 2) {\n                throw new Error('vsindex operator not supported in CFF v1');\n              }\n\n              vsindex = stack.pop();\n              break;\n            }\n\n            case 16: { // blend\n              if (cff.version < 2) {\n                throw new Error('blend operator not supported in CFF v1');\n              }\n\n              if (!variationProcessor) {\n                throw new Error('blend operator in non-variation font');\n              }\n\n              let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n              let numBlends = stack.pop();\n              let numOperands = numBlends * blendVector.length;\n              let delta = stack.length - numOperands;\n              let base = delta - numBlends;\n\n              for (let i = 0; i < numBlends; i++) {\n                let sum = stack[base + i];\n                for (let j = 0; j < blendVector.length; j++) {\n                  sum += blendVector[j] * stack[delta++];\n                }\n\n                stack[base + i] = sum;\n              }\n\n              while (numOperands--) {\n                stack.pop();\n              }\n\n              break;\n            }\n\n            case 19: // hintmask\n            case 20: // cntrmask\n              parseStems();\n              stream.pos += (nStems + 7) >> 3;\n              break;\n\n            case 21: // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22: // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24: // rcurveline\n              while (stack.length >= 8) {\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25: // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              c1x = x + stack.shift();\n              c1y = y + stack.shift();\n              c2x = c1x + stack.shift();\n              c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26: // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27: // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28: // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29: // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                let p = stream.pos;\n                let e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31: // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3: // and\n                  let a = stack.pop();\n                  let b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4: // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5: // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9: // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10: // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11: // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12: // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14: // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15: // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18: // drop\n                  stack.pop();\n                  break;\n\n                case 20: // put\n                  let val = stack.pop();\n                  let idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21: // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22: // ifelse\n                  let s1 = stack.pop();\n                  let s2 = stack.pop();\n                  let v1 = stack.pop();\n                  let v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23: // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24: // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26: // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27: // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28: // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29: // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30: // roll\n                  let n = stack.pop();\n                  let j = stack.pop();\n\n                  if (j >= 0) {\n                    while (j > 0) {\n                      var t = stack[n - 1];\n                      for (let i = n - 2; i >= 0; i--) {\n                        stack[i + 1] = stack[i];\n                      }\n\n                      stack[0] = t;\n                      j--;\n                    }\n                  } else {\n                    while (j < 0) {\n                      var t = stack[0];\n                      for (let i = 0; i <= n; i++) {\n                        stack[i] = stack[i + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      j++;\n                    }\n                  }\n                  break;\n\n                case 34: // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y;\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35: // flex\n                  pts = [];\n\n                  for (let i = 0; i <= 5; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36: // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37: // flex1\n                  let startx = x;\n                  let starty = y;\n\n                  pts = [];\n                  for (let i = 0; i <= 4; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) { // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(`Unknown op: 12 ${op}`);\n              }\n              break;\n\n            default:\n              throw new Error(`Unknown op: ${op}`);\n          }\n\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\nimport * as r from 'restructure';\n\nlet SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(t => t.parent.buflen - t._currentOffset)\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\nexport default class SBIXGlyph extends TTFGlyph {\n  type = 'SBIX';\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  getImageForSize(size) {\n    for (let i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) { break; }\n    }\n\n    let offsets = table.imageOffsets;\n    let start = offsets[this.id];\n    let end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {buflen: end - start});\n  }\n\n  render(ctx, size) {\n    let img = this.getImageForSize(size);\n    if (img != null) {\n      let scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale});\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      super.render(ctx, size);\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport BBox from './BBox';\n\nclass COLRLayer {\n  constructor(glyph, color) {\n    this.glyph = glyph;\n    this.color = color;\n  }\n}\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\nexport default class COLRGlyph extends Glyph {\n  type = 'COLR';\n\n  _getBBox() {\n    let bbox = new BBox;\n    for (let i = 0; i < this.layers.length; i++) {\n      let layer = this.layers[i];\n      let b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  get layers() {\n    let cpal = this._font.CPAL;\n    let colr = this._font.COLR;\n    let low = 0;\n    let high = colr.baseGlyphRecord.length - 1;\n\n    while (low <= high) {\n      let mid = (low + high) >> 1;\n      var rec = colr.baseGlyphRecord[mid];\n\n      if (this.id < rec.gid) {\n        high = mid - 1;\n      } else if (this.id > rec.gid) {\n        low = mid + 1;\n      } else {\n        var baseLayer = rec;\n        break;\n      }\n    }\n\n    // if base glyph not found in COLR table,\n    // default to normal glyph from glyf or CFF\n    if (baseLayer == null) {\n      var g = this._font._getBaseGlyph(this.id);\n      var color = {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 255\n      };\n\n      return [new COLRLayer(g, color)];\n    }\n\n    // otherwise, return an array of all the layers\n    let layers = [];\n    for (let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n      var rec = colr.layerRecords[i];\n      var color = cpal.colorRecords[rec.paletteIndex];\n      var g = this._font._getBaseGlyph(rec.gid);\n      layers.push(new COLRLayer(g, color));\n    }\n\n    return layers;\n  }\n\n  render(ctx, size) {\n    for (let {glyph, color} of this.layers) {\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  }\n}\n","const TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst TUPLE_COUNT_MASK           = 0x0fff;\nconst EMBEDDED_TUPLE_COORD       = 0x8000;\nconst INTERMEDIATE_TUPLE         = 0x4000;\nconst PRIVATE_POINT_NUMBERS      = 0x2000;\nconst TUPLE_INDEX_MASK           = 0x0fff;\nconst POINTS_ARE_WORDS           = 0x80;\nconst POINT_RUN_COUNT_MASK       = 0x7f;\nconst DELTAS_ARE_ZERO            = 0x80;\nconst DELTAS_ARE_WORDS           = 0x40;\nconst DELTA_RUN_COUNT_MASK       = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\nexport default class GlyphVariationProcessor {\n  constructor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map;\n  }\n\n  normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    let normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      let axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        let segment = this.font.avar.segment[i];\n        for (let j = 0; j < segment.correspondence.length; j++) {\n          let pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            let prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) /\n              (pair.fromCoord - prev.fromCoord + Number.EPSILON) +\n              prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  }\n\n  transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) { return; }\n\n    let { gvar } = this.font;\n    if (gid >= gvar.glyphCount) { return; }\n\n    let offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) { return; }\n\n    // Read the gvar data for this glyph\n    let { stream } = this.font;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    let tupleCount = stream.readUInt16BE();\n    let offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    let origPoints = glyphPoints.map(pt => pt.copy());\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (let i = 0; i < tupleCount; i++) {\n      let tupleDataSize = stream.readUInt16BE();\n      let tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      let xDeltas = this.decodeDeltas(nPoints);\n      let yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) { // all points\n        for (let i = 0; i < glyphPoints.length; i++) {\n          var point = glyphPoints[i];\n          point.x += Math.round(xDeltas[i] * factor);\n          point.y += Math.round(yDeltas[i] * factor);\n        }\n      } else {\n        let outPoints = origPoints.map(pt => pt.copy());\n        let hasDelta = glyphPoints.map(() => false);\n\n        for (let i = 0; i < points.length; i++) {\n          let idx = points[i];\n          if (idx < glyphPoints.length) {\n            let point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            point.x += xDeltas[i] * factor;\n            point.y += yDeltas[i] * factor;\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (let i = 0; i < glyphPoints.length; i++) {\n          let deltaX = outPoints[i].x - origPoints[i].x;\n          let deltaY = outPoints[i].y - origPoints[i].y;\n\n          glyphPoints[i].x = Math.round(glyphPoints[i].x + deltaX);\n          glyphPoints[i].y = Math.round(glyphPoints[i].y + deltaY);\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  }\n\n  decodePoints() {\n    let stream = this.font.stream;\n    let count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    let points = new Uint16Array(count);\n    let i = 0;\n    let point = 0;\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      let fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (let j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  }\n\n  decodeDeltas(count) {\n    let stream = this.font.stream;\n    let i = 0;\n    let deltas = new Int16Array(count);\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n\n      } else {\n        let fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (let j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  }\n\n  tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    let normalized = this.normalizedCoords;\n    let { gvar } = this.font;\n    let factor = 1;\n\n    for (let i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if ((normalized[i] < Math.min(0, tupleCoords[i])) ||\n            (normalized[i] > Math.max(0, tupleCoords[i]))) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if ((normalized[i] < startCoords[i]) ||\n            (normalized[i] > endCoords[i])) {\n          return 0;\n\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  }\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    let point = 0;\n    while (point < points.length) {\n      let firstPoint = point;\n\n      // find the end point of the contour\n      let endPoint = point;\n      let pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      let firstDelta = point;\n      let curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  }\n\n  deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    let iterable = ['x', 'y'];\n    for (let i = 0; i < iterable.length; i++) {\n      let k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      let in1 = inPoints[ref1][k];\n      let in2 = inPoints[ref2][k];\n      let out1 = outPoints[ref1][k];\n      let out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (let p = p1; p <= p2; p++) {\n          let out = inPoints[p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[p][k] = out;\n        }\n      }\n    }\n  }\n\n  deltaShift(p1, p2, ref, inPoints, outPoints) {\n    let deltaX = outPoints[ref].x - inPoints[ref].x;\n    let deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (let p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  }\n\n  getAdvanceAdjustment(gid, table) {\n    let outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      let idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      let entryFormat = table.advanceWidthMapping.entryFormat;\n      ({outerIndex, innerIndex} = table.advanceWidthMapping.mapData[idx]);\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  }\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    let deltaSet = varData.deltaSets[innerIndex];\n    let blendVector = this.getBlendVector(itemStore, outerIndex);\n    let netAdjustment = 0;\n\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  }\n\n  getBlendVector(itemStore, outerIndex) {\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    let normalizedCoords = this.normalizedCoords;\n    let blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      let scalar = 1;\n      let regionIndex = varData.regionIndexes[master];\n      let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (let j = 0; j < axes.length; j++) {\n        let axis = axes[j];\n        let axisScalar;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n        // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n        // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n        // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) /\n              (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) /\n              (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  }\n}\n","import cloneDeep from 'clone';\nimport Subset from './Subset';\nimport Directory from '../tables/directory';\nimport Tables from '../tables';\nimport TTFGlyphEncoder from '../glyph/TTFGlyphEncoder';\n\nexport default class TTFSubset extends Subset {\n  constructor(font) {\n    super(font);\n    this.glyphEncoder = new TTFGlyphEncoder;\n  }\n\n  _addGlyph(gid) {\n    let glyph = this.font.getGlyph(gid);\n    let glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    let curOffset = this.font.loca.offsets[gid];\n    let nextOffset = this.font.loca.offsets[gid + 1];\n\n    let stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    let buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Uint8Array(buffer);\n      let view = new DataView(buffer.buffer);\n      for (let component of glyf.components) {\n        gid = this.includeGlyph(component.glyphID);\n        view.setUint16(component.pos, gid);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  }\n\n  encode() {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    let i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    let maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n\n    let head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    let hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    return Directory.toBuffer({\n      tables: {\n        head,\n        hhea,\n        loca: this.loca,\n        maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  }\n}\n","import * as r from 'restructure';\n\nconst resolved = Promise.resolve();\n\nexport default class Subset {\n  constructor(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  }\n}\n","import * as r from 'restructure';\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\nclass Point {\n  static size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  }\n  \n  static encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  }\n}\n\nlet Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\nexport default class TTFGlyphEncoder {\n  encodeSimple(path, instructions = []) {\n    let endPtsOfContours = [];\n    let xPoints = [];\n    let yPoints = [];\n    let flags = [];\n    let same = 0;\n    let lastX = 0, lastY = 0, lastFlag = 0;\n    let pointCount = 0;\n    \n    for (let i = 0; i < path.commands.length; i++) {\n      let c = path.commands[i];\n      \n      for (let j = 0; j < c.args.length; j += 2) {\n        let x = c.args[j];\n        let y = c.args[j + 1];\n        let flag = 0;\n        \n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          let next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            let midX = (lastX + next.args[0]) / 2;\n            let midY = (lastY + next.args[1]) / 2;\n            \n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n        \n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n        \n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n        \n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n      \n          flags.push(flag);\n          lastFlag = flag;\n        }\n        \n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n  \n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n    \n    let bbox = path.bbox;\n    let glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    \n    let size = Glyf.size(glyf);\n    let tail = 4 - (size % 4);\n    \n    let stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n    \n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n    \n    return stream.buffer;\n  }\n  \n  _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    let diff = value - last;\n    \n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n      \n      points.push(diff);\n    }\n    \n    return flag;\n  }\n}\n","import Subset from './Subset';\nimport CFFTop from '../cff/CFFTop';\nimport CFFPrivateDict from '../cff/CFFPrivateDict';\nimport standardStrings from '../cff/CFFStandardStrings';\n\nexport default class CFFSubset extends Subset {\n  constructor(font) {\n    super(font);\n\n    this.cff = this.font['CFF '];\n    if (!this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n  }\n\n  subsetCharstrings() {\n    this.charstrings = [];\n    let gsubrs = {};\n\n    for (let gid of this.glyphs) {\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  }\n\n  subsetSubrs(subrs, used) {\n    let res = [];\n    for (let i = 0; i < subrs.length; i++) {\n      let subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Uint8Array([11])); // return\n      }\n    }\n\n    return res;\n  }\n\n  subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    let used_fds = {};\n    let used_subrs = [];\n    let fd_select = {};\n    for (let gid of this.glyphs) {\n      let fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n        fd_select[fd] = topDict.FDArray.length - 1;\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(fd_select[fd]);\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[fd_select[fd]][subr] = true;\n      }\n    }\n\n    for (let i = 0; i < topDict.FDArray.length; i++) {\n      let dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  }\n\n  createCIDFontdict(topDict) {\n    let used_subrs = {};\n    for (let gid of this.glyphs) {\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    let privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  }\n\n  addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  }\n\n  encode() {\n    this.subsetCharstrings();\n\n    let charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    let topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (let key of ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']) {\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    let top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    return CFFTop.toBuffer(top);\n  }\n}\n","import TTFFont from './TTFFont';\nimport WOFFDirectory from './tables/WOFFDirectory';\nimport tables from './tables';\nimport inflate from 'tiny-inflate';\nimport * as r from 'restructure';\nimport { asciiDecoder } from './utils';\n\nexport default class WOFFFont extends TTFFont {\n  type = 'WOFF';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOFF';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        let outBuffer = new Uint8Array(table.length);\n        let buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  }\n}\n","import * as r from 'restructure';\nimport tables from './';\n\nlet WOFFDirectoryEntry = new r.Struct({\n  tag:          new r.String(4),\n  offset:       new r.Pointer(r.uint32, 'void', {type: 'global'}),\n  compLength:   r.uint32,\n  length:       r.uint32,\n  origChecksum: r.uint32\n});\n\nlet WOFFDirectory = new r.Struct({\n  tag:            new r.String(4), // should be 'wOFF'\n  flavor:         r.uint32,\n  length:         r.uint32,\n  numTables:      r.uint16,\n  reserved:       new r.Reserved(r.uint16),\n  totalSfntSize:  r.uint32,\n  majorVersion:   r.uint16,\n  minorVersion:   r.uint16,\n  metaOffset:     r.uint32,\n  metaLength:     r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset:     r.uint32,\n  privLength:     r.uint32,\n  tables:         new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nexport default WOFFDirectory;\n","import * as r from 'restructure';\nimport brotli from 'brotli/decompress.js';\nimport TTFFont from './TTFFont';\nimport TTFGlyph, { Point } from './glyph/TTFGlyph';\nimport WOFF2Glyph from './glyph/WOFF2Glyph';\nimport WOFF2Directory from './tables/WOFF2Directory';\nimport { asciiDecoder } from './utils';\n\n/**\n * Subclass of TTFFont that represents a TTF/OTF font compressed by WOFF2\n * See spec here: http://www.w3.org/TR/WOFF2/\n */\nexport default class WOFF2Font extends TTFFont {\n  type = 'WOFF2';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOF2';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFF2Directory.decode(this.stream);\n    this._dataPos = this.stream.pos;\n  }\n\n  _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n\n      let decompressedSize = 0;\n      for (let tag in this.directory.tables) {\n        let entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += (entry.transformLength != null) ? entry.transformLength : entry.length;\n      }\n\n      let decompressed = brotli(buffer, decompressedSize);\n      if (!decompressed) {\n        throw new Error('Error decoding compressed data in WOFF2');\n      }\n\n      this.stream = new r.DecodeStream(decompressed);\n      this._decompressed = true;\n    }\n  }\n\n  _decodeTable(table) {\n    this._decompress();\n    return super._decodeTable(table);\n  }\n\n  // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) { this._transformGlyfTable(); }\n        return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);\n\n      } else {\n        return super._getBaseGlyph(glyph, characters);\n      }\n    }\n  }\n\n  _transformGlyfTable() {\n    this._decompress();\n    this.stream.pos = this.directory.tables.glyf.offset;\n    let table = GlyfTable.decode(this.stream);\n    let glyphs = [];\n\n    for (let index = 0; index < table.numGlyphs; index++) {\n      let glyph = {};\n      let nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) { // simple glyph\n        let nPoints = [];\n        let totalPoints = 0;\n\n        for (let i = 0; i < nContours; i++) {\n          let r = read255UInt16(table.nPoints);\n          totalPoints += r;\n          nPoints.push(totalPoints);\n        }\n\n        glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);\n        for (let i = 0; i < nContours; i++) {\n          glyph.points[nPoints[i] - 1].endContour = true;\n        }\n\n        var instructionSize = read255UInt16(table.glyphs);\n\n      } else if (nContours < 0) { // composite glyph\n        let haveInstructions = TTFGlyph.prototype._decodeComposite.call({ _font: this }, glyph, table.composites);\n        if (haveInstructions) {\n          var instructionSize = read255UInt16(table.glyphs);\n        }\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  }\n}\n\n// Special class that accepts a length and returns a sub-stream for that data\nclass Substream {\n  constructor(length) {\n    this.length = length;\n    this._buf = new r.Buffer(length);\n  }\n\n  decode(stream, parent) {\n    return new r.DecodeStream(this._buf.decode(stream, parent));\n  }\n}\n\n// This struct represents the entire glyf table\nlet GlyfTable = new r.Struct({\n  version: r.uint32,\n  numGlyphs: r.uint16,\n  indexFormat: r.uint16,\n  nContourStreamSize: r.uint32,\n  nPointsStreamSize: r.uint32,\n  flagStreamSize: r.uint32,\n  glyphStreamSize: r.uint32,\n  compositeStreamSize: r.uint32,\n  bboxStreamSize: r.uint32,\n  instructionStreamSize: r.uint32,\n  nContours: new Substream('nContourStreamSize'),\n  nPoints: new Substream('nPointsStreamSize'),\n  flags: new Substream('flagStreamSize'),\n  glyphs: new Substream('glyphStreamSize'),\n  composites: new Substream('compositeStreamSize'),\n  bboxes: new Substream('bboxStreamSize'),\n  instructions: new Substream('instructionStreamSize')\n});\n\nconst WORD_CODE = 253;\nconst ONE_MORE_BYTE_CODE2 = 254;\nconst ONE_MORE_BYTE_CODE1 = 255;\nconst LOWEST_U_CODE = 253;\n\nfunction read255UInt16(stream) {\n  let code = stream.readUInt8();\n\n  if (code === WORD_CODE) {\n    return stream.readUInt16BE();\n  }\n\n  if (code === ONE_MORE_BYTE_CODE1) {\n    return stream.readUInt8() + LOWEST_U_CODE;\n  }\n\n  if (code === ONE_MORE_BYTE_CODE2) {\n    return stream.readUInt8() + LOWEST_U_CODE * 2;\n  }\n\n  return code;\n}\n\nfunction withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction decodeTriplet(flags, glyphs, nPoints) {\n  let y;\n  let x = y = 0;\n  let res = [];\n\n  for (let i = 0; i < nPoints; i++) {\n    let dx = 0, dy = 0;\n    let flag = flags.readUInt8();\n    let onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n\n    } else if (flag < 20) {\n      dx = withSign(flag, (((flag - 10) & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = withSign(flag, 1 + ((b0 / 12) << 8) + glyphs.readUInt8());\n      dy = withSign(flag >> 1, 1 + (((b0 % 12) >> 2) << 8) + glyphs.readUInt8());\n\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      let b2 = glyphs.readUInt8();\n      dx = withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n\n    } else {\n      dx = withSign(flag, glyphs.readUInt16BE());\n      dy = withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new Point(onCurve, false, x, y));\n  }\n\n  return res;\n}\n","import TTFGlyph from './TTFGlyph';\n\n/**\n * Represents a TrueType glyph in the WOFF2 format, which compresses glyphs differently.\n */\nexport default class WOFF2Glyph extends TTFGlyph {\n  type = 'WOFF2';\n\n  _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  }\n\n  _getCBox() {\n    return this.path.bbox;\n  }\n}\n","import * as r from 'restructure';\n\nconst Base128 = {\n  decode(stream) {\n    let result = 0;\n    let iterable = [0, 1, 2, 3, 4];\n    for (let j = 0; j < iterable.length; j++) {\n      let i = iterable[j];\n      let code = stream.readUInt8();\n\n      // If any of the top seven bits are set then we're about to overflow.\n      if (result & 0xe0000000) {\n        throw new Error('Overflow');\n      }\n\n      result = (result << 7) | (code & 0x7f);\n      if ((code & 0x80) === 0) {\n        return result;\n      }\n    }\n\n    throw new Error('Bad base 128 number');\n  }\n};\n\nlet knownTags = [\n  'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ',\n  'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp',\n  'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF',\n  'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL',\n  'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc',\n  'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx',\n  'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'\n];\n\nlet WOFF2DirectoryEntry = new r.Struct({\n  flags: r.uint8,\n  customTag: new r.Optional(new r.String(4), t => (t.flags & 0x3f) === 0x3f),\n  tag: t => t.customTag || knownTags[t.flags & 0x3f],// || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },\n  length: Base128,\n  transformVersion: t => (t.flags >>> 6) & 0x03,\n  transformed: t => (t.tag === 'glyf' || t.tag === 'loca') ? t.transformVersion === 0 : t.transformVersion !== 0,\n  transformLength: new r.Optional(Base128, t => t.transformed)\n});\n\nlet WOFF2Directory = new r.Struct({\n  tag: new r.String(4), // should be 'wOF2'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  totalCompressedSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFF2DirectoryEntry, 'numTables')\n});\n\nWOFF2Directory.process = function() {\n  let tables = {};\n  for (let i = 0; i < this.tables.length; i++) {\n    let table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n\nexport default WOFF2Directory;\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport { asciiDecoder } from './utils';\n\nlet TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts'),\n    dsigTag:    r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nexport default class TrueTypeCollection {\n  type = 'TTC';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'ttcf';\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  getFont(name) {\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\n\nlet DFontName = new r.String(r.uint8);\nlet DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nlet Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nlet Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, t => t.maxTypeIndex + 1), { type: 'parent' })\n});\n\nlet TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, t => t.length + 1)\n});\n\nlet DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nlet DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nexport default class DFont {\n  type = 'DFont';\n\n  static probe(buffer) {\n    let stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (let type of header.map.typeList.types) {\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (let type of this.header.map.typeList.types) {\n      for (let ref of type.refList) {\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n"],"names":[],"version":3,"file":"main.cjs.map","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/main.cjs":{"lineLengths":[0,47,45,103,13,5,0,38,23,27,27,7,7,5,0,14,1,0,37,86,1,0,96,96,89,93,92,91,90,88,92,91,90,90,99,20,48,24,21,23,2,49,24,29,86,21,41,5,44,80,42,13,52,39,23,23,9,5,24,63,5,20,61,5,20,62,5,19,60,5,19,61,5,1,51,13,14,14,14,12,13,13,13,13,13,2,95,48,43,49,70,113,52,26,19,6,109,51,26,19,6,1,0,0,60,74,10,22,49,24,29,101,21,5,25,42,34,5,45,16,25,27,28,24,101,22,27,28,102,22,24,71,22,25,66,22,20,69,9,30,5,24,52,51,45,5,24,45,51,52,5,23,46,52,5,23,46,52,5,23,42,63,31,16,47,26,34,9,5,1,60,45,43,40,56,22,5,38,1,54,44,110,34,15,1,95,48,43,49,75,119,47,26,6,115,46,26,6,1,0,0,0,0,0,49,24,80,35,5,21,36,42,80,35,22,5,1,0,0,35,0,101,100,103,101,103,103,101,103,103,101,103,99,102,100,102,102,100,101,102,99,102,102,100,102,103,101,103,100,104,102,104,104,102,104,0,0,104,37,16,25,29,28,76,5,12,79,5,20,42,5,25,46,5,1,105,112,92,112,112,92,112,112,92,112,104,111,92,111,111,92,110,111,91,111,111,92,111,112,92,112,99,52,36,36,5,20,50,5,25,59,5,1,106,92,106,106,92,106,0,0,35,0,108,113,0,76,12,49,77,72,117,56,15,1,49,27,31,33,29,34,28,9,5,1,0,0,104,52,16,25,29,37,5,28,19,36,23,25,113,84,39,42,25,33,18,31,30,18,33,29,34,18,26,33,17,15,22,9,60,167,78,97,19,5,46,121,21,84,39,19,28,30,14,9,65,133,20,5,35,25,84,19,29,40,30,14,74,53,9,67,84,22,43,46,61,13,9,5,1,0,0,0,0,0,104,28,36,94,93,27,30,30,27,10,96,60,19,5,20,85,36,5,30,85,46,5,1,44,43,25,29,29,23,36,24,5,16,64,40,45,81,72,34,9,33,5,15,26,80,22,5,1,0,0,0,104,34,16,25,27,5,20,45,23,51,39,59,9,19,5,12,32,5,26,20,51,39,31,46,13,9,45,5,1,0,0,0,104,22,16,25,5,28,50,5,23,43,5,33,54,5,1,0,0,0,0,0,104,24,16,29,5,28,94,41,5,23,94,29,109,19,5,33,122,39,5,1,0,0,0,104,36,16,25,31,5,20,47,44,5,12,32,5,25,48,76,47,5,1,0,0,0,104,40,16,25,35,5,28,44,88,63,5,23,44,88,58,22,5,33,44,88,68,5,1,0,0,0,0,103,33,16,25,27,5,28,46,25,5,24,90,40,5,33,54,5,1,0,0,0,0,0,104,44,16,29,33,5,28,24,42,96,66,113,14,23,68,125,38,9,59,83,22,5,23,54,123,42,162,57,67,110,87,20,5,33,42,162,159,42,148,5,1,56,21,21,20,21,23,24,24,24,23,24,20,21,16,59,62,21,5,1,61,21,21,33,20,24,51,45,74,52,99,48,24,17,50,58,58,58,13,23,23,24,23,24,20,37,16,60,5,1,0,0,0,0,104,29,16,29,5,40,56,52,65,19,5,36,23,35,38,21,29,14,27,33,14,29,25,30,14,22,29,13,11,19,5,39,31,20,37,70,48,36,115,36,13,63,9,5,47,34,21,27,21,26,10,61,21,36,42,68,9,53,20,5,33,17,69,21,25,36,27,21,26,10,68,36,36,72,9,18,39,42,57,9,5,1,0,0,0,60,77,2,104,37,16,25,33,73,5,40,56,113,52,87,50,78,110,47,65,19,5,47,22,54,61,21,27,21,26,10,21,84,67,45,68,9,50,78,27,31,68,9,53,20,5,33,22,69,21,25,36,27,21,26,10,68,81,67,45,72,9,50,27,31,72,9,18,39,42,57,9,5,1,0,0,0,0,35,0,102,106,0,0,104,48,16,37,25,31,51,67,74,71,65,38,119,55,9,5,25,59,31,85,21,34,25,44,22,29,63,22,26,51,22,20,28,44,47,9,76,38,32,27,37,44,44,33,52,33,27,14,85,83,89,32,15,33,26,5,20,27,34,25,29,22,26,33,22,20,50,9,34,27,118,35,28,9,25,112,46,36,9,38,5,30,21,27,26,67,19,9,34,25,43,22,29,74,22,26,33,43,22,20,29,50,9,83,69,34,27,118,35,28,9,27,23,21,26,11,59,5,1,49,29,25,27,5,1,0,0,66,66,66,0,0,33,0],"data":{"mappings":"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","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/EncodeStream.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/DecodeStream.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Array.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Base.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Number.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/utils.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/LazyArray.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Bitfield.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Boolean.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Buffer.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Enum.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Optional.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Reserved.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/String.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Struct.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/VersionedStruct.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/restructure/dist/src/Pointer.js"],"sourcesContent":["export {EncodeStream} from './src/EncodeStream.js';\nexport {DecodeStream} from './src/DecodeStream.js';\nexport {Array} from './src/Array.js';\nexport {LazyArray} from './src/LazyArray.js';\nexport {Bitfield} from './src/Bitfield.js';\nexport {Boolean} from './src/Boolean.js';\nexport {Buffer} from './src/Buffer.js';\nexport {Enum} from './src/Enum.js';\nexport {Optional} from './src/Optional.js';\nexport {Reserved} from './src/Reserved.js';\nexport {String} from './src/String.js';\nexport {Struct} from './src/Struct.js';\nexport {VersionedStruct} from './src/VersionedStruct.js';\n\nexport * from './src/utils.js';\nexport * from './src/Number.js';\nexport * from './src/Pointer.js';\n","import {DecodeStream} from './DecodeStream.js';\n\nconst textEncoder = new TextEncoder();\nconst isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\n\nexport class EncodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  writeBuffer(buffer) {\n    this.buffer.set(buffer, this.pos);\n    this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    let buf;\n    switch (encoding) {\n      case 'utf16le':\n      case 'utf16-le':\n      case 'ucs2': // node treats this the same as utf16.\n        buf = stringToUtf16(string, isBigEndian);\n        break;\n\n      case 'utf16be':\n      case 'utf16-be':\n        buf = stringToUtf16(string, !isBigEndian);\n        break;\n\n      case 'utf8':\n        buf = textEncoder.encode(string);\n        break;\n\n      case 'ascii':\n        buf = stringToAscii(string);\n        break;\n\n      default:\n        throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n\n    this.writeBuffer(buf);\n  }\n\n  writeUInt24BE(val) {\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = val & 0xff;\n  }\n\n  writeUInt24LE(val) {\n    this.buffer[this.pos++] = val & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      this.writeUInt24BE(val);\n    } else {\n      this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      this.writeUInt24LE(val);\n    } else {\n      this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.buffer.fill(val, this.pos, this.pos + length);\n      this.pos += length;\n    } else {\n      const buf = new Uint8Array(length);\n      buf.fill(val);\n      this.writeBuffer(buf);\n    }\n  }\n}\n\nfunction stringToUtf16(string, swap) {\n  let buf = new Uint16Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i);\n    if (swap) {\n      code = (code >> 8) | ((code & 0xff) << 8);\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  let buf = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'set') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n      this.view[key](this.pos, value, false);\n      this.pos += bytes;\n    };\n\n    if (bytes !== 1) {\n      EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n      };\n    }\n  }\n}\n","// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n}\n\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass ArrayT extends Base {\n  constructor(type, length, lengthType = 'count') {\n    super();\n    this.type = type;\n    this.length = length;\n    this.lengthType = lengthType;\n  }\n\n  decode(stream, parent) {\n    let length;\n    const { pos } = stream;\n\n    const res = [];\n    let ctx = parent;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    }\n\n    if (this.length instanceof NumberT) {\n      // define hidden properties\n      Object.defineProperties(res, {\n        parent:         { value: parent },\n        _startOffset:   { value: pos },\n        _currentOffset: { value: 0, writable: true },\n        _length:        { value: length }\n      });\n\n      ctx = res;\n    }\n\n    if ((length == null) || (this.lengthType === 'bytes')) {\n      const target = (length != null) ?\n        stream.pos + length\n      : (parent != null ? parent._length : undefined) ?\n        parent._startOffset + parent._length\n      :\n        stream.length;\n\n      while (stream.pos < target) {\n        res.push(this.type.decode(stream, ctx));\n      }\n\n    } else {\n      for (let i = 0, end = length; i < end; i++) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    }\n\n    return res;\n  }\n\n  size(array, ctx, includePointers = true) {\n    if (!array) {\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n    }\n\n    let size = 0;\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n      ctx = {parent: ctx, pointerSize: 0};\n    }\n\n    for (let item of array) {\n      size += this.type.size(item, ctx);\n    }\n\n    if (ctx && includePointers && this.length instanceof NumberT) {\n      size += ctx.pointerSize;\n    }\n    \n    return size;\n  }\n\n  encode(stream, array, parent) {\n    let ctx = parent;\n    if (this.length instanceof NumberT) {\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent\n      };\n\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n      this.length.encode(stream, array.length);\n    }\n\n    for (let item of array) {\n      this.type.encode(stream, item, ctx);\n    }\n\n    if (this.length instanceof NumberT) {\n      let i = 0;\n      while (i < ctx.pointers.length) {\n        const ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }\n}\n\nexport {ArrayT as Array};\n","import {DecodeStream} from './DecodeStream.js';\nimport {EncodeStream} from './EncodeStream.js';\n\nexport class Base {\n  fromBuffer(buffer) {\n    let stream = new DecodeStream(buffer);\n    return this.decode(stream);\n  }\n\n  toBuffer(value) {\n    let size = this.size(value);\n    let buffer = new Uint8Array(size);\n    let stream = new EncodeStream(buffer);\n    this.encode(stream, value);\n    return buffer;\n  }\n}\n","import {DecodeStream} from './DecodeStream.js';\nimport {Base} from './Base.js';\n\nclass NumberT extends Base {\n  constructor(type, endian = 'BE') {\n    super();\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexport {NumberT as Number};\n\nexport const uint8 = new NumberT('UInt8');\nexport const uint16be = new NumberT('UInt16', 'BE');\nexport const uint16 = uint16be;\nexport const uint16le = new NumberT('UInt16', 'LE');\nexport const uint24be = new NumberT('UInt24', 'BE');\nexport const uint24 = uint24be;\nexport const uint24le = new NumberT('UInt24', 'LE');\nexport const uint32be = new NumberT('UInt32', 'BE');\nexport const uint32 = uint32be;\nexport const uint32le = new NumberT('UInt32', 'LE');\nexport const int8 = new NumberT('Int8');\nexport const int16be = new NumberT('Int16', 'BE');\nexport const int16 = int16be;\nexport const int16le = new NumberT('Int16', 'LE');\nexport const int24be = new NumberT('Int24', 'BE');\nexport const int24 = int24be;\nexport const int24le = new NumberT('Int24', 'LE');\nexport const int32be = new NumberT('Int32', 'BE');\nexport const int32 = int32be;\nexport const int32le = new NumberT('Int32', 'LE');\nexport const floatbe = new NumberT('Float', 'BE');\nexport const float = floatbe;\nexport const floatle = new NumberT('Float', 'LE');\nexport const doublebe = new NumberT('Double', 'BE');\nexport const double = doublebe;\nexport const doublele = new NumberT('Double', 'LE');\n\nexport class Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexport const fixed16be = new Fixed(16, 'BE');\nexport const fixed16 = fixed16be;\nexport const fixed16le = new Fixed(16, 'LE');\nexport const fixed32be = new Fixed(32, 'BE');\nexport const fixed32 = fixed32be;\nexport const fixed32le = new Fixed(32, 'LE');\n","import {Number as NumberT} from './Number.js';\n\nexport function resolveLength(length, stream, parent) {\n  let res;\n  if (typeof length === 'number') {\n    res = length;\n\n  } else if (typeof length === 'function') {\n    res = length.call(parent, parent);\n\n  } else if (parent && (typeof length === 'string')) {\n    res = parent[length];\n\n  } else if (stream && length instanceof NumberT) {\n    res = length.decode(stream);\n  }\n\n  if (isNaN(res)) {\n    throw new Error('Not a fixed size');\n  }\n\n  return res;\n};\n\nexport class PropertyDescriptor {\n  constructor(opts = {}) {\n    this.enumerable = true;\n    this.configurable = true;\n\n    for (let key in opts) {\n      const val = opts[key];\n      this[key] = val;\n    }\n  }\n}\n","import {Array as ArrayT} from './Array.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const { pos } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.size(val, ctx);\n  }\n\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.encode(stream, val, ctx);\n  }\n}\n\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n\n  get(index) {\n    if ((index < 0) || (index >= this.length)) {\n      return undefined;\n    }\n\n    if (this.items[index] == null) {\n      const { pos } = this.stream;\n      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n\n    return this.items[index];\n  }\n\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Bitfield extends Base {\n  constructor(type, flags = []) {\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & (1 << i));\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) { val |= (1 << i); }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class BooleanT extends Base {\n  constructor(type) {\n    super();\n    this.type = type;\n  }\n\n  decode(stream, parent) {\n    return !!this.type.decode(stream, parent);\n  }\n\n  size(val, parent) {\n    return this.type.size(val, parent);\n  }\n\n  encode(stream, val, parent) {\n    return this.type.encode(stream, +val, parent);\n  }\n}\n\nexport {BooleanT as Boolean};\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class BufferT extends Base {\n  constructor(length) {\n    super();\n    this.length = length;\n  }\n  \n  decode(stream, parent) {\n    const length = utils.resolveLength(this.length, stream, parent);\n    return stream.readBuffer(length);\n  }\n\n  size(val, parent) {\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let len = val.length;\n    if (this.length instanceof NumberT) {\n      len += this.length.size();\n    }\n\n    return len;\n  }\n\n  encode(stream, buf, parent) {\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, buf.length);\n    }\n\n    return stream.writeBuffer(buf);\n  }\n}\n\nexport {BufferT as Buffer};\n","import {Base} from './Base.js';\n\nexport class Enum extends Base {\n  constructor(type, options = []) {\n    super();\n    this.type = type;\n    this.options = options;\n  }\n  \n  decode(stream) {\n    const index = this.type.decode(stream);\n    return this.options[index] || index;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, val) {\n    const index = this.options.indexOf(val);\n    if (index === -1) {\n      throw new Error(`Unknown option in enum: ${val}`);\n    }\n\n    return this.type.encode(stream, index);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Optional extends Base {\n  constructor(type, condition = true) {\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n\n  decode(stream, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n\n  size(val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n\n  encode(stream, val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n}\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Reserved extends Base {\n  constructor(type, count = 1) {\n    super();\n    this.type = type;\n    this.count = count;\n  }\n  decode(stream, parent) {\n    stream.pos += this.size(null, parent);\n    return undefined;\n  }\n\n  size(data, parent) {\n    const count = utils.resolveLength(this.count, null, parent);\n    return this.type.size() * count;\n  }\n\n  encode(stream, val, parent) {\n    return stream.fill(0, this.size(val, parent));\n  }\n}\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n    let width = encodingWidth(encoding);\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length - width + 1) &&\n        (buffer[pos] !== 0x00 ||\n        (width === 2 && buffer[pos+1] !== 0x00)\n        )) {\n        pos += width;\n      }\n\n      length = pos - stream.pos;\n    }\n\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos+=width;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (val === undefined || val === null) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size += encodingWidth(encoding);\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return encodingWidth(encoding) == 2 ?\n        stream.writeUInt16LE(0x0000) :\n        stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction encodingWidth(encoding) {\n  switch(encoding) {\n    case 'ascii':\n    case 'utf8': // utf8 is a byte-based encoding for zero-term string\n      return 1;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf-16be':\n    case 'utf-16le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return 2;\n    default:\n      //TODO: assume all other encodings are 1-byters\n      //throw new Error('Unknown encoding ' + encoding);\n      return 1;\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Struct extends Base {\n  constructor(fields = {}) {\n    super();\n    this.fields = fields;\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n    this._parseFields(stream, res, this.fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  _setup(stream, parent, length) {\n    const res = {};\n\n    // define hidden properties\n    Object.defineProperties(res, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos },\n      _currentOffset: { value: 0, writable: true },\n      _length:        { value: length }\n    });\n\n    return res;\n  }\n\n  _parseFields(stream, res, fields) {\n    for (let key in fields) {\n      var val;\n      const type = fields[key];\n      if (typeof type === 'function') {\n        val = type.call(res, res);\n      } else {\n        val = type.decode(stream, res);\n      }\n\n      if (val !== undefined) {\n        if (val instanceof utils.PropertyDescriptor) {\n          Object.defineProperty(res, key, val);\n        } else {\n          res[key] = val;\n        }\n      }\n\n      res._currentOffset = stream.pos - res._startOffset;\n    }\n\n  }\n\n  size(val, parent, includePointers = true) {\n    if (val == null) { val = {}; }\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    let size = 0;\n    for (let key in this.fields) {\n      const type = this.fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    for (let key in this.fields) {\n      type = this.fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import {Struct} from './Struct.js';\n\nconst getPath = (object, pathArray) => {\n  return pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object);\n};\n\nexport class VersionedStruct extends Struct {\n  constructor(type, versions = {}) {\n    super();\n    this.type = type;\n    this.versions = versions;\n    if (typeof type === 'string') {\n      this.versionPath = type.split('.');\n    }\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n\n    if (typeof this.type === 'string') {\n      res.version = getPath(parent, this.versionPath);\n    } else {\n      res.version = this.type.decode(stream);\n    }\n\n    if (this.versions.header) {\n      this._parseFields(stream, res, this.versions.header);\n    }\n\n    const fields = this.versions[res.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${res.version}`);\n    }\n\n    if (fields instanceof VersionedStruct) {\n      return fields.decode(stream, parent);\n    }\n\n    this._parseFields(stream, res, fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  size(val, parent, includePointers = true) {\n    let key, type;\n    if (!val) {\n      throw new Error('Not a fixed size');\n    }\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    let size = 0;\n    if (typeof this.type !== 'string') {\n      size += this.type.size(val.version, ctx);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${val.version}`);\n    }\n\n    for (key in fields) {\n      type = fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let key, type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    if (typeof this.type !== 'string') {\n      this.type.encode(stream, val.version);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    for (key in fields) {\n      type = fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import * as utils from './utils.js';\nimport {Base} from './Base.js';\n\nexport class Pointer extends Base {\n  constructor(offsetType, type, options = {}) {\n    super();\n    this.offsetType = offsetType;\n    this.type = type;\n    this.options = options;\n    if (this.type === 'void') { this.type = null; }\n    if (this.options.type == null) { this.options.type = 'local'; }\n    if (this.options.allowNull == null) { this.options.allowNull = true; }\n    if (this.options.nullValue == null) { this.options.nullValue = 0; }\n    if (this.options.lazy == null) { this.options.lazy = false; }\n    if (this.options.relativeTo) {\n      if (typeof this.options.relativeTo !== 'function') {\n        throw new Error('relativeTo option must be a function');\n      }\n      this.relativeToGetter = options.relativeTo;\n    }\n  }\n\n  decode(stream, ctx) {\n    const offset = this.offsetType.decode(stream, ctx);\n\n    // handle NULL pointers\n    if ((offset === this.options.nullValue) && this.options.allowNull) {\n      return null;\n    }\n\n    let relative;\n    switch (this.options.type) {\n      case 'local':     relative = ctx._startOffset; break;\n      case 'immediate': relative = stream.pos - this.offsetType.size(); break;\n      case 'parent':    relative = ctx.parent._startOffset; break;\n      default:\n        var c = ctx;\n        while (c.parent) {\n          c = c.parent;\n        }\n\n        relative = c._startOffset || 0;\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(ctx);\n    }\n\n    const ptr = offset + relative;\n\n    if (this.type != null) {\n      let val = null;\n      const decodeValue = () => {\n        if (val != null) { return val; }\n\n        const { pos } = stream;\n        stream.pos = ptr;\n        val = this.type.decode(stream, ctx);\n        stream.pos = pos;\n        return val;\n      };\n\n      // If this is a lazy pointer, define a getter to decode only when needed.\n      // This obviously only works when the pointer is contained by a Struct.\n      if (this.options.lazy) {\n        return new utils.PropertyDescriptor({\n          get: decodeValue});\n      }\n\n      return decodeValue();\n    } else {\n      return ptr;\n    }\n  }\n\n  size(val, ctx) {\n    const parent = ctx;\n    switch (this.options.type) {\n      case 'local': case 'immediate':\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        break;\n      default: // global\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    if (val && ctx) {\n      // Must be written as two separate lines rather than += in case `type.size` mutates ctx.pointerSize.\n      let size = type.size(val, parent);\n      ctx.pointerSize += size;\n    }\n\n    return this.offsetType.size();\n  }\n\n  encode(stream, val, ctx) {\n    let relative;\n    const parent = ctx;\n    if ((val == null)) {\n      this.offsetType.encode(stream, this.options.nullValue);\n      return;\n    }\n\n    switch (this.options.type) {\n      case 'local':\n        relative = ctx.startOffset;\n        break;\n      case 'immediate':\n        relative = stream.pos + this.offsetType.size(val, parent);\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        relative = ctx.startOffset;\n        break;\n      default: // global\n        relative = 0;\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(parent.val);\n    }\n\n    this.offsetType.encode(stream, ctx.pointerOffset - relative);\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    ctx.pointers.push({\n      type,\n      val,\n      parent\n    });\n\n    return ctx.pointerOffset += type.size(val, parent);\n  }\n}\n\n// A pointer whose type is determined at decode time\nexport class VoidPointer {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n"],"names":[],"version":3,"file":"main.cjs.map","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-properties/dist/main.cjs":{"lineLengths":[43,49,0,36,43,1,39,76,1,37,86,1,0,42,0,95,101,93,101,99,96,91,97,95,95,95,96,94,90,90,0,0,35,2559,0,0,13081,78,78,51,164,171,159,152,45,47,187,149,110,74,91,93,87,81,87,63,58,175,1,63,58,183,1,63,58,168,1,63,58,158,1,63,56,54,31,39,27,42,44,39,29,30,35,23,22,18,9,19,12,32,32,23,22,18,9,19,5,1,63,74,134,1,63,73,1,63,74,155,1,63,73,1,63,73,1,63,73,1,63,74,71,1,63,74,218,1,63,74,71,1,31,44,59,65,57,65,63,60,55,61,59,59,59,60,58,53,2,0,0,33,0],"data":{"mappings":"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","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-properties/dist/index.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/unicode-properties/dist/data.json"],"sourcesContent":["import base64 from 'base64-js';\nimport UnicodeTrie from 'unicode-trie';\nimport data from './data.json';\n\nconst trie = new UnicodeTrie(base64.toByteArray(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\n\nconst log2 = Math.log2 || (n => Math.log(n) / Math.LN2);\nconst bits = (n) => ((log2(n) + 1) | 0);\n\n// compute the number of bits stored for each field\nconst CATEGORY_BITS = bits(data.categories.length - 1);\nconst COMBINING_BITS = bits(data.combiningClasses.length - 1);\nconst SCRIPT_BITS = bits(data.scripts.length - 1);\nconst EAW_BITS = bits(data.eaw.length - 1);\nconst NUMBER_BITS = 10;\n\n// compute shift and mask values for each field\nconst CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\nconst EAW_SHIFT = NUMBER_BITS;\nconst CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\nconst COMBINING_MASK = (1 << COMBINING_BITS) - 1;\nconst SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\nconst EAW_MASK = (1 << EAW_BITS) - 1;\nconst NUMBER_MASK = (1 << NUMBER_BITS) - 1;\n\nexport function getCategory(codePoint) {\n  const val = trie.get(codePoint);\n  return data.categories[(val >> CATEGORY_SHIFT) & CATEGORY_MASK];\n}\n\nexport function getCombiningClass(codePoint) {\n  const val = trie.get(codePoint);\n  return data.combiningClasses[(val >> COMBINING_SHIFT) & COMBINING_MASK];\n}\n\nexport function getScript(codePoint) {\n  const val = trie.get(codePoint);\n  return data.scripts[(val >> SCRIPT_SHIFT) & SCRIPT_MASK];\n}\n\nexport function getEastAsianWidth(codePoint) {\n  const val = trie.get(codePoint);\n  return data.eaw[(val >> EAW_SHIFT) & EAW_MASK];\n}\n\nexport function getNumericValue(codePoint) {\n  let val = trie.get(codePoint);\n  let num = val & NUMBER_MASK;\n\n  if (num === 0) {\n    return null;\n  } else if (num <= 50) {\n    return num - 1;\n  } else if (num < 0x1e0) {\n    const numerator = (num >> 4) - 12;\n    const denominator = (num & 0xf) + 1;\n    return numerator / denominator;\n  } else if (num < 0x300) {\n    val = (num >> 5) - 14;\n    let exp = (num & 0x1f) + 2;\n\n    while (exp > 0) {\n      val *= 10;\n      exp--;\n    }\n    return val;\n  } else {\n    val = (num >> 2) - 0xbf;\n    let exp = (num & 3) + 1;\n    while (exp > 0) {\n      val *= 60;\n      exp--;\n    }\n    return val;\n  }\n}\n\nexport function isAlphabetic(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Nl'\n  )\n}\n\nexport function isDigit(codePoint) {\n  return getCategory(codePoint) === 'Nd'\n}\n\nexport function isPunctuation(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Pc' ||\n    category === 'Pd' ||\n    category === 'Pe' ||\n    category === 'Pf' ||\n    category === 'Pi' ||\n    category === 'Po' ||\n    category === 'Ps'\n  );\n}\n\nexport function isLowerCase(codePoint) {\n  return getCategory(codePoint) === 'Ll';\n}\n\nexport function isUpperCase(codePoint) {\n  return getCategory(codePoint) === 'Lu'\n}\n\nexport function isTitleCase(codePoint) {\n  return getCategory(codePoint) === 'Lt'\n}\n\nexport function isWhiteSpace(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Zs' ||\n    category === 'Zl' ||\n    category === 'Zp'\n  );\n}\n\nexport function isBaseForm(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Nd' ||\n    category === 'No' ||\n    category === 'Nl' ||\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Me' ||\n    category === 'Mc'\n  )\n}\n\nexport function isMark(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Mn' ||\n    category === 'Me' ||\n    category === 'Mc'\n  );\n}\n\n// Backwards compatibility.\nexport default {\n  getCategory,\n  getCombiningClass,\n  getScript,\n  getEastAsianWidth,\n  getNumericValue,\n  isAlphabetic,\n  isDigit,\n  isPunctuation,\n  isLowerCase,\n  isUpperCase,\n  isTitleCase,\n  isWhiteSpace,\n  isBaseForm,\n  isMark\n};\n","{\"categories\":[\"Cc\",\"Zs\",\"Po\",\"Sc\",\"Ps\",\"Pe\",\"Sm\",\"Pd\",\"Nd\",\"Lu\",\"Sk\",\"Pc\",\"Ll\",\"So\",\"Lo\",\"Pi\",\"Cf\",\"No\",\"Pf\",\"Lt\",\"Lm\",\"Mn\",\"Me\",\"Mc\",\"Nl\",\"Zl\",\"Zp\",\"Cs\",\"Co\"],\"combiningClasses\":[\"Not_Reordered\",\"Above\",\"Above_Right\",\"Below\",\"Attached_Above_Right\",\"Attached_Below\",\"Overlay\",\"Iota_Subscript\",\"Double_Below\",\"Double_Above\",\"Below_Right\",\"Above_Left\",\"CCC10\",\"CCC11\",\"CCC12\",\"CCC13\",\"CCC14\",\"CCC15\",\"CCC16\",\"CCC17\",\"CCC18\",\"CCC19\",\"CCC20\",\"CCC21\",\"CCC22\",\"CCC23\",\"CCC24\",\"CCC25\",\"CCC30\",\"CCC31\",\"CCC32\",\"CCC27\",\"CCC28\",\"CCC29\",\"CCC33\",\"CCC34\",\"CCC35\",\"CCC36\",\"Nukta\",\"Virama\",\"CCC84\",\"CCC91\",\"CCC103\",\"CCC107\",\"CCC118\",\"CCC122\",\"CCC129\",\"CCC130\",\"CCC132\",\"Attached_Above\",\"Below_Left\",\"Left\",\"Kana_Voicing\",\"CCC26\",\"Right\"],\"scripts\":[\"Common\",\"Latin\",\"Bopomofo\",\"Inherited\",\"Greek\",\"Coptic\",\"Cyrillic\",\"Armenian\",\"Hebrew\",\"Arabic\",\"Syriac\",\"Thaana\",\"Nko\",\"Samaritan\",\"Mandaic\",\"Devanagari\",\"Bengali\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhala\",\"Thai\",\"Lao\",\"Tibetan\",\"Myanmar\",\"Georgian\",\"Hangul\",\"Ethiopic\",\"Cherokee\",\"Canadian_Aboriginal\",\"Ogham\",\"Runic\",\"Tagalog\",\"Hanunoo\",\"Buhid\",\"Tagbanwa\",\"Khmer\",\"Mongolian\",\"Limbu\",\"Tai_Le\",\"New_Tai_Lue\",\"Buginese\",\"Tai_Tham\",\"Balinese\",\"Sundanese\",\"Batak\",\"Lepcha\",\"Ol_Chiki\",\"Braille\",\"Glagolitic\",\"Tifinagh\",\"Han\",\"Hiragana\",\"Katakana\",\"Yi\",\"Lisu\",\"Vai\",\"Bamum\",\"Syloti_Nagri\",\"Phags_Pa\",\"Saurashtra\",\"Kayah_Li\",\"Rejang\",\"Javanese\",\"Cham\",\"Tai_Viet\",\"Meetei_Mayek\",\"null\",\"Linear_B\",\"Lycian\",\"Carian\",\"Old_Italic\",\"Gothic\",\"Old_Permic\",\"Ugaritic\",\"Old_Persian\",\"Deseret\",\"Shavian\",\"Osmanya\",\"Osage\",\"Elbasan\",\"Caucasian_Albanian\",\"Linear_A\",\"Cypriot\",\"Imperial_Aramaic\",\"Palmyrene\",\"Nabataean\",\"Hatran\",\"Phoenician\",\"Lydian\",\"Meroitic_Hieroglyphs\",\"Meroitic_Cursive\",\"Kharoshthi\",\"Old_South_Arabian\",\"Old_North_Arabian\",\"Manichaean\",\"Avestan\",\"Inscriptional_Parthian\",\"Inscriptional_Pahlavi\",\"Psalter_Pahlavi\",\"Old_Turkic\",\"Old_Hungarian\",\"Hanifi_Rohingya\",\"Old_Sogdian\",\"Sogdian\",\"Elymaic\",\"Brahmi\",\"Kaithi\",\"Sora_Sompeng\",\"Chakma\",\"Mahajani\",\"Sharada\",\"Khojki\",\"Multani\",\"Khudawadi\",\"Grantha\",\"Newa\",\"Tirhuta\",\"Siddham\",\"Modi\",\"Takri\",\"Ahom\",\"Dogra\",\"Warang_Citi\",\"Nandinagari\",\"Zanabazar_Square\",\"Soyombo\",\"Pau_Cin_Hau\",\"Bhaiksuki\",\"Marchen\",\"Masaram_Gondi\",\"Gunjala_Gondi\",\"Makasar\",\"Cuneiform\",\"Egyptian_Hieroglyphs\",\"Anatolian_Hieroglyphs\",\"Mro\",\"Bassa_Vah\",\"Pahawh_Hmong\",\"Medefaidrin\",\"Miao\",\"Tangut\",\"Nushu\",\"Duployan\",\"SignWriting\",\"Nyiakeng_Puachue_Hmong\",\"Wancho\",\"Mende_Kikakui\",\"Adlam\"],\"eaw\":[\"N\",\"Na\",\"A\",\"W\",\"H\",\"F\"]}"],"names":[],"version":3,"file":"main.cjs.map","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/dfa/index.js":{"lineLengths":[13,0,22,19,3,62,85,3,0,20,20,37,35,25,3,5,84,58,5,0,0,14,20,12,28,34,28,33,29,0,46,25,28,44,0,37,42,89,68,77,0,0,54,28,54,0,0,57,25,57,0,0,38,30,84,0,0,37,34,11,40,0,0,85,60,9,7,0,6,3,5,70,77,38,5,0,0,23,53,29,49,62,9,7,5,3,0,1,0,30,33,0],"data":{"version":3,"file":"index.js","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/dfa/src/StateMachine.js"],"sourcesContent":["const INITIAL_STATE = 1;\nconst FAIL_STATE = 0;\n\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\nexport default class StateMachine {\n  constructor(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n  match(str) {\n    let self = this;\n    return {\n      *[Symbol.iterator]() {\n        let state = INITIAL_STATE;\n        let startRun = null;\n        let lastAccepting = null;\n        let lastState = null;\n\n        for (let p = 0; p < str.length; p++) {\n          let c = str[p];\n\n          lastState = state;\n          state = self.stateTable[state][c];\n\n          if (state === FAIL_STATE) {\n            // yield the last match if any\n            if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n              yield [startRun, lastAccepting, self.tags[lastState]];\n            }\n\n            // reset the state as if we started over from the initial state\n            state = self.stateTable[INITIAL_STATE][c];\n            startRun = null;\n          }\n\n          // start a run if not in the failure state\n          if (state !== FAIL_STATE && startRun == null) {\n            startRun = p;\n          }\n\n          // if accepting, mark the potential match end\n          if (self.accepting[state]) {\n            lastAccepting = p;\n          }\n\n          // reset the state to the initial state if we get into the failure state\n          if (state === FAIL_STATE) {\n            state = INITIAL_STATE;\n          }\n        }\n\n        // yield the last match if any\n        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n          yield [startRun, lastAccepting, self.tags[state]];\n        }\n      }\n    };\n  }\n\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */\n  apply(str, actions) {\n    for (let [start, end, tags] of this.match(str)) {\n      for (let tag of tags) {\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  }\n}\n"],"names":["INITIAL_STATE","FAIL_STATE","StateMachine","constructor","dfa","stateTable","accepting","tags","match","str","self","Symbol","iterator","state","startRun","lastAccepting","lastState","p","length","c","apply","actions","start","end","tag","slice"],"mappings":";;AAAA,IAAMA,aAAa,GAAG,CAAtB;AACA,IAAMC,UAAU,GAAG,CAAnB;;;;;;AAMA,AAAe,MAAMC,YAAN,CAAmB;EAChCC,WAAW,CAACC,GAAD,EAAM;SACVC,UAAL,GAAkBD,GAAG,CAACC,UAAtB;SACKC,SAAL,GAAiBF,GAAG,CAACE,SAArB;SACKC,IAAL,GAAYH,GAAG,CAACG,IAAhB;;;;;;;;EAOFC,KAAK,CAACC,GAAD,EAAM;QACLC,IAAI,GAAG,IAAX;WACO;QACHC,MAAM,CAACC,QAAT,IAAqB;YACfC,KAAK,GAAGb,aAAZ;YACIc,QAAQ,GAAG,IAAf;YACIC,aAAa,GAAG,IAApB;YACIC,SAAS,GAAG,IAAhB;;aAEK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACS,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;cAC/BE,CAAC,GAAGV,GAAG,CAACQ,CAAD,CAAX;UAEAD,SAAS,GAAGH,KAAZ;UACAA,KAAK,GAAGH,IAAI,CAACL,UAAL,CAAgBQ,KAAhB,EAAuBM,CAAvB,CAAR;;cAEIN,KAAK,KAAKZ,UAAd,EAA0B;;gBAEpBa,QAAQ,IAAI,IAAZ,IAAoBC,aAAa,IAAI,IAArC,IAA6CA,aAAa,IAAID,QAAlE,EAA4E;oBACpE,CAACA,QAAD,EAAWC,aAAX,EAA0BL,IAAI,CAACH,IAAL,CAAUS,SAAV,CAA1B,CAAN;aAHsB;;;YAOxBH,KAAK,GAAGH,IAAI,CAACL,UAAL,CAAgBL,aAAhB,EAA+BmB,CAA/B,CAAR;YACAL,QAAQ,GAAG,IAAX;WAdiC;;;cAkB/BD,KAAK,KAAKZ,UAAV,IAAwBa,QAAQ,IAAI,IAAxC,EAA8C;YAC5CA,QAAQ,GAAGG,CAAX;WAnBiC;;;cAuB/BP,IAAI,CAACJ,SAAL,CAAeO,KAAf,CAAJ,EAA2B;YACzBE,aAAa,GAAGE,CAAhB;WAxBiC;;;cA4B/BJ,KAAK,KAAKZ,UAAd,EAA0B;YACxBY,KAAK,GAAGb,aAAR;;SAnCe;;;YAwCfc,QAAQ,IAAI,IAAZ,IAAoBC,aAAa,IAAI,IAArC,IAA6CA,aAAa,IAAID,QAAlE,EAA4E;gBACpE,CAACA,QAAD,EAAWC,aAAX,EAA0BL,IAAI,CAACH,IAAL,CAAUM,KAAV,CAA1B,CAAN;;;;KA1CN;;;;;;;;;EAqDFO,KAAK,CAACX,GAAD,EAAMY,OAAN,EAAe;SACb,IAAI,CAACC,KAAD,EAAQC,GAAR,EAAahB,IAAb,CAAT,IAA+B,KAAKC,KAAL,CAAWC,GAAX,CAA/B,EAAgD;WACzC,IAAIe,GAAT,IAAgBjB,IAAhB,EAAsB;YAChB,OAAOc,OAAO,CAACG,GAAD,CAAd,KAAwB,UAA5B,EAAwC;UACtCH,OAAO,CAACG,GAAD,CAAP,CAAaF,KAAb,EAAoBC,GAApB,EAAyBd,GAAG,CAACgB,KAAJ,CAAUH,KAAV,EAAiBC,GAAG,GAAG,CAAvB,CAAzB;;;;;;;;;;","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/main.cjs":{"lineLengths":[49,43,0,36,43,1,0,13,0,0,0,74,75,75,75,60,67,81,84,71,62,64,64,67,70,68,79,63,68,69,92,73,72,68,66,67,70,70,70,75,67,71,74,72,92,74,85,72,66,66,73,67,62,64,0,0,80,82,102,92,72,51,263,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,6,5,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,11,2,0,0,5253,117,52,14,55,61,55,55,55,61,55,60,16,21,5,2,52,14,55,55,61,55,61,16,21,5,2,35,44,33,33,5,1,41,21,56,54,30,83,23,71,9,20,5,21,105,5,22,55,31,59,29,59,59,59,74,29,59,74,29,9,20,5,34,53,32,89,59,35,22,59,86,22,59,86,35,40,39,17,22,59,96,22,59,22,9,43,21,153,32,31,88,21,74,25,98,35,31,13,30,39,27,5,17,69,36,50,71,40,81,27,9,45,36,45,50,31,205,111,75,13,52,86,24,85,82,9,48,46,71,9,20,5,24,29,21,25,29,30,26,27,23,5,1,51,0,0,33,0],"data":{"mappings":"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AAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;KAAC;IACxQ;QAAC,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;QAAE,yCAAM;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","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/src/linebreaker.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/node_modules/@parcel/node-resolver-core/lib/_empty.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/src/classes.js","file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/linebreak/dist/src/pairs.js"],"sourcesContent":["import UnicodeTrie from 'unicode-trie';\nimport fs from 'fs';\nimport base64 from 'base64-js';\nimport { BK, CR, LF, NL, SG, WJ, SP, ZWJ, BA, HY, NS, AI, AL, CJ, HL, RI, SA, XX } from './classes';\nimport { DI_BRK, IN_BRK, CI_BRK, CP_BRK, PR_BRK, pairTable } from './pairs';\n\nconst data = base64.toByteArray(fs.readFileSync(__dirname + '/classes.trie', 'base64'));\nconst classTrie = new UnicodeTrie(data);\n\nconst mapClass = function (c) {\n  switch (c) {\n    case AI:\n      return AL;\n\n    case SA:\n    case SG:\n    case XX:\n      return AL;\n\n    case CJ:\n      return NS;\n\n    default:\n      return c;\n  }\n};\n\nconst mapFirst = function (c) {\n  switch (c) {\n    case LF:\n    case NL:\n      return BK;\n\n    case SP:\n      return WJ;\n\n    default:\n      return c;\n  }\n};\n\nclass Break {\n  constructor(position, required = false) {\n    this.position = position;\n    this.required = required;\n  }\n}\n\nclass LineBreaker {\n  constructor(string) {\n    this.string = string;\n    this.pos = 0;\n    this.lastPos = 0;\n    this.curClass = null;\n    this.nextClass = null;\n    this.LB8a = false;\n    this.LB21a = false;\n    this.LB30a = 0;\n  }\n\n  nextCodePoint() {\n    const code = this.string.charCodeAt(this.pos++);\n    const next = this.string.charCodeAt(this.pos);\n\n    // If a surrogate pair\n    if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {\n      this.pos++;\n      return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;\n    }\n\n    return code;\n  }\n\n  nextCharClass() {\n    return mapClass(classTrie.get(this.nextCodePoint()));\n  }\n\n  getSimpleBreak() {\n    // handle classes not handled by the pair table\n    switch (this.nextClass) {\n      case SP:\n        return false;\n\n      case BK:\n      case LF:\n      case NL:\n        this.curClass = BK;\n        return false;\n\n      case CR:\n        this.curClass = CR;\n        return false;\n    }\n\n    return null;\n  }\n\n  getPairTableBreak(lastClass) {\n    // if not handled already, use the pair table\n    let shouldBreak = false;\n    switch (pairTable[this.curClass][this.nextClass]) {\n      case DI_BRK: // Direct break\n        shouldBreak = true;\n        break;\n\n      case IN_BRK: // possible indirect break\n        shouldBreak = lastClass === SP;\n        break;\n\n      case CI_BRK:\n        shouldBreak = lastClass === SP;\n        if (!shouldBreak) {\n          shouldBreak = false;\n          return shouldBreak;\n        }\n        break;\n\n      case CP_BRK: // prohibited for combining marks\n        if (lastClass !== SP) {\n          return shouldBreak;\n        }\n        break;\n\n      case PR_BRK:\n        break;\n    }\n\n    if (this.LB8a) {\n      shouldBreak = false;\n    }\n\n    // Rule LB21a\n    if (this.LB21a && (this.curClass === HY || this.curClass === BA)) {\n      shouldBreak = false;\n      this.LB21a = false;\n    } else {\n      this.LB21a = (this.curClass === HL);\n    }\n\n    // Rule LB30a\n    if (this.curClass === RI) {\n      this.LB30a++;\n      if (this.LB30a == 2 && (this.nextClass === RI)) {\n        shouldBreak = true;\n        this.LB30a = 0;\n      }\n    } else {\n      this.LB30a = 0;\n    }\n\n    this.curClass = this.nextClass;\n\n    return shouldBreak;\n  }\n\n  nextBreak() {\n    // get the first char if we're at the beginning of the string\n    if (this.curClass == null) {\n      let firstClass = this.nextCharClass();\n      this.curClass = mapFirst(firstClass);\n      this.nextClass = firstClass;\n      this.LB8a = (firstClass === ZWJ);\n      this.LB30a = 0;\n    }\n\n    while (this.pos < this.string.length) {\n      this.lastPos = this.pos;\n      const lastClass = this.nextClass;\n      this.nextClass = this.nextCharClass();\n\n      // explicit newline\n      if ((this.curClass === BK) || ((this.curClass === CR) && (this.nextClass !== LF))) {\n        this.curClass = mapFirst(mapClass(this.nextClass));\n        return new Break(this.lastPos, true);\n      }\n\n      let shouldBreak = this.getSimpleBreak();\n\n      if (shouldBreak === null) {\n        shouldBreak = this.getPairTableBreak(lastClass);\n      }\n\n      // Rule LB8a\n      this.LB8a = (this.nextClass === ZWJ);\n\n      if (shouldBreak) {\n        return new Break(this.lastPos);\n      }\n    }\n\n    if (this.lastPos < this.string.length) {\n      this.lastPos = this.string.length;\n      return new Break(this.string.length);\n    }\n\n    return null;\n  }\n}\n\nmodule.exports = LineBreaker;\n","\"use strict\";","// The following break classes are handled by the pair table\nexport const OP = 0;   // Opening punctuation\nexport const CL = 1;   // Closing punctuation\nexport const CP = 2;   // Closing parenthesis\nexport const QU = 3;   // Ambiguous quotation\nexport const GL = 4;   // Glue\nexport const NS = 5;   // Non-starters\nexport const EX = 6;   // Exclamation/Interrogation\nexport const SY = 7;   // Symbols allowing break after\nexport const IS = 8;   // Infix separator\nexport const PR = 9;   // Prefix\nexport const PO = 10;  // Postfix\nexport const NU = 11;  // Numeric\nexport const AL = 12;  // Alphabetic\nexport const HL = 13;  // Hebrew Letter\nexport const ID = 14;  // Ideographic\nexport const IN = 15;  // Inseparable characters\nexport const HY = 16;  // Hyphen\nexport const BA = 17;  // Break after\nexport const BB = 18;  // Break before\nexport const B2 = 19;  // Break on either side (but not pair)\nexport const ZW = 20;  // Zero-width space\nexport const CM = 21;  // Combining marks\nexport const WJ = 22;  // Word joiner\nexport const H2 = 23;  // Hangul LV\nexport const H3 = 24;  // Hangul LVT\nexport const JL = 25;  // Hangul L Jamo\nexport const JV = 26;  // Hangul V Jamo\nexport const JT = 27;  // Hangul T Jamo\nexport const RI = 28;  // Regional Indicator\nexport const EB = 29;  // Emoji Base\nexport const EM = 30;  // Emoji Modifier\nexport const ZWJ = 31; // Zero Width Joiner\nexport const CB = 32;  // Contingent break\n\n// The following break classes are not handled by the pair table\nexport const AI = 33;  // Ambiguous (Alphabetic or Ideograph)\nexport const BK = 34;  // Break (mandatory)\nexport const CJ = 35;  // Conditional Japanese Starter\nexport const CR = 36;  // Carriage return\nexport const LF = 37;  // Line feed\nexport const NL = 38;  // Next line\nexport const SA = 39;  // South-East Asian\nexport const SG = 40;  // Surrogates\nexport const SP = 41;  // Space\nexport const XX = 42;  // Unknown\n","export const DI_BRK = 0; // Direct break opportunity\nexport const IN_BRK = 1; // Indirect break opportunity\nexport const CI_BRK = 2; // Indirect break opportunity for combining marks\nexport const CP_BRK = 3; // Prohibited break for combining marks\nexport const PR_BRK = 4; // Prohibited break\n\n// Based on example pair table from https://www.unicode.org/reports/tr14/tr14-37.html#Table2\n// - ZWJ special processing for LB8a of Revision 41\n// - CB manually added as per Rule LB20\n// - CL, CP, NS, SY, IS, PR, PO, HY, BA, B2 and RI manually adjusted as per LB22 of Revision 45\nexport const pairTable = [\n  //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB\n  [PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, CP_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK], // OP\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // CL\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // CP\n  [PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], // QU\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], // GL\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // NS\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // EX\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // SY\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // IS\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK], // PR\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // PO\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // NU\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // AL\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // HL\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // ID\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // IN\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // HY\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // BA\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK], // BB\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // B2\n  [DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], // ZW\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // CM\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], // WJ\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // H2\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // H3\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // JL\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // JV\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // JT\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // RI\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], // EB\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // EM\n  [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], // ZWJ\n  [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK]  // CB\n];"],"names":[],"version":3,"file":"main.cjs.map","sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/jpeg-exif/lib/index.js":{"lineLengths":[13,0,24,0,39,0,95,0,34,0,2,14,14,15,14,18,12,11,13,12,16,13,12,3,52,24,27,23,26,24,28,26,18,3,25,21,11,59,34,24,3,40,7,43,39,15,46,3,2,3,25,21,11,3,38,7,43,65,15,46,3,2,3,25,20,11,59,38,26,3,44,7,46,83,61,15,40,3,2,3,25,32,25,25,20,11,59,55,36,3,76,78,0,28,14,3,0,30,50,23,81,70,72,72,16,21,0,65,46,68,21,22,47,29,61,35,66,28,60,94,43,60,63,62,43,66,68,79,55,82,0,25,96,68,5,0,26,0,18,27,15,44,16,15,69,16,15,83,16,15,83,16,15,24,0,57,88,91,64,11,0,16,15,28,31,46,20,35,46,20,29,48,20,20,65,20,11,16,16,11,79,82,54,18,11,16,54,16,7,31,5,6,11,49,6,7,3,14,2,0,3,22,23,11,59,44,3,45,85,0,19,0,12,40,40,37,25,40,29,44,22,37,3,0,26,72,25,53,47,50,49,0,37,0,26,64,0,30,63,82,5,0,33,39,97,66,5,3,2,0,3,25,23,11,59,44,3,48,39,0,31,30,54,0,27,13,15,28,14,14,60,14,5,3,2,0,3,25,20,11,3,46,16,40,3,0,19,0,24,43,14,24,30,14,31,3,0,14,2,0,3,23,20,11,45,32,3,32,14,38,3,0,47,0,28,2,0,3,23,29,11,51,16,28,8,17,51,8,4,3,44,19,0,42,16,44,5,0,56,16,20,14,13,32,52,0,22,0,29,26,38,22,0,39,26,18,56,11,21,20,9,7,7,23,31,24,27,29,31,5,2,0,32,22,25,33],"data":{"version":3,"sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/jpeg-exif/src/index.js"],"names":["tags","require","bytes","SOIMarkerLength","JPEGSOIMarker","TIFFINTEL","TIFFMOTOROLA","APPMarkerLength","APPMarkerBegin","APPMarkerEnd","data","isValid","buffer","SOIMarker","readUInt16BE","e","Error","isTiff","checkAPPn","APPMarkerTag","isInRange","IFDHandler","tagCollection","order","offset","entriesNumber","readUInt16LE","entriesNumberLength","entries","slice","entryLength","exif","entryCount","entryBegin","entry","tagBegin","tagLength","dataFormatBegin","dataFormatLength","componentsBegin","componentsNumberLength","dataValueBegin","dataValueLength","tagAddress","tagNumber","toString","reverse","tagName","bigDataFormat","littleDataFormat","dataFormat","componentsByte","bigComponentsNumber","readUInt32BE","littleComponentNumber","readUInt32LE","componentsNumber","dataLength","dataValue","dataOffset","tagValue","readUInt8","replace","i","length","bigTagValue","littleTagValue","push","bigOrder","readInt32BE","littleOrder","readInt32LE","EXIFHandler","buf","pad","lengthLength","identifierLength","padLength","byteOrderLength","byteOrder","fortyTwoLength","fortyTwoEnd","big42","little42","offsetOfIFD","ifd","ExifIFDPointer","SubExif","GPSInfoIFDPointer","gps","GPSInfo","APPnHandler","fromBuffer","undefined","sync","file","fs","readFileSync","async","callback","Promise","resolve","reject","readFile","err","error","then","d","catch","exports","parse","parseSync"],"mappings":"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","file":"index.js","sourcesContent":["import fs from 'fs';\n\nconst tags = require('./tags.json');\n\n/*\n unsignedByte,\n asciiStrings,\n unsignedShort,\n unsignedLong,\n unsignedRational,\n signedByte,\n undefined,\n signedShort,\n signedLong,\n signedRational,\n singleFloat,\n doubleFloat\n */\nconst bytes = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8];\nconst SOIMarkerLength = 2;\nconst JPEGSOIMarker = 0xffd8;\nconst TIFFINTEL = 0x4949;\nconst TIFFMOTOROLA = 0x4d4d;\nconst APPMarkerLength = 2;\nconst APPMarkerBegin = 0xffe0;\nconst APPMarkerEnd = 0xffef;\nlet data;\n/**\n * @param buffer {Buffer}\n * @returns {Boolean}\n * @example\n * var content = fs.readFileSync(\"~/Picture/IMG_0911.JPG\");\n * var isImage = isValid(content);\n * console.log(isImage);\n */\nconst isValid = (buffer) => {\n  try {\n    const SOIMarker = buffer.readUInt16BE(0);\n    return SOIMarker === JPEGSOIMarker;\n  } catch (e) {\n    throw new Error('Unsupport file format.');\n  }\n};\n/**\n * @param buffer {Buffer}\n * @returns {Boolean}\n * @example\n */\nconst isTiff = (buffer) => {\n  try {\n    const SOIMarker = buffer.readUInt16BE(0);\n    return SOIMarker === TIFFINTEL || SOIMarker === TIFFMOTOROLA;\n  } catch (e) {\n    throw new Error('Unsupport file format.');\n  }\n};\n/**\n * @param buffer {Buffer}\n * @returns {Number}\n * @example\n * var content = fs.readFileSync(\"~/Picture/IMG_0911.JPG\");\n * var APPNumber = checkAPPn(content);\n * console.log(APPNumber);\n */\nconst checkAPPn = (buffer) => {\n  try {\n    const APPMarkerTag = buffer.readUInt16BE(0);\n    const isInRange = APPMarkerTag >= APPMarkerBegin && APPMarkerTag <= APPMarkerEnd;\n    return isInRange ? APPMarkerTag - APPMarkerBegin : false;\n  } catch (e) {\n    throw new Error('Invalid APP Tag.');\n  }\n};\n/**\n * @param buffer {Buffer}\n * @param tagCollection {Object}\n * @param order {Boolean}\n * @param offset {Number}\n * @returns {Object}\n * @example\n * var content = fs.readFileSync(\"~/Picture/IMG_0911.JPG\");\n * var exifFragments = IFDHandler(content, 0, true, 8);\n * console.log(exifFragments.value);\n */\nconst IFDHandler = (buffer, tagCollection, order, offset) => {\n  const entriesNumber = order ? buffer.readUInt16BE(0) : buffer.readUInt16LE(0);\n\n  if (entriesNumber === 0) {\n    return {};\n  }\n\n  const entriesNumberLength = 2;\n  const entries = buffer.slice(entriesNumberLength);\n  const entryLength = 12;\n  // let nextIFDPointerBegin = entriesNumberLength + entryLength * entriesNumber;\n  // let bigNextIFDPointer= buffer.readUInt32BE(nextIFDPointerBegin) ;\n  // let littleNextIFDPointer= buffer.readUInt32LE(nextIFDPointerBegin);\n  // let nextIFDPointer = order ?bigNextIFDPointer:littleNextIFDPointer;\n  const exif = {};\n  let entryCount = 0;\n\n  for (entryCount; entryCount < entriesNumber; entryCount += 1) {\n    const entryBegin = entryCount * entryLength;\n    const entry = entries.slice(entryBegin, entryBegin + entryLength);\n    const tagBegin = 0;\n    const tagLength = 2;\n    const dataFormatBegin = tagBegin + tagLength;\n    const dataFormatLength = 2;\n    const componentsBegin = dataFormatBegin + dataFormatLength;\n    const componentsNumberLength = 4;\n    const dataValueBegin = componentsBegin + componentsNumberLength;\n    const dataValueLength = 4;\n    const tagAddress = entry.slice(tagBegin, dataFormatBegin);\n    const tagNumber = order ? tagAddress.toString('hex') : tagAddress.reverse().toString('hex');\n    const tagName = tagCollection[tagNumber];\n    const bigDataFormat = entry.readUInt16BE(dataFormatBegin);\n    const littleDataFormat = entry.readUInt16LE(dataFormatBegin);\n    const dataFormat = order ? bigDataFormat : littleDataFormat;\n    const componentsByte = bytes[dataFormat];\n    const bigComponentsNumber = entry.readUInt32BE(componentsBegin);\n    const littleComponentNumber = entry.readUInt32LE(componentsBegin);\n    const componentsNumber = order ? bigComponentsNumber : littleComponentNumber;\n    const dataLength = componentsNumber * componentsByte;\n    let dataValue = entry.slice(dataValueBegin, dataValueBegin + dataValueLength);\n\n    if (dataLength > 4) {\n      const dataOffset = (order ? dataValue.readUInt32BE(0) : dataValue.readUInt32LE(0)) - offset;\n      dataValue = buffer.slice(dataOffset, dataOffset + dataLength);\n    }\n\n    let tagValue;\n\n    if (tagName) {\n      switch (dataFormat) {\n        case 1:\n          tagValue = dataValue.readUInt8(0);\n          break;\n        case 2:\n          tagValue = dataValue.toString('ascii').replace(/\\0+$/, '');\n          break;\n        case 3:\n          tagValue = order ? dataValue.readUInt16BE(0) : dataValue.readUInt16LE(0);\n          break;\n        case 4:\n          tagValue = order ? dataValue.readUInt32BE(0) : dataValue.readUInt32LE(0);\n          break;\n        case 5:\n          tagValue = [];\n\n          for (let i = 0; i < dataValue.length; i += 8) {\n            const bigTagValue = dataValue.readUInt32BE(i) / dataValue.readUInt32BE(i + 4);\n            const littleTagValue = dataValue.readUInt32LE(i) / dataValue.readUInt32LE(i + 4);\n            tagValue.push(order ? bigTagValue : littleTagValue);\n          }\n\n          break;\n        case 7:\n          switch (tagName) {\n            case 'ExifVersion':\n              tagValue = dataValue.toString();\n              break;\n            case 'FlashPixVersion':\n              tagValue = dataValue.toString();\n              break;\n            case 'SceneType':\n              tagValue = dataValue.readUInt8(0);\n              break;\n            default:\n              tagValue = `0x${dataValue.toString('hex', 0, 15)}`;\n              break;\n          }\n          break;\n        case 10: {\n          const bigOrder = dataValue.readInt32BE(0) / dataValue.readInt32BE(4);\n          const littleOrder = dataValue.readInt32LE(0) / dataValue.readInt32LE(4);\n          tagValue = order ? bigOrder : littleOrder;\n          break;\n        }\n        default:\n          tagValue = `0x${dataValue.toString('hex')}`;\n          break;\n      }\n      exif[tagName] = tagValue;\n    }\n    /*\n     else {\n     console.log(`Unkown Tag [0x${tagNumber}].`);\n     }\n     */\n  }\n  return exif;\n};\n\n/**\n * @param buf {Buffer}\n * @returns {Undefined}\n * @example\n * var content = fs.readFileSync(\"~/Picture/IMG_0911.JPG\");\n * var exifFragments = EXIFHandler(content);\n */\nconst EXIFHandler = (buf, pad = true) => {\n  let buffer = buf;\n\n  if (pad) {\n    buffer = buf.slice(APPMarkerLength);\n    const length = buffer.readUInt16BE(0);\n    buffer = buffer.slice(0, length);\n    const lengthLength = 2;\n    buffer = buffer.slice(lengthLength);\n    const identifierLength = 5;\n    buffer = buffer.slice(identifierLength);\n    const padLength = 1;\n    buffer = buffer.slice(padLength);\n  }\n\n  const byteOrderLength = 2;\n  const byteOrder = buffer.toString('ascii', 0, byteOrderLength) === 'MM';\n  const fortyTwoLength = 2;\n  const fortyTwoEnd = byteOrderLength + fortyTwoLength;\n  const big42 = buffer.readUInt32BE(fortyTwoEnd);\n  const little42 = buffer.readUInt32LE(fortyTwoEnd);\n  const offsetOfIFD = byteOrder ? big42 : little42;\n\n  buffer = buffer.slice(offsetOfIFD);\n\n  if (buffer.length > 0) {\n    data = IFDHandler(buffer, tags.ifd, byteOrder, offsetOfIFD);\n\n    if (data.ExifIFDPointer) {\n      buffer = buffer.slice(data.ExifIFDPointer - offsetOfIFD);\n      data.SubExif = IFDHandler(buffer, tags.ifd, byteOrder, data.ExifIFDPointer);\n    }\n\n    if (data.GPSInfoIFDPointer) {\n      const gps = data.GPSInfoIFDPointer;\n      buffer = buffer.slice(data.ExifIFDPointer ? gps - data.ExifIFDPointer : gps - offsetOfIFD);\n      data.GPSInfo = IFDHandler(buffer, tags.gps, byteOrder, gps);\n    }\n  }\n};\n\n/**\n * @param buffer {Buffer}\n * @returns {Undefined}\n * @example\n * var content = fs.readFileSync(\"~/Picture/IMG_0911.JPG\");\n * var exifFragments = APPnHandler(content);\n */\nconst APPnHandler = (buffer) => {\n  const APPMarkerTag = checkAPPn(buffer);\n\n  if (APPMarkerTag !== false) { // APP0 is 0, and 0==false\n    const length = buffer.readUInt16BE(APPMarkerLength);\n\n    switch (APPMarkerTag) {\n      case 1: // EXIF\n        EXIFHandler(buffer);\n        break;\n      default:\n        APPnHandler(buffer.slice(APPMarkerLength + length));\n        break;\n    }\n  }\n};\n\n/**\n * @param buffer {Buffer}\n * @returns {Object}\n * @example\n */\nconst fromBuffer = (buffer) => {\n  if (!buffer) {\n    throw new Error('buffer not found');\n  }\n\n  data = undefined;\n\n  if (isValid(buffer)) {\n    buffer = buffer.slice(SOIMarkerLength);\n    data = {};\n    APPnHandler(buffer);\n  } else if (isTiff(buffer)) {\n    data = {};\n    EXIFHandler(buffer, false);\n  }\n\n  return data;\n};\n\n/**\n * @param file {String}\n * @returns {Object}\n * @example\n * var exif = sync(\"~/Picture/IMG_1981.JPG\");\n * console.log(exif.createTime);\n */\nconst sync = (file) => {\n  if (!file) {\n    throw new Error('File not found');\n  }\n\n  const buffer = fs.readFileSync(file);\n\n  return fromBuffer(buffer);\n};\n\n/**\n * @param file {String}\n * @param callback {Function}\n * @example\n * async(\"~/Picture/IMG_0707.JPG\", (err, data) => {\n *     if(err) {\n *         console.log(err);\n *     }\n *     if(data) {\n *         console.log(data.ExifOffset.createTime);\n *     }\n * }\n */\nconst async = (file, callback) => {\n  data = undefined;\n\n  new Promise((resolve, reject) => {\n    if (!file) {\n      reject(new Error('❓File not found.'));\n    }\n\n    fs.readFile(file, (err, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        try {\n          if (isValid(buffer)) {\n            const buf = buffer.slice(SOIMarkerLength);\n\n            data = {};\n\n            APPnHandler(buf);\n            resolve(data);\n          } else if (isTiff(buffer)) {\n            data = {};\n\n            EXIFHandler(buffer, false);\n            resolve(data);\n          } else {\n            reject(new Error('😱Unsupport file type.'));\n          }\n        } catch (e) {\n          reject(e);\n        }\n      }\n    });\n  }, (error) => {\n    callback(error, undefined);\n  }).then((d) => {\n    callback(undefined, d);\n  }).catch((error) => {\n    callback(error, undefined);\n  });\n};\n\nexports.fromBuffer = fromBuffer;\nexports.parse = async;\nexports.parseSync = sync;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/index.js":{"lineLengths":[13,62,73,63,82,88,55,67,2,56,68,2,50,57,2,51,58,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/index.ts"],"names":[],"mappings":";;AAAA,yEAIuC;AACvC,+DAAuG;AAEvG,IAAM,qBAAqB,GAAG,IAAI,+CAAqB,EAAE,CAAC;AAC1D,IAAM,gBAAgB,GAAG,IAAI,qCAAgB,CAAC,qBAAqB,CAAC,CAAC;AAExD,QAAA,yBAAyB,GAAG,UAAC,MAAiC;IACnE,OAAA,qBAAqB,CAAC,yBAAyB,CAAC,MAAM,CAAC;AAAvD,CAAuD,CAAC;AAEnD,QAAA,0BAA0B,GAAG,UAAC,MAAkC;IACrE,OAAA,qBAAqB,CAAC,0BAA0B,CAAC,MAAM,CAAC;AAAxD,CAAwD,CAAC;AAEpD,QAAA,oBAAoB,GAAG,UAAC,MAA4B;IACzD,OAAA,gBAAgB,CAAC,oBAAoB,CAAC,MAAM,CAAC;AAA7C,CAA6C,CAAC;AAEzC,QAAA,qBAAqB,GAAG,UAAC,MAA6B;IAC3D,OAAA,gBAAgB,CAAC,qBAAqB,CAAC,MAAM,CAAC;AAA9C,CAA8C,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifier-factory.js":{"lineLengths":[13,62,50,57,52,56,38,5,83,117,104,6,84,117,132,6,33,5,54,51],"data":{"version":3,"file":"csv-stringifier-factory.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-stringifier-factory.ts"],"names":[],"mappings":";;AAAA,kDAA6D;AAC7D,yDAA2D;AAC3D,oDAA+D;AAkB/D;IAAA;IAYA,CAAC;IAVG,yDAAyB,GAAzB,UAA0B,MAAiC;QACvD,IAAM,gBAAgB,GAAG,0CAAsB,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3F,OAAO,IAAI,2BAAmB,CAAC,gBAAgB,EAAE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5F,CAAC;IAED,0DAA0B,GAA1B,UAA2B,MAAkC;QACzD,IAAM,gBAAgB,GAAG,0CAAsB,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3F,OAAO,IAAI,6BAAoB,CAAC,gBAAgB,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACvH,CAAC;IAEL,4BAAC;AAAD,CAAC,AAZD,IAYC;AAZY,sDAAqB"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/array.js":{"lineLengths":[13,58,41,48,91,87,35,6,28,28,47,93,6,5,62,39,60,43,77,81,30,21,5,65,27,6,72,22,6,31,30,50,33],"data":{"version":3,"file":"array.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-stringifiers/array.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uCAA0C;AAI1C;IAAyC,uCAAuB;IAE5D,6BAAY,gBAAkC,EAClC,eAAwB,EACP,MAAiB;QAF9C,YAGI,kBAAM,gBAAgB,EAAE,eAAe,CAAC,SAC3C;QAF4B,YAAM,GAAN,MAAM,CAAW;;IAE9C,CAAC;IAES,6CAAe,GAAzB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAES,8CAAgB,GAA1B,UAA2B,MAAe;QACtC,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,0BAAC;AAAD,CAAC,AAfD,CAAyC,yBAAc,GAetD;AAfY,kDAAmB"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/abstract.js":{"lineLengths":[13,62,36,65,49,64,87,49,47,50,5,60,50,87,6,68,25,123,42,6,61,25,21,96,56,6,63,73,6,26,5,40,46,60,85,5,1,36],"data":{"version":3,"file":"abstract.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-stringifiers/abstract.ts"],"names":[],"mappings":";;AAGA,IAAM,wBAAwB,GAAG,IAAI,CAAC;AACtC,IAAM,uBAAuB,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;AAEnE;IAEI,wBAA6B,gBAAkC,EAClC,eAA0C;QAA1C,gCAAA,EAAA,0CAA0C;QAD1C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAA2B;QACnE,wBAAwB,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAe,GAAf;QACI,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,OAAO,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACnF,CAAC;IAED,yCAAgB,GAAhB,UAAiB,OAAkC;QAAnD,iBAGC;QAFG,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAA9C,CAA8C,CAAC,CAAC;QAC/F,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAMO,mCAAU,GAAlB,UAAmB,MAAe;QAAlC,iBAIC;QAHG,OAAO,MAAM;aACR,GAAG,CAAC,UAAA,UAAU,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,EAA3C,CAA2C,CAAC;aAC9D,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAEO,oCAAW,GAAnB,UAAoB,OAAiB;QACjC,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;IACrE,CAAC;IACL,qBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BqB,wCAAc;AAgCpC,SAAS,wBAAwB,CAAC,SAAiB;IAC/C,IAAI,uBAAuB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QACnD,MAAM,IAAI,KAAK,CAAC,+BAA8B,SAAS,mBAAiB,CAAC,CAAC;KAC7E;AACL,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/field-stringifier.js":{"lineLengths":[13,58,41,48,91,87,35,6,28,28,47,93,6,5,62,34,60,51,47,45,5,59,78,6,62,55,6,28,5,44,64,47,40,72,5,68,32,22,32,65,6,67,92,6,35,21,67,50,43,72,5,71,73,6,38,21,62,80,56,44,118,1,56,45,59,84,5,1,45],"data":{"version":3,"file":"field-stringifier.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/field-stringifier.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,IAAM,uBAAuB,GAAG,GAAG,CAAC;AACpC,IAAM,sBAAsB,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;AAE9D;IACI,0BAA4B,cAAsB;QAAtB,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAI5C,kCAAO,GAAjB,UAAkB,KAAa;QAC3B,OAAO,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;IAC1E,CAAC;IAES,qCAAU,GAApB,UAAqB,KAAa;QAC9B,OAAO,OAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAG,CAAC;IAC5C,CAAC;IACL,uBAAC;AAAD,CAAC,AAZD,IAYC;AAZqB,4CAAgB;AActC;IAAsC,2CAAgB;IAAtD;;IAUA,CAAC;IATG,2CAAS,GAAT,UAAU,KAAa;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAAE,OAAO,EAAE,CAAC;QACnC,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAC7D,CAAC;IAEO,4CAAU,GAAlB,UAAmB,GAAW;QAC1B,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACxF,CAAC;IACL,8BAAC;AAAD,CAAC,AAVD,CAAsC,gBAAgB,GAUrD;AAED;IAAyC,8CAAgB;IAAzD;;IAIA,CAAC;IAHG,8CAAS,GAAT,UAAU,KAAa;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACrE,CAAC;IACL,iCAAC;AAAD,CAAC,AAJD,CAAyC,gBAAgB,GAIxD;AAED,SAAgB,sBAAsB,CAAC,cAAgD,EAAE,WAAmB;IAArE,+BAAA,EAAA,wCAAgD;IAAE,4BAAA,EAAA,mBAAmB;IACxG,uBAAuB,CAAC,cAAc,CAAC,CAAC;IACxC,OAAO,WAAW,CAAC,CAAC,CAAC,IAAI,0BAA0B,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,uBAAuB,CAAC,cAAc,CAAC,CAAC;AACtH,CAAC;AAHD,wDAGC;AAED,SAAS,uBAAuB,CAAC,SAAiB;IAC9C,IAAI,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QAClD,MAAM,IAAI,KAAK,CAAC,8BAA6B,SAAS,mBAAiB,CAAC,CAAC;KAC5E;AACL,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-stringifiers/object.js":{"lineLengths":[13,58,41,48,91,87,35,6,28,28,47,93,6,5,62,39,41,61,44,97,81,30,52,21,5,66,33,24,73,6,73,25,103,6,73,36,28,125,6,71,26,112,10,25,26,7,77,26,68,10,25,26,7,32,30,52,34],"data":{"version":3,"file":"object.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-stringifiers/object.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uCAA0C;AAG1C,yCAAmD;AAEnD;IAA0C,wCAAgC;IAEtE,8BAAY,gBAAkC,EACjB,MAA+B,EAChD,eAAwB,EACP,iBAA0B;QAHvD,YAII,kBAAM,gBAAgB,EAAE,eAAe,CAAC,SAC3C;QAJ4B,YAAM,GAAN,MAAM,CAAyB;QAE/B,uBAAiB,GAAjB,iBAAiB,CAAS;;IAEvD,CAAC;IAES,8CAAe,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAO,IAAI,CAAC;QACtC,OAAQ,IAAI,CAAC,MAA6B,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,EAAX,CAAW,CAAC,CAAC;IACzE,CAAC;IAES,+CAAgB,GAA1B,UAA2B,MAAwB;QAAnD,iBAEC;QADG,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,EAApC,CAAoC,CAAC,CAAC;IAC9E,CAAC;IAEO,6CAAc,GAAtB,UAAuB,GAAqB,EAAE,GAAW;QACrD,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,OAAO,IAAK,OAAA,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,EAAvB,CAAuB,EAAE,GAAG,CAAC,CAAC;IACvG,CAAC;IAED,sBAAY,0CAAQ;aAApB;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAE,IAAI,CAAC,MAA6B,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,EAAT,CAAS,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,MAAmB,CAAC;QAC1H,CAAC;;;OAAA;IAED,sBAAY,gDAAc;aAA1B;YACI,OAAO,iBAAQ,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC;;;OAAA;IACL,2BAAC;AAAD,CAAC,AA9BD,CAA0C,yBAAc,GA8BvD;AA9BY,oDAAoB"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/lang/object.js":{"lineLengths":[13,62,37,71,2,34],"data":{"version":3,"file":"object.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/lang/object.ts"],"names":[],"mappings":";;AAAa,QAAA,QAAQ,GAAG,UAAC,KAAU;IAC/B,OAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB;AAA3D,CAA2D,CAAC"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-writer-factory.js":{"lineLengths":[13,62,43,51,54,59,5,73,83,34,50,52,43,11,103,6,74,84,34,50,52,56,43,11,103,6,28,5,44,46],"data":{"version":3,"file":"csv-writer-factory.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-writer-factory.ts"],"names":[],"mappings":";;AAAA,2CAAuC;AAyBvC;IACI,0BAA6B,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAG,CAAC;IAE7E,+CAAoB,GAApB,UAAqB,MAA4B;QAC7C,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC;YACxE,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,eAAe,EAAE,MAAM,CAAC,eAAe;YACvC,WAAW,EAAE,MAAM,CAAC,WAAW;SAClC,CAAC,CAAC;QACH,OAAO,IAAI,sBAAS,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACtF,CAAC;IAED,gDAAqB,GAArB,UAAsB,MAA6B;QAC/C,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC;YACzE,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,eAAe,EAAE,MAAM,CAAC,eAAe;YACvC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;YAC3C,WAAW,EAAE,MAAM,CAAC,WAAW;SAClC,CAAC,CAAC;QACH,OAAO,IAAI,sBAAS,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACtF,CAAC;IACL,uBAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,4CAAgB"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/csv-writer.js":{"lineLengths":[13,90,112,64,99,102,118,78,7,2,74,117,157,70,23,70,23,169,52,28,46,72,65,65,24,128,106,89,87,42,43,13,39,66,89,5,2,62,45,40,44,64,72,45,29,84,5,59,60,43,52,35,27,86,72,81,27,34,43,46,17,15,11,6,64,26,85,38,10,25,26,7,21,5,30,38],"data":{"version":3,"file":"csv-writer.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/csv-writer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6CAAyC;AAEzC,IAAM,2BAA2B,GAAG,KAAK,CAAC;AAE1C;IAGI,mBAA6B,cAAiC,EAClD,IAAY,EACZ,QAAiB,EACT,MAAoC;QAApC,uBAAA,EAAA,oCAAoC;QAH3B,mBAAc,GAAd,cAAc,CAAmB;QAG1C,WAAM,GAAN,MAAM,CAA8B;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,wBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;IAEK,gCAAY,GAAlB,UAAmB,OAAY;;;;;;wBACrB,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;wBAC9D,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;wBACtD,qBAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,EAAA;;wBAAxC,SAAwC,CAAC;wBACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;KACtB;IAED,sBAAY,mCAAY;aAAxB;YACI,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;YAC3E,OAAO,YAAY,IAAI,EAAE,CAAC;QAC9B,CAAC;;;OAAA;IACL,gBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,8BAAS"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/file-writer.js":{"lineLengths":[13,90,112,64,99,102,118,78,7,2,74,117,157,70,23,70,23,169,52,28,46,72,65,65,24,128,106,89,87,42,43,13,39,66,89,5,2,62,42,25,59,30,45,49,65,25,29,33,5,52,60,52,35,109,27,34,43,46,17,15,11,6,55,16,36,41,10,6,22,5,32,39],"data":{"version":3,"file":"file-writer.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/file-writer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0CAAyC;AACzC,yBAA6B;AAE7B,IAAM,gBAAgB,GAAG,mBAAS,CAAC,cAAS,CAAC,CAAC;AAE9C,IAAM,gBAAgB,GAAG,MAAM,CAAC;AAEhC;IAEI,oBAA6B,IAAY,EACrB,MAAe,EACN,QAA2B;QAA3B,yBAAA,EAAA,2BAA2B;QAF3B,SAAI,GAAJ,IAAI,CAAQ;QACrB,WAAM,GAAN,MAAM,CAAS;QACN,aAAQ,GAAR,QAAQ,CAAmB;IACxD,CAAC;IAEK,0BAAK,GAAX,UAAY,MAAc;;;;4BACtB,qBAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAA;;wBAAhE,SAAgE,CAAC;wBACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;KACtB;IAEO,mCAAc,GAAtB;QACI,OAAO;YACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SAChC,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,gCAAU"},"url":null},"file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/dist/lib/lang/promise.js":{"lineLengths":[13,67,88,53,74,24,13,2,62,24,24,22,55,37,9,55,55,24,32,20,36,14,65,11,6,1,30,35],"data":{"version":3,"file":"promise.js","sourceRoot":"","sources":["file:///C:/Users/fires/OneDrive/Documents/GitHub/SoftwareDesign/node_modules/csv-writer/src/lib/lang/promise.ts"],"names":[],"mappings":";;;;;;;;;AAGA,SAAgB,SAAS,CAAC,EAA4B;IAClD,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAClB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,YAAY,GAAG,UAAC,GAAkB,EAAE,MAAW;gBACjD,IAAI,GAAG;oBAAE,MAAM,CAAC,GAAG,CAAC,CAAC;;oBAChB,OAAO,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC;YACF,EAAE,CAAC,KAAK,CAAC,IAAI,iBAAM,IAAI,GAAE,YAAY,GAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAVD,8BAUC"},"url":null}}}